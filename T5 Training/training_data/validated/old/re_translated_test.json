[{"query": "It seems that there is a Japanese soldier named Bito, where is he?", "cypher": "match (q:ENTITY{name:'The Night of the Lights[Japanese military]'})-[:Relationship{name:'Professional life'}]-> (p) return  distinct p.name"}, {"query": "What other work does Liu Xiaobo have besides representing the Hurricane Mouth?", "cypher": "match (n:ENTITY{name:'Good morning to you.'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(p) where p.name <> 'Hurricane mouths' return distinct p.name limit 1"}, {"query": "The novel The Madman of the Earth is finished, how many words are in it?", "cypher": "match(:ENTITY{name:'The madman of the world.'})-[:Relationship{name:'The word count'}]-> (h) return h.name"}, {"query": "What is the shortest path to the Flash animation creation and application and the Access database basics and application tutorials in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'FlashAnimation production and application'})-[*..2]-(b:ENTITY{name:'AccessBasic and application tutorials for databases'})) return count(p)"}, {"query": "What is the shortest distance between the Wuhan University Computer College and the Wuhan University Wto College on the second level?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The computer school at Wuhan University'})-[*..2]-(b:ENTITY{name:'The University of WuhanwtoSchool'})) return count(p)"}, {"query": "The book is written by a writer named Shen Wen and a writer named Liu Shiqiu, and is published by which other publishers?", "cypher": "match (:ENTITY{name:'Shenzhen, the source of the lava'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Relationship{name:'Publishing house'}]->(q) return distinct h.name,q.name"}, {"query": "I've seen the power of the ALEKS sniper rifle, and I wonder what the bullet size is?", "cypher": "match(:ENTITY{name:'ALEKSSniper rifle'})-[:Relationship{name:'The size of the bullet'}]-> (h) return h.name"}, {"query": "When was the 2012 Okinawa International Children's and Youth Theatre Festival held?", "cypher": "match(:ENTITY{name:'2012Okinawa International Festival of Children and Youth Theatre Arts'})-[:Relationship{name:'The time'}]-> (q) return q.name"}, {"query": "What is the shortest relationship path between the oil spill and the drunken riverbed in the 2nd floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Oil flooding'})-[:Relationship*..2]-(b:ENTITY{name:'The drunken river plain'})) return count(p)"}, {"query": "What is the occupation of people born in May 1955? Can you list 3 categories?", "cypher": "match (:ENTITY{name:'1955Year of birth5The Moon'})<-[:Relationship{name:'Date of birth'}]-(n)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 5"}, {"query": "What is the common Chinese name for the neighboring diethyl acetate diethyl [2-ethyl quetzal] sodium in everyday life?", "cypher": "match(:ENTITY{name:'Neighboring diethyl acid 2[2-Acetylhexyl]Oh, my God.'})-[:Relationship{name:'Chinese name'}]-> (h) return h.name"}, {"query": "I'm going to be a little bit more specific about this book, but I'm going to be more specific about this book.", "cypher": "match (:ENTITY{name:'0-3The baby food and nutrition encyclopedia'})-[:Tag{name:'The label'}]-> (n) with n order by n.name where n.name <> 'Books and books' return n.name limit 10"}, {"query": "Do you know which school has a rotation major, two of which are national priority subjects?", "cypher": "match (p:ENTITY{name:'The training is in the form of a rotation.2The following is a list of topics that are of national importance.'})--(n) return n.name order by n.name limit 1"}, {"query": "The following is a list of the top 10 best-selling games in the world, and the most popular games in the world.", "cypher": "match (n:ENTITY{name:'The Tree of Knowledge'})-[*1..3]->(x) where x.name<>'Soccer player' return distinct x.name"}, {"query": "What chemical substances have a molecular weight of 109.13? Can you name 9?", "cypher": "match (:ENTITY{name:'109.13'})<-[:Relationship{name:'Molecular weight'}]- (n) return n.name limit 9"}, {"query": "What are the major achievements of famous people who died in 1967? Can you name 10?", "cypher": "match (:ENTITY{name:'1967Year of birth'})<-[:Relationship{name:'Date of death'}]-(q)-[:Relationship{name:'Major achievements'}]->(p) return distinct p.name limit 10"}, {"query": "I'm not sure if you understand what the two layers of Macau Briefs have to do with each other.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Macao Times'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "What is the shortest distance between the Min Min Hot Springs and the Villa Hot Springs in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Min Min Hot Springs'})-[:Relationship*..2]-(b:ENTITY{name:'The hot springs'})) return count(p)"}, {"query": "What is Vladimir Shemianovich Vysotsky doing for a living?", "cypher": "match (:ENTITY{name:'The first was Vladimir.\u00b7The first is that the government is not a political party.\u00b7The Wisocki'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 1"}, {"query": "Have you heard about the author, type and platform of this piece of work?", "cypher": "match (:ENTITY{name:'The smell of scratched bones'})-[:Relationship{name:'Written by'}]->(n) return n.name as name union all match (:ENTITY{name:'The smell of scratched bones'})-[:Relationship{name:'Type of'}]->(m) return m.name as name union all match (:ENTITY{name:'The smell of scratched bones'})-[:Relationship{name:'Connecting platforms'}]->(r) return r.name as name"}, {"query": "Can you find the five categories of spring tags for 120 yen?", "cypher": "match (:ENTITY{name:'120The Spring of the Yen'})-[:Tag{name:'The label'}]-> (p) with p order by p.name return p.name limit 5"}, {"query": "The 123mm Slim Weight Loss Forum is said to have a very attractive principle, can you tell me?", "cypher": "match(h:ENTITY{name:'123SkinnymmThe weight loss forum'})-[:Relationship{name:'The Principles'}]-> (p) return p.name"}, {"query": "Do you need detailed information on how to make homemade double-crust beans?", "cypher": "match (n:ENTITY{name:'The Twin Peaks'})-[:Relationship*]->(x) where x.name<>'Common dishes' return distinct x.name"}, {"query": "I want to know if there are 5 levels of relationships in the profile of the footballer Starino Shin?", "cypher": "match (n:ENTITY{name:'The stars are bright.'})-[*1..5]->(x) where x.name<>'Soccer player' return distinct x.name limit 5"}, {"query": "Who knows what skill this hero has?", "cypher": "match (:ENTITY{name:'Happy Birthday'})<-[:Relationship{name:'Other names'}]-(x)-[:Relationship{name:'Skills'}]->(q) return distinct q.name limit 1"}, {"query": "What good is it to provide Chinese titles for five completed novels?", "cypher": "match (:ENTITY{name:'Completed'})<-[:Relationship{name:'The novel progresses'}]-(q)-[:Relationship{name:'Chinese name'}]->(m) return distinct m.name limit 5"}, {"query": "Can you tell me about the top 10 awards of Morning Light Experiment Primary School in Jiangyin City?", "cypher": "match (:ENTITY{name:'Morning Light Experiment Primary School in Jiangyin City'})-[:Relationship{name:'Main awards'}]-> (p) return  distinct p.name limit 10"}, {"query": "What is the name of the Guindo temple?", "cypher": "match (:ENTITY{name:'The Guindo Temple'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Other names'}]->(m) return distinct m.name"}, {"query": "I need a simplified Chinese version of Double Lion: The Relationship of the Three Levels of Medieval European History.", "cypher": "match (n:ENTITY{name:'The double lion: the history of medieval Europe'})-[:Relationship*1..3]->(x) where x.name<>'Simplified Chinese' return distinct x.name"}, {"query": "The following is a list of articles that have been written about the two-tier relationship between the President of the Republic of Vietnam, Hu Jintao, and the President of the Republic of Vietnam, Hu Jintao.", "cypher": "match (n:ENTITY{name:'The Spring of the Rose Garden; The answer is yes.'}) - [:Relationship*1..2]->(x) where x.name <>'South China' return distinct x.name"}, {"query": "In the case of digital transmission engineering and utility circuits 180 using 4017 digital counter, what is the shortest path in layer 2?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Digital transmission engineering'})-[*..2]-(b:ENTITY{name:'Useful4017Numerical counter utility circuits180Examples'})) return count(p)"}, {"query": "I want information on three reports of the Tainan Municipal Sports Bureau in 2008 on the public administration work summary of the two-tier relationship.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The sports department of Tianjin2008Public administration summary of the year'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you help me find out when Chongqing's first exclusive wedding photography agency was founded in 1970?", "cypher": "match(:ENTITY{name:'1970The photograph'})-[:Relationship{name:'Time of founding'}]-> (x) return x.name"}, {"query": "In the search results for military, who has the highest ballistic coefficient?", "cypher": "match (:ENTITY{name:'Military'})<-[:Tag{name:'The label'}]-(h),(h)-[:Relationship{name:'Ballistic coefficient'}]->(q) return  max(q.name)"}, {"query": "Can you name 10 of the Android platforms you know?", "cypher": "match (:ENTITY{name:'Android'})<-[:Relationship{name:'Software platform'}]- (n) return n.name limit 10"}, {"query": "What time period is the 2011 Sun Wiliang Beijing concert shown in the promotional video?", "cypher": "match(:ENTITY{name:'2011Sun Wilian at a concert in Beijing'})-[:Relationship{name:'Show time'}]-> (x) return x.name"}, {"query": "What are Ren Ru's five main achievements?", "cypher": "match (:ENTITY{name:'Ren Rugawa'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Relationship{name:'Major achievements'}]->(p) return distinct p.name limit 5"}, {"query": "Please tell me 5 things about the famous Shaitan-e-Shattan, also known as Duan Shaitan.", "cypher": "match (n:ENTITY{name:'The Shaitan-Oh, my God.'}) -[:Relationship*]->(x) where x.name<>'square The Shaitan' return distinct x.name limit 5"}, {"query": "How do you read the Chinese characters? What do they mean?", "cypher": "match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Spelling'}]->(n) return n.name as name union all match (:ENTITY{name:'Oh, my God.'})-[:Describe{name:'The label'}]->(m) return m.name as name"}, {"query": "Can you recommend a piece by Chen Hsuo-Quan?", "cypher": "match (m:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Editor in chief'}]- (n) return n.name"}, {"query": "Can you name some of the names of the people who are up in Myanmar?", "cypher": "match (:ENTITY{name:'The Myanmar Tutsis'})<-[:Relationship{name:'Where I was born'}]-(q),(q)-[:Relationship{name:'Other names'}]->(h) return distinct q.name"}, {"query": "What is the shortest relationship path between the three levels of the movie The Brave and the Bold and the Grand Theft Auto V?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Cowardly British'})-[*..3]-(b:ENTITY{name:'The Grand Thief'})) return count(p)"}, {"query": "I want to ask you, what is the name of the chemical compound with the molecular formula C8H9C1O2S?", "cypher": "match (:ENTITY{name:'C8H9ClO2S'})<-[:Relationship{name:'Molecular'}]- (m) return m.name"}, {"query": "Can you recommend a program that includes Croatian?", "cypher": "match (:ENTITY{name:'Croatian(Croatian)'})<-[:Relationship{name:'Language'}]- (n) return distinct n.name"}, {"query": "Can you list 5 schools that have a label relationship with Wuwei 1st Secondary School, which is a second level school in Gansu province?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'The first secondary school in Wuwei, Gansu province'}) return distinct n.name limit 5"}, {"query": "Can you find the location of the company?", "cypher": "match (p:ENTITY{name:'The company'}) return p.location"}, {"query": "When is the production year of the M4 carbine in the US?", "cypher": "match (:ENTITY{name:'The United StatesM4The carbine'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Year of manufacture'}]->(n) return distinct n.name"}, {"query": "How many Neolithic artifacts can be found in the Carnegie Museum collection?", "cypher": "match (:ENTITY{name:'The Carnegie Museum'})<-[:Relationship{name:'Location of the collection'}]- (mn) -[:Relationship{name:'Date of birth'}]->(n:ENTITY{name:'The Neolithic'}) return mn.name"}, {"query": "What is the shortest path between the three layers of basic experimentation with digital signals processing and application?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Basic experiments in digital electronics'})-[*..3]-(b:ENTITY{name:'Digital signal processing and applications'})) return count(p)"}, {"query": "Please tell me which tournaments will be held on 2015-05-25. Name 3?", "cypher": "match (:ENTITY{name:'2015-05-25'})<-[:Relationship{name:'Date of birth'}]- (n) return n.name limit 3"}, {"query": "What chemical has the molecular formula C6H11NO2.HCl?", "cypher": "match (:ENTITY{name:'C6H11NO2.HCl'})<-[:Relationship{name:'Molecular'}]- (n) return n.name"}, {"query": "Please tell me which eight times there have been 7.8 magnitude earthquakes?", "cypher": "match (:ENTITY{name:'7.8'})<-[:Relationship{name:'The earthquake'}]- (n) return n.name limit 8"}, {"query": "I'm going to get a snack with a Yantai flavor, what is the main ingredient?", "cypher": "match (:ENTITY{name:'The food is delicious.'})<-[:Relationship*]-(m), (m)-[:Relationship{name:'Primary raw materials'}]->(n) return m.name,n.name limit 1"}, {"query": "The works of the same period as the Tsuji Temple are also in the collection, which are labeled? Show them, arranged in order of number of labels from large to small.", "cypher": "match (n:ENTITY{name:'The Temple of the Sun'})-[:Relationship{name:'The year'}]->(:ENTITY)<-[:Relationship{name:'The year'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Ask about the CAS number of chlorophyll chloride.", "cypher": "match(:ENTITY{name:'Hydrogenated yellow phosphate'})-[:Relationship{name:'CASThe number'}]-> (n) return n.name"}, {"query": "What is the shortest path between the inner two layers of the quartz and the square column?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Quadruple'})-[*..2]-(b:ENTITY{name:'The square pillar'})) return count(p)"}, {"query": "Can you tell me about the five professions of this historical person?", "cypher": "match (q:ENTITY{name:'The history'})<-[:Tag{name:'The label'}]-(m)-[:Relationship{name:'Professional life'}]->(p) return p.name skip 2 limit 5"}, {"query": "Can you recommend some software that is 62.2 MB?", "cypher": "match (:ENTITY{name:'62.2 MB'})<-[:Relationship{name:'Software size'}]- (x) return x.name"}, {"query": "Can you tell me about the relationship between the two layers of a Yu-Gi-Oh!", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Selected works by Yu Hua'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "What is the shortest path between the two levels of the village of Loso and the village of Kauko?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Left mountain village'})-[*..2]-(b:ENTITY{name:'School Village'})) return count(p)"}, {"query": "What are the features of the 160 mobile assistants developed by the company?", "cypher": "match(:ENTITY{name:'160The mobile assistant'})-[:Relationship{name:'Software features'}]-> (n) return n.name"}, {"query": "Do you know what areas leverage is used in now?", "cypher": "match (:ENTITY{name:'The principle of leverage'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Scope of application'}]->(n) return distinct n.name"}, {"query": "Do you know which novels have the same title as the one published by Ringu? Please list them by the number of labels in the book.", "cypher": "match (n:ENTITY{name:'The Spirit of War'})-[:Relationship{name:'Origin of the work'}]->(:ENTITY)<-[:Relationship{name:'Origin of the work'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you tell me what kind of relationship the movie is about when Dr. Under Six is on?", "cypher": "match path=(n)<-[:Relationship*6]-(p:ENTITY{name:'The time of the doctor'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "What are the books of Yeongdeung and what are they classified as?", "cypher": "match (:ENTITY{name:'The Younger'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Tag{name:'The label'}]->(q) return distinct h.name,q.name"}, {"query": "Can you tell me what chemical is CAS number 6974-32-9?", "cypher": "match (h:ENTITY{name:'6974-32-9'})<-[:Relationship{name:'CASThe number'}]- (x) return x.name"}, {"query": "Are there 10 other professions that are related to the removal of Ling Gao from the status of a county council member?", "cypher": "match (:ENTITY{name:'Lin Ga-jung is a Chinese writer.'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Professional life'}]->(x) where x.name <> 'Standing Committee of the County Council' return distinct x.name limit 10"}, {"query": "I'm not sure if you can send me the representative work of the richest man in the world.", "cypher": "match (:ENTITY{name:'The same.'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Representative works'}]->(n) return distinct n.name"}, {"query": "Do you know what the names of the relationships within the two layers Figure is involved in?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Figueiredo'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Collect all the information from 101 Spotted Dogs Escape 101 game for me?", "cypher": "match (:ENTITY{name:'101The Dogs Escape101'})--(m) with m order by m.name where m.name <> 'The game' return m.name"}, {"query": "Can you guess how many companies were founded in 2001?", "cypher": "match (p:ENTITY{time:'2001'}) return count(p)"}, {"query": "Which two authors' books are published by Commercial Printing Library?", "cypher": "match (:ENTITY{name:'Commercial printing'})<-[:Relationship{name:'Publishing house'}]-(x),(x)-[:Relationship{name:'Written by'}]->(q) return distinct q.name limit 2"}, {"query": "Can you name 20 male characters?", "cypher": "match (:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]- (q) return q.name limit 20"}, {"query": "Help me find the synonyms and antonyms of the words \"couple\" and \"couple\".", "cypher": "match (:ENTITY{name:'The Octopus[Adjectives]'})-[:Relationship{name:'The synonym'}]->(n) return n.name as name union all match (:ENTITY{name:'The Octopus[Adjectives]'})-[:Relationship{name:'The Antithesis'}]->(m) return m.name as name"}, {"query": "I would like to know what is Cao Xuan's profession?", "cypher": "match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Professional life'}]-> (m) return m.name skip 3"}, {"query": "The following seven-line style of artwork is a list of the three-level relationships between Jang Qing Temple and Yang Zhou.", "cypher": "match (n:ENTITY{name:'Changqing Temple meets with Yang Zhou'})-[:Relationship*1..3]->(x) where x.name<>'The Seven Laws' return distinct x.name"}, {"query": "Can you tell me what the third layer of tags has to do with the Cartoon Network software?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The Car Man'}) RETURN distinct n.name limit 1"}, {"query": "Do you know where the purple pineapple is distributed?", "cypher": "match(:ENTITY{name:'The Purple Pineapple'})-[:Relationship{name:'Distribution areas'}]-> (n) return n.name"}, {"query": "The following is a list of five works by King Bin Lee-young that are leading Western studies of science genres.", "cypher": "match (n:ENTITY{name:'Western leadership in scientific research'})-[:Relationship*]->(x) where x.name<>'The Kingdom Inn Lee Yue' return distinct x.name limit 5"}, {"query": "The organization was founded on November 30, 2010 and has won three major awards.", "cypher": "match (:ENTITY{name:'2010Year of birth11The Moon30The Sun'})<-[:Relationship{name:'When did it start?'}]-(q),(q)-[:Relationship{name:'Main awards'}]->(m) return distinct m.name limit 3"}, {"query": "Please list 5 of the most representative works of artists: Shut Your Eyes and Others.", "cypher": "match (:ENTITY{name:'The video was posted on the social media site.'})<-[:Relationship{name:'Representative works'}]- (p) return  distinct p.name limit 5"}, {"query": "Do you know which three major awards the campus of 10,174 square meters won?", "cypher": "match (:ENTITY{name:'10174Square meters, campus'})<-[:Relationship{name:'Area'}]-(q),(q)-[:Relationship{name:'Main awards'}]->(n) return distinct n.name limit 3"}, {"query": "What do Tianjinese people who work in the engineering industry call themselves?", "cypher": "match (p:ENTITY{name:'Engineer'})<--(x)-->(q:ENTITY{name:'The city of Tianjin'}) return x.name"}, {"query": "What is the shortest distance between the two layers of the Yangtze and Pingyin counties?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Upper Kosi County'})-[*..2]-(b:ENTITY{name:'Pyin County[The Chinese Village of the Lions]'})) return count(p)"}, {"query": "Can you tell me when some bookstores open?", "cypher": "match (:ENTITY{name:'The word is also a creative and imaginative store, a creative life experience that shows its self and personality, it has books, but it is not just a bookstore; it has coffee, but it is not just a coffee shop; it has literary products, but it is not just a creative marketplace; it has food, but it is not just a food store; it has painting, but it is not just a gallery.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Time of founding'}]->(n) return distinct n.name limit 1"}, {"query": "The list of billionaires is a list of billionaires with a net worth of $70 billion.", "cypher": "match (:ENTITY{name:'700billion'})<-[:Relationship{name:'Wealth'}]- (p) return p.name"}, {"query": "I heard that Flavio is a 1.90m athlete, do you know anything else about him?", "cypher": "match (n:ENTITY{name:'Fl\u00e1vio'})-->(h) with h order by h.name where h.name <> '1.90The M' and h.name <> 'Athletes' return h.name limit 6"}, {"query": "What kind of relationships are involved in the two levels of amazing animal partners?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The amazing animal companion'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the Ming Dynasty exhibits in the Carnegie Museum collection?", "cypher": "match (:ENTITY{name:'The Carnegie Museum'})<-[:Relationship{name:'Unit of collection'}]- (mn) -[:Relationship{name:'The year'}]->(n:ENTITY{name:'The Future'}) return mn.name"}, {"query": "Who is the former mayor of Ningbo City who wrote the report on the government's work in 2014?", "cypher": "match (:ENTITY{name:'The city of Ningbo2014Annual report on government work'})-[:Relationship{name:'Former mayor'}]->(n) return n.name as name union all match (:ENTITY{name:'The city of Ningbo2014Annual report on government work'})-[:Tag{name:'The label'}]->(m) return m.name as name union all match (:ENTITY{name:'The city of Ningbo2014Annual report on government work'})-[:Tag{name:'The label'}]->(r) return r.name as name"}, {"query": "Do you know where the popular 3D painting originated?", "cypher": "match(h:ENTITY{name:'3DPainting'})-[:Relationship{name:'Originally'}]-> (p) return p.name"}, {"query": "Can you tell me about the relationship between the four layers of the Vietnam War?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The Wind River'}) UNWIND relationships(path) AS rel RETURN rel.name limit 2"}, {"query": "What is the brand name of PLD and what is its main business?", "cypher": "match (:ENTITY{name:'PLD'})-[:Relationship{name:'State'}]->(n) return n.name as name union all match (:ENTITY{name:'PLD'})-[:Relationship{name:'The main'}]->(m) return m.name as name"}, {"query": "The station is named after the North Korean name of Jiangdong Station, a station on the Pingde Line, and you can find me three more information about this station.", "cypher": "match (n:ENTITY{name:'The East Station'})-->(h) with h order by h.name where h.name <> '\uac15\ub3d9\uc5ed' and h.name <> 'The Parthenon' return h.name limit 3"}, {"query": "Please let me know when the 2012 Shanghai Furniture Home Decoration Fair will be held, I would like to make travel plans in advance.", "cypher": "match(:ENTITY{name:'2012Shanghai home decor exhibition'})-[:Relationship{name:'Show time'}]-> (p) return p.name"}, {"query": "I'm not sure if I can get the information from the three-tiered relationship of this guy.", "cypher": "match (n:ENTITY{name:'The Rock'})-[*1..3]->(x) where x.name<>'The Rock' return distinct x.name"}, {"query": "Do you know which words have three-letter combinations? Can you say six?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'The Word'}) RETURN distinct n.name limit 6"}, {"query": "What is the name of the person born on September 20, 1991 (Lunar calendar) besides Han Phu Phuong?", "cypher": "match (:ENTITY{name:'1991Year of birth9The Moon20The Sun (Lunar calendar)'})<-[:Relationship{name:'Date of birth'}]-(n)-[:Relationship{name:'Other names'}]->(m) where m.name <> 'The Hungarian' return distinct m.name limit 3"}, {"query": "Do you know what chemical formula is C11H15NO?", "cypher": "match (:ENTITY{name:'C11H15NO'})<-[:Relationship{name:'Chemical formula'}]- (q) return distinct q.name"}, {"query": "I wonder what the relationship is between the three layers of the love killing order?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Love is killing'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Do you know the types of relationships within the three layers involved in the site?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The site of Goodwill'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "Do you know what international tournaments are? Can you name 10?", "cypher": "match (:ENTITY{name:'International competition'})<-[:Relationship{name:'Type of event'}]- (p) return p.name limit 10"}, {"query": "What is the name of the report from the China Industry Research Report Network?", "cypher": "match (:ENTITY{name:'China Industrial Research Network'})<-[:Relationship{name:'The source'}]- (q) return q.name"}, {"query": "2004: Can you find me five books published by Higher Education Press?", "cypher": "match (:ENTITY{name:'Higher Education Publishing'})<-[:Relationship{name:'Publishing house'}]-(m), (m)-[:Relationship{name:'Published'}]->(n) where n.name='2004' return m.name limit 3"}, {"query": "Can you tell me the year of foundation of Kaka?", "cypher": "match (p:ENTITY{name:'The company'}) return p.time"}, {"query": "Check out what type of ship the Type 032 we saw belongs to.", "cypher": "match(:ENTITY{name:'032Type of submarine'})-[:Relationship{name:'Type of ship'}]-> (h) return h.name"}, {"query": "What books are there for baby care? Can you help me find two?", "cypher": "match (:ENTITY{name:'Child health'})<-[:Relationship{name:'Category'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "What is the name of the person born in 1963 and what is the symbolism of the name?", "cypher": "match (:ENTITY{name:'1963Year of birth'})<-[:Relationship{name:'Date of birth'}]-(n)-[:Relationship{name:'Major achievements'}]->(h) return n.name order by n.name,h.name limit 3"}, {"query": "How many companies were founded before 1980?", "cypher": "match (:ENTITY{name:'The company'})<-[:Tag{name:'The label'}]-(m), (m)-[:Relationship{name:'Founded'}]->(n) where substring(n.name,0,4)<'1980' return count(m)"}, {"query": "The price of the books published on 9/1/2006 is what?", "cypher": "match (:ENTITY{name:'2006/9/1'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "The book was translated by a translator from the Australian language, who translated the book?", "cypher": "match (:ENTITY{name:'Australia and the history of the country'})<-[:Relationship{name:'Title'}]-(x),(x)-[:Relationship{name:'Translated by'}]->(q) return distinct q.name"}, {"query": "Can you talk about the types of relationships covered in this song, the five floating in five layers?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The Playground'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Can you tell me which major departments are available in full-time undergraduate schools?", "cypher": "match (:ENTITY{name:'Full-time undergraduate school'})<-[:Relationship{name:'Category'}]-(h)-[:Relationship{name:'Main Faculty'}]->(x) return distinct x.name"}, {"query": "I need you to tell me about the types of relationships involved in the lease fund in the 2nd tier, please.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Lease funds'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Do you know what kind of relationships are involved in the two layers of Beijing Universal Film and Television Cultural Media Limited?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Beijing Universal Star Cinema and Television Cultural Media Co., Ltd.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "List artworks for higher education art design boutique lessons; book decoration design not higher than 2 layers of relationship generalization?", "cypher": "match (n:ENTITY{name:'Art and design boutique courses at the university\u00b7Book design'})-[:Relationship*1..2]->(x) where x.name<>'Art work' return distinct x.name"}, {"query": "Can you tell me about the main achievements of Van Conk?", "cypher": "match (:ENTITY{name:'He is a member of the Communist Party of China (CPC), born in Taiyuan City, Guangdong Province.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name"}, {"query": "Can you answer and introduce the work in the 2nd level relationship of Goiwang Village with a population of over 2000 people?", "cypher": "match (n:ENTITY{name:'Valley of the Kings'})-[:Relationship*1..2]->(x) where x.name<>'2000Many people' return distinct x.name"}, {"query": "The shortest path between the two layers of the East-West collision is the one in the East-West collision.", "cypher": "match p=shortestpath((a:ENTITY{name:'East and West'})-[*..2]-(b:ENTITY{name:'The East Shoshone'})) return p"}, {"query": "I wonder what brands are there in English under Zhejiang Net?", "cypher": "match (:ENTITY{name:'Zhejiang School of Law'})<-[:Relationship{name:'Companies'}]- (h) return distinct h.name"}, {"query": "Please tell me about the profession of this person born in Zhejiang Pingyang.", "cypher": "match (:ENTITY{name:'The city of Zhejiang'})<-[:Relationship{name:'Where I was born'}]-(x)-[:Relationship{name:'Professional life'}]->(p) return p.name order by p.name limit 1"}, {"query": "Can you tell me the year of birth of the great genius?", "cypher": "match(:ENTITY{name:'The Great'})-[:Relationship{name:'Date of birth'}]-> (n) return n.name"}, {"query": "What is the shortest distance between an apple cider cheesecake and a black bean sauce in three layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Apple and cheese cake'})-[*..3]-(b:ENTITY{name:'Black and red bean soup'})) return count(p)"}, {"query": "Can you help me find the representation of the stubborn?", "cypher": "match (:ENTITY{name:'The stubborn[Writer]'})-[:Relationship{name:'Representative works'}]-> (p) return p.name skip 3"}, {"query": "What kind of camera has H.264/MJPEG as its video compression standard?", "cypher": "match (p:ENTITY{name:'H.264/MJPEG'})<-[:Relationship{name:'Video compression standards'}]- (m) return m.name"}, {"query": "Tell me about five famous places that are very well located.", "cypher": "match (:ENTITY{name:'Geography'})<-[:Tag{name:'The label'}]-(q)-[:Relationship{name:'Famous places'}]->(h) return distinct h.name limit 5"}, {"query": "Can you tell me about the types of relationships that are involved in the three layers of the story?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Sweet eggplant'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the songs with monotone lyrics? List five songs?", "cypher": "match (:ENTITY{name:'The unicorn'})<-[:Relationship{name:'The word'}]-(q),(q)-[:Tag{name:'The label'}]->(m) return distinct m.name limit 5"}, {"query": "I'm going to introduce you to Andrew R. Kaplan.", "cypher": "match (:ENTITY{name:'Andrew R. Kaplan'})--(h) return h.name skip 1"}, {"query": "So if you think about it, what is the CAS number of the 1-methyl-4-hydroxybutyric acid?", "cypher": "match(:ENTITY{name:'1-Methyl-4-Hydroxychloroquine'})-[:Relationship{name:'CASThe number of the log'}]-> (x) return x.name"}, {"query": "Do you know what kind of relationships are involved in the three levels of the affair?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The incident of the local comedian'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Do you know what the role of the river lights is?", "cypher": "match (:ENTITY{name:'The River Light'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The role'}]->(n) return distinct n.name"}, {"query": "Look at the back of the chemistry book, is there a molecule of 2-amino-5-hydroxyethylene?", "cypher": "match(:ENTITY{name:'2-Amino acids-5-The hydrogen ring is a formaldehyde.'})-[:Relationship{name:'Molecular weight'}]-> (m) return m.name"}, {"query": "I'm wondering which chip is used in the full-fledged version of the A55S (ver 3.00)?", "cypher": "match (:ENTITY{name:'The OundraA55SFull hard copy(ver 3.00)'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Integrated chips'}]->(p) return distinct m.name"}, {"query": "Can you tell me about this person, Catherine Hosmalin?", "cypher": "match (:ENTITY{name:'Catherine Hosmalin'})--(q) return q.name skip 3"}, {"query": "Is there anyone named Huang Chang-joon?", "cypher": "match (n:ENTITY{name:'The Chinese'}) where n is not null return 1"}, {"query": "The 2012 China International Bioplastics Industry Expo is being held in Shanghai, which are the invited units?", "cypher": "match(:ENTITY{name:'2012China[Shanghai]The International Bioplastics Industry Fair is being held in the city of'})-[:Relationship{name:'Invited units'}]-> (x) return x.name"}, {"query": "Do you remember the time of the Winter Olympics in Innsbruck in 1964?", "cypher": "match(:ENTITY{name:'1964The Winter Olympics in Innsbruck'})-[:Relationship{name:'When to hold'}]-> (q) return q.name"}, {"query": "Can you tell me which works are representative of this person born on December 16, 1942? Name 10 for me.", "cypher": "match (:ENTITY{name:'1942Year (s) of the lunar calendar12The Moon16The Sun'}) <- [:Relationship{name:'born The Sun period'}]-(h) - [:Relationship{name:'Major achievements'}]->(p) return p.name order by p.name limit 10"}, {"query": "The list of 10 disciplines in which boiler equipment can be used, not to mention electrical engineering.", "cypher": "match (:ENTITY{name:'A boiler is a specialised heating device for industrial purposes.'})<-[:Describe{name:'Describe'}]-(x)-[:Relationship{name:'Applied disciplines'}]->(p) where p.name <> 'Electricity (first level subject)' return distinct p.name limit 10"}, {"query": "What are the names of the relationships involved in the three layers of the client-server network?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The guest house'}) UNWIND relationships(path) AS rel return distinct rel.name limit 2"}, {"query": "What is the name of the river that is 106 km long?", "cypher": "match (q:ENTITY{name:'106Kilometers'})<-[:Relationship{name:'Length'}]-(n)-[:Relationship{name:'Other names'}]->(h) return distinct h.name"}, {"query": "What do people born in Guangxi do?", "cypher": "match (:ENTITY{name:'The Canton of Guangxi'})<-[:Relationship{name:'Where I was born'}]-(p)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 1"}, {"query": "The Chinese term for the substance is \"pumice\", and its longest outer pencil is?", "cypher": "match (:ENTITY{name:'Oh, my God.'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Painting outside the Ministry'}]->(x) return  max(x.name)"}, {"query": "Do you know what year is the first year of the Ming Dynasty and the second year of the Qing Dynasty?", "cypher": "match (:ENTITY{name:'The year of the Ming Dynasty, the year of the Qing Dynasty'})<-[:Relationship{name:'The year'}]- (n) return n.name"}, {"query": "Do you know how hard your 1.4125 stainless steel is?", "cypher": "match(:ENTITY{name:'1.4125Stainless steel'})-[:Relationship{name:'Hardness'}]-> (m) return m.name"}, {"query": "The following literary works are sent to the people of Lake State for their research.", "cypher": "match (n:ENTITY{name:'The people are being sent back to Lake State.'})-[:Relationship*1..2]->(x) where x.name<>'Literary works' return distinct x.name"}, {"query": "Can you name 10 Chinese occupations?", "cypher": "match (:ENTITY{name:'China'})<-[:Relationship{name:'Nationality'}]-(q)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 10"}, {"query": "Can you tell me what kind of relationships are covered in the three-tiered Cabinet Building Management School?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The school of management'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "The story of the original work of Yamamoto, Nan Yasan, is told in three layers of relationships.", "cypher": "match (n:ENTITY{name:'The South Mountain with the Lonely Trees'})-[*1..3]->(x) where x.name<>'The beginning of the end' return distinct x.name"}, {"query": "Do you know what her nickname is at Hainan Teachers' University?", "cypher": "match (n:ENTITY{name:'Secondary School affiliated to Hainan Teachers' University'})-[:Relationship{name:'Briefly'}]->(h) with h order by h.name where h.name <> 'The school is affiliated with Hainan University of Teaching.' return h.name", "error": "Invalid input 'University': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 79 (offset: 78))\n\"PROFILE match (n:ENTITY{name:'Secondary School affiliated to Hainan Teachers' University'})-[:Relationship{name:'Briefly'}]->(h) with h order by h.name where h.name <> 'The school is affiliated with Hainan University of Teaching.' return h.name\"\n                                                                               ^"}, {"query": "What is the shortest path between the two layers of Wuhan Vocational and Technical College tuition and Wuhan Sports College tuition?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The scholarship of Wuhan Vocational Technical College'})-[*..2]-(b:ENTITY{name:'The Wuhan Sports Academy'})) return count(p)"}, {"query": "Can you list three film awards for the vintage detective comedy genre?", "cypher": "match (:ENTITY{name:'The old-fashioned detective comedy'})<-[:Relationship{name:'Type of'}]-(p),(p)-[:Relationship{name:'Main awards'}]->(x) return distinct x.name limit 3"}, {"query": "Can you tell me the name of this man and what he does? Can you tell me one thing?", "cypher": "match (:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(n) return x.name,n.name skip 2 limit 1"}, {"query": "Can you tell me what kind of relationships are involved in the three layers of primordial vegetation?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Native plants'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "Let's talk about the 11.30 Guangzhou Liang An accident, right?", "cypher": "match (:ENTITY{name:'11.30The accident in Guangxi'})--(q) with q order by q.name return q.name"}, {"query": "The three layers of frustration are the best gifts of life and how much is the shortest path to re-establishing the post-conflict order?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Failure is the best gift in life.'})-[*..3]-(b:ENTITY{name:'The order of the post-conflict era is being reshaped'})) return count(p)"}, {"query": "Do you know what the three layers of relationships covered by the Jusha tip are called?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Juha Peak'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the nickname of a theory that was called Android Apps for Absolute Beginners?", "cypher": "match (n:ENTITY{name:'Android Apps for Absolute Beginner'})<-[:Relationship{name:'Original name'}]- (x) return x.name"}, {"query": "What is the approval unit of the 2012 Shanghai International Solar PV Expo and the Forum of the Silicon PV Industry, do you know?", "cypher": "match(:ENTITY{name:'2012The Shanghai International Solar PV Expo is the largest solar PV industry forum in the world.'})-[:Relationship{name:'Approval of units'}]-> (q) return q.name"}, {"query": "Can you name five names for men who are both writers and writers?", "cypher": "match (p:ENTITY{name:'Literature and culture Writer'})<--(x)-->(q:ENTITY{name:'The man'}) return x.name limit 5"}, {"query": "Can you help me find out where the headquarters of the Istanbul Ephesus Basketball Club is?", "cypher": "match(:ENTITY{name:'The team is currently playing in the Istanbul-Ephesus Basketball Club.'})-[:Relationship{name:'Location'}]-> (m) return m.name"}, {"query": "Can you name the types of relationships that the three levels of Nezhnikov are involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The first is the story of the Greek hero.'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What else do you know about the movie Escape from Warrington 2 besides that it was released in 1992?", "cypher": "match (:ENTITY{name:'The schoolboy Wilon2'})-[:Relationship*1..2]-(p) where p.name <> '1992Year of birth4The Moon9The Sun' return  p.name limit 20"}, {"query": "Can you tell me the scope of his business with American Telephone and Telegraph Company?", "cypher": "match (:ENTITY{name:'The American Telephone and Telegraph Company is a'})<-[:Relationship{name:'Company name'}]-(p)-[:Relationship{name:'Scope of operations'}]->(n) return distinct n.name"}, {"query": "Do you know the nationality of the person who is in the middle?", "cypher": "match (:ENTITY{name:'The Ship of the Nile'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Nationality'}]->(n) return distinct n.name"}, {"query": "What other novels are in the series?", "cypher": "match (p:ENTITY{name:'Novel'})<--(x)-->(q:ENTITY{name:'In the relay'}) return x.name limit 5"}, {"query": "Do you know how many companies were started in 2000?", "cypher": "match (p:ENTITY{time:'2000'}) return count(p)"}, {"query": "I would like to know who are all the people of the same ethnicity and what labels are used for each of them?", "cypher": "match (n:ENTITY{name:'The film is being produced by'})-[:Relationship{name:'Ethnicity'}]->(:ENTITY)<-[:Relationship{name:'Ethnicity'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "The performance team at the 2011 X-Japan Shanghai concert was from which country?", "cypher": "match(:ENTITY{name:'2011 X-JapanThe Shanghai Concert'})-[:Relationship{name:'From'}]-> (q) return q.name"}, {"query": "If you want to know more about the 141-page comic book series Humor: The Legend of Lee's Little Cat, the 72-level relationship?", "cypher": "match (n:ENTITY{name:'The comic book world: The Legend of Lee the Cat7'})-[:Relationship*1..2]->(x) where x.name<>'141Page' return distinct x.name"}, {"query": "I heard that there are several special teachers in Watakou Middle School in Siyong County, do you know which ones?", "cypher": "match(:ENTITY{name:'Siyong County Water Tail Secondary School'})-[:Relationship{name:'Special education teacher'}]-> (p) return p.name"}, {"query": "What is the main job of Li?", "cypher": "match (:ENTITY{name:'Chief Li[State ministers to open tomorrow]'})-[:Relationship{name:'The times in which'}]->(n) return n.name as name union all match (:ENTITY{name:'Chief Li[State ministers to open tomorrow]'})-[:Relationship{name:'Major achievements'}]->(m) return m.name as name"}, {"query": "Please write a representative work of Liu Xiaobo, don't you like the Summer of Foam and the 303rd Legion of Liu Xiaobo?", "cypher": "match (n:ENTITY{name:'The world is not perfect.'})-[:Relationship{name:'Representative works'}]->(h) where h.name <> 'The Summer of the Bubble' and h.name <> 'Oh, my God.303The Chamber Legion' return distinct h.name limit 1"}, {"query": "What is a 1500\u00b0C high temperature glass with a very low coefficient of thermal expansion?", "cypher": "match (:ENTITY{name:'1500High temperature glass'})--(h) with h order by h.name where h.name <> 'Very low coefficient of thermal expansion' return h.name"}, {"query": "Do you know what Bridging Lin does? Name three jobs he does?", "cypher": "match (:ENTITY{name:'In the jungle'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name limit 3"}, {"query": "As a Buddhist, Taoist, what else can you do besides being a headline news commentator and a certified user?", "cypher": "match (:ENTITY{name:'Buddhism and Taoism'})<-[:Relationship{name:'Faith'}]-(m),(m)-[:Relationship{name:'Major achievements'}]->(q) where q.name <> 'The headline today is: News media commentator authenticates user' return distinct q.name limit 1"}, {"query": "What chemical has a molecular weight of 266.76?", "cypher": "match (:ENTITY{name:'266.76'})<-[:Relationship{name:'Molecular weight'}]- (h) return h.name"}, {"query": "Do you know what songs are on the album released by Ai Goku?", "cypher": "match (:ENTITY{name:'I'm back'})<-[:Relationship{name:'The record company'}]- (m) return distinct  m.name", "error": "Invalid input 'm': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 32 (offset: 31))\n\"PROFILE match (:ENTITY{name:'I'm back'})<-[:Relationship{name:'The record company'}]- (m) return distinct  m.name\"\n                                ^"}, {"query": "Help me find 10 words that read b\u00e0ng", "cypher": "match (:ENTITY{name:'b\u00e0ng'})<-[:Relationship{name:'Spelling'}]-(m) return distinct m.name limit 10"}, {"query": "Do you know the name of the novel by the main character named Mo Shi Yu?", "cypher": "match (:ENTITY{name:'The Snow Pupil'})<-[:Relationship{name:'The main character'}]- (x) return x.name"}, {"query": "Do you know of any connection between this man and the five-story bell tower?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The Bell Flying Owl[The Qing Dynasty]'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "How can I get the location of East East Strong?", "cypher": "match (p:ENTITY{name:'The East East Strong Company'}) return p.location"}, {"query": "The book is a collection of short stories written by the author of the novel, and the author of the book is a writer of fiction.", "cypher": "match (:ENTITY{name:'The dark night'})<-[:Relationship{name:'Written by'}]-(q)-[:Relationship{name:'Chinese name'}]->(x) return distinct x.name"}, {"query": "When did you see the release of this 2013 Chinese Green Land Status Bulletin?", "cypher": "match(:ENTITY{name:'2013Annual report on the state of China's green land'})-[:Relationship{name:'Release date'}]-> (q) return q.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 69 (offset: 68))\n\"PROFILE match(:ENTITY{name:'2013Annual report on the state of China's green land'})-[:Relationship{name:'Release date'}]-> (q) return q.name\"\n                                                                     ^"}, {"query": "Zhao Zhen is another achievement of the young film producer's factory.", "cypher": "match (x:ENTITY{name:'Yellowstone in Zhejiang'})<-[:Relationship{name:'Where I was born'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(n) where n.name <> 'Young film producer, factory manager' return distinct n.name limit 1"}, {"query": "Please tag 10 songs for 0894", "cypher": "match (:ENTITY{name:'0894The love song'})-[:Tag{name:'The label'}]-> (n) with n order by n.name return n.name limit 10"}, {"query": "Can you tell me which chemical has a molecular weight of 493.08?", "cypher": "match (:ENTITY{name:'493.08'})<-[:Relationship{name:'Molecular weight'}]- (q) return distinct q.name"}, {"query": "Please help me find three books for $69 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'69Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "The following is a list of some of the top jobs that Zhuge Liang has done in addition to directing.", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Professional life'}]->(q) where q.name <> 'The Guide' return distinct q.name limit 1"}, {"query": "Which stainless steel has 1Cr17Ni2?", "cypher": "match (:ENTITY{name:'1Cr17Ni2'})<-[:Relationship{name:'The ingredients'}]- (m) return m.name"}, {"query": "Do you know how many businesses have opened in Chongqing?", "cypher": "match (p:ENTITY{location:'Chongqing'}) return count(p)"}, {"query": "From the album All For You from 1997 by You Please Answer You Please Listen, how long is the song, do you know?", "cypher": "match(:ENTITY{name:'All For You[Please answer.1997Oh, my God.OST]'})-[:Relationship{name:'Song length'}]-> (m) return m.name"}, {"query": "The following is a list of 32 books by Ruxun, including his essays, essays, and book reviews on the three-tier relationship.", "cypher": "match (n:ENTITY{name:'The first is the question of the future.'})-[:Relationship*1..3]->(x) where x.name<>'32' return distinct x.name"}, {"query": "What profession does the person specialize in is skin pathology, leukemia, malignant melanoma etc?", "cypher": "match (:ENTITY{name:'The disease is also known as acute myelopathy.'})<-[:Relationship{name:'Professional specialties'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name"}, {"query": "The incident in the southern province of Hunan, in the central province of Hunan, on the highway called \"Hunan Highway\" is named after Liu.", "cypher": "match (:ENTITY{name:'The highway runs through the central part of Hunan province.'})<-[:Relationship{name:'Location'}]- (n) return n.name"}, {"query": "I need details on the relationship between the two layers of this poem by Man Jian-Rung.", "cypher": "match (n:ENTITY{name:'The Red River; The Turbulent Courtyard'}) - [:Relationship*1..2]->(x) where x.name<>'The Red River; The Turbulent Courtyard' return distinct x.name"}, {"query": "What is the name of the river that runs from Yibin City to the junction of Zhejiang River and ends at Nanjing in Yixing City, Hubei Province?", "cypher": "match (:ENTITY{name:'Yibin City and Zhejiang Junction'})<-[:Relationship{name:'The starting point'}]-(m), (m)-[:Relationship{name:'The End'}]->(n) where n.name='The city of Nanjing, Hubei Province' return distinct m.name"}, {"query": "Can you write the molecular formula for a compound like 2-hydroxy-4-methanate?", "cypher": "match(:ENTITY{name:'2-The base-4-The methane'})-[:Relationship{name:'Molecular'}]-> (h) return h.name"}, {"query": "Song-soo, the modern woman poet. Can you tell me five of her main achievements?", "cypher": "match (n:ENTITY{name:'The poetess, who is a contemporary poetess, is also a poet.'})<-[:Describe{name:'Describe'}]-(m)-[:Relationship{name:'Major achievements'}]->(q) return q.name order by q.name limit 5"}, {"query": "Do you have any relationship names that are involved in the three levels of the school?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Secondary School in Kanagawa'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "How many phones have 16GB of internal memory? 3 recommendations?", "cypher": "match (:ENTITY{name:'16GB'})<-[:Relationship{name:'The body memory'}]- (h) return h.name limit 3"}, {"query": "In 2015, Han Shih, Zhang Rui starred in the TV series Happiness is so simple, I wonder where to shoot it?", "cypher": "match(:ENTITY{name:'Happiness is so simple.[2015He is also a former member of the South Korean boy band, The Killers.]'})-[:Relationship{name:'Location'}]-> (p) return p.name"}, {"query": "What is the shortest path between the two levels of the village of Zhuquan and the village of Nauru?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Liuzhou'})-[*..2]-(b:ENTITY{name:'The village of Nauru'})) return count(p)"}, {"query": "Can you get me three books on motivational books to read?", "cypher": "match (:ENTITY{name:'The book of encouragement'})<-[:Tag{name:'The label'}]-(n)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "I'm not sure if I can find a job that's going to be a success.", "cypher": "match (m:ENTITY{name:'Open and close'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name"}, {"query": "Do you know what kind of awards campaign was launched by the successful marketing magazine?", "cypher": "match (:ENTITY{name:'The success of the marketing of the magazine'})<-[:Relationship{name:'Initiating agency'}]- (h) return h.name"}, {"query": "Can you recommend three places in the city of Luoyang, Henan Province, that are famous?", "cypher": "match (:ENTITY{name:'The city of Loyang, Henan Province'})<-[:Relationship{name:'Geographical location'}]-(n)-[:Relationship{name:'Famous places'}]->(x) return x.name order by x.name limit 3"}, {"query": "This man, whose real name is Wang Guanlian, born 30 August 1970 in Malaysia, is a Chinese pop singer, songwriter, music producer, actor, and what else is his name?", "cypher": "match (:ENTITY{name:'The first is the newly-created \"Kong Kong\".1970Year of birth8The Moon30Born in Malaysia, Yang is a Chinese-language pop singer, songwriter, music producer, actor and author.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Other names'}]->(n) return distinct n.name"}, {"query": "In addition to this representative work, there are three other works by Xu Xiaojing, please list them.", "cypher": "match (:ENTITY{name:'Good afternoon.'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Representative works'}]->(x) where x.name <> 'Oh, my God.7SENSESOh, my God.' return distinct x.name limit 3"}, {"query": "Which companies are the hosts of the 2012 International Tourism Wealth Summit?", "cypher": "match(:ENTITY{name:'2012The International Summit on Tourism Wealth'})-[:Relationship{name:'Hosted by'}]-> (h) return h.name"}, {"query": "Now, can you tell me about the types of relationships within the five tiers that Huang Tian is involved in?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The Chinese'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "I want to know what are the top 5 cultural works that are on the list?", "cypher": "match (n:ENTITY{name:'The feast of the mother'})-[:Relationship*]->(x) where x.name<>'The culture' return distinct x.name limit 5"}, {"query": "Who is the President of the United States?", "cypher": "match (p:ENTITY{name:'The President'})<--(x)-->(q:ENTITY{name:'The United States'}) return x.name"}, {"query": "Please help me find six books for $200 and tell me who the author is.", "cypher": "match (:ENTITY{name:'200Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Written by'}]->(q) return distinct h.name,q.name limit 6"}, {"query": "Can you name a substance related to steel?", "cypher": "match (:ENTITY{name:'Steel'})<-[:Relationship{name:'Varieties'}]-(q)-[:Relationship{name:'Related'}]->(m) return distinct m.name limit 1"}, {"query": "What are the main achievements of the celebrity who died in 1986?", "cypher": "match (:ENTITY{name:'1986'})<-[:Relationship{name:'Date of death'}]-(x)-[:Relationship{name:'Major achievements'}]->(n) return n.name order by n.name limit 10"}, {"query": "What are the names of people with the same blood type as Marklyn Zeterlitz? What labels do they have, and how many labels do they have, in order from small to large?", "cypher": "match (n:ENTITY{name:'The film is about a young man named Mark.'})-[:Relationship{name:'Blood type'}]->(:ENTITY)<-[:Relationship{name:'Blood type'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you tell me if 5 and a tramp are related by 3 jumps?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The Nomads'}) return distinct n.name limit 5"}, {"query": "Please tell me about the types of relationships that are related to the Yellow Calling in the 4th level.", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'Yellow Call'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "How close is the shortest distance between the Shanghai University of Economics and Business and the Taipei University of Technology and Science?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Shaanxi University of Economics and Business School'})-[*..2]-(b:ENTITY{name:'University of Technology and Technology of Taipei'})) return count(p)"}, {"query": "Can you find Anwar's profession?", "cypher": "match (:ENTITY{name:'The Anuraghi'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name"}, {"query": "Can you list the names of the 10 relationships in the two layers of fashion embroidery?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Fashioned knitted clothes'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "Can you tell me the opening hours of the Tianjin Theatre Museum?", "cypher": "match(:ENTITY{name:'The Tianjin Theatre Museum'})-[:Relationship{name:'Opening hours'}]-> (n) return n.name"}, {"query": "What is the name of the most representative work of Vivian?", "cypher": "match (:ENTITY{name:'The people of the village of Vieng ()'})<-[:Relationship{name:'Other names'}]-(m)-[:Relationship{name:'Representative works'}]->(p) return distinct p.name limit 1"}, {"query": "Help me find two of Cao's texts.", "cypher": "match (:ENTITY{name:'The language'})<-[:Relationship{name:'Literary genre'}]-(m), (m)-[:Relationship{name:'Written by'}]->(n) where n.name='Cao planted' return m.name limit 2"}, {"query": "The company is a subsidiary of Shenzhen City Company, a subsidiary of Shenzhen City Corporation.", "cypher": "match (:ENTITY{name:'Shenzhen City of Shengming'})--(n) with n order by n.name where n.name <> 'Organizing body' return n.name"}, {"query": "Is it a mystery that love comes knocking at the door?", "cypher": "match (:ENTITY{name:'Love knocks on the door of the sheep country'})--(h) with h order by h.name return h.name"}, {"query": "Can you tell me about the five films directed by Zayn Malik?", "cypher": "match(:ENTITY{name:'Tin coral'})< -[:Relationship{name:'Director'}]-> (m) with m order by m.name limit 5 return m.name"}, {"query": "What is the shortest path between Sunnyside and Sunnyside?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Son of the King'})-[*..2]-(b:ENTITY{name:'Sunny'})) return count(p)"}, {"query": "I'm not sure if you can tell me what the content of the Wikipedia update is for the media?", "cypher": "match (:ENTITY{name:'The media'})<-[:Relationship{name:'The encyclopedia is updated'}]- (m) return m.name limit 6"}, {"query": "The most popular recent one, the Three-Fold Cross, was published by which publisher, do you know?", "cypher": "match(:ENTITY{name:'The flower of the third generation'})-[:Relationship{name:'Publishing house'}]-> (x) return x.name"}, {"query": "Find out the six voices, what nationality are they?", "cypher": "match (:ENTITY{name:'The Voice'})<-[*]-(m), (m)-[:Relationship{name:'Nationality'}]->(n) return m.name,n.name limit 6"}, {"query": "How many companies are there in Nanjing?", "cypher": "match (p:ENTITY{location:'The city of Nanjing'}) return count(p)"}, {"query": "Can you help me find the CAS number for H-acid methamine?", "cypher": "match(:ENTITY{name:'HAcid metamine'})-[:Relationship{name:'CASThe number of the log'}]-> (h) return h.name"}, {"query": "Listed below are ten other positions in addition to the post of Party Committee Secretary of the Zhejiang Branch of the Industrial and Commercial Bank of China.", "cypher": "match (:ENTITY{name:'Chang was a good man.'})<-[:Relationship{name:'Chinese name'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(x) where x.name <> 'Party secretary of the Zhejiang Branch of the Industrial and Commercial Bank of China' return distinct x.name limit 10"}, {"query": "The following are the literary works that are in the two-tier relationship of the Yuen friends.", "cypher": "match (n:ENTITY{name:'The friend of the truth'})-[:Relationship*1..2]->(x) where x.name<>'Literary works' return distinct x.name"}, {"query": "What is the job of a man?", "cypher": "match (:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]-(q)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name limit 1"}, {"query": "The 10W solar folding wallet charger is really good, do you know what its working voltage is?", "cypher": "match(:ENTITY{name:'10WSolar-powered wallet charger'})-[:Relationship{name:'Working voltage'}]-> (m) return m.name"}, {"query": "Could you tell me what a chemical is with a molecular weight of 210.31?", "cypher": "match (:ENTITY{name:'210.31'})<-[:Relationship{name:'Molecular weight'}]- (x) return x.name"}, {"query": "Tell me about the five iterations of the Harmony Five-Factored 4 layer relationship?", "cypher": "match (n:ENTITY{name:'And my brother, Yang Yong, played Go-Go.'})-[*1..4]->(x) where x.name<>'Oh, my God.' return distinct x.name limit 5"}, {"query": "The game is a sequel to the original game, World of Warcraft, and is the sequel to the original game, World of Warcraft.", "cypher": "match (:ENTITY{name:'The Unbeatable World of Conflict'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'The game' return p.name limit 1"}, {"query": "Do you know what chemical has the CAS number 95-78-3?", "cypher": "match (:ENTITY{name:'95-78-3'})<-[:Relationship{name:'CASThe number of the log'}]- (h) return h.name"}, {"query": "What is the shortest path between Xu Hongqi and Deng Jingping on the second floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Xu Hong soldier'})-[:Relationship*..2]-(b:ENTITY{name:'The Chinese'})) return count(p)"}, {"query": "What are the names of people born at the same time as Han Sung-jun? What are their labels? Please list them in order of their number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'Han Chun-chun'})-[:Relationship{name:'Date of birth'}]->(:ENTITY)<-[:Relationship{name:'Date of birth'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "The main school of the Sungai Bar Feature Nursery is a school with a big class.", "cypher": "match (p:ENTITY{name:'The Upper Bar features a kindergarten'})-[:Relationship{name:'Main Faculty'}]-> (x) with x order by x.name where x.name <> 'The class' return x.name"}, {"query": "What do you know about the publication, The Complete Health of Children 0-12?", "cypher": "match (:ENTITY{name:'0-12The complete book on child health'})--(x) with x order by x.name where x.name <> 'Published' return x.name"}, {"query": "In the meantime, I'm going to ask you, where are all the books by the author of Holbenbeck published?", "cypher": "match (:ENTITY{name:'The first was the Holocaust.'})<-[:Relationship{name:'Written by'}]-(x),(x)-[:Relationship{name:'Publishing house'}]->(q) return distinct q.name"}, {"query": "The original name of the high priest Imhotep is Yaha, or other names?", "cypher": "match (:ENTITY{name:'The High Priest Imhotep'})-[:Relationship{name:'Other names'}]->(n) return n.name as name union all match (:ENTITY{name:'The High Priest Imhotep'})-[:Relationship{name:'Original name'}]->(m) return m.name as name union all match (:ENTITY{name:'The High Priest Imhotep'})-[:Relationship{name:'Written by'}]->(r) return r.name as name"}, {"query": "Does anyone know what the novel is about that is available on the Chinese website?", "cypher": "match (:ENTITY{name:'Starting with the Chinese Web'})<-[:Relationship{name:'Linked site'}]-(m)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 1"}, {"query": "The Chinese name of the author of Miss Liu's Nine is Liu.", "cypher": "match (:ENTITY{name:'Miss Nine of the House of Liu'})<-[:Relationship{name:'Written by'}]-(h)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 1"}, {"query": "I would like to know about the history of the three-tier relationship in the state of Michoacan, which is described in the book Ma'at Ma'at.", "cypher": "match (n:ENTITY{name:'The court case against the state of Michigan'})-[:Relationship*1..2]->(x) where x.name<>'Historical writings' return distinct x.name"}, {"query": "Please help me find two books for $29.00 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'29.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Can you tell me what the relationship is between the three levels involved in the 46th secondary school in Hebei, Anhui Province?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'46th secondary school in Hebei, Anhui Province'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "The first label of the topic is RJ: Can you find it?", "cypher": "match (:ENTITY{name:'(2014)5\u00b73The synchronization\u00b7High school biology\u00b7Selected3\u00b7The topic of modern biotechnology\u00b7RJ'})-[:Tag{name:'The label'}]-> (m) with m order by m.name return m.name limit 1"}, {"query": "What is the CAS NO of the 2-methyl ethanol nitrate you use most often?", "cypher": "match(h:ENTITY{name:'2-Methyl ethanol'})-[:Relationship{name:'CASNO'}]-> (p) return p.name"}, {"query": "Do you know what chemical has a molecular weight of 243.2579?", "cypher": "match (:ENTITY{name:'243.2579'})<-[:Relationship{name:'Molecular weight'}]- (p) return p.name"}, {"query": "Do you know of any major awards for people who are interested in Chinese culture or British culture?", "cypher": "match (:ENTITY{name:'Chinese culture, British culture'})<-[:Relationship{name:'Research areas'}]-(p),(p)-[:Relationship{name:'Major achievements'}]->(x) return x.name order by x.name limit 1"}, {"query": "What are the most representative works of the authors of Aquarius?", "cypher": "match (:ENTITY{name:'The Water Vessel'})<-[:Relationship{name:'The constellations'}]-(q)-[:Relationship{name:'Representative works'}]->(n) return distinct n.name limit 2"}, {"query": "How many songs has Park sung lyrics to?", "cypher": "match (n:ENTITY{name:'Park is a good person.'})<-[:Relationship{name:'The word'}]- (mn) return count(mn)"}, {"query": "The book was published by which publisher?", "cypher": "match (:ENTITY{name:'The Chief.'})<-[:Relationship{name:'Written by'}]-(x),(x)-[:Relationship{name:'Publishing house'}]->(q) return distinct q.name"}, {"query": "Can you name any of Huang's works published by Science Press?", "cypher": "match (p:ENTITY{name:'Scientific publishing'})<--(x)-->(q:ENTITY{name:'Yellow'}) return x.name"}, {"query": "The faculty of the East Sea Institute of Vocational Technology can tell me one.", "cypher": "match (:ENTITY{name:'The East Sea Vocational Technical College'})--(q) return  distinct q.name limit 1"}, {"query": "Please help me find 7 other information about the actor Goo Shoo 3 layer.", "cypher": "match (:ENTITY{name:'The Great Wall'})-[:Relationship*1..3]-(p) where p.name <> 'Actor' return p.name limit 7"}, {"query": "Can you list 13 words in 130,000 literary works?", "cypher": "match (:ENTITY{name:'13Thousands'})<-[:Relationship{name:'The word count'}]- (q) return q.name limit 13"}, {"query": "Can you name one work that has a link to the 4th layer of the label?", "cypher": "match (n)<-[:Tag*4{name:'The label'}]-(p:ENTITY{name:'The lake is laughing'}) RETURN distinct n.name limit 1"}, {"query": "What is the EINECS number of 1-hydroxy-3-ol in the data table?", "cypher": "match(:ENTITY{name:'1-Oh, my God.-3-Alcohol'})-[:Relationship{name:'EINECSThe number'}]-> (q) return q.name"}, {"query": "Can I get three health books to read?", "cypher": "match (:ENTITY{name:'Health books'})<-[:Tag{name:'The label'}]-(n)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know what kind of relationships are involved in the three layers of the zodiac dance?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The sign of the swan'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I would like to know what the main use of this material is, 1.2738 molded steel?", "cypher": "match(:ENTITY{name:'1.2738Molded steel'})-[:Relationship{name:'Main uses'}]-> (n) return n.name"}, {"query": "Do you know the foreign name of the Japanese telegraph company?", "cypher": "match(:ENTITY{name:'Japanese Telegraph Telephone Company'})-[:Relationship{name:'Foreign language name'}]-> (n) return n.name"}, {"query": "Can you name three major awards that were established in 1943?", "cypher": "match (:ENTITY{name:'1943Year of birth'})<-[:Relationship{name:'When did it start?'}]-(m),(m)-[:Relationship{name:'Main awards'}]->(q) return distinct q.name limit 3"}, {"query": "Can you recommend a book with 789,000 words?", "cypher": "match (h:ENTITY{name:'789000'})<-[:Relationship{name:'The word count'}]- (x) return x.name"}, {"query": "Do you know which coin was issued on April 4, 2002?", "cypher": "match (:ENTITY{name:'2002Year of birth4The Moon4The Sun'}) <- [:Relationship{name:'release The Sun period'}]- (m) return m.name"}, {"query": "The statistics of the 10 private schools in the country?", "cypher": "match (:ENTITY{name:'Private schools'})<-[:Relationship{name:'Category'}]-(q),(q)-[:Relationship{name:'Main Faculty'}]->(x) return distinct x.name limit 10"}, {"query": "Can you tell me what are the main achievements of Li Fengye? Please give me 10 points.", "cypher": "match (m:ENTITY{name:'Li Feng year'})<-[:Relationship{name:'Current headmaster'}]-(p),(p)-[:Relationship{name:'Main awards'}]->(h) return h.name order by h.name limit 10"}, {"query": "What is the game published by Guangzhou Unified Communications?", "cypher": "match (:ENTITY{name:'The information is from Guangzhou'})<-[:Relationship{name:'Issuer'}]- (n) return n.name"}, {"query": "Can you find the English name of the species of the bird?", "cypher": "match (:ENTITY{name:'The bird in the middle'})<-[:Relationship{name:'species'}]-(h)-[:Relationship{name:'English name'}]->(p) return distinct p.name"}, {"query": "I'm not sure who was involved in the making of the movie, but I'm not sure who was involved in the making of the movie.", "cypher": "match (:ENTITY{name:'The end of the colonial era'})--(h) return h.name order by h.name"}, {"query": "Check out how many games are ranked on Alexa.", "cypher": "match(m:ENTITY{name:'005The little game'})-[:Relationship{name:'ALEXARanking'}]-> (x) return x.name"}, {"query": "This 0Cr18Ni9 stainless steel material, what is its Si content?", "cypher": "match(:ENTITY{name:'0Cr18Ni9Stainless steel'})-[:Relationship{name:'Oh, my God.Si'}]-> (q) return q.name"}, {"query": "I wonder what kind of relationship is the relationship within the two layers covered by the Sushi?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The mountain of the sun'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the shortest path between the two layers of ice cream and mint green beans?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Ice town green bean milk'})-[*..2]-(b:ENTITY{name:'Green beans with mint'})) return count(p)"}, {"query": "Help me find three albums of the show.", "cypher": "match (:ENTITY{name:'The first is that of the second.'})<-[:Relationship{name:'The album singer'}]-(m) return distinct m.name limit 10"}, {"query": "I need you to tell me about the type of relationship that is involved in the two layers of the bathroom net?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Bathing is clean'}) UNWIND relationships(path) AS rel return rel.name limit 5"}, {"query": "What is the name of the Senior Secondary School in Lianhe Port Development Area?", "cypher": "match (:ENTITY{name:'Senior Secondary School in Lian Yun Port Development District'})<-[:Relationship{name:'Full name'}]-(h) return h.name"}, {"query": "Do you know how many PubChem we used for 1-[2-hydroxybutyric acid]-2-hydroxybutyric acid?", "cypher": "match(:ENTITY{name:'1-[2-The Parakeet]-2-Oh, my God.'})-[:Relationship{name:'PubChemThe number'}]-> (m) return m.name"}, {"query": "What is the status of the site where Confucius lived?", "cypher": "match(:ENTITY{name:'Confucius is also a country boy.'})-[:Relationship{name:'Location level'}]-> (n) return n.name"}, {"query": "The web novel The Road to Desert is hot, do you know where its homepage is?", "cypher": "match(:ENTITY{name:'The Desert Road'})-[:Relationship{name:'The first website'}]-> (n) return n.name"}, {"query": "Can you tell me what the relationship is between the two levels of the Beijing Bus Station and the 16th Street?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Buses in Beijing16The road'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "The Chinese name for the flowering season is not more than 10 Chinese names.", "cypher": "match (:ENTITY{name:'The flowering season'})-[:Relationship{name:'Chinese name'}]-> (p) with p order by p.name return p.name limit 10"}, {"query": "What is the subtitle of the book \"Blessed are the poor and poor\"?", "cypher": "match (:ENTITY{name:'Happiness and unhappiness are blessings'})<-[:Relationship{name:'Title'}]-(x),(x)-[:Relationship{name:'Subtitles'}]->(q) return distinct q.name limit 2"}, {"query": "What is the magnitude of the recent earthquake in Japan?", "cypher": "match(q:ENTITY{name:'10\u00b73Japan's newly hit by earthquake'})-[:Relationship{name:'The earthquake'}]-> (m) return m.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 40 (offset: 39))\n\"PROFILE match(q:ENTITY{name:'10\u00b73Japan's newly hit by earthquake'})-[:Relationship{name:'The earthquake'}]-> (m) return m.name\"\n                                        ^"}, {"query": "Can you find me a book published by two economics publishers?", "cypher": "match (:ENTITY{name:'The publisher of Economic Science'})<-[:Relationship{name:'Publishing house'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know which continent the capital of Famagusta, Sudaniye, and Great Britain belong to?", "cypher": "match (:ENTITY{name:'The following is a list of the top 10 most popular websites in the world.'})<-[:Relationship{name:'Capital city'}]-(x),(x)-[:Relationship{name:'Countries'}]->(q) return distinct q.name"}, {"query": "The first season of Little Chef is about to start, how long is each episode set to be?", "cypher": "match(:ENTITY{name:'The Little Chef season 1'})-[:Relationship{name:'Length of each episode'}]-> (m) return m.name"}, {"query": "What is the name of the accident that happened in the Yueping area of the city of Yueping, Guangdong province on the Guangdong highway?", "cypher": "match (:ENTITY{name:'The highway in the Yue Ping district of the city of Copperin, Guizhou'})<-[:Relationship{name:'Location of accident'}]- (x) return x.name"}, {"query": "The book you have is a book of questions for the 2011-2012 stock market basics online exam, which publisher published it?", "cypher": "match(:ENTITY{name:'2011-2012The yearly stock market basics online exam question book'})-[:Relationship{name:'Publishing house'}]-> (p) return p.name"}, {"query": "The first Chinese name of a memory that De Jun didn't want to let go was?", "cypher": "match (:ENTITY{name:'The memory of the people who were not willing to give up'})-[:Relationship{name:'Chinese name'}]-> (x) with x order by x.name return x.name limit 1"}, {"query": "What are the names of the people with the same academic degree as Cao Tzu, and what are the labels of each person? Please list them in order of the number of labels.", "cypher": "match (n:ENTITY{name:'The Cao family'})-[:Relationship{name:'Education'}]->(:ENTITY)<-[:Relationship{name:'Education'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Do you know what kind of relationships are involved in the two layers of Parameters Technology?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Parametric Technology is a US company.'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What kind of romance novels are popular online?", "cypher": "match(n:ENTITY{name:'Sen asked if the sword was a heartless sword.'})-[:Relationship{name:'Type of'}]-> (h) return h.name"}, {"query": "Can you name me five of the main achievements of this famous person who believes in dialectical materialism?", "cypher": "match (:ENTITY{name:'Diaspora materialism'})<-[:Relationship{name:'Faith'}]-(n)-[:Relationship{name:'Major achievements'}]->(h) return h.name order by h.name limit 5"}, {"query": "Please help me find five books for $20 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'20.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Help me find 10 species of short-tailed fish in the family Sphingidae.", "cypher": "match (:ENTITY{name:'Short-tailed catfish'})<-[:Relationship{name:'The Aam'}]-(h) return h.name limit 10"}, {"query": "Who is the secretary of the Central Office of Jinping Lu? What is the label of the Central Office of Jinping Lu? Do you know which regions are under the jurisdiction of the Central Office of Jinping Lu?", "cypher": "match (:ENTITY{name:'The Central Bureau of Jinping'})-[:Relationship{name:'The secretary'}]->(n) return n.name as name union all match (:ENTITY{name:'The Central Bureau of Jinping'})-[:Tag{name:'The label'}]->(m) return m.name as name union all match (:ENTITY{name:'The Central Bureau of Jinping'})-[:Relationship{name:'Subordinated areas'}]->(r) return r.name as name"}, {"query": "The 2013 Channel Two Media Forward Forum recently took place in the Channel Islands.", "cypher": "match(:ENTITY{name:'2013Forum of Media Leaders on both sides of the strait'})-[:Relationship{name:'The subject'}]-> (n) return n.name"}, {"query": "What other label is there for the goodwill of the people besides culture and personality?", "cypher": "match (n:ENTITY{name:'By the good wing'})-[:Tag{name:'The label'}]->(h) where h.name <> 'The culture' and h.name <> 'Characters' return distinct h.name limit 1"}, {"query": "I'm not sure what kind of plant he belongs to, but I'm not sure what kind of plant he belongs to.", "cypher": "match (:ENTITY{name:'Sub-planted'})<-[:Relationship{name:'The door'}]-(x),(x)-[:Relationship{name:'The Department'}]->(q) return distinct q.name limit 5"}, {"query": "This man, a native of Zhejiang Ningbo, graduated from the Second Military Medical University Military Medical School in 1989, graduated from the Second Military Medical University Graduate School in 2000, Doctor of Medicine, do you know his profession?", "cypher": "match (:ENTITY{name:'The video was posted on the official Facebook page of the Chinese government.1989The first was the death of a young man in a car accident in the early 2000s.2000He graduated from the Second Military Medical University, Medical Doctorate in 2005.'})<-[:Describe{name:'Describe'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name"}, {"query": "The actor who gave the voice to Blue is the one who has trouble asking.", "cypher": "match (:ENTITY{name:'The blue is fickle'})<-[:Relationship{name:'Other names'}]-(n)-[:Relationship{name:'Sound'}]->(p) return distinct p.name"}, {"query": "Please tell me what are the famous sights of the mountain of the Master of Bullfighting?", "cypher": "match (:ENTITY{name:'The Master of the Cow'})-[:Relationship{name:'Famous places'}]-> (x) return x.name order by x.name limit 5"}, {"query": "Can you list the 10 most representative works of Luru, who was born in November 1922?", "cypher": "match (:ENTITY{name:'The land of the spring, formerly known as the land of the spring,1922Year of birth11Moon was born in the village of Chiyo-ji, Tongji County, Hebei Province.'})<-[:Describe{name:'Describe'}]-(m),(m)-[:Relationship{name:'Representative works'}]->(h) return distinct h.name limit 10"}, {"query": "Please recommend me the famous sights of the Shining Country Cliffs.", "cypher": "match (:ENTITY{name:'The Rising Cliffs'})-[:Relationship{name:'Famous places'}]-> (x) return  distinct x.name"}, {"query": "What else do you know about the ancient land of the Lao people besides the theory proposed by Dudva?", "cypher": "match (:ENTITY{name:'The ancient land of the Liao'})-[:Relationship*1..2]-(p) where p.name <> 'Female high-pitched singer' return distinct p.name limit 10"}, {"query": "Who are the main characters in the movie Aunty Legend?", "cypher": "match (:ENTITY{name:'The Legend of the Aunt'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Starring'}]->(n) return distinct n.name"}, {"query": "Who is 6 feet tall, and who represents yes?", "cypher": "match (:ENTITY{name:'6feet183cm(This is a very good article.)'})<-[:Relationship{name:'Height'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(n) return distinct x.name,n.name"}, {"query": "Do you know all the relationship information that is involved in the 5th floor of the Clock Tower Park?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The Park of the Stone Bells'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Help me find two sweet and sour raspberries.", "cypher": "match (:ENTITY{name:'The Rupee'})<-[:Relationship{name:'Classified'}]-(m), (m)-[:Relationship{name:'The Taste'}]->(n) where n.name='Sour and sweet' return distinct m.name limit 2"}, {"query": "Can you tell me what kind of relationships are there within the three layers of the hyper-ethnicity?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Flash'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "And what do you know of the main achievements of Huang Liang?", "cypher": "match (:ENTITY{name:'The Yellow Room'})<-[:Relationship{name:'Chinese name'}]-(h),(h)-[:Relationship{name:'Major achievements'}]->(m) return distinct h.name"}, {"query": "Do you know what the voice of the person who was on the radio with the uranium bombing memo is?", "cypher": "match (:ENTITY{name:'The bombing of Hiroshima'})<-[:Relationship{name:'The first stage'}]-(h)-[:Relationship{name:'Sound'}]->(n) return n.name order by n.name limit 5"}, {"query": "Do you know what is the characteristic of the Yangtze River, which is mainly concentrated in the three regions of Dongdong, Sichuan and Hunan?", "cypher": "match (:ENTITY{name:'The main concentration is in the three regions of Dongdong, Xinjiang, and Shandong'})<-[:Relationship{name:'The scope of the skin shadow effect'}]-(m),(m)-[:Relationship{name:'The characteristics of the peppered moth'}]->(n) return distinct n.name limit 1"}, {"query": "What are the sub-species that are unique to China?", "cypher": "match (:ENTITY{name:'Yes, it is.'})<-[:Relationship{name:'China is special'}]- (mn) -[:Relationship{name:'Classified'}]->(n:ENTITY{name:'Subspecies'}) return mn.name "}, {"query": "Do you know what the top 5 achievements of this Chinese person are?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(h)-[:Relationship{name:'Major achievements'}]->(n) return n.name skip 1 limit 5"}, {"query": "Find out what are the two main achievements of Mehmet Bakir besides the National Youth Unity Award for Excellence in Progress and the National Technician Award.", "cypher": "match (n:ENTITY{name:'Meat and oats;Buck is a man.'}) -[:Relationship{name:'Major achievements'}]->(h) where h.name <> 'The National Youth Unity Award for Excellence in Progress' and h.name <> 'National technical expert and honored recipient' return distinct h.name limit 2"}, {"query": "What other plants belong to the same family as the rose family, please tell me what labels each of these plants has.", "cypher": "match (n:ENTITY{name:'The rose family'})-[:Relationship{name:'The door'}]->(:ENTITY)<-[:Relationship{name:'The door'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "What is the name of the incident that happened in the village of Piyong, Longcheng District, Shenzhen, a few days ago?", "cypher": "match (:ENTITY{name:'5 Jun village, Longcheng District, Shenzhen'})<-[:Relationship{name:'Area of occurrence'}]- (p) return p.name"}, {"query": "What are the levels of protection of the brown algae? Where is it mainly distributed?", "cypher": "match (:ENTITY{name:'The brow-browed grass'})-[:Relationship{name:'Protection level'}]->(n) return n.name as name union all match (:ENTITY{name:'The brow-browed grass'})-[:Relationship{name:'Distribution areas'}]->(m) return m.name as name"}, {"query": "Do you have any information on the types of relationships involved in Motorola Wilder in the 2 layers?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Motorola is a company. Wilder'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Please tell me what kind of relationships are involved in the flowerbeds in the 6th floor?", "cypher": "match path=(n)<-[:Relationship*6]-(p:ENTITY{name:'The Little Flower Group'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I want two of them besides the three sisters and the Samsung e-advertisement.", "cypher": "match (n:ENTITY{name:'The Shining'})-[:Relationship{name:'Representative works'}]->(h) where h.name <> 'My three sisters' and h.name <> 'Samsung electronic advertising' return distinct h.name limit 2"}, {"query": "Can you give me an example of what is the three-tiered relationship between the label and the homemade coffee?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Home-brewed coffee'}) RETURN distinct n.name"}, {"query": "Can you find me three books published by Shuhai Publishing?", "cypher": "match (:ENTITY{name:'The book is published by Shuhai Publishing.'})<-[:Relationship{name:'Publishing house'}]-(n)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "Can you find me a video that was released in 2001?", "cypher": "match (:ENTITY{name:'2001Year of birth'})<-[:Relationship{name:'Delivery time'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "What chemical has a density of 0.9702?", "cypher": "match (:ENTITY{name:'0.9702'})<-[:Relationship{name:'Density'}]- (x) return distinct x.name"}, {"query": "Can you list the types of relationships that are involved in the Antram Hotel on the second floor?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Antram Hotel'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you tell me 5 things you know about the Leeuwarden Dam in the 2nd floor, except that it is in the county of Chiang Mai?", "cypher": "match (:ENTITY{name:'The Cousin of Lee'})-[*1..2]->(p) where p.name <> 'South of the city of Chiaki5Kilometers' return  p.name limit 5"}, {"query": "What are the representative works of the Sato flag company? Can you name three?", "cypher": "match (:ENTITY{name:'The Three Banner Theater'})<-[:Relationship{name:'Unit of work'}]-(q),(q)-[:Relationship{name:'Representative works'}]->(m) return distinct m.name limit 1"}, {"query": "Do you know the name of the crash that happened on September 10, 1961?", "cypher": "match (:ENTITY{name:'1961Year of birth9The Moon10The Sun'})<-[:Relationship{name:'Time of the accident'}]- (p) return distinct p.name"}, {"query": "Can you introduce me to the book by Kim Sang-wook?", "cypher": "match (:ENTITY{name:'Kim San-woo is a critic of the West Bank'})<-[:Relationship{name:'Title'}]-(x),(x)-[:Tag{name:'The label'}]->(q) return distinct q.name"}, {"query": "What chemical is CAS number 20386-22-5?", "cypher": "match (:ENTITY{name:'20386-22-5'})<-[:Relationship{name:'CASThe number'}]- (q) return q.name"}, {"query": "Does the book mention the CAS registration number for 2-hydroxyethylamide?", "cypher": "match(:ENTITY{name:'2-Acetaminophen'})-[:Relationship{name:'CASThe number of the log'}]-> (h) return h.name"}, {"query": "What chemical is C12H18?", "cypher": "match (:ENTITY{name:'C12H18'})<-[:Relationship{name:'Molecular'}]- (m) return m.name"}, {"query": "What is the relationship between the two layers of the Nanda Highway?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Nanda Highway'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the main awards of secondary vocational schools? Can you say no to one?", "cypher": "match (:ENTITY{name:'Secondary vocational schools'})<-[:Relationship{name:'Type of school'}]-(q),(q)-[:Relationship{name:'Main awards'}]->(n) return distinct n.name limit 1"}, {"query": "Please tell me which song is the theme song of the construction of the Eli Ark?", "cypher": "match (:ENTITY{name:' The Ark of the CovenantTheme song'}) <- [:Relationship{name:'Album by'}]- (x) return distinct x.name"}, {"query": "Can you explain to me the main edible benefits of lotus tea?", "cypher": "match (:ENTITY{name:'Lotus tea'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Mainly consuming power'}]->(n) return distinct n.name"}, {"query": "What university did all the painters graduate from?", "cypher": "match (:ENTITY{name:'Painter'})<-[:Relationship{name:'Professional life'}]-(x),(x)-[:Relationship{name:'Graduated'}]->(q) return distinct q.name"}, {"query": "Tell me, is the aesthetic chess game written by Liu Xiaobo and written by Liu DaBaku Heroes good for the two-layer relationship in the collection?", "cypher": "match (n:ENTITY{name:'Aesthetic chess titlesBamboo Heroes against the Bottom'}) - [:Relationship*1..2]->(x) where x.name<>'Written by Liu Xiaobo' return distinct x.name"}, {"query": "I know that the club was founded in June 2012 and I would like to know four more things about it.", "cypher": "match (n:ENTITY{name:'Flying highFC'})-->(h) with h order by h.name where h.name <> 'The football club' and h.name <> '2012Year of birth6The Moon' return h.name limit 4"}, {"query": "The earthquake in our country, which has a seismic depth of 7000 meters, is nicknamed?", "cypher": "match (:ENTITY{name:'7000The M'})<-[:Relationship{name:'The depth of the quake'}]- (h) return h.name"}, {"query": "Do you know which seminars were held in 2014? 14?", "cypher": "match (:ENTITY{name:'2014'})<-[:Relationship{name:'The time'}]- (p) return p.name limit 14"}, {"query": "The following is a list of the posts of the secretaries of the CPC.", "cypher": "match (:ENTITY{name:'Secretary of the Commission'})--(x) return x.name skip 2"}, {"query": "Can you tell me what the relationship is between the two layers of this person?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The answer is yes.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know what the women's 5x100m relay is and what category it belongs to?", "cypher": "match (:ENTITY{name:'Women's fifth consecutive title'})-[:Relationship{name:'Project'}]->(n) return n.name as name union all match (:ENTITY{name:'Women's fifth consecutive title'})-[:Relationship{name:'Classification'}]->(m) return m.name as name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 36 (offset: 35))\n\"PROFILE match (:ENTITY{name:'Women's fifth consecutive title'})-[:Relationship{name:'Project'}]->(n) return n.name as name union all match (:ENTITY{name:'Women's fifth consecutive title'})-[:Relationship{name:'Classification'}]->(m) return m.name as name\"\n                                    ^"}, {"query": "What are the labels of the works that you and your good child have in the same production area? Please list them by the number of labels in the list from small to large.", "cypher": "match (n:ENTITY{name:'You're a good boy.'})-[:Relationship{name:'Production areas'}]->(:ENTITY)<-[:Relationship{name:'Production areas'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c", "error": "Invalid input 're': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 35 (offset: 34))\n\"PROFILE match (n:ENTITY{name:'You're a good boy.'})-[:Relationship{name:'Production areas'}]->(:ENTITY)<-[:Relationship{name:'Production areas'}]-(m:ENTITY),\"\n                                   ^"}, {"query": "Who is the original singer of the song \"Swimming Day and Night\"?", "cypher": "match (:ENTITY{name:'Fish swimming day and night[Zhang Huizhong is singing the song]'})-[:Relationship{name:'The song was originally sung'}]->(n) return n.name as name union all match (:ENTITY{name:'Fish swimming day and night[Zhang Huizhong is singing the song]'})-[:Relationship{name:'Time of release'}]->(m) return m.name as name"}, {"query": "How about finding three Chinese people with jobs?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(m)-[:Relationship{name:'Professional life'}]->(x) return distinct m.name limit 3"}, {"query": "Do you have any female models? List five for me.", "cypher": "match (:ENTITY{name:'The woman'})<-[:Relationship{name:'Gender and race'}]- (mn) -[:Relationship{name:'Professional life'}]->(n:ENTITY{name:'The model'}) return mn.name limit 5"}, {"query": "Do you know what department he belongs to in immunotoxicology?", "cypher": "match (:ENTITY{name:'Immunotoxicology'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Attributes'}]->(n) return distinct n.name"}, {"query": "The Chinese government has been trying to find out if the four main ethnic groups in the country are Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese, Chinese,", "cypher": "match (:ENTITY{name:'The King of the Sea Cypress'})--(m) with m order by m.name where m.name <> 'Chinese' return distinct m.name limit 4"}, {"query": "Can you tell me the information about the four levels of relationship related to the Ningsu Temple in Zhanghu Mountain?", "cypher": "match (n:ENTITY{name:'The Ningushu Temple'})-[*]->(x) where x.name<>'The mountain of Zhanghu' return distinct x.name limit 5"}, {"query": "Do you know what kind of relationships are involved in the three levels of Chongqing Municipal Transportation Commission?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Chongqing city transportation board'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I need all the information about the lawyer of the gift of Chiang Mai?", "cypher": "match (n:ENTITY{name:'The lawyer'})-[:Relationship*]->(x) where x.name<>'The Circle of Knowledge' return distinct x.name"}, {"query": "Please give me the full information about the calligraphy classic of the famous calligrapher.", "cypher": "match (n:ENTITY{name:'The calligraphy of the legendary classical'})-[:Relationship*]->(x) where x.name<>'Calligraphy' return distinct x.name"}, {"query": "Can you share some of Alejandro Alcondez's information with me?", "cypher": "match (n:ENTITY{name:'Alejandro Alcondez'})--(q) return q.name skip 4"}, {"query": "Can you recommend books similar to the Finance Afternoon Tea?", "cypher": "match (:ENTITY{name:'Afternoon Tea'})<-[:Relationship{name:'The book of the fox'}]- (q) return q.name"}, {"query": "Are there other names for the Shanghai Lake District in Guangzhou, China? List 10 of them.", "cypher": "match (n:ENTITY{name:'The Carnival District'})<-[:Relationship{name:'Urban areas'}]-(x)-[:Relationship{name:'Other names'}]->(h) where h.name <> 'The lake in Shanghai' return distinct h.name limit 10"}, {"query": "The Type 056 frigate in service in our country is based on what type of ship?", "cypher": "match(:ENTITY{name:'056Type of frigate'})-[:Relationship{name:'The former'}]-> (h) return h.name"}, {"query": "The 28th year of Qing Zhongqing in which year is it?", "cypher": "match (:ENTITY{name:'The 28th year of Qing Zhongshan'})<-[:Relationship{name:'The year'}]- (x) return distinct x.name"}, {"query": "Can you recommend me five Chinese-language novels that are available online?", "cypher": "match (:ENTITY{name:'Starting with the Chinese Web'})<-[:Relationship{name:'Linked site'}]-(m)-[:Relationship{name:'Chinese name'}]->(x) return distinct x.name limit 5"}, {"query": "Can you tell me the name of the relationship within the three levels involved in the Munich Ningenburg Hotel?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Munich Ningenburg Hotel'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What kind of game tags are set for 12 Star Spots online?", "cypher": "match(:ENTITY{name:'12The stars are pointing at each other.'})-[:Relationship{name:'Tags for games'}]-> (q) return q.name"}, {"query": "Please provide a product description of the three-tier relationship between Kempbo Chun-Aki and Jiangsan's wisdom, published by China Friendship Publishing.", "cypher": "match (n:ENTITY{name:'Kempopo Spring and Autumn: Pointing to the Wisdom of the Yangtze'})-[:Relationship*1..3]->(x) where x.name<>'China Friendship Publishing' return distinct x.name"}, {"query": "Five quick ways to get me the 151 hours of business?", "cypher": "match (:ENTITY{name:'151A quick way to keep things running'})-[:Tag{name:'The label'}]-> (p) with p order by p.name return p.name limit 5"}, {"query": "I'm going to write three .NET Essentials: Public Language Runtime Attribute Tags for you.", "cypher": "match (:ENTITY{name:'.NET The first volume of the Essentials: Public language library'})-[:Tag{name:'The label'}]-> (p) with p order by p.name return p.name limit 3"}, {"query": "I have been given 10 books on baby cognitive functions for 0-3 years: Is baby relevant during the holidays?", "cypher": "match (:ENTITY{name:'0-3The multifunctional cognitive book for the year: Baby in the festival'})-[:Tag{name:'The label'}]-> (p) with p order by p.name return p.name limit 10"}, {"query": "What kind of incident do you attribute to the 1.16 Fujian Buying Pot fire?", "cypher": "match(:ENTITY{name:'1.16Fujian building collapses after fire'})-[:Relationship{name:'Type of event'}]-> (x) return x.name"}, {"query": "Can you tell me about the types of relationships within the two layers that Mirzamana is involved in?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Mountain of Mirrors'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Do you know what Liu Xiaobo is doing?", "cypher": "match (:ENTITY{name:'The Man in the Moon'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name"}, {"query": "Which works are dated with the Western tourist trilogy (?? 01)? What are the labels for each? Please list them by the number of labels in the list, from small to large.", "cypher": "match (n:ENTITY{name:'The West is a tourist triangle(01)'})-[:Relationship{name:'Date of creation'}]->(:ENTITY)<-[:Relationship{name:'Date of creation'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "When is the official launch date of Shanghai Creative Power Group Limited's historic and official photo shoot?", "cypher": "match(:ENTITY{name:'Shanghai Creative Power Group Limited'})-[:Relationship{name:'The time of the shooting'}]-> (h) return h.name"}, {"query": "Please list the films and TV productions produced by the Yuzhou City Cultural Media Co., Ltd.", "cypher": "match (:ENTITY{name:'The company is a subsidiary of the Chinese company, China China China Media.'})<-[:Relationship{name:'Production company'}]- (m) return m.name"}, {"query": "I want to know what the relationship is between the five levels of Anhui University?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The school is located in Anhui.'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Do you know the name of the company that owns the 231 unit in Yiwu, Zhejiang Province, located in North Yangtze Street, Liuqing District 10?", "cypher": "match (:ENTITY{name:'Liu Qing 10th District, North Yang Street, Yiwu City, Zhejiang Province23Oh, my God.1Unit'})<-[:Relationship{name:'Location'}]- (p) return distinct p.name"}, {"query": "Can you find the material of the five beautiful and beautiful works of art left by the North Tower?", "cypher": "match (n:ENTITY{name:'The North Tower'})-[:Relationship*]->(x) where x.name<>'Oh, my God.' return distinct x.name limit 5"}, {"query": "What books are priced at $3.10? Can you help me find three?", "cypher": "match (:ENTITY{name:'3.10Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "When was the first earthquake in Sichuan Province, Yunnan?", "cypher": "match (:ENTITY{name:'Junnan, Pyeongchang, and Jeong Valley'})<-[:Relationship{name:'Location'}]- (p) return distinct p.name"}, {"query": "What is the shortest path between the two layers of beef and pork?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Iron plate beef'})-[:Relationship*..2]-(b:ENTITY{name:'Coconut meat'})) return count(p)"}, {"query": "The two layers of the cake are all about relationships, what do you know about them?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The cake from the rose garden'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "The author of the book \"The New Construction of the Model of Talent Development in Public Security Universities in the Information Age\" (PDF) is a police officer.", "cypher": "match (:ENTITY{name:'The new building of the model of talent development in public security universities in the information age'})<-[:Relationship{name:'Representative works'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(q) where q.name <> 'Police officers' return distinct q.name limit 10"}, {"query": "Can you tell me who translated this book, which has 12 volumes (not yet completed)?", "cypher": "match (:ENTITY{name:'12The book (unfinished)'})<-[:Relationship{name:'Number of publications'}]-(x),(x)-[:Relationship{name:'Translated by'}]->(n) return n.name order by n.name limit 10"}, {"query": "The official game of the game is called \"Pagewalk\", which is the game product of which company?", "cypher": "match (:ENTITY{name:'The official guide to the game, page tour'})<-[:Relationship{name:'Games products'}]- (n) return n.name order by n.name"}, {"query": "Please tell me what the alias of Raffani is?", "cypher": "match (:ENTITY{name:'The Raffani'})<-[:Relationship{name:'Other names'}]- (n) return n.name order by n.name limit 1"}, {"query": "The three layers of fantasy fairy tales cover all kinds of relationships.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Fairy of Fantasy'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Where is Deng Xiaoping from and what are his major achievements?", "cypher": "match (:ENTITY{name:'The Chinese[Chinese chess master]'})-[:Relationship{name:'Where I was born'}]->(n) return n.name as name union all match (:ENTITY{name:'The Chinese[Chinese chess master]'})-[:Relationship{name:'Major achievements'}]->(m) return m.name as name"}, {"query": "What are the main ingredients of this dish besides rice and beans, and what are the three main ingredients?", "cypher": "match (n:ENTITY{name:'The whole world is watching.'})-[:Relationship{name:'Main ingredients'}]->(h) where h.name <> 'Oh, my God.' and h.name <> 'The Sections' return distinct h.name limit 3"}, {"query": "Can you tell me what kind of relationships are contained in the two layers of the wooden slope?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Village of Kyugenpo'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Who graduated from Yumen Petroleum School in 1957 and was a drilling technician, engineer, technical director, deputy chief engineer, deputy director, and member of the Hubei Petroleum Association?", "cypher": "match (:ENTITY{name:'1957He graduated from Yumen Petroleum School in 2000, and has served as a drilling technician, engineer, technical department head, deputy chief engineer, deputy director, and Hubei Petroleum Association board member at Jianghan Oilfield.'})<-[:Describe{name:'Describe'}]-(p) return distinct p.name"}, {"query": "So the calculation for this problem requires knowing the molecular weight of 1-cholesterol-3-cholesterol-3-cholesterol, can you provide that?", "cypher": "match(:ENTITY{name:'1-Oxytocin based-3-The Penguin'})-[:Relationship{name:'Molecular weight'}]-> (h) return h.name"}, {"query": "If you can, please list the people by the number of labels they have, from small to large.", "cypher": "match (n:ENTITY{name:'The clouds of the sea'})-[:Relationship{name:'Where I was born'}]->(:ENTITY)<-[:Relationship{name:'Where I was born'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Tell me about the three games without the tag for the full Chinese version of the action game Soul of the Outlander?", "cypher": "match (:ENTITY{name:'The Soul of the Dark Machine full Chinese version'})--(m) with m order by m.name where m.name <> 'Action games' return distinct m.name limit 3"}, {"query": "Can you name the other three Chinese names?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(q)-[:Relationship{name:'Other names'}]->(x) return distinct x.name limit 3"}, {"query": "What is the representative work of the Royal Seal?", "cypher": "match(:ENTITY{name:'The Seal of the Kingdom'})-[:Relationship{name:'Representative works'}]-> (n) return n.name"}, {"query": "Where is your idol, Oudbrecht, in the stadium?", "cypher": "match(:ENTITY{name:'The first is the issue of the death penalty.'})-[:Relationship{name:'Location of the stadium'}]-> (n) return n.name"}, {"query": "The first place in the contest was won by Liu Huiyuan, who was the second?", "cypher": "match (:ENTITY{name:'The Whigs'})<-[:Relationship{name:'The first'}]-(m),(m)-[:Relationship{name:'Second place'}]->(x) return distinct x.name"}, {"query": "What chemical is CAS number 5315-79-7?", "cypher": "match (:ENTITY{name:'5315-79-7'})<-[:Relationship{name:'CASThe number of the log'}]- (x) return x.name"}, {"query": "What is the label of Espresso Italian Coffee Laboratory?", "cypher": "match (:ENTITY{name:'EspressoItalian coffee lab'})-[:Relationship{name:'Publishing house'}]->(n) return n.name as name union all match (:ENTITY{name:'EspressoItalian coffee lab'})-[:Tag{name:'The label'}]->(m) return m.name as name union all match (:ENTITY{name:'EspressoItalian coffee lab'})-[:Tag{name:'The label'}]->(r) return r.name as name"}, {"query": "Do you know what chemical is called 2-Mercapto-3-butanol?", "cypher": "match (:ENTITY{name:'2-Mercapto-3-butanol'})<-[:Relationship{name:'English name'}]- (p) return distinct p.name"}, {"query": "What is the shortest path between the two levels of the sentence \"judge if\" and \"judge if\"?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Judging by the Gap'})-[*..2]-(b:ENTITY{name:'Judging by two'})) return count(p)"}, {"query": "What kind of novel is the Devil's Temple?", "cypher": "match (:ENTITY{name:'The Devil and the Goddess[The online fiction novel created by Handgun]'})-[:Relationship{name:'Type of'}]->(m) return distinct m.name"}, {"query": "The first is the story of the 11/22 Nanjing bombing of a girl who was killed in a traffic accident.", "cypher": "match (:ENTITY{name:'11\u00b722The case of the girl who was killed in Nanjing's sixth district'})--(m) with m order by m.name return m.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 82 (offset: 81))\n\"PROFILE match (:ENTITY{name:'11\u00b722The case of the girl who was killed in Nanjing's sixth district'})--(m) with m order by m.name return m.name\"\n                                                                                  ^"}, {"query": "What is the main ingredient of the clay?", "cypher": "match (:ENTITY{name:'The mud'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The main ingredients'}]->(n) return distinct n.name"}, {"query": "What is a T-reptilian? What are the main areas of distribution?", "cypher": "match (:ENTITY{name:'The Tyrant'})-[:Describe{name:'The label'}]->(n) return n.name as name union all match (:ENTITY{name:'The Tyrant'})-[:Relationship{name:'Distribution areas'}]->(m) return m.name as name"}, {"query": "What is the label of each person? List them by the number of labels for each person, from small to large.", "cypher": "match (n:ENTITY{name:'The Chinese'})-[:Relationship{name:'The times in which'}]->(:ENTITY)<-[:Relationship{name:'The times in which'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Please help me find the shortest path between the K3 5.56-mm light machine gun and the Ares 5.56-mm light machine gun in the 2nd layer.", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Ares5.56mmLight machine gun'})-[*..2]-(b:ENTITY{name:'K3The formula5.56mmLight machine gun'})) return count(p)"}, {"query": "Can you tell me about the three levels of relationship between industry figure Wu Zetian?", "cypher": "match (n:ENTITY{name:'The WhalesZe'})-[*1..3]->(x) where x.name<>'Industry people' return distinct x.name"}, {"query": "What kind of product is the KENWOOD TK-3131?", "cypher": "match (:ENTITY{name:'KENWOOD TK-3131'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Product category'}]->(h) return distinct h.name"}, {"query": "Wikipedia is a blog sharing platform based on the Wikipedia, created on November 4, 2009; please tell me his longest original name.", "cypher": "match (:ENTITY{name:'The encyclopedia bar is a blog sharing platform built on the encyclopedia and created by the Wikimedia Foundation.2009Year of birth11The Moon4The sun.'})<-[:Describe{name:'The label'}]-(q) return  max(q.name)"}, {"query": "So if you look at the problem, is there a molecule of 1-hydroxy-2-hydroxy, do you see that?", "cypher": "match(:ENTITY{name:'1-Oh, my God.-2-Oh, my God.'})-[:Relationship{name:'Molecular weight'}]-> (n) return n.name"}, {"query": "Can you name three professions that Iwapa has?", "cypher": "match (:ENTITY{name:'The Iapa'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 3"}, {"query": "I'm not sure if you can tell me which of Liu's albums are the best.", "cypher": "match (m:ENTITY{name:'The Chinese'})<-[:Relationship{name:'The album singer'}]- (x) return x.name limit 4"}, {"query": "What is the name of a social psychology experiment Milgram proposed?", "cypher": "match (:ENTITY{name:'Milgram'})<-[:Relationship{name:'The Proposer'}]-(m), (m)-[:Relationship{name:'Affiliated disciplines'}]->(n) where n.name='Social psychology' return m.name"}, {"query": "The scientists who won the 2006 Nobel Prize in Medicine for what discovery?", "cypher": "match(:ENTITY{name:'2006Nobel Prize in medicine'})-[:Relationship{name:'I found it.'}]-> (n) return n.name"}, {"query": "I want to know which 5th grade school in Texas has a level 2 label relationship?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'Texas Fifth Secondary School'}) RETURN distinct n.name limit 5"}, {"query": "Is there any other nickname for the person called Bird Shin-Yin besides the other bird? Tell me three of them.", "cypher": "match (:ENTITY{name:'The bird is shy'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Other names'}]->(n) where n.name <> 'The birds' return distinct n.name limit 3"}, {"query": "I want you to tell me which works and online novels are good for having a tier 5 label relationship?", "cypher": "match (n)-[:Tag*5{name:'The label'}]->(p:ENTITY{name:'The Internet Novel'}) RETURN distinct n.name"}, {"query": "What is the shortest relationship between the two-layer Infrared III and VJ-101 fighters?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The IllusionIIIFighter aircraft'})-[:Relationship*..2]-(b:ENTITY{name:'VJ-101The warplane'})) return count(p)"}, {"query": "What is the shortest relationship path between the two layers of the Caterpillar and the Caterpillar?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Caterpillar'})-[:Relationship*..2]-(b:ENTITY{name:'The spotted owl'})) return count(p)"}, {"query": "Tell me about the two armies.", "cypher": "match (:ENTITY{name:'The two armies'})--(m) return  distinct m.name"}, {"query": "What is the shortest path between the Nokia N10 and the Nokia 18002?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Nokia isN10'})-[*..2]-(b:ENTITY{name:'Nokia is1800'})) return count(p)"}, {"query": "What is the content of the article about high school English/academic subjects in the second level of the Mat-Too-Media?", "cypher": "match (n:ENTITY{name:'High school English/The point is clear.'})-[:Relationship*1..2]->(x) where x.name<>'Editor in chief:The Margot' return distinct x.name"}, {"query": "What chemical is CAS number 39968-33-7?", "cypher": "match (q:ENTITY{name:'39968-33-7'})<-[:Relationship{name:'CASThe number of the log'}]- (h) return h.name"}, {"query": "What are the famous sights in Yangon?", "cypher": "match (:ENTITY{name:'The District of Yangtze'})-[:Relationship{name:'Famous places'}]->(m) return distinct m.name"}, {"query": "What kind of jobs did a young man who went to school in his hometown and later went to Mecca for his pilgrimage do?", "cypher": "match (:ENTITY{name:'He was educated in his hometown in his early years and later went to Mecca for his pilgrimage.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 2"}, {"query": "Can you tell me what are the three professions of Didier Afato?", "cypher": "match (:ENTITY{name:'Didadi Afhat'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 3"}, {"query": "Can you tell me about the two companies that were founded in 2017?", "cypher": "match (:ENTITY{name:'2017'})<-[:Relationship{name:'Founded'}]-(n)-[:Relationship{name:'Company name'}]->(q) return distinct q.name limit 2"}, {"query": "Where are the Chinese drug addicts distributed?", "cypher": "match (:ENTITY{name:'The Shining'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Distribution areas'}]->(q) return distinct q.name"}, {"query": "What are the major awards for a great film set in the distant future in Earth orbit?", "cypher": "match (:ENTITY{name:'The story takes place in Earth orbit in the distant future.'})<-[:Describe{name:'Describe'}]-(n)-[:Relationship{name:'Main awards'}]->(m) return distinct m.name"}, {"query": "Do you know what chemical is numbered 212-377-0?", "cypher": "match (:ENTITY{name:'212-377-0'})<-[:Relationship{name:'EINECS'}]- (q) return distinct q.name"}, {"query": "Find out who directed the six animated films.", "cypher": "match (:ENTITY{name:'Animated works'})<-[:Relationship*]-(m), (m)-[:Relationship{name:'Director'}]->(n) return m.name,n.name limit 6"}, {"query": "Do you know what other labels Choi Min's baby has besides the movie?", "cypher": "match (:ENTITY{name:'The little onebaby'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'Film' return p.name limit 3"}, {"query": "What are the descriptions of Zhang Shizhong? What is the label of Zhang Shizhong?", "cypher": "match (:ENTITY{name:'Zhang Shicheng'})-[:Describe{name:'Describe'}]->(n) return n.name as name union all match (:ENTITY{name:'Zhang Shicheng'})-[:Tag{name:'The label'}]->(m) return m.name as name union all match (:ENTITY{name:'Zhang Shicheng'})-[:Tag{name:'The label'}]->(r) return r.name as name"}, {"query": "Can you tell me about the relationship between the two schools in the Baoding area?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Baowen School'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "What is kneebar?", "cypher": "match (:ENTITY{name:'kneebar'})<--(n) return n.name"}, {"query": "Can you name the three alumni of the Kharsan Senior Secondary School in Zhejiang Province?", "cypher": "match (:ENTITY{name:'The school is located in the city of Zhejiang.Zhejiang province Jiashan high schoolIt is the first secondary school in the district and the first level of the Zhejiang Province.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Famous alumni'}]->(n) return distinct n.name limit 3"}, {"query": "I wonder what kind of events the Chinese president, the IOC president and others are attending?", "cypher": "match (:ENTITY{name:'The President of China, the President of the International Olympic Committee, etc.'})<-[:Relationship{name:'People in attendance'}]- (m) return distinct m.name"}, {"query": "Help me find an animation by Shigeru Miyamoto", "cypher": "match (:ENTITY{name:'The stone is also standing.'})<-[:Relationship{name:'Director'}]-(m), (m)-[:Tag{name:'The label'}]->(n) where n.name='Animated' return distinct m.name limit 1"}, {"query": "What is the shortest relationship path between alpine algae and algae of the third layer?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Alpine algae'})-[*..3]-(b:ENTITY{name:'The Spirit of the Algae'})) return count(p)"}, {"query": "Which games are the latest version of 1.0.1? Tell me 15?", "cypher": "match (:ENTITY{name:'1.0.1'})<-[:Relationship{name:'The latest version'}]- (h) return h.name limit 15"}, {"query": "What are the types of relationships within the two levels of secondary education that you know about?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Secondary education'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "The characters are identical to the era in which they were played, and what are their labels?", "cypher": "match (n:ENTITY{name:'Playing games'})-[:Relationship{name:'The times in which'}]->(:ENTITY)<-[:Relationship{name:'The times in which'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Did you know that the Tokyo Creative Agency also publishes yoga?", "cypher": "match (:ENTITY{name:'The Tokyo Foundation'})<--(n) return n.name"}, {"query": "How many Korean artists are represented?", "cypher": "match (:ENTITY{name:'North Koreans'})<-[:Relationship{name:'Ethnicity'}]-(x)-[:Relationship{name:'Representative works'}]->(h) return distinct h.name limit 3"}, {"query": "What do you know about the Golden Eye of 007?", "cypher": "match (:ENTITY{name:'007The Golden Eyes'})--(q) with q order by q.name where q.name <> 'Film work' return q.name limit 10"}, {"query": "Did you mention the Chinese nickname for Q Hot Liq?", "cypher": "match(:ENTITY{name:'QThe sub-type of helix'})-[:Relationship{name:'Chinese surname'}]-> (m) return m.name"}, {"query": "Is there any information about Randal Kleiser?", "cypher": "match (:ENTITY{name:'Randal Kleiser'})--(n) return n.name skip 2"}, {"query": "The 2012 China Commercial Real Estate Expo in Suzhou is a major exhibition of the industry.", "cypher": "match(:ENTITY{name:'2012China[South Korea]Commercial real estate exhibition'})-[:Relationship{name:'Industry'}]-> (p) return p.name"}, {"query": "Which works and mechanical foundations and construction machinery are priced the same, and what are their labels?", "cypher": "match (n:ENTITY{name:'Mechanical foundation and construction machinery'})-[:Relationship{name:'Pricing'}]->(:ENTITY)<-[:Relationship{name:'Pricing'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Please provide the CAS number of 2-hydroxybenzyl acetate, I would like to find some information about this compound.", "cypher": "match(:ENTITY{name:'2-The Penguin'})-[:Relationship{name:'CASThe number of the log'}]-> (m) return m.name"}, {"query": "Do you want to know the link between the 8 rural water technology terms and their 5 layers?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Rural water technology terminology'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 8"}, {"query": "Please help me find the shortest path between the University of Nanyang's Faculty of Science and Technology and the Communist University of Nanyang's Faculty of Law.", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The University of the Philippines'})-[*..2]-(b:ENTITY{name:'The Communist College of Nanchang University'})) return count(p)"}, {"query": "The artist was born in 1965 and his work is representative of the country's cultural heritage.", "cypher": "match (:ENTITY{name:'1965Year of birth'})<-[:Relationship{name:'Date of birth'}]-(q)-[:Relationship{name:'Representative works'}]->(p) return p.name skip 3 limit 5"}, {"query": "The original Shandong Yan Nan, born in Ningnan, Heilongjiang on December 1, 1928, has a representative work of his own.", "cypher": "match (:ENTITY{name:'The video was posted on the official website of the Shandong Province of China.1928Year of birth12The Moon1He was born in Ningyan, Helorong.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Representative works'}]->(p) return distinct p.name"}, {"query": "The FISHER locator is very useful, which company is it from?", "cypher": "match(:ENTITY{name:'FISHERLocator'})-[:Relationship{name:'Companies'}]-> (q) return q.name"}, {"query": "Can you show me where to play for $50, please?", "cypher": "match (:ENTITY{name:'50.00Japanese yen'})<-[:Relationship{name:'The price of tickets'}]-(p)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "What are the five cultural terms that have a link to the fifth level of labels?", "cypher": "match (n)-[:Tag*5{name:'The label'}]->(p:ENTITY{name:'Cultural terms'}) RETURN distinct n.name limit 5"}, {"query": "Can you recommend some of the famous sights in the scenic area of Yuntai Mountain in J\u014dky\u014d City?", "cypher": "match (:ENTITY{name:'The city of Jocho is a popular tourist destination.'})-[:Relationship{name:'Famous places'}]-> (m) return m.name skip 3"}, {"query": "Can you recommend 10 novels for iOS?", "cypher": "match (:ENTITY{name:'IOS'})<-[:Relationship{name:'Software platform'}]- (m) return m.name limit 10"}, {"query": "What are the five largest freshwater lakes in China?", "cypher": "match (:ENTITY{name:'Five of the Great Freshwater Lakes of China'})-[:Tag{name:'The label'}]-> (m) return distinct m.name"}, {"query": "Can you list three things about the 9th of July concert?", "cypher": "match (:ENTITY{name:'The Nine-Tailed Goddess Concert'})--(h) return  distinct h.name limit 3"}, {"query": "Can you list the types of relationships that Beijing Bonshu Biotechnology Co. is involved in in the two levels?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The company is based in Beijing, China.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "The problem of typing ten tags for .NET exploration?", "cypher": "match (:ENTITY{name:'.NETThe Secret'})-[:Tag{name:'The label'}]-> (q) with q order by q.name return q.name limit 10"}, {"query": "In which publishers are Romelu Lukaku's books published?", "cypher": "match (:ENTITY{name:'Romy Rich'})<-[:Relationship{name:'Written by'}]-(n)-[:Relationship{name:'Publishing house'}]->(q) return distinct q.name limit 2"}, {"query": "The 2004 Asian Cup in China was so amazing, do you know which country is hosting it?", "cypher": "match(:ENTITY{name:'2004China Asian Cup'})-[:Relationship{name:'Host country'}]-> (p) return p.name"}, {"query": "I would like to know what the relationship is between the three levels of the Upper Secondary School in Saguenay, Jiangsu Province?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Shagong Senior Secondary School, Jianlu County'}) UNWIND relationships(path) AS rel return rel.name limit 3"}, {"query": "What is the name of the dish that is served in the restaurant?", "cypher": "match(:ENTITY{name:'The drunk'})-[:Tag{name:'The label'}]-> (n) return n.name"}, {"query": "What is wild blue? Do you know its other name?", "cypher": "match (:ENTITY{name:'The wild blue'})--(h) return h.name order by h.name"}, {"query": "Do you know how many people live in Yangon?", "cypher": "match(:ENTITY{name:'The town of Xiamen'})-[:Relationship{name:'Population'}]-> (n) return n.name"}, {"query": "Can you help me find the CAS registration number for the platelet?", "cypher": "match(:ENTITY{name:'The blood thinner'})-[:Relationship{name:'CASThe number of the log'}]-> (n) return n.name"}, {"query": "Tell me when the London 2012 Olympic medal list will be released?", "cypher": "match(:ENTITY{name:'2012London Olympics medal table'})-[:Relationship{name:'Release date'}]-> (n) return n.name"}, {"query": "Can you provide two non-repeating Chinese names for the Chinese fox?", "cypher": "match (:ENTITY{name:'The Fox'})-[:Relationship{name:'Chinese name'}]-> (x) with x order by x.name return distinct x.name limit 2"}, {"query": "Can you list the five types of relationships that Fujiwara is involved in?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Fuqua as a child'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Do you know what chemical has the CAS number 40228-93-1?", "cypher": "match (:ENTITY{name:'40228-93-1'})<-[:Relationship{name:'CASNo'}]- (x) return distinct x.name"}, {"query": "I want to go to the Shanghai International Electronic Chemicals Expo 2011, but I don't know the address, you know?", "cypher": "match(:ENTITY{name:'2011Shanghai International Electronic Chemicals Fair is held in the city of Shanghai.'})-[:Relationship{name:'Address of exhibition'}]-> (q) return q.name"}, {"query": "The top five Chinese names for Buddhist women after 80 now tell me?", "cypher": "match (:ENTITY{name:'80The Buddha of the Afterlife'})-[:Relationship{name:'Chinese name'}]-> (m) with m order by m.name return m.name limit 5"}, {"query": "In the historical context of the events of 1949 in Taipei, what specific period did you describe?", "cypher": "match(:ENTITY{name:'1949The annual Taipei wheel event'})-[:Relationship{name:'The historical background'}]-> (x) return x.name"}, {"query": "Can you print out 10 tags for year 14 edition 5/3 sync high school physics option 3-3 RJ?", "cypher": "match (:ENTITY{name:'(2014)5\u00b73The synchronization\u00b7High school physics\u00b7Selected3-3\u00b7RJ'})-[:Tag{name:'The label'}]-> (n) with n order by n.name return n.name limit 10"}, {"query": "Tell me about the main achievements of the three Chinese people.", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(x)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name limit 3"}, {"query": "Can you name the three main uses of the gold bullion?", "cypher": "match (x:ENTITY{name:'The goldfish-), English namejievinThe people of the province of Henan are also in the same situation.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(m) return distinct m.name limit 3"}, {"query": "What is the range of the 20MnMo alloy steel that we often talk about?", "cypher": "match(:ENTITY{name:'20MnMoAlloy steel'})-[:Relationship{name:'Oh, my God.Si'}]-> (m) return m.name"}, {"query": "What is the genre of painting that is represented by the double-panel painting of Yandex Town?", "cypher": "match (:ENTITY{name:'The double-span painting of the town of Yantai'})-[:Relationship{name:'Type of'}]->(n) return n.name as name union all match (:ENTITY{name:'The double-span painting of the town of Yantai'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "What do we use to operate in 3D flight training?", "cypher": "match(:ENTITY{name:'3DFighter training'})-[:Relationship{name:'Operating'}]-> (m) return m.name"}, {"query": "How old are the people on the 2012 Hu Jintao Rich List?", "cypher": "match(:ENTITY{name:'2012The list of the richest people in China'})-[:Relationship{name:'Listed age'}]-> (x) return x.name"}, {"query": "Have you figured out the time of the 2012 China International Green Innovation Technology Expo?", "cypher": "match(:ENTITY{name:'2012&#39;China International Green Innovation and Technology Fair is held in Beijing.'})-[:Relationship{name:'Show time'}]-> (h) return h.name"}, {"query": "What are the names of people born in Xian'an City, Xinjiang Province?", "cypher": "match (:ENTITY{name:'The city of Xian, Xinjiang'})<-[:Relationship{name:'Where I was born'}]-(h)-[:Relationship{name:'Representative works'}]->(q) return distinct q.name"}, {"query": "What are the main achievements of Hero Entertainment? Can you tell me three?", "cypher": "match (n:ENTITY{name:'Heroes interact with each other'})<-[:Relationship{name:'Companies'}]-(m),(m)-[:Relationship{name:'Major achievements'}]->(p) return distinct p.name limit 3"}, {"query": "Please tell me which characters are voiced in Mandarin.", "cypher": "match (:ENTITY{name:'The Chinese language is Mandarin.'})<-[:Relationship{name:'Sound'}]- (q) return q.name skip 3"}, {"query": "The molecular weight of 1-hydroxybenzoic acid is not provided in the data, please help calculate it.", "cypher": "match(:ENTITY{name:'1-Nitric acid'})-[:Relationship{name:'Molecular weight'}]-> (x) return x.name"}, {"query": "The molecular formula of the aneurysm is too difficult, can you help me check it?", "cypher": "match(:ENTITY{name:'The heartbeat'})-[:Relationship{name:'Molecular'}]-> (p) return p.name"}, {"query": "He was a contestant on the fifth season of the Chinese talent show, which aired on Eastern Star TV.", "cypher": "match (:ENTITY{name:'Secondary School in Sichuan'})<-[:Relationship{name:'Graduated'}]-(m),(m)-[:Relationship{name:'Major achievements'}]->(n) where n.name <> 'The contestant of the fifth season of the Chinese talent show, Oriental Guards, was also the winner of the contest.' return distinct n.name limit 3"}, {"query": "Can you find the company type of Rikooo Electric Tools Manufacturing Ltd. in the company directory?", "cypher": "match(:ENTITY{name:'Power tools manufacturing company, Ltd.'})-[:Relationship{name:'Type of company'}]-> (h) return h.name"}, {"query": "What are the two main ingredients of Guo's spice besides bananas and cucumbers?", "cypher": "match (n:ENTITY{name:'The face of Mr. Guo'})-[:Relationship{name:'Main ingredients'}]->(h) with h order by h.name where h.name <> 'Banana' and h.name <> 'Cucumbers' return h.name limit 2"}, {"query": "The question is, what is the role of the Chinese government in the development of the country?", "cypher": "match (n:ENTITY{name:'The title of the post is \"The Monkey Who Stood Up for China\".'})-[:Relationship*1..2]->(x) where x.name<>'The world is full of it.' return distinct x.name"}, {"query": "I need all the information about the PNT500U3B in the Baffnet.", "cypher": "match (n:ENTITY{name:'French networkPNT500U3B'})--(x) return x.name"}, {"query": "I'm going to be a little bit more specific about the relationship types that are involved in the 4th layer of the hot summer vacation.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Hot summer vacation'}) UNWIND relationships(path) AS rel return distinct rel.name limit 4"}, {"query": "Do you know what the name of the relationship at the two levels that this guy Kim Yusei is involved in is?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Kim Yusei'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What are the types of relationships that are in the three layers of the Yellow Brick?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Yellow-winged Squirrel'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "What time period is the 2012 Brazilian Tire Show just over?", "cypher": "match(:ENTITY{name:'2012Brazilian Tire Show'})-[:Relationship{name:'The session'}]-> (p) return p.name"}, {"query": "Can you tell me what kind of relationships are involved in the total mobilization of the sports cars on the second floor?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The whole sports car mobilisation'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Can you name 12 things or 12 people that happened in the Black River?", "cypher": "match (:ENTITY{name:'The Yellow River'})<-[:Relationship{name:'Location'}]- (h) return h.name limit 12"}, {"query": "What chemical is C7H16N2?", "cypher": "match (:ENTITY{name:'C7H16N2'})<-[:Relationship{name:'Chemical formula'}]- (q) return distinct q.name"}, {"query": "Can you tell me about the five scenic spots?", "cypher": "match (:ENTITY{name:'Landscape attractions'})<--(n) return n.name limit 5"}, {"query": "Help me find five plants that belong to the tubular flowering plant family.", "cypher": "match (:ENTITY{name:'The tubular flowers'}) <- [:Relationship{name:'The Eye'}]-(m), (m) - [:Relationship{name:'The Outline'}]->(n) where n.name='Twin-leafed plant The Outline' return m.name limit 5"}, {"query": "Can you tell me about the four-tier relationship between the Congolese footballer Mouithys Lys and the Congolese football player Mouithys Lys?", "cypher": "match (n:ENTITY{name:'Mouithys Lys'})-[*1..4]->(x) where x.name<>'Mouithys Lys,The Congolese footballer.' return distinct x.name"}, {"query": "Can you list 7 books that are printed in 1 printing?", "cypher": "match (:ENTITY{name:'1'})<-[:Relationship{name:'Printed'}]- (h) return h.name limit 7"}, {"query": "I was wondering which APP and plugin animation are the 5th layer of the tag relationship?", "cypher": "match (n)<-[:Tag*5{name:'The label'}]-(p:ENTITY{name:'The Budding Animation'}) RETURN distinct n.name"}, {"query": "What is the main achievement of Jin-kyung-ho, Shin-kyung-gu, and the author of the book?", "cypher": "match (h:ENTITY{name:'Jinxiu thousand, Jingmin Gu, finally commander and knowledge'})<-[:Relationship{name:'Major achievements'}]-(x)-[:Relationship{name:'Representative works'}]->(m) return distinct m.name"}, {"query": "Tell me all about the story of the girl who didn't ask for a virgin in the 1-4 relationship?", "cypher": "match (n:ENTITY{name:'The woman who told the story'})-[*1..4]->(x) where x.name<>'The mother-in-law did not ask where she came from.'return distinct x.name"}, {"query": "See the Chinese bookstore publisher's ink overview: Wang Haiyuan writes about his life in a selection of works with no more than three layers of relationships.", "cypher": "match (n:ENTITY{name:'The Graphite Overview: Selected works by Wang Hai-hsiang'})-[:Relationship*1..3]->(x) where x.name<>'Publishers of the Chinese Bookstore' return distinct x.name"}, {"query": "When the total recommendation reached 303528, what was the highest total click?", "cypher": "match (:ENTITY{name:'303528'})<-[:Relationship{name:'Recommended'}]-(x)-[:Relationship{name:'Total clicks'}]->(p) return  max(x.name)"}, {"query": "Do you know which 5 are Android software?", "cypher": "match (:ENTITY{name:'Android'})<--(n) return n.name limit 5"}, {"query": "Help me find the five limited liability companies based in the corridor.", "cypher": "match (:ENTITY{name:'The corridor'})<-[:Relationship{name:'Location'}]- (mn) -[:Relationship{name:'The nature of the company'}]->(n:ENTITY{name:'Limited liability company'}) return mn.name limit 10"}, {"query": "What is the shortest distance between the Wu family house and Chen Xiaoshan on the second floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The House of Liu'})-[*..2]-(b:ENTITY{name:'Chen Yixing'})) return count(p)"}, {"query": "So, what is the source of the profits of sites like 0472 Returns Network?", "cypher": "match(:ENTITY{name:'0472The Net'})-[:Relationship{name:'Sources of profit'}]-> (x) return x.name"}, {"query": "I was at the 2010 Asia International Logistics Technology and Transportation Systems Expo, which was particularly big, can you give me a specific area of the exhibition?", "cypher": "match(:ENTITY{name:'2010The Asia International Logistics Technology and Transportation Systems Exhibition is being held in the capital of the country.'})-[:Relationship{name:'Exhibition area'}]-> (n) return n.name"}, {"query": "What are the schools of the type of schools in Meiji City and Meiji County Amateur Colleges, and what are their respective labels? Please list them in order of number of labels.", "cypher": "match (n:ENTITY{name:'Amateur school in Mei County, Mei City'})-[:Relationship{name:'Type of school'}]->(:ENTITY)<-[:Relationship{name:'Type of school'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What chemical is the cas number 643-12-9?", "cypher": "match (:ENTITY{name:'643-12-9'})<-[:Relationship{name:'CASThe number'}]- (m) return m.name"}, {"query": "In the meantime, I would like to ask you to introduce me to the five works in the three-layer relationship of the book Autumn and Night in the book of Yanda.", "cypher": "match (n:ENTITY{name:'The autumn equinox is three'})-[*]->(x) where x.name<>'Japanese yen' return distinct x.name limit 5"}, {"query": "Please give me a product introduction to the eighth round of neuropathology related to the three-tier relationship in the People's Health Press.", "cypher": "match (n:ENTITY{name:'Eighth round of neurology'})-[*1..3]->(x) where x.name<>'Public health' return distinct x.name"}, {"query": "Can you please list the top 10 job descriptions of this man?", "cypher": "match (:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]-(p)-[:Relationship{name:'Professional life'}]->(x) return x.name skip 1 limit 10"}, {"query": "Send me the address of the Snow King Company?", "cypher": "match (p:ENTITY{name:'The Snowman Company'}) return p.location"}, {"query": "The most important achievements of the Kingdom of God are:", "cypher": "match (:ENTITY{name:'The Kingdom of the Ants'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name"}, {"query": "What books and the literary genre of the Queen of the Super-Metro are the same, and what labels do they each have? Find them in order of their number of labels for me.", "cypher": "match (n:ENTITY{name:'Queen of the City of Odds'})-[:Relationship{name:'Literary genre'}]->(:ENTITY)<-[:Relationship{name:'Literary genre'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The first thing I did was to find out about Tang's work and send her a profile of the work within the three-tier relationship with Liu Wenzhou.", "cypher": "match (n:ENTITY{name:'Send to Wenzhou'})-[:Relationship*1..3]->(x) where x.name<>'Don, please.' return distinct x.name"}, {"query": "Can you find me two reptiles of the order Pygmy and describe them?", "cypher": "match (:ENTITY{name:'The American shrew'})<-[:Relationship*]-(m), (m)-[:Describe{name:'Describe'}]->(n) return  distinct m.name,n.name limit 2"}, {"query": "What is the shortest path between the first drop of blood 2 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood 3 times the first drop of blood?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The first drop of blood2'})-[*..2]-(b:ENTITY{name:'The first drop of blood3'})) return count(p)"}, {"query": "Can you help me find 20 works of Xu Shimom?", "cypher": "match (:ENTITY{name:'Xu Zhiming'})<-[:Relationship{name:'Written by'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Literary works'}) return mn.name limit 20"}, {"query": "What is the characteristic message of the 0.618 law?", "cypher": "match (x:ENTITY{name:'0.618Law'})--(h) with h order by h.name return h.name limit 1"}, {"query": "Can you tell me about the relationship between the three levels of the palace and the house of Liu?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The House of the Willow'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "The people of Ziya are doing a lot of work?", "cypher": "match (:ENTITY{name:'The people of Ziya'})<-[:Relationship{name:'Chinese name'}]-(n),(n)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 1"}, {"query": "Please list me 10 jobs that are not harmful to you.", "cypher": "match (x:ENTITY{name:'The chicken is fine.'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Professional life'}]->(p) return p.name order by p.name limit 10"}, {"query": "The 2011 Vitas Beijing Concert has already started preparations, when is the concert scheduled?", "cypher": "match(x:ENTITY{name:'2011Vitas Beijing concert is held in Beijing'})-[:Relationship{name:'Show time'}]-> (h) return h.name"}, {"query": "Do you want to know about the 3 layers of the relationship between free software and 3D?", "cypher": "match (n:ENTITY{name:'The height of anger3D'})-[:Relationship*1..3]->(x) where x.name<>'Free of charge' return distinct x.name"}, {"query": "Please check out the four-tier relationship of political figure Hu Yuefi.", "cypher": "match (n:ENTITY{name:'The Hutu'})-[*1..4]->(x) where x.name<>'Political figures' return distinct x.name"}, {"query": "In which year was the Zhengzhou Academy founded?", "cypher": "match (:ENTITY{name:'The University of Pyeongchang'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'When did it start?'}]->(n) return distinct n.name"}, {"query": "What is the shortest path between the lighthouse and the second floor of the Jade Tower?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The lighthouse'})-[:Relationship*..2]-(b:ENTITY{name:'The Yellow Tower'})) return count(p)"}, {"query": "Do you know what novels are listed on the search engine for reading books?", "cypher": "match (:ENTITY{name:'Read on the search engine'})<-[:Relationship{name:'Connected'}]- (n) return n.name"}, {"query": "Can you recommend two novels that were updated on 2013-07-01?", "cypher": "match (:ENTITY{name:'2013-07-01'})<-[:Relationship{name:'When to update'}]- (x) return x.name limit 2"}, {"query": "The 108 minutes of PG movie is?", "cypher": "match (p:ENTITY{name:'PGGrade'})<--(x)-->(q:ENTITY{name:'108One minute'}) return x.name"}, {"query": "Can you recommend a game for PC.PSP?", "cypher": "match (:ENTITY{name:'PC.PSP'})<-[:Relationship{name:'The game platform'}]- (p) return p.name"}, {"query": "Can you tell me which of the three works is representative of the famous \"Gentleman of the Jungle\"?", "cypher": "match (:ENTITY{name:'The Great Man is a fool'})<-[:Relationship{name:'Representative works'}]- (x) return x.name order by x.name limit 3"}, {"query": "Please tell me what dialect is spoken in the village of Sheng? What is the geographical location of this village and what are its climatic conditions?", "cypher": "match (:ENTITY{name:'The village of Sheshun'})-[:Relationship{name:'The dialect'}]->(n) return n.name as name union all match (:ENTITY{name:'The village of Sheshun'})-[:Relationship{name:'Geographical location'}]->(m) return m.name as name union all match (:ENTITY{name:'The village of Sheshun'})-[:Relationship{name:'Climate and weather'}]->(r) return r.name as name"}, {"query": "The two layers of relationships that are involved in the Black Forest are:", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Black forests covered with basins of grass'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "The MDL of which chemical is MFCD00001736?", "cypher": "match (:ENTITY{name:'MFCD00001736'})<-[:Relationship{name:'MDL'}]- (x) return distinct x.name"}, {"query": "Do you know Huang Xuejun? What other information besides the founder of the Twin Peaks, please find the other 7 information in layer 2", "cypher": "match (:ENTITY{name:'The Hungarian'})-[:Relationship*1..2]->(p) where p.name <> 'The founder of the Twin Towers' return  p.name limit 7"}, {"query": "Can you tell us about the top five buildings in the Yokota range?", "cypher": "match (:ENTITY{name:'The Yokota building'})--(h) return h.name order by h.name limit 5"}, {"query": "I'm sorry, but I'm not sure what the name of the novel is.", "cypher": "match (:ENTITY{name:'2012-04-12 08:57:39'})<-[:Relationship{name:'When to update'}]- (m) return m.name"}, {"query": "So let's say that we have a molecule with the formula C30H62O, what is the melting point?", "cypher": "match (:ENTITY{name:'C30H62O'})<-[:Relationship*]-(m),(m)-[:Relationship{name:'The point of no return'}]->(n) return distinct m.name,n.name limit 1"}, {"query": "What are the five main elements of the study of the Chinese language curriculum and teaching model?", "cypher": "match (n:ENTITY{name:'Study of Chinese curriculum and teaching model abroad'})-[:Relationship*]->(x) where x.name<>'Li-Qun' return distinct x.name limit 5"}, {"query": "What are the lessons in the Primary School?", "cypher": "match (:ENTITY{name:'Primary School'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Schooling'}]->(n) return distinct n.name"}, {"query": "You have a message for me, a message for the world.", "cypher": "match (:ENTITY{name:'The North American'})--(x) return  distinct x.name limit 1"}, {"query": "What is the dish of the chicken broth?", "cypher": "match (:ENTITY{name:'The cooking of coconut'})-[:Relationship{name:'Classified'}]->(m) return m.name"}, {"query": "Can you recommend 20 books for one printing?", "cypher": "match (:ENTITY{name:'1'})<-[:Relationship{name:'Published'}]- (m) return m.name limit 20"}, {"query": "Please describe one of Shu Xiang's major achievements.", "cypher": "match (m:ENTITY{name:'Shushian'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Major achievements'}]->(h) return h.name order by h.name limit 1"}, {"query": "Help me find a tank that is high-speed, low-ballistic, and armor-piercing.", "cypher": "match (:ENTITY{name:'High initial speed, low ballistic range, strong armor-bearing ability, etc.'})<-[:Relationship{name:'Features'}]-(m) return distinct m.name"}, {"query": "Can you send me the number of the company that was founded in 2006?", "cypher": "match (p:ENTITY{time:'2006'}) return count(p)"}, {"query": "What is the work of someone born in December 1940?", "cypher": "match (:ENTITY{name:'1940Year of birth12Moon born'})<-[:Relationship{name:'Date of birth'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(q) return distinct q.name limit 1"}, {"query": "The story of the farmer and his sons is interesting, I wonder what kind of literature it is?", "cypher": "match(:ENTITY{name:'The Farmer and His Sons'})-[:Relationship{name:'Literary genre'}]-> (p) return p.name"}, {"query": "What nationality is Ro Liang, a member of the party group of the Xinjing County Civil Affairs Commission, and the deputy director of the department?", "cypher": "match (:ENTITY{name:'Ro Lian, a member of the party group of the Civil Policy Bureau of Xinjiang County, Sichuan Province, deputy director.'})<-[:Describe{name:'Describe'}]-(n),(n)-[:Relationship{name:'Ethnicity'}]->(m) return distinct n.name"}, {"query": "Please give me 5 publications priced at 10 USD", "cypher": "match (:ENTITY{name:'10Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 5"}, {"query": "What is the shortest path between the two layers of the mountain and the Chong An Mountain?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The mountain'})-[*..2]-(b:ENTITY{name:'Chow Ahn'})) return count(p)"}, {"query": "What are the entertainment works of Sakebun Shin?", "cypher": "match (:ENTITY{name:'The Japanese'})<-[:Relationship{name:'Written by'}]-(m), (m)-[:Tag{name:'The label'}]->(n:ENTITY{name:'The entertainment'})  return m.name,n.name"}, {"query": "What are the main ingredients and ingredients of the poppy?", "cypher": "match (:ENTITY{name:'The Blossoming Blossom'})-[:Relationship{name:'Main ingredients'}]->(n) return n.name as name union all match (:ENTITY{name:'The Blossoming Blossom'})-[:Relationship{name:'Supplements'}]->(m) return m.name as name"}, {"query": "Do you know how many versions of the first edition of the book are in the literature?", "cypher": "match (:ENTITY{name:'First edition'})<-[:Relationship{name:'The version'}]- (x) return x.name limit 4"}, {"query": "What are the raw materials in the industrial raw materials, Q195, Q235 etc.?", "cypher": "match (:ENTITY{name:'Industrial raw materials'})<-[:Relationship{name:'Type of'}]-(m), (m)-[:Relationship{name:'Materials'}]->(n) where n.name='Q195The first is theQ235The first is the10#And so on and so forth.' return distinct m.name limit 3"}, {"query": "The company's two-tiered relationship with the practical technology of the Omron PLC for flatbed cabinets?", "cypher": "match (n:ENTITY{name:'The OmronPLCPractical technology'})-[:Relationship*1..2]->(x) where x.name<>'Plain clothes' return distinct x.name"}, {"query": "What is the profession of people born in October 1954?", "cypher": "match (:ENTITY{name:'1954Year of birth10The Moon'})<-[:Relationship{name:'Date of birth'}]-(x)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 1"}, {"query": "I'm not sure if you're familiar with the five levels of relationships that Tite has.", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Tite'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "How about introducing the International Chinese Cultural Exchange Society of Yangzhou Master's University with as many words as possible?", "cypher": "match (:ENTITY{name:'The Chinese Cultural Exchange Society of the University of Changchun'})--(h) return  max(h.name)"}, {"query": "I want to know how many companies will be created in the next 7 years?", "cypher": "match (p:ENTITY{time:'2007'}) return count(p)"}, {"query": "What is the job choice of people born in Yangzhou, Anhui Province?", "cypher": "match (:ENTITY{name:'The city of Yangzhou, Anhui Province'})<-[:Relationship{name:'Where I was born'}]-(p)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name limit 5"}, {"query": "I feel like this song is really good to listen to at 20 years old, do you know what genre it belongs to?", "cypher": "match(:ENTITY{name:'20Age[The song]'})-[:Relationship{name:'Music style'}]-> (p) return p.name"}, {"query": "Can you tell me all the details about the relationship between the two sides of the dispute and who is the bad guy?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Who is the one who disputes with the wicked?'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What other identity does Wang Shaan Hong have besides his status as a governor?", "cypher": "match (:ENTITY{name:'The King of the Jungle'})<-[:Relationship{name:'Chinese name'}]-(x)-[:Relationship{name:'Professional life'}]->(h) where h.name <> 'The Chief' return distinct h.name limit 1"}, {"query": "Please tell me what are the names of the relationships involved in the three levels of Wang Van Da?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'King of the Van'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Do you know which train leaves at 16:13?", "cypher": "match (:ENTITY{name:'16:13'})<-[:Relationship{name:'Start time'}]- (h) return h.name"}, {"query": "Please tell me what is the relationship between the five gold statues in the six layers?", "cypher": "match path=(n)<-[:Relationship*6]-(p:ENTITY{name:'The Golden Goddess'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "What are the main works of the authors of Capricorn? Can you name three?", "cypher": "match (:ENTITY{name:'The Giant'})<-[:Relationship{name:'The constellations'}]-(x)-[:Relationship{name:'Major works'}]->(n) return distinct n.name limit 3"}, {"query": "Can you give us any other descriptions of Deng's identity besides Han Chinese and the Deputy Editor-in-Chief of Search?", "cypher": "match (n:ENTITY{name:'The wisdom'})-[:Describe{name:'Describe'}]->(h) where h.name <> 'Chinese' and h.name <> 'Deputy editor of the search engine' return distinct h.name limit 2"}, {"query": "Can you tell me what this guy does for a living? Can you tell me the top 10?", "cypher": "match (:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]-(n)-[:Relationship{name:'Professional life'}]->(p) return p.name skip 2 limit 10"}, {"query": "Can you name five of them?", "cypher": "match (:ENTITY{name:'Temperate continental climate'})<--(n) return n.name limit 5"}, {"query": "If you are a graduate of the Royal University of S\u00e3o Paulo, majoring in Radio and Television Mass Media, what is your work?", "cypher": "match (:ENTITY{name:'The Royal University of S\u00e3o Tom\u00e9 and Pr\u00edncipe Major in broadcasting and mass media'})<-[:Relationship{name:'Graduated'}]-(q)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name limit 1"}, {"query": "The number of people who are the same height as Cavichioli Matheus, and what are their labels?", "cypher": "match (n:ENTITY{name:'Cavichioli Matheus'})-[:Relationship{name:'Height'}]->(:ENTITY)<-[:Relationship{name:'Height'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What is the shortest path between the two levels of a high-rise and a single-story building?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The high ground'})-[*..2]-(b:ENTITY{name:'The Monkey'})) return count(p)"}, {"query": "What is the shortest path between the two levels of the village of Hokage and Huanglian Creek?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Chiaki'})-[:Relationship*..2]-(b:ENTITY{name:'Village of Huang Lian Creek'})) return count(p)"}, {"query": "The story of the war against the guerrillas is a story of the war against the guerrillas.", "cypher": "match (:ENTITY{name:'To the paratroopers'})-[:Relationship{name:'Date of birth'}]->(n) return n.name as name union all match (:ENTITY{name:'To the paratroopers'})-[:Relationship{name:'Location'}]->(m) return m.name as name"}, {"query": "The 8th China International Metal Industry Expo 2011 is being held in Beijing, I don't know when the exhibition will be, can you tell me?", "cypher": "match(:ENTITY{name:'2011The 8th China[The Chinese]The International Metal Industry Fair is held in the city of'})-[:Relationship{name:'Show time'}]-> (p) return p.name"}, {"query": "You see what temperature range this 1000 degree furnace can handle?", "cypher": "match(:ENTITY{name:'1000High-temperature furnace'})-[:Relationship{name:'Temperature range'}]-> (h) return h.name"}, {"query": "The first thing I did was to find out what the collection is called that was made for the benefit of the general anime community.", "cypher": "match (:ENTITY{name:'The anime is a popular anime series.'})<-[:Relationship{name:'Purpose'}]- (x) return x.name"}, {"query": "What is Javier Fisher's profession? Does anyone know?", "cypher": "match (:ENTITY{name:'How did you feel?\u00b7Fischer is a writer.'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name"}, {"query": "How about writing 10 representations of the people of Jiangsu?", "cypher": "match (:ENTITY{name:'Jiangsu Province'})<-[:Relationship{name:'Where I was born'}]-(m)-[:Relationship{name:'Representative works'}]->(q) return distinct q.name limit 10"}, {"query": "Can you list the types of relationships involved in the three-tiered conflict?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Three Kingdoms of Serbia'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Who is the founder of Jump Shopping? Does anyone know?", "cypher": "match (:ENTITY{name:'Jump Shopping is a company that sells toys.B2CThe e-commerce site.'})<-[:Describe{name:'Describe'}]-(p),(p)-[:Relationship{name:'Founder'}]->(m) return distinct m.name"}, {"query": "I'm looking for a good source of information on how to get started with the new book, which is the latest in a series of books about the life of the author.", "cypher": "match(h:ENTITY{name:'The Hours'})-[:Relationship{name:'Connecting platforms'}]-> (m) return m.name"}, {"query": "I heard you're going to write the formula for Sanjay Leela Bhansali's molecule, so please help me write it.", "cypher": "match(:ENTITY{name:'The film is directed by Sanjay Leela Bhansali.'})-[:Relationship{name:'Molecular'}]-> (n) return n.name"}, {"query": "Calculate the relationship between the step height K208 and the shortest path of step height K128 in two levels.", "cypher": "match p=shortestpath((a:ENTITY{name:'Step by stepK208'})-[*..2]-(b:ENTITY{name:'Step by stepK128'})) return count(p)"}, {"query": "How are the main departments of the provincial universities set up?", "cypher": "match (:ENTITY{name:'Provincial secondary schools'})<-[:Relationship{name:'Attributes'}]-(h)-[:Relationship{name:'Main Faculty'}]->(m) return m.name order by m.name limit 10"}, {"query": "The book was published in 2006 and what is the price of the book?", "cypher": "match (:ENTITY{name:'2006'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name limit 5"}, {"query": "Can you give me a list of the most representative works of the sea turtle?", "cypher": "match (:ENTITY{name:'The sea turtle[Writer]'})-[:Relationship{name:'Representative works'}]-> (n) return  distinct n.name"}, {"query": "There is a hacker group called Commodore4Eva, what is it?", "cypher": "match (:ENTITY{name:'Commodore4Eva'})<-[:Relationship{name:'Full name'}]- (q) return q.name"}, {"query": "Do you know TIMEFLIES?", "cypher": "match (m:ENTITY{name:'TIMEFLIES'})--(x) return x.name skip 2"}, {"query": "What are some of Sun's most iconic works?", "cypher": "match (:ENTITY{name:'Sun Zhengyi, Chinese singer from mainland China.'})<-[:Describe{name:'Describe'}]-(p),(p)-[:Relationship{name:'Representative works'}]->(q) return distinct q.name limit 1"}, {"query": "What chemical is called benzopyridazine?", "cypher": "match (:ENTITY{name:'Benzopyridazine'})<-[:Relationship{name:'Other names'}]- (n) return n.name"}, {"query": "What is the CAS RN of 1-alkyl ring-ring-methylic acid that we often use?", "cypher": "match(:ENTITY{name:'1-Allyl cyclamate'})-[:Relationship{name:'CASRN'}]-> (p) return p.name"}, {"query": "What is the shortest path in the two layers of the 2010 Nursing and Nursing Practice Graduate Exam and the ADS Application Explanation?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'2010Nursing and nurse practitioner experience test'})-[*..2]-(b:ENTITY{name:'ADSApplication details'})) return count(p)"}, {"query": "The following is a list of five representative works of the poet Mekes, born in 1124 AD.", "cypher": "match (:ENTITY{name:'The year1124Year of birth'})<-[:Relationship{name:'Date of birth'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(p) return distinct p.name limit 5"}, {"query": "Tell me about the information that Chen Zhenliang sent to the Pandegoku official in the second level of the Kangkang relationship?", "cypher": "match (n:ENTITY{name:'The police are trying to find him.'})-[:Relationship*1..2]->(x) where x.name<>'Chen Zhenlian' return distinct x.name"}, {"query": "I'm not sure if you can answer my personal information about my sports personality, Yeo Yeon-joong, in the third level of my relationship.", "cypher": "match (n:ENTITY{name:'The Leaf'})-[:Relationship*1..3]->(x) where x.name<>'Sports figures' return distinct x.name"}, {"query": "What is the shortest path between the two layers of the eastern and western houses?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of East Gyumri'})-[*..2]-(b:ENTITY{name:'The West Village'})) return count(p)"}, {"query": "What is the shortest connection path between the two layers of Moshura and Koganoshura?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Mosh'})-[*..2]-(b:ENTITY{name:'The village of Kosh'})) return count(p)"}, {"query": "Can you name 10 things about him that you can tell us about his profession?", "cypher": "match (:ENTITY{name:'University of Shaanxi'})<-[:Relationship{name:'Graduated'}]-(q)-[:Relationship{name:'Professional life'}]->(p) return p.name skip 1 limit 10"}, {"query": "Can you tell me about the five types of relationships within the three layers involved in mosquitoes?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The giant mosquito'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Is there any problem recommending a player that supports WAV, OGG, MP2 file formats?", "cypher": "match (:ENTITY{name:'WAVThe first is theOGGThe first is theMP2'})<-[:Relationship{name:'Audio files'}]- (m) return m.name"}, {"query": "What kind of jobs do people in Shanghai do?", "cypher": "match (:ENTITY{name:'Shanghai'})<-[:Relationship{name:'Location'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(q) return distinct h.name"}, {"query": "Please tell me the names of the relationships within the three layers of the five black-clawed turtles.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Black Crow'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "What books are priced at $9.00? Can you help me find three?", "cypher": "match (:ENTITY{name:'9.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "What is your profession?", "cypher": "match (:ENTITY{name:'The Great'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Professional life'}]->(n) return distinct m.name"}, {"query": "Who knows what kind of game Pocket Monster OL is?", "cypher": "match (:ENTITY{name:'Pocket God BeastOL'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Game type'}]->(m) return distinct m.name"}, {"query": "Does anyone know what profession the person who designed the energy-efficient building standard for residential buildings in Shenzhen, China, is in?", "cypher": "match (:ENTITY{name:'The standard for energy-efficient design of residential buildings in Shenzhen'})<-[:Relationship{name:'Representative works'}]-(m),(m)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name"}, {"query": "I think the 2011 Asia Pacific Pressure Industry Development Forum is a good one, do you know who is hosting?", "cypher": "match(:ENTITY{name:'2011The Forum for the Development of the Pressure Industry in the Asia-Pacific Region'})-[:Relationship{name:'Hosted'}]-> (n) return n.name"}, {"query": "Who is the famous alumnus of the Rakhine Primary School?", "cypher": "match (:ENTITY{name:'Primary School'})-[:Relationship{name:'Famous alumni'}]-> (h) return h.name skip 3"}, {"query": "Please tell me about a work by a writer.", "cypher": "match (:ENTITY{name:'The Battle[Writer]'})--(p) return p.name limit 1"}, {"query": "What is the price of the books published by the IP publisher? Can you tell me 5?", "cypher": "match (:ENTITY{name:'Publishers of Intellectual Property'})<-[:Relationship{name:'Publishing house'}]-(h),(h)-[:Relationship{name:'Pricing'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Please list the items in the collection of the Gutai Conference Memorial Museum.", "cypher": "match (:ENTITY{name:'The Gudai Conference Memorial'})<-[:Relationship{name:'The collection'}]- (h) return distinct h.name"}, {"query": "The main cast of the show, who are based on women and men, is made up of two other members besides Ozu and Hideyoshi.", "cypher": "match (n:ENTITY{name:'Relying on women and dating men'})-[:Relationship{name:'Starring'}]->(h) where h.name <> 'The Ocean' and h.name <> 'Hideyoshi Hideyoshi' return distinct h.name limit 2"}, {"query": "What about the 2014 Chinese Post-90 Writers' Ranking?", "cypher": "match (:ENTITY{name:'2014China90List of authors'})-[:Relationship{name:'List of years'}]-> (n) return n.name order by n.name limit 3"}, {"query": "So, you need to use the formula for 4-hydroxy-2-hydroxy-5 ((4H) -hydrogen peroxide, can you write it for me?", "cypher": "match(h:ENTITY{name:'4-The Pyacetal-2-The base-5(4H)-The Wicked'})-[:Relationship{name:'Molecular'}]-> (x) return x.name"}, {"query": "What is the name of the daughter of Kyu Wei and Li Zhenzhen?", "cypher": "match (:ENTITY{name:'Li Zhenqing'})<-[:Relationship{name:'Dad, please.'}]-(m), (m)-[:Relationship{name:'Oh, my God.'}]->(n) where n.name='The Queen' return distinct m.name"}, {"query": "I'm not going to write the molecular formula for 2-O-D-acetyl acetate, can you help me write it?", "cypher": "match(:ENTITY{name:'2-Oxydehydroxyethylene'})-[:Relationship{name:'Molecular'}]-> (x) return x.name"}, {"query": "The 1999 Kunming World Horticultural Fair is about to start, do you know the exact time?", "cypher": "match(:ENTITY{name:'1999The annual Kunming World Horticultural Fair'})-[:Relationship{name:'When to hold'}]-> (q) return q.name"}, {"query": "Can you tell me which company belongs to the era of the Fox?", "cypher": "match (:ENTITY{name:'The Age of the Fox'})<-[:Relationship{name:'Affiliated'}]- (m) return m.name"}, {"query": "I know that the Gansu Energy Chemical Engineering Vocational School has a chemical engineering department and an energy engineering department, but I was more curious about which of the four major departments are there besides these two departments?", "cypher": "match (n:ENTITY{name:'The School of Chemical Engineering and Energy'})-[:Relationship{name:'Main Faculty'}]->(h) where h.name <> 'Department of Chemical Engineering' and h.name <> 'Energy engineering' return distinct h.name limit 4"}, {"query": "Chen Zhiping, do you know what the name of Roland Ping is in foreign language?", "cypher": "match (:ENTITY{name:'The old man The world is not perfect.'})<-[:Relationship{name:'Written by'}]-(q)-[:Relationship{name:'Foreign language name'}]->(h) return distinct h.name limit 2"}, {"query": "Can you help me find the shortest path between the neighbouring water district and one of the two levels of the new district?", "cypher": "match p=shortestpath((a:ENTITY{name:'Neighboring counties'})-[*..2]-(b:ENTITY{name:'New County'})) return p"}, {"query": "Can you help me find out about General Zhang?", "cypher": "match (:ENTITY{name:'Chang was a very nice man.[General of the PLA(19071966)]'}) - [*1..3]-(p) return p.name limit 10"}, {"query": "What grade of 1-amino-2-hydro-4-hydroxycinnamic acid is required for your experiment?", "cypher": "match(:ENTITY{name:'1-Amino acids-2-Oh, my God.-4-Nitric acid'})-[:Relationship{name:'Ranking'}]-> (x) return x.name"}, {"query": "Can you name the seven arch-enemies of Spider-Man in no less than three levels of relationships?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The ultimate enemy of Spider-Man'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 7"}, {"query": "Where is the headquarters of Itojo?", "cypher": "match (:ENTITY{name:'The Japanese'})<-[:Relationship{name:'Company name'}]-(p)-[:Relationship{name:'Location'}]->(n) return distinct n.name"}, {"query": "What are the main achievements of people born on September 22?", "cypher": "match (p:ENTITY{name:'9The Moon22The Sun'}) <- [:Relationship{name:'born The Sun period'}]-(q),(q) - [:Relationship{name:'Major achievements'}]->(n) return distinct n.name"}, {"query": "Can you name the top 10 Chinese authors who have written in Chinese?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(n)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name limit 10"}, {"query": "Can you recommend three of the fantastic and superhero novels?", "cypher": "match (:ENTITY{name:'The Fairy Godmother'})<-[:Relationship{name:'Novel genre'}]- (x) return x.name limit 3"}, {"query": "The game is a game of strategy and strategy, and the game is a game of strategy and strategy.", "cypher": "match (n:ENTITY{name:'The Battle of the Big Beans2'})-[:Relationship*1..3]->(x) where x.name<>'The Leisure Wise' return distinct x.name"}, {"query": "The 95 automatic rifle was developed by which country?", "cypher": "match (:ENTITY{name:'95Automatic rifle'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'State'}]->(q) return distinct q.name"}, {"query": "What is the name of the company called Xiaoyang Electronics?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Briefly'}]- (h) return h.name"}, {"query": "If you want to know which works are from the same publisher with blue footprint, please list them by the number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'The blue footprints'})-[:Relationship{name:'Publishing house'}]->(:ENTITY)<-[:Relationship{name:'Publishing house'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "You also participated in the 2009 National Sports Dance Invitational, do you know the organizer?", "cypher": "match(:ENTITY{name:'2009The National Sports Dance Invitational'})-[:Relationship{name:'Hosted'}]-> (q) return q.name"}, {"query": "Do you know who is the current commander of the 1st Group of the Chinese People's Liberation Army?", "cypher": "match (:ENTITY{name:'The Chinese People's Liberation Army1The Group'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Current commander'}]->(n) return distinct n.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 49 (offset: 48))\n\"PROFILE match (:ENTITY{name:'The Chinese People's Liberation Army1The Group'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Current commander'}]->(n) return distinct n.name\"\n                                                 ^"}, {"query": "Do you know which exhibitions have a surface area of 10,490 square meters?", "cypher": "match (:ENTITY{name:'10490Square feet'})<-[:Relationship{name:'Exhibition area'}]- (q) return q.name"}, {"query": "Fuel chemicals - what are their raw materials?", "cypher": "match(:ENTITY{name:'Fuel chemicals'})-[:Relationship{name:'Raw materials'}]-> (n) return n.name"}, {"query": "Can you tell us about some of the works that Liu Xiaobo has represented?", "cypher": "match (:ENTITY{name:'Lu Xiao-hui, Thai actor, who starred in the movie Happy is Happy.'})<-[:Describe{name:'Describe'}]-(x)-[:Relationship{name:'Representative works'}]->(n) return distinct n.name"}, {"query": "Can you find the publication cycle of the Chinese Journal of Experimental Animals?", "cypher": "match (:ENTITY{name:'Chinese Animal Research'})-[:Relationship{name:'Period of publication'}]-> (x) with x order by x.name return x.name limit 1"}, {"query": "Is it difficult to find a literary work that is in the three-tiered relationship of sending people to Vietnam?", "cypher": "match (n:ENTITY{name:'The day of the parade'})-[:Relationship*1..3]->(x) where x.name<>'Literary works' return distinct x.name"}, {"query": "Steelseries Siberia V2 Craze What is this label category?", "cypher": "match (:ENTITY{name:'Steelseries The SiberianV2The Mystery of the Rabies'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Tag{name:'The label'}]->(p) return distinct p.name limit 1"}, {"query": "How many local companies are there in Langsha?", "cypher": "match (p:ENTITY{location:'The Sands'}) return count(p)"}, {"query": "The two types of relationships contained in the overseas highway 4 bridge, can you tell me five?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Overseas High Bridge4The road'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "What is the shortest relationship between the two layers of aerial cannon and air transport?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Air transport'})-[*..2]-(b:ENTITY{name:'Aircraft guns'})) return count(p)"}, {"query": "Can you list one of Liu's other representative works besides the Liu's Raven Collection and the Chinese Farmer's Economy?", "cypher": "match (n:ENTITY{name:'The Thunder'}) - [:Relationship{name:'Representative works'}]->(h) with h order by h.name where h.name <> 'The Thunder' and h.name <> 'Chinese farming economy' return h.name limit 1"}, {"query": "What are some of the most representative works of Deng Xiaoping?", "cypher": "match(:ENTITY{name:'The Chinese[Mainland Chinese actor, director]'})-[:Relationship{name:'Representative works'}]-> (n) return n.name order by n.name"}, {"query": "What is the name of the device that consists of a spring and a shock absorber?", "cypher": "match (:ENTITY{name:'The spring, the shock absorber'})<-[:Relationship{name:'Composition'}]-(p)-[:Relationship{name:'Briefly'}]->(n) return distinct n.name"}, {"query": "What were some of the major accomplishments of Joseph Nemour-Pierre-Louis? Can you give two examples?", "cypher": "match (:ENTITY{name:'Joseph The Nebula Pierre is a very good man.-Louis'}) <- [:Relationship{name:'Chinese name'}]-(q),(q) - [:Relationship{name:'Major achievements'}]->(p) return distinct p.name limit 2"}, {"query": "Do you know what the case was about the accident that happened on 2014-6-17?", "cypher": "match (:ENTITY{name:'2014-6-17'})<-[:Relationship{name:'The time'}]- (x) return x.name"}, {"query": "Can you list the most representative works of Sakura?", "cypher": "match (:ENTITY{name:'The Good of Sako'})-[:Relationship{name:'Representative works'}]-> (x) return x.name skip 1"}, {"query": "When did the case of Jilin Daan's crackdown on the Special Operations Drug Enforcement Agency happen?", "cypher": "match(:ENTITY{name:'Jilin Daan is cleared of drug trafficking in the Special Branch'})-[:Relationship{name:'The time'}]-> (n) return n.name"}, {"query": "Can you find me two diamonds and describe them?", "cypher": "match (:ENTITY{name:'The jade'})<-[:Relationship*]-(m),(m)-[:Describe{name:'Describe'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "What are the top five achievements of a graduate of Northwest Industrial University?", "cypher": "match (:ENTITY{name:'Northwest Industrial University'})<-[:Relationship{name:'Graduated'}]-(m)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name limit 5"}, {"query": "What are the main departments of the Sunshine Technology School?", "cypher": "match (:ENTITY{name:'School of Sunshine Technology'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Main Faculty'}]->(m) return distinct m.name"}, {"query": "I'm going to find five private research universities for me.", "cypher": "match (:ENTITY{name:'Private research universities'})<-[:Relationship{name:'Category'}]-(p)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "You see, the 3-year-old baby, early learning, has all this book, how many sets are there?", "cypher": "match(h:ENTITY{name:'0Oh, my God.3The child is taught to have full knowledge'})-[:Relationship{name:'Number of sets'}]-> (p) return p.name"}, {"query": "Can you tell us about the two-layer relationship between the clinical trials and the Pediatric Clinical Trials?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The clinical trial of the Chinese'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you tell me about a Chinese profession?", "cypher": "match (:ENTITY{name:'Han'})<-[:Relationship{name:'Ethnicity'}]-(n)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name limit 1"}, {"query": "Can you please help me find out what the chemical formula is for this compound 3-methyl-4-hydroxybenzoate?", "cypher": "match(:ENTITY{name:'3-Methyl-4-The use of hydroxybenzoic acid'})-[:Relationship{name:'Chemical formula'}]-> (m) return m.name"}, {"query": "Please tell me what the relationship is between the 800 return net in the 4 layers?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'800The Net'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "The three layers of dark gray are all kinds of relationships you know about?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The dark ashes'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "What are some of the most representative works of writers born in Yunnan, China?", "cypher": "match (h:ENTITY{name:'The Yunan Phun'})<-[:Relationship{name:'Where I was born'}]-(x)-[:Relationship{name:'Representative works'}]->(q) return distinct x.name"}, {"query": "I would like to know about the other 6 information in the 3rd tier of Yunlei language in Inner Mongolia Autonomous Region.", "cypher": "match (:ENTITY{name:'The Chinese'})-[*1..3]-(p) where p.name <> 'Autonomous region of Inner Mongolia' return distinct p.name limit 6"}, {"query": "What chemical is C13H13NO?", "cypher": "match (n:ENTITY{name:'C13H13NO'})<-[:Relationship{name:'Chemical formula'}]- (m) return m.name"}, {"query": "Please tell me which ones are related to pigs and lambs with the Tier 2 label?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'Pig blood lambs'}) return distinct n.name"}, {"query": "What else do you know about the 100 designers who have published labels for their elegant homes?", "cypher": "match (:ENTITY{name:'100The designers of the home'})-[:Tag{name:'The label'}]-> (n) with n order by n.name where n.name <> 'Published' return n.name"}, {"query": "Can you name five novels that have not been published yet?", "cypher": "match (:ENTITY{name:'No, not really.'}) <- [:Relationship{name:'is No, not really. published'}]- (n) return distinct n.name limit 5"}, {"query": "Where did the organizers decide to place the 2012 International Hardware Expo in Mexico?", "cypher": "match(:ENTITY{name:'2012Mexico International Hardware Fair'})-[:Relationship{name:'Location'}]-> (q) return q.name"}, {"query": "The 7th China Sugar and Food Fair in Zhejiang was held in 2011, and I was wondering what the specific name of the exhibition hall was.", "cypher": "match(:ENTITY{name:'2011The 7th China Sugar and Food Fair in Zhejiang'})-[:Relationship{name:'Name of the gallery'}]-> (h) return h.name"}, {"query": "What is the good of a post where the wording and the poetry are the third layer of the label relationship?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Poetry'}) RETURN distinct n.name"}, {"query": "I need to know what kind of relationships are involved in the two layers of snow?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Snowwood'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "I'm going to tell you about the best time I've had to meet your novel in seven years.", "cypher": "match (:ENTITY{name:'I met you in the most beautiful moment of seven years.'})--(n) with n order by n.name where n.name <> 'Novel' return n.name"}, {"query": "What are the books of the King and when were they published?", "cypher": "match (:ENTITY{name:'Lord of the Manor'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name"}, {"query": "Please list the relationships that are involved in the book of the three-tiered boy and the girl.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The old man left a note.'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Can you share the types of relationships within the three layers involved in the history of the origin of the triangle?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The history of the Three Kingdoms'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Do you know who hosted the 1996 Brunei Royal Concert Special?", "cypher": "match(:ENTITY{name:'1996The Royal Concert Hall is a special venue.'})-[:Relationship{name:'Singer and musician'}]-> (m) return m.name"}, {"query": "When was the last awards ceremony held at the 2011 China Liuzhou International Photographic Festival?", "cypher": "match ((x:ENTITY{name:'2011 China; The Liyu International Festival of Photography and Culture'}) - [:Relationship{name:'The award ceremony'}]-> (p) return p.name", "error": "Invalid input 'return': expected \"(\", \")\" or \"WHERE\" (line 1, column 157 (offset: 156))\n\"PROFILE match ((x:ENTITY{name:'2011 China; The Liyu International Festival of Photography and Culture'}) - [:Relationship{name:'The award ceremony'}]-> (p) return p.name\"\n                                                                                                                                                             ^"}, {"query": "The .NET Enterprise Application Development Tutorial is also available in this publication.", "cypher": "match (:ENTITY{name:'.NETTutorials for developing enterprise-grade apps'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'Published' return p.name"}, {"query": "Who is Zhong Shuang's boyfriend?", "cypher": "match(:ENTITY{name:'Zhong Shuang'})-[:Relationship{name:'Boyfriend'}]-> (n) return n.name"}, {"query": "What kind of weapons are there with a 155mm caliber?", "cypher": "match (:ENTITY{name:'155Millimeters'})<-[:Relationship{name:'The diameter'}]- (q) return q.name limit 10"}, {"query": "Who came up with the famous 0-1 principle in the field of computers?", "cypher": "match(:ENTITY{name:'0-1The Principle'})-[:Relationship{name:'Proposed'}]-> (h) return h.name"}, {"query": "What is the material standard for TOCT 4543-71?", "cypher": "match (:ENTITY{name:'TOCT 4543-71'})<-[:Relationship{name:'The standard'}]- (m) return m.name"}, {"query": "Do you have all the types of relationships that the four layers of the cabinet are involved in?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The story of the young man'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me about the five types of relationships that are involved in the three layers of the killer virus?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The deadly virus'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Can you tell me everything you know about Rachael Bale?", "cypher": "match (:ENTITY{name:'The city of Laka-Bell'}) - [:Relationship*1..3]-(p) return distinct p.name limit 10"}]