[{"query": "How many novels do you know about starting a girl's web?", "cypher": "match (:ENTITY{name:'The start of the Girl Network'})<-[:Relationship{name:'The first website'}]- (m) return m.name limit 3"}, {"query": "Which of the major universities have won more than 10 provincial, hall-level social science awards, and technology advancement awards?", "cypher": "match (:ENTITY{name:'He won the provincial, hall-level social science and technology awards.10The remainder of the item.'})<-[:Relationship{name:'Main awards'}]-(h),(h)-[:Relationship{name:'Main Faculty'}]->(p) return distinct p.name limit 10"}, {"query": "What are the three examples of a species having a tier 3 label relationship?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Biological species'}) RETURN distinct n.name limit 3"}, {"query": "What TV series have 30 episodes? Can I list 15?", "cypher": "match (:ENTITY{name:'30'})<-[:Relationship{name:'The set'}]- (x) return x.name limit 15"}, {"query": "I wonder what kind of weapon uses ammunition of 12.7\u00d7107mm?", "cypher": "match (:ENTITY{name:'12.7*107mm'})<-[:Relationship{name:'The Ammunition'}]- (p) return p.name"}, {"query": "Can you name a British playwright, poet?", "cypher": "match (:ENTITY{name:'English playwright, poet and author.'})<-[:Describe{name:'Describe'}]-(h) return distinct h.name limit 1"}, {"query": "Please help me find the time to complete the book on the syntax.", "cypher": "match (:ENTITY{name:'The wording'})-[:Relationship{name:'Time to complete'}]->(n) return n.name"}, {"query": "1.2 - What is the density of dihydrogen in terms of physical properties?", "cypher": "match(:ENTITY{name:'1.2-Two-headed'})-[:Relationship{name:'Density'}]-> (n) return n.name"}, {"query": "What is the official website of the Japanese Life Insurance Company?", "cypher": "match(:ENTITY{name:'Japanese Life Insurance Company'})-[:Relationship{name:'The official website'}]-> (n) return n.name"}, {"query": "Do you know what Zhang's job is?", "cypher": "match (:ENTITY{name:'The image'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Professional life'}]->(h) return distinct q.name"}, {"query": "I need five levels of internal information about the four levels of relationships related to the sale of the drug.", "cypher": "match (n:ENTITY{name:'Drugs sold in the market'})-[*1..4]->(x) where x.name<>'Chen Shen' return distinct x.name limit 5"}, {"query": "What are the 20 main works of art that are on display in the museum?", "cypher": "match (:ENTITY{name:'and Ku-i-see'})-[:Relationship{name:'Major works'}]->(n) return n.name limit 20"}, {"query": "Please tell me which schools in Fujiwara are the same type of school, what are the labels for each school?", "cypher": "match (n:ENTITY{name:'Fuqua as a child'})-[:Relationship{name:'Type of school'}]->(:ENTITY)<-[:Relationship{name:'Type of school'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "The name of the people who are the people of the land of Xinjiang and the name of the people who are the people of the land of Xinjiang, what are the names of the labels of these people?", "cypher": "match (n:ENTITY{name:'The Land of Wisdom'})-[:Relationship{name:'Ethnicity'}]->(:ENTITY)<-[:Relationship{name:'Ethnicity'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "What is the profession of Ha Ji-Soon-Soon?", "cypher": "match (:ENTITY{name:'Summer and spring'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 1"}, {"query": "Can you name 10 famous alumni of primary school?", "cypher": "match (:ENTITY{name:'Primary and secondary school'})<-[:Relationship{name:'Category'}]-(x),(x)-[:Relationship{name:'Famous alumni'}]->(p) return distinct p.name limit 10"}, {"query": "What is the book about and who is the author?", "cypher": "match (:ENTITY{name:'The Japanese government has announced that the project will be completed.'})-[:Describe{name:'The label'}]->(n) return n.name as name union all match (:ENTITY{name:'The Japanese government has announced that the project will be completed.'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "Please tell me about all the relationships that hackers are trained to have within the three layers.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'This is how hackers are trained.'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What is the approximate number of 1, 2, 4, 61, 122?", "cypher": "match (:ENTITY{name:'1The first is the2The first is the4The first is the61The first is the122'})<-[:Relationship{name:'Approximately'}]- (p) return distinct p.name"}, {"query": "Do you know of any publications published on 1/6/1998, can you tell their publishers?", "cypher": "match (:ENTITY{name:'1998/6/1'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Publishing house'}]->(q) return distinct q.name"}, {"query": "Can you tell me the geographical location of the 17,000 hectare site?", "cypher": "match (:ENTITY{name:'1.7million square meters'})<-[:Relationship{name:'Area'}]-(x),(x)-[:Relationship{name:'Geographical location'}]->(q) return distinct q.name limit 5"}, {"query": "Do you know what a 170cm man does?", "cypher": "match (:ENTITY{name:'170cm'})<-[:Relationship{name:'Height'}]-(h)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 1"}, {"query": "What are the editors in the 100044 area? Can you list 5 digits?", "cypher": "match (:ENTITY{name:'100044'})<-[:Relationship{name:'Postal code'}]-(q)-[:Relationship{name:'Editor in chief'}]->(p) return distinct p.name limit 5"}, {"query": "I'm interested in attending the 2012 Beijing Festival of Music, can you please check the price?", "cypher": "match(:ENTITY{name:'2012The concert in Beijing'})-[:Relationship{name:'The price'}]-> (p) return p.name"}, {"query": "The Swiss Yacht Freezer Xtreme Rev.2 is a bug?", "cypher": "match (n:ENTITY{name:'The Swiss YachtFreezer Xtreme Rev.2'})--(x) return x.name"}, {"query": "Please tell me which administrative division of Dongkyu Camping Nature Village is located in and what is the telephone area code and postal code of this place?", "cypher": "match (:ENTITY{name:'The natural village of Dongkyu Camp'})-[:Relationship{name:'Category of administrative district'}]->(n) return n.name as name union all match (:ENTITY{name:'The natural village of Dongkyu Camp'})-[:Relationship{name:'Phone area code'}]->(m) return m.name as name union all match (:ENTITY{name:'The natural village of Dongkyu Camp'})-[:Relationship{name:'Postal area code'}]->(r) return r.name as name"}, {"query": "Do you remember who hosted the 1998 Central TV Spring Festival Gala?", "cypher": "match(:ENTITY{name:'1998The annual Central TV Spring Festival dance party'})-[:Relationship{name:'Hosted by'}]-> (p) return p.name"}, {"query": "The 2008 construction project management quiz book we used is refined, what kind of vernacular is it?", "cypher": "match(:ENTITY{name:'2008The question book on project management and construction'})-[:Relationship{name:'Official languages'}]-> (p) return p.name"}, {"query": "Do you know the name of Liu Wenping's paper?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Author of the paper'}]- (n) return n.name"}, {"query": "The game is based on the popular video game series of the same name.", "cypher": "match (:ENTITY{name:'The adventurous town of Chiang Mai is a game.QIn this game, you can not only build shops, houses and lay out costumes, create your own unique town, but also recruit heroes as a boss to resist the vicious and deadly attacks of monsters.'})<-[:Describe{name:'Describe'}]-(p),(p)-[:Relationship{name:'The game platform'}]->(q) return distinct q.name"}, {"query": "I'm going to ask you about the date of the founding of the company.", "cypher": "match (p:ENTITY{name:'The Yamsun Corporation'}) return p.time"}, {"query": "Please tell me what is the name of the fast food chain in foreign languages? Can you say 5 items?", "cypher": "match (:ENTITY{name:'The Quick Deal'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Foreign language name'}]->(x) return x.name order by x.name limit 5"}, {"query": "I'm looking forward to playing this game, this game called Black Girl 1/9, what is the language of the game?", "cypher": "match(:ENTITY{name:'1/9 black girl'})-[:Relationship{name:'Language of the game'}]-> (m) return m.name"}, {"query": "Please tell me what kind of platform is my 16580 catalog service?", "cypher": "match(:ENTITY{name:'16580Catalogs of the world'})-[:Relationship{name:'The platform'}]-> (p) return p.name"}, {"query": "What is the name of the chassis of the 316 tank?", "cypher": "match (:ENTITY{name:'316Type of'})<-[:Relationship{name:'The chassis'}]- (n) return n.name"}, {"query": "In which case are the suspects in the case Chang Li-ho, Huang Zhiqing, Fang Chunping, Chang Fangjian, Liu Shenjian, and Fang Lin-ying?", "cypher": "match (:ENTITY{name:'He is also a member of the Chinese Communist Party.'})<-[:Relationship{name:'Main characters'}]- (q) return distinct q.name"}, {"query": "Can you name the three stars of Taurus?", "cypher": "match (:ENTITY{name:'Taurus'})<-[:Relationship{name:'The constellations'}]- (n) return n.name limit 3"}, {"query": "Please tell me all about Alistair Abell.", "cypher": "match (:ENTITY{name:'Alistair Abell'})--(q) return q.name skip 1"}, {"query": "The school song of the University of Technology of China in Zhuhai is its school song, what are its attributes?", "cypher": "match (:ENTITY{name:'The University of Technology of China in Guangzhou'})<-[:Relationship{name:'School song'}]-(m)-[:Relationship{name:'Attributes'}]->(n) return distinct n.name"}, {"query": "The following is a list of the top 10 best-selling books by the Chinese author and author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, and the most popular books by the Chinese author, are:", "cypher": "match (n:ENTITY{name:'And the sun is shining'})-[:Relationship*1..3]->(x) where x.name<>'7 out of 10' return distinct x.name"}, {"query": "What are the benefits of goji berries and which are suitable for the masses?", "cypher": "match (:ENTITY{name:'The Gordhan'})-[:Relationship{name:'Mainly consuming power'}]->(n) return n.name as name union all match (:ENTITY{name:'The Gordhan'})-[:Relationship{name:'Suitable for the masses'}]->(m) return m.name as name"}, {"query": "What is the shortest path between the two layers of the new English sentence and the prevention of childhood diseases?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'New English word order'})-[*..2]-(b:ENTITY{name:'Children's reading is a must'})) return count(p)", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 108 (offset: 107))\n\"PROFILE match p=allshortestpaths((a:ENTITY{name:'New English word order'})-[*..2]-(b:ENTITY{name:'Children's reading is a must'})) return count(p)\"\n                                                                                                            ^"}, {"query": "How many representatives can you name as living Buddhist monks?", "cypher": "match (:ENTITY{name:'The Buddha'})<-[:Relationship{name:'Representative works'}]- (n) return n.name skip 2"}, {"query": "Where is the nationality of the cross-country skier named Gian Giorgio?", "cypher": "match(:ENTITY{name:'The Johoug'})-[:Relationship{name:'Nationality'}]-> (q) return q.name"}, {"query": "The number of companies in the city in 1997?", "cypher": "match (p:ENTITY{time:'1997'}) return count(p)"}, {"query": "What companies are there in Wuxi to talk to me about?", "cypher": "match (p:ENTITY{location:'Tin'}) return p.name"}, {"query": "What is the shortest path between Kim Chi Sung and Lin Chien in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Kim Chi-Sung'})-[:Relationship*..2]-(b:ENTITY{name:'Lin-Chien'})) return count(p)"}, {"query": "Tell me, what are the professions of rappers?", "cypher": "match (:ENTITY{name:'Rapper'})<-[:Relationship{name:'Professional life'}]- (n) return n.name skip 1"}, {"query": "What kind of jobs do people born in Hubei's Hubei Province do?", "cypher": "match (:ENTITY{name:'Hubei Province'})<-[:Relationship{name:'Where I was born'}]-(p)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name limit 1"}, {"query": "Tell me about the types of relationships that are involved in the three layers of the Samsung X150?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Samsung isX150'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Do you know what kind of relationships are included in the three layers of introspection?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Watch'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What is the main distribution of the quartz meteorites?", "cypher": "match(:ENTITY{name:'The stone'})-[:Relationship{name:'Distribution areas'}]-> (n) return n.name"}, {"query": "I want to know what the three-tier relationship is involved in this village of West Dalida?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'West David village'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What is the shortest path between the W88 and W87 nuclear bombs in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'W88The bomb'})-[:Relationship*..2]-(b:ENTITY{name:'W87The bomb'})) return count(p)"}, {"query": "I'm wondering what model of car is RW19T, RW25T?", "cypher": "match (:ENTITY{name:'RW19TThe first is theRW25T'})<-[:Relationship{name:'The model'}]- (m) return distinct m.name"}, {"query": "What do the Gilbertese call themselves? Where do they live?", "cypher": "match (:ENTITY{name:'The Gilbertese'})-[:Relationship{name:'Self-proclaimed'}]->(n) return n.name as name union all match (:ENTITY{name:'The Gilbertese'})-[:Relationship{name:'Located'}]->(m) return m.name as name"}, {"query": "Do you know what are some of the most representative works of the artist?", "cypher": "match(:ENTITY{name:'The Beard'})-[:Relationship{name:'Representative works'}]-> (n) return n.name order by n.name"}, {"query": "Can you tell me which works are secretly linked to the second layer of the label of the reborn Huangpu?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'The underground of the reborn Huangpu'}) return distinct n.name"}, {"query": "You don't know which character Lori Jee (2009-) is voicing? Can you name three?", "cypher": "match (:ENTITY{name:'Lori Jee(This is a very good post.)2009- (This is a very good article.)'})<-[:Relationship{name:'Sound'}]- (x) return  distinct x.name limit 3"}, {"query": "Is there food in which is a spoonful of salt?", "cypher": "match (:ENTITY{name:'Oh, my God.'})<-[:Relationship{name:'The ingredients'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Food'}) return mn.name "}, {"query": "What is the storage capacity of the Cenix VR-W700G ((512MB)?", "cypher": "match (:ENTITY{name:'Cenix VR-W700G(512MB)'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Storage capacity'}]->(h) return distinct h.name"}, {"query": "The film is based on the novel of the same name by the writer and director of the film, Li Taebong.", "cypher": "match (n:ENTITY{name:'The gift of Uncle Li'})-[:Relationship*1..2]->(x) where x.name<>'The Way of the King' return distinct x.name"}, {"query": "What do people from across the Rhine do?", "cypher": "match (:ENTITY{name:'The Rhine'})<-[:Relationship{name:'The Nation'}]-(q)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name"}, {"query": "What are the occupations of Jews? Name 5?", "cypher": "match (:ENTITY{name:'The Jews'})<-[:Relationship{name:'Ethnicity'}]-(p)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name limit 5"}, {"query": "What is the name of his album?", "cypher": "match (:ENTITY{name:'Coil'})-[:Relationship{name:'Nationality'}]->(n) return n.name as name union all match (:ENTITY{name:'Coil'})-[:Relationship{name:'The album'}]->(m) return m.name as name"}, {"query": "What is the point of listing the main achievements of some engineering masters?", "cypher": "match (m:ENTITY{name:'Master of Engineering'})<-[:Relationship{name:'Graduate degree'}]-(p),(p)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name"}, {"query": "What chemical is the cas number 10238-27-4?", "cypher": "match (:ENTITY{name:'10238-27-4'})<-[:Relationship{name:'casThe number'}]- (m) return m.name"}, {"query": "What is the English name of the Masters League?", "cypher": "match(:ENTITY{name:'The Masters League'})-[:Relationship{name:'Foreign language name'}]-> (n) return n.name"}, {"query": "Can you tell me about the three layers of relationships that the Cody family has?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Cody family'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the US trademark for SKD62?", "cypher": "match (:ENTITY{name:'SKD62'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Corresponding US brand'}]->(x) return distinct x.name limit 1"}, {"query": "What is the relationship between the two layers of the cabinet and the princess of the underworld?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The most beautiful princess in the world'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you talk about the types of relationships within the three layers of the two-tiered relationship?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Northern Lone Wolf'}) UNWIND relationships(path) AS rel return distinct rel.name limit 2"}, {"query": "What is the relationship between the two layers of the film and the woman's hole?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Hole of the Woman'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know what the original battery works like?", "cypher": "match (:ENTITY{name:'The original battery'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The Principle'}]->(n) return distinct n.name"}, {"query": "Can you name how many companies you have run in 10 years?", "cypher": "match (p:ENTITY{time:'2010'}) return count(p)"}, {"query": "Please tell me about the types of relationships that work on two levels of professional civilization.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The professional civilization'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Please tell me which novels are included in the Magic Sword Book Alliance?", "cypher": "match (:ENTITY{name:'The League of the Magic Sword'})<-[:Relationship{name:'Linked site'}]- (h) return distinct  h.name limit 5"}, {"query": "Do you know what chemical formula C12H9N02S is?", "cypher": "match (x:ENTITY{name:'C12H9NO2S'})<-[:Relationship{name:'Chemical formula'}]- (h) return h.name"}, {"query": "What are the activities of the 2006 Shanghai International Motorcycle Culture Week?", "cypher": "match(:ENTITY{name:'2006Shanghai International Racing Week is being held'})-[:Relationship{name:'Series of events'}]-> (q) return q.name"}, {"query": "Can you tell me about some of the major departments of this school that have the attributes of well-known overseas universities?", "cypher": "match (:ENTITY{name:'Famous universities abroad'})<-[:Relationship{name:'Attributes'}]-(m)-[:Relationship{name:'Main Faculty'}]->(x) return x.name skip 1 limit 5"}, {"query": "What else do you know about the plant besides the name? Find 10 information in 2 layers.", "cypher": "match (:ENTITY{name:'The Oysters'})-[:Relationship*1..2]-(p) where p.name <> 'The Beech' return distinct p.name limit 10"}, {"query": "What chemical is CAS number 7598-35-8?", "cypher": "match (:ENTITY{name:'7598-35-8'})<-[:Relationship{name:'CASThe number of the log'}]- (m) return m.name"}, {"query": "The other 8 information provided to me are the following: Shipin County, Red River State, Yunnan Province, Wangjiao Village [subdistrict of Shipin County, Red River State, Yunnan Province]", "cypher": "match (:ENTITY{name:'The royal family[A village in Shipin County, Red River State, Yunnan Province]'})-[*1..3]-(p) where p.name <> 'Shipin County, Red River State, Yunnan Province' return distinct p.name limit 8"}, {"query": "I'm going to ask you if you know what dish is related to the red bean paste in tier 3?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Red onion noodles'}) return distinct n.name limit 2"}, {"query": "Please tell me about four male government employees, okay?", "cypher": "match (:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]- (p) return p.name limit 4"}, {"query": "I want to hear about the relationship names on the two layers of the story.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The rest of the day'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Where in Guangzhou did the organizers decide to host the 2012 10th China International Auto Electronics Expo and the 2012 China International Auto Expo and the 2012 China International Auto Electronics Expo?", "cypher": "match(:ENTITY{name:'2012The 10th China International Automotive Electronics[The city of Guangzhou]The exhibition and the procurement talks'})-[:Relationship{name:'Location'}]-> (n) return n.name"}, {"query": "The asteroids with the same discoverer as asteroid 8745 have a helium, and they each have a helium label? Give me the asteroids in order of their number of tags from large to small.", "cypher": "match (n:ENTITY{name:'The asteroid8745'})-[:Relationship{name:'The discoverer'}]->(:ENTITY)<-[:Relationship{name:'The discoverer'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What is the CPU memory capacity of the processor at 2.20 GHz?", "cypher": "match (:ENTITY{name:'2.20GHz'})<-[:Relationship{name:'Processor main frequency'}]-(q),(q)-[:Relationship{name:'Memory capacity'}]->(n) return distinct n.name"}, {"query": "Can you list the three jobs that Liu has held?", "cypher": "match (:ENTITY{name:'The first time'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 3"}, {"query": "Can you find the corresponding tag for .NET &amp; XML Magazine 2002-2003 Chinese for the Chinese language?", "cypher": "match (:ENTITY{name:'.NET &amp; XML Magazine 2002-2003 Chinese Essence [Plain clothes]'})-[:Tag{name:'The label'}]-> (h) with h order by h.name return h.name"}, {"query": "Can you name three famous people's representative works?", "cypher": "match (:ENTITY{name:'Characters'})<-[:Tag{name:'The label'}]-(q)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name limit 3"}, {"query": "I'm not sure what kind of person was born on October 13, 1964?", "cypher": "match (:ENTITY{name:'1964-10-13'})<-[:Relationship{name:'Date of birth'}]-(m)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 3"}, {"query": "The Emperor of which dynasty was Zheng Zemin?", "cypher": "match (:ENTITY{name:'The Silk Road'})-[:Relationship{name:'The times in which'}]-> (m) return distinct m.name"}, {"query": "What is the maximum number of pages for an item weighing about 0.457 kg?", "cypher": "match (:ENTITY{name:'0.457KG'})<-[:Relationship{name:'Re-signed'}]-(h)-[:Relationship{name:'Number of pages'}]->(m) return  max(m.name)"}, {"query": "When is the National Day in Tunis?", "cypher": "match (:ENTITY{name:'The city of Tunis'})<-[:Relationship{name:'Capital city'}]-(x),(x)-[:Relationship{name:'National day'}]->(q) return distinct q.name"}, {"query": "Do you know how many cases have happened in Shandong?", "cypher": "match (:ENTITY{name:'Shandong village'})<-[:Relationship{name:'Location'}]- (h) return h.name limit 10"}, {"query": "Please tell me what is the name of the relationship covered in the 2nd floor of White Stone Village?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The village of Biashiong'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the relationships within the two layers of the Dalian Transportation Institute?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Dalyne School of Transport'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What are the five professions that Subotag has?", "cypher": "match (:ENTITY{name:'The Subotic'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 5"}, {"query": "Do you know how many projectors have a 400:1 aspect ratio?", "cypher": "match (:ENTITY{name:'400:1'})<-[:Relationship{name:'The contrast'}]- (h) return h.name limit 10"}, {"query": "What chemical is not called [Emim] OTF in English?", "cypher": "match (:ENTITY{name:'[Emim]OTF'})<-[:Relationship{name:'English aliases'}]- (x) return x.name"}, {"query": "Can you tell us what the relationship is between the two layers of the top 10 terrorist sanctuaries in the world?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The top 10 terrorism sanctuaries in the world'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Who can tell me what Howa does for a living?", "cypher": "match (:ENTITY{name:'How are you?'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Relationship{name:'Professional life'}]->(p) return distinct h.name"}, {"query": "Can you list any of the five-tier relationships Sankohar is involved in?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Sankohar'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the chemical products that are colored in yellow? Can you name 9?", "cypher": "match (:ENTITY{name:'Yellow rice'})<-[:Relationship{name:'Color'}]- (q) return q.name limit 9"}, {"query": "The following is a list of some of Zhang Pering's most representative works:", "cypher": "match (:ENTITY{name:'The Changping'})<-[:Relationship{name:'Chinese name'}]-(x)-[:Relationship{name:'Representative works'}]->(n) return distinct n.name"}, {"query": "I'm sorry, but I'm not sure what you're talking about, but I'm not sure what you're talking about, but I'm not sure what you're talking about.", "cypher": "match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'The first stage'}]->(n) return n.name as name union all match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Good friends'}]->(m) return m.name as name union all match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Cousin'}]->(r) return r.name as name"}, {"query": "What is the fifth layer of brand labels?", "cypher": "match (n)-[:Tag*5{name:'The label'}]->(p:ENTITY{name:'Brand name'}) RETURN distinct n.name"}, {"query": "Tell us about the novel The Color Magic of Philly: The Monster of Happy Village: Yellow is no more than two layers of relationship novel information?", "cypher": "match (n:ENTITY{name:'The color magic of Philly: The Monster of Happy Village: Yellow'})-[:Relationship*1..2]->(x) where x.name<>'Novel' return distinct x.name"}, {"query": "What chemical is CAS number 27973-29-1?", "cypher": "match (:ENTITY{name:'27973-29-1'})<-[:Relationship{name:'CASThe number'}]- (q) return q.name"}, {"query": "Can you find me five museums?", "cypher": "match (:ENTITY{name:'The museum'})<-[:Tag{name:'The label'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 5"}, {"query": "Can you tell me about any of the novels that were originally part of Project .hack?", "cypher": "match (:ENTITY{name:'Project .hack'})<-[:Relationship{name:'Originally'}]- (m) return m.name"}, {"query": "Help me find a soup and a salad.", "cypher": "match (:ENTITY{name:'The food is delicious.'})<-[:Relationship{name:'Classified'}]-(m) return distinct m.name limit 1"}, {"query": "What is the shortest path of relationship between the riverside HH and the hard core HH2 layer?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The River Chabad'})-[:Relationship*..2]-(b:ENTITY{name:'Hard-belly hashish'})) return count(p)"}, {"query": "Please tell me which places are in the same administrative division as the city of Kaohsiung? What are the labels for each of these places? Please help me list them in order of number of labels in each location.", "cypher": "match (n:ENTITY{name:'The village of Biao Huang'})-[:Relationship{name:'Category of administrative district'}]->(:ENTITY)<-[:Relationship{name:'Category of administrative district'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "The website is owned by the founder of the company, who is known as Tante & Tante.", "cypher": "match (:ENTITY{name:'The Mother and the Son'})<-[:Relationship{name:'Address'}]-(p)-[:Relationship{name:'Founder'}]->(m) return m.name order by m.name limit 1"}, {"query": "Do you know who the voice actors for this 72kg character are?", "cypher": "match (:ENTITY{name:'72kg'})<-[:Relationship{name:'Weight'}]-(q)-[:Relationship{name:'Sound'}]->(n) return n.name skip 2 limit 5"}, {"query": "How many A-Zones are in the Farmer's Wonders?", "cypher": "match (:ENTITY{name:'The Farming Miracle'})-[:Relationship{name:'Location level'}]->(n) return n.name"}, {"query": "The Tai Chi Post is a work of art from which generation and who is the author?", "cypher": "match (:ENTITY{name:'The Tinder'})-[:Relationship{name:'The year'}]->(n) return n.name as name union all match (:ENTITY{name:'The Tinder'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "I want to know how many people are supplied with electricity by Shandong Electric Group.", "cypher": "match(:ENTITY{name:'Shandong Electric Group Co., Ltd.'})-[:Relationship{name:'Electricity supply'}]-> (n) return n.name"}, {"query": "What happened in 2001 and what institutions were created? Can you name eight?", "cypher": "match (:ENTITY{name:'2001'})<-[:Relationship{name:'The time'}]- (m) return m.name limit 8"}, {"query": "Can you tell us about the history book by Wang Zi Villain, Tenzin Brin, and the work within the 3 layers relationship?", "cypher": "match (n:ENTITY{name:'Ten acres of the Villa; The White House'}) - [:Relationship*1..3]->(x) where x.name<>'Historical writings' return distinct x.name"}, {"query": "Please list the CAS RN of which chemical: 55304-85-3?", "cypher": "match (:ENTITY{name:'55304-85-3'})<-[:Relationship{name:'CASRN'}]- (q) return q.name"}, {"query": "Have you decided where the 2014 Shanghai International Graphene Expo will be held?", "cypher": "match(:ENTITY{name:'2014The Shanghai International Graphene Exhibition is being held in Shanghai.'})-[:Relationship{name:'Location'}]-> (p) return p.name"}, {"query": "Do you know what MCs are? Can you say three?", "cypher": "match (:ENTITY{name:'MC'})--(q) return q.name limit 3"}, {"query": "Please tell me what are the 4 good stories published on June 1, 2012?", "cypher": "match (:ENTITY{name:'2012Year of birth6The Moon1The Sun'}) <- [:Relationship{name:' published The Sun period'}]- (m) return m.name limit 4"}, {"query": "Can you tell us about the types of relationships within the five layers covered by the International Federation of Nursing Professionals?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The International Federation of Nurses'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you please tell me a few songs written by Don Quixote?", "cypher": "match (:ENTITY{name:'Don Cheung-Chi'})<-[:Relationship{name:'Composed'}]- (q) return q.name"}, {"query": "Where are the butterfly trees distributed?", "cypher": "match (:ENTITY{name:'The Winged Tree]'})-[:Relationship{name:'Distribution areas'}]->(n) return n.name as name union all match (:ENTITY{name:'The Winged Tree'})-[:Relationship{name:'Protection level'}]->(m) return m.name as name"}, {"query": "Tell us about the five pieces of information that Li Weiyan, who lives in a subtropical monsoon climate, has.", "cypher": "match (n:ENTITY{name:'Li Viyan is home'})-[*]->(x) where x.name<>'Subtropical monsoon climate' return distinct x.name limit 5"}, {"query": "I would like to know which is the administrative unit of the Zhejiang Stone Cave National Forest Park?", "cypher": "match(:ENTITY{name:'The stone gate of Zhejiang National Forest Park'})-[:Relationship{name:'Management unit'}]-> (n) return n.name"}, {"query": "The following organization, Ray Yeo-won, is a stone drum-like text that gives a detailed introduction to the relationship between the three levels of the ritual wine-making community.", "cypher": "match (n:ENTITY{name:'Reye-young is seen offering wine to the monk in imitation of stone drum'})-[:Relationship*1..3]->(x) where x.name<>'Organizing body' return distinct x.name"}, {"query": "Do you know which country hosted the 1983 Asian Women's Championship?", "cypher": "match(:ENTITY{name:'1983Asian Women's Championship of the Year'})-[:Relationship{name:'Holding the country'}]-> (n) return n.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 45 (offset: 44))\n\"PROFILE match(:ENTITY{name:'1983Asian Women's Championship of the Year'})-[:Relationship{name:'Holding the country'}]-> (n) return n.name\"\n                                             ^"}, {"query": "Can you find me seven books priced at $10 and when they will be published?", "cypher": "match (:ENTITY{name:'10Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 7"}, {"query": "Do you have any idea what kind of relationships are covered in the magic tables in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Magic Table'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What are the different labels of these works? Can they be sorted in the correct order according to the number of labels?", "cypher": "match (n:ENTITY{name:'The Moonlight'})-[:Relationship{name:'The language of song'}]->(:ENTITY)<-[:Relationship{name:'The language of song'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Please list the organizers of the 2012 Expo Mechanics?", "cypher": "match(:ENTITY{name:'2012The exhibition of machinery'})-[:Relationship{name:'Hosted'}]-> (n) return n.name"}, {"query": "In the 4 layers, what are the types of relationships that Alaska Red is involved in?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The red pepper of Alaska'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "How many companies are in Beijing?", "cypher": "match (p:ENTITY{location:'The Chinese'}) return count(p)"}, {"query": "Do you have any information about this thing that has a third label relationship with religion?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Religion'}) RETURN distinct n.name limit 3"}, {"query": "Can you find me a book by author Zhang Guoyu?", "cypher": "match (:ENTITY{name:'Zhang Guoyu Co-authored'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name"}, {"query": "Please tell me if there are two things that are good about flower roller skates having a second layer of tags?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Flower slide'}) return distinct n.name limit 2"}, {"query": "What are the stories in the series? Can you tell me 13 lines?", "cypher": "match (:ENTITY{name:'The Phantom Novel'})<-[:Relationship{name:'Connecting platforms'}]- (n) return n.name limit 13"}, {"query": "The following is a list of the top five career profiles of the people who are part of the political faces of the masses:", "cypher": "match (:ENTITY{name:'The crowd'})<-[:Relationship{name:'The political face'}]-(q)-[:Relationship{name:'Professional life'}]->(p) return p.name skip 2 limit 5"}, {"query": "Do you know what diseases can be treated with medicinal mushrooms?", "cypher": "match (:ENTITY{name:'The medicinal mushroom'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The main symptoms'}]->(n) return distinct n.name"}, {"query": "Can you please list the top 10 actors in this film?", "cypher": "match (:ENTITY{name:'The first is the death of the first.'})--(x) return x.name order by x.name limit 10"}, {"query": "Please tell me all the information about the Military Training College of Qingdao.", "cypher": "match (n:ENTITY{name:'Military training at Qingdao Naval Academy'})-[:Relationship*]->(x) where x.name<>'The University' return distinct x.name"}, {"query": "How long is the North-South Highway in Berlin?", "cypher": "match(:ENTITY{name:'North-south highway with German border'})-[:Relationship{name:'The whole length'}]-> (n) return n.name"}, {"query": "Can you list the names of the 10 relationships in the 2 layers that are not the same?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The horse is not the same.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 10"}, {"query": "What foods are steamed, and can you help me list 10?", "cypher": "match (:ENTITY{name:'Steaming'})<-[:Relationship{name:'The process'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Food'}) return mn.name limit 10"}, {"query": "What is the meaning of the word \"reverence\"?", "cypher": "match (n:ENTITY{name:'The Silk Road'})-[:Relationship{name:'Spelling'}]-(x) return x.name"}, {"query": "I need a book on economic management: Northwest Blue Book: Five sources of information on the Northwest China Development Report.", "cypher": "match (n:ENTITY{name:'Northwest Blue Book: Report on the development of the Northwest of China'})-[:Relationship*]->(x) where x.name<>'Economic management' return distinct x.name limit 5"}, {"query": "UHAID Coal Mining Co., Ltd. was originally registered with the Department of Industry and Commerce as a company of what type?", "cypher": "match(:ENTITY{name:'Uheyd Coal Foaming Co. Ltd.'})-[:Relationship{name:'Type of company'}]-> (h) return h.name"}, {"query": "How many towns speak Sichuanese?", "cypher": "match (:ENTITY{name:'The Sichuanese'})<--(m), (m)-->(n) where n.name='Town' return count(distinct m.name)"}, {"query": "Help me find 10 plants that are seed plants of the pine tree.", "cypher": "match (:ENTITY{name:'Seed planting'}) <- [:Relationship{name:'The door'}]-(m), (m) - [:Relationship{name:'The Eye'}]->(n) where n.name='Pinkwood The Eye' return m.name limit 10"}, {"query": "So, what do you know about the profession of the young star?", "cypher": "match (:ENTITY{name:'The star of the moon'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 3"}, {"query": "Where are the mainly distributed Chinese squirrels?", "cypher": "match (:ENTITY{name:'The Squirrel'})-[:Relationship{name:'Distribution areas'}]->(m) return distinct m.name"}, {"query": "Can you tell me about the three major awards that the school, founded in 1968, has received?", "cypher": "match (:ENTITY{name:'1968Year of birth'})<-[:Relationship{name:'When did it start?'}]-(m)-[:Relationship{name:'Main awards'}]->(p) return p.name skip 1 limit 3"}, {"query": "I wonder what the scope of the applied discipline is for the application of biochemistry?", "cypher": "match (:ENTITY{name:'Biochemistry'})<-[:Relationship{name:'Applied disciplines'}]-(h)-[:Relationship{name:'Scope of application'}]->(p) return distinct p.name"}, {"query": "The book is written by a writer named Dufan Chen, who is also a writer of books.", "cypher": "match (:ENTITY{name:'The Duffang'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Relationship{name:'Publishing house'}]->(q) return distinct h.name,q.name"}, {"query": "What is the shortest relationship path between the two layers of speech-language bias and auditory bias?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The listener is biased'})-[:Relationship*..2]-(b:ENTITY{name:'The Prejudice'})) return count(p)"}, {"query": "I would like to know which of the investors sponsored the 2013 500 Mile Music Festival?", "cypher": "match(:ENTITY{name:'2013500 Mile City Music Festival'})-[:Relationship{name:'The Investor'}]-> (p) return p.name"}, {"query": "What is the shortest distance between the three levels of Longmyo and Dong-gu?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Longmu'})-[*..3]-(b:ENTITY{name:'The village of Dong-dong-dumo'})) return count(p)"}, {"query": "I wonder what kind of submarine is 92.6 meters long?", "cypher": "match (:ENTITY{name:'92.6The M'})<-[:Relationship{name:'The long'}]- (x) return x.name"}, {"query": "Please tell me what is good or bad about my pet having a level 3 label relationship?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'My pet.'}) return distinct n.name"}, {"query": "What is Chen Siyu's profession?", "cypher": "match (:ENTITY{name:'The first'})<-[:Relationship{name:'Chinese name'}]-(n),(n)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 1"}, {"query": "The first question is: what are the top 10 public universities?", "cypher": "match (:ENTITY{name:'State colleges'})<-[:Relationship{name:'Category'}]-(q)-[:Relationship{name:'Main Faculty'}]->(p) return p.name order by p.name limit 10"}, {"query": "Ask if the five profiles in the fourth level of relationship of French national Radosavljevic Ludovic are okay?", "cypher": "match (n:ENTITY{name:'Radosavljevic Ludovic'})-[*1..4]->(x) where x.name<>'Radosavljevic Ludovic,French national athlete.' return distinct x.name limit 5"}, {"query": "The problem is, what are the types of relationships within the three layers that Zahri is concerned with?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Zahri is a very nice person.'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "The main department of the school is named after Ding Jin-ying.", "cypher": "match (:ENTITY{name:'The Ding-Ging'})<-[:Relationship{name:'Current headmaster'}]-(n),(n)-[:Relationship{name:'Main Faculty'}]->(x) return distinct n.name,x.name"}, {"query": "What are the five main departments of schools that offer good academic skills?", "cypher": "match (:ENTITY{name:'The letter was written by a man named Yuri.'})<-[:Relationship{name:'Schooling'}]-(q)-[:Relationship{name:'Main Faculty'}]->(p) return distinct p.name limit 5"}, {"query": "What are the similarities between the question and the Roma citizenship? What are the labels for each person? Please list them in order of number of labels for each person.", "cypher": "match (n:ENTITY{name:'The Luparoma'})-[:Relationship{name:'Nationality'}]->(:ENTITY)<-[:Relationship{name:'Nationality'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Please help me find two books for $37.00 and tell me who the author is.", "cypher": "match (:ENTITY{name:'37.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Written by'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "I'm asking you, do you know the molecular weight of 1-amino cyclothinosulfuric acid?", "cypher": "match(:ENTITY{name:'1-Amino cyclothinate'})-[:Relationship{name:'Molecular weight'}]-> (x) return x.name"}, {"query": "Do you know of any relationship between the two layers of the Northeast dialect?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Northeastern dialect'}) UNWIND relationships(path) AS rel RETURN rel.name limit 3"}, {"query": "The 2012 Zhang Zhenwei concert in Sichuan is expected to take place at what time?", "cypher": "match(:ENTITY{name:'2012The concert in Sichuan'})-[:Relationship{name:'The time'}]-> (m) return m.name"}, {"query": "Do you know what other occupations this person has? He is a visiting professor of e-commerce at Henan Provincial College of Commerce, where he started his career in 2002.", "cypher": "match (:ENTITY{name:'2002Professor of e-commerce at the Henan Provincial College of Commerce'})<-[:Relationship{name:'Major achievements'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(h) return h.name order by h.name limit 1"}, {"query": "What other major achievements did Liu Kilov have besides the first prize of the Shandong City Science and Technology Award (in 1990) and the second prize of the Shandong City Science and Technology Award (in 1992)?", "cypher": "match (n:ENTITY{name:'The Cowardly One'})-[:Relationship{name:'Major achievements'}]->(h) where h.name <> 'The first prize of the Science and Technology Award of the city of Mid-Shan (((1990The year)' and h.name <> 'Second prize of the Science and Technology Award of the City of Mid-Shan1992The year)' return distinct h.name limit 2"}, {"query": "The school is a two-tiered brick-building university.", "cypher": "match (:ENTITY{name:' Double first class Building a college'}) <- [:Relationship{name:'Attributes of the school'}]- (p) return distinct p.name"}, {"query": "What is the name of the software version number V3.7.20?", "cypher": "match (:ENTITY{name:'V3.7.20'})<-[:Relationship{name:'Version number'}]-(p)-[:Tag{name:'The label'}]->(x) return distinct x.name limit 1"}, {"query": "I would like to know who is working in another job besides the assistant professor who graduated from Anhui Medical University in 1973 and went to work at the Mount Fuji Hospital after graduation.", "cypher": "match (:ENTITY{name:'1973After graduating from the University of Anhui Medical University, she worked at the Mount Fuji Hospital.'})<-[:Describe{name:'Describe'}]-(x)-[:Relationship{name:'Professional life'}]->(p) where p.name <> 'Assistant Professor' return distinct p.name limit 1"}, {"query": "Do you know how much the 53kg host weighs?", "cypher": "match (:ENTITY{name:'53'})<-[:Relationship{name:'Weight'}]- (p) return p.name limit 2"}, {"query": "I need to know what the main achievements of Kyung-ho are.", "cypher": "match (:ENTITY{name:'What a shame.'})-[:Relationship{name:'Major achievements'}]-> (h) return  distinct h.name"}, {"query": "Please help me find three works by director Chen Shui-bian", "cypher": "match (:ENTITY{name:'Chen is a great man.'})<-[:Relationship{name:'Director'}]-(m) return distinct m.name limit 3"}, {"query": "Tell me what the sixth level of the tag has to do with the reborn wizard hunter?", "cypher": "match (n)<-[:Tag*6{name:'The label'}]-(p:ENTITY{name:'The Magic Hunter of the Resurrection'}) RETURN distinct n.name"}, {"query": "Born Of Osiris is a great band, do you know when they formed?", "cypher": "match(:ENTITY{name:'Born Of Osiris'})-[:Relationship{name:'The time of assembly'}]-> (n) return n.name"}, {"query": "Tell me about the relationship between the two levels of the brothel prostitutes at the Banquet of Liu You?", "cypher": "match (n:ENTITY{name:'The feast of the harlot'})-[:Relationship*1..2]->(x) where x.name<>'You are a good man.' return distinct x.name"}, {"query": "Can you list the top 10 achievements of Li?", "cypher": "match (:ENTITY{name:'Li is a good person.'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Major achievements'}]->(p) return distinct p.name limit 10"}, {"query": "What is the shortest path between zero and zero in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The whole world is in a mess.'})-[:Relationship*..2]-(b:ENTITY{name:'The whole thing was a failure.'})) return count(p)"}, {"query": "The three layers of relationships that Chen Da Sun covers, what do you know about them?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Chinese'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you remember the name of the explosion in Jiangsu Province?", "cypher": "match (:ENTITY{name:'Jiangsu Province'})<-[:Relationship{name:'Time and place'}]- (h) return distinct h.name"}, {"query": "What are the main awards for the TV series starring Ben Bowen, Liu Wenhui, Li Maou and Chow Bofan?", "cypher": "match (:ENTITY{name:'The film was directed by Kim Woo-jin.'})<-[:Relationship{name:'Starring'}]-(h),(h)-[:Relationship{name:'Main awards'}]->(m) return distinct h.name"}, {"query": "Do you know how much you should love the author of your book, the time of publication and the publishing company?", "cypher": "match (:ENTITY{name:'You must love yourself.'})-[:Relationship{name:'Written by'}]->(n) return n.name as name union all match (:ENTITY{name:'You must love yourself.'})-[:Relationship{name:'Published'}]->(m) return m.name as name union all match (:ENTITY{name:'You must love yourself.'})-[:Relationship{name:'Production company'}]->(r) return r.name as name"}, {"query": "Can you show me where to play for five tickets at 20 dollars?", "cypher": "match (:ENTITY{name:'20.00Japanese yen'})<-[:Relationship{name:'The price of tickets'}]-(p)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "Can you tell me about the five different types of pills?", "cypher": "match (n:ENTITY{name:'The broken ball'}) - [*]->(x) where x.name<>'The broken ball is a drug, mainly composed of mercury and yellow gold. ' return distinct x.name limit 5"}, {"query": "Do you know Zhang Zhen's profession? Can you tell me one?", "cypher": "match (:ENTITY{name:'The Swan'})<--(q)-[:Relationship{name:'Professional life'}]->(n) return n.name order by n.name limit 1"}, {"query": "What CAS registration number is used for 2-hydroxy-4-hydroxy-6-hydramide?", "cypher": "match(:ENTITY{name:'2-The base-4-The base-6-The Amine'})-[:Relationship{name:'CASThe number of the log'}]-> (m) return m.name"}, {"query": "Can you list any hotel chains that have a label relationship with Freedom Hotel Hanoi on the 5th floor?", "cypher": "match (n)<-[:Tag*5{name:'The label'}]-(p:ENTITY{name:'The Freedom Hotel in Hanoi'}) RETURN distinct n.name"}, {"query": "Can you name three major accomplishments of people born in Seattle, Washington, USA?", "cypher": "match (:ENTITY{name:'The city of Seattle, Washington, USA'})<-[:Relationship{name:'Where I was born'}]-(q)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name limit 3"}, {"query": "The video shows the situation of Shesun in the country, and the two layers of the relationship.", "cypher": "match (n:ENTITY{name:'The situation is very difficult.'})-[:Relationship*1..2]->(x) where x.name<>'The Wild' return distinct x.name"}, {"query": "Can you tell us about the types of relationships involved in the two layers of peanut butter?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Peel of beans'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you tell me what kind of relationships are involved in the two-tiered domestic violence?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The War of the Worlds'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "What rare animals and plants are found in the national nature reserve of Karateka?", "cypher": "match (:ENTITY{name:'The national nature reserve of Kar Chathan'})-[:Relationship{name:'Rare animals'}]->(n) return n.name as name union all match (:ENTITY{name:'The national nature reserve of Kar Chathan'})-[:Relationship{name:'Rare plants'}]->(m) return m.name as name"}, {"query": "Name three books published by the Yuexiu Book Company, and who are the authors?", "cypher": "match (:ENTITY{name:'The Yue-Hsiang book company'})<-[*]-(m), (m)-[:Relationship{name:'Written by'}]->(n) return m.name,n.name limit 3"}, {"query": "What is the shortest path between the New Hong Kong Incident and the Salt King Ring 2?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The New Hong Kong'})-[*..2]-(b:ENTITY{name:'The Salt Order'})) return count(p)"}, {"query": "Can you give me a list of the names of the relationships that are involved in the two layers of the endowment?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Gift of the Left'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "Besides owning a lime kiln, can you tell me 10 things you know about the two layers of the city of Yangon?", "cypher": "match (:ENTITY{name:'The village of Chiang'})-[:Relationship*1..2]->(p) where p.name <> 'The lime industry' return p.name limit 10"}, {"query": "Help me find 20 films by Mr. Shehu", "cypher": "match(:ENTITY{name:'Thank you.'})<-[:Relationship{name:'My wife'}]- (n) -[:Relationship{name:'Major works'}]-> (m) with m order by m.name limit 20 return m.name"}, {"query": "Can you describe the animals that are in a relationship with the Asian twin, which is the second level of purpose?", "cypher": "match (n)<-[:Relationship*2{name:'The Eye'}]-(p:ENTITY{name:'Asian twins'}) RETURN distinct n.name"}, {"query": "Can you list 8 plant diseases?", "cypher": "match (:ENTITY{name:'Plant diseases'})<-[:Relationship{name:'Category'}]- (n) return n.name limit 8"}, {"query": "I would like to know who is the representative of this film, \"The Enemy Within\".", "cypher": "match (:ENTITY{name:'The eagle is deep behind the enemy.'})<-[:Relationship{name:'Representative works'}]- (m) return m.name order by m.name"}, {"query": "Please tell me which is the Residential Committee of the Western Suburban Combined Department of Cao Community in the Central District of Nanming?", "cypher": "match (x:ENTITY{name:'West Suburban Combined Department of Cao Community in the Central District of Nanming'})<-[:Relationship{name:'Location'}]- (n) return distinct n.name"}, {"query": "Can anyone tell me the name of the person who did this?", "cypher": "match (:ENTITY{name:'The Way to Become a Hero'})<-[:Relationship{name:'Inventors'}]-(p),(p)-[:Relationship{name:'Other names'}]->(x) return distinct x.name"}, {"query": "The first is the story of the two-tiered relationship between the literary works of the Queen and the eight songs of the second year of the Queen's Jubilee.", "cypher": "match (n:ENTITY{name:'The Queen is honoured with eight awards for her second year in office.'})-[:Relationship*1..2]->(x) where x.name<>'Literary works' return distinct x.name"}, {"query": "How many companies have been founded in 15 years?", "cypher": "match (p:ENTITY{time:'2015'}) return count(p)"}, {"query": "Do you know what people born in September 1953 do? Give me five.", "cypher": "match (:ENTITY{name:'1953Year of birth9The Moon'})<-[:Relationship{name:'Date of birth'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(n) return n.name order by n.name limit 5"}, {"query": "The name of the tag that is used for each of these people is \"Yun\", which means \"Yun\", and you need to sort the number of tags for each person from small to large.", "cypher": "match (n:ENTITY{name:'The Chinese'})-[:Relationship{name:'Ethnicity'}]->(:ENTITY)<-[:Relationship{name:'Ethnicity'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you list the five representative works of the PLA's Political Department's Discourse Theater?", "cypher": "match (:ENTITY{name:'The People's Liberation Army's political department'})<-[:Relationship{name:'Unit of work'}]-(n)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name limit 5", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 41 (offset: 40))\n\"PROFILE match (:ENTITY{name:'The People's Liberation Army's political department'})<-[:Relationship{name:'Unit of work'}]-(n)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name limit 5\"\n                                         ^"}, {"query": "What are the labels of the tomatoes in the South China Sea?", "cypher": "match (:ENTITY{name:'The Red Sea'})-[:Tag{name:'The label'}]-> (q) return q.name skip 1"}, {"query": "Can you list a place where the relationship between 1 and the lake is 3 jumps?", "cypher": "match (n)<-[:Relationship*3{name:'Area'}]-(p:ENTITY{name:'The Lake of the Woods'}) RETURN distinct n.name limit 1"}, {"query": "The person who found the football game gave me his name and the name of the two teams he played for?", "cypher": "match (p:ENTITY{name:'Soccer'})<-[:Relationship{name:'Sports projects'}]-(x)-[:Relationship{name:'Played'}]->(m) return distinct x.name,m.name limit 2"}, {"query": "Can you tell me what is better than yesterday's third tier label?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Not yesterday'}) return distinct n.name"}, {"query": "The first question I asked was, \"What is the relationship between the three layers of late-term reproductive health care and the 32?\"", "cypher": "match (n:ENTITY{name:'Reproductive health care in late pregnancy'})-[:Relationship*1..3]->(x) where x.name<>'32' return distinct x.name"}, {"query": "I am curious to know who is the director, writer and star of this film by Sorghan Fury.", "cypher": "match (:ENTITY{name:'The Sorgenfri'})-[:Relationship{name:'Director'}]->(n) return n.name as name union all match (:ENTITY{name:'The Sorgenfri'})-[:Relationship{name:'Writer'}]->(m) return m.name as name union all match (:ENTITY{name:'The Sorgenfri'})-[:Relationship{name:'Starring'}]->(r) return r.name as name"}, {"query": "Do you know what five types of relationships are involved in the three levels of the Performing Arts School in Bucheon?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The School of Performing Arts in Kampong Chhnang'}) UNWIND relationships(path) AS rel return rel.name limit 5"}, {"query": "Can you list some of the main achievements of plastic surgeons?", "cypher": "match (:ENTITY{name:'The plastic surgeon'})<-[:Relationship{name:'Professional life'}]-(m),(m)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name"}, {"query": "What is the brand name of the Chinese name Bow Swan?", "cypher": "match (:ENTITY{name:'The Bowman'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Type of'}]->(x) return distinct x.name"}, {"query": "Do you have the chemical formula for 4-hydroxy-3-hydroxy-acid, please show me?", "cypher": "match(h:ENTITY{name:'4-The base-3-Nitric acid'})-[:Relationship{name:'Chemical formula'}]-> (p) return p.name"}, {"query": "Can you tell me where is the geographic area at 415.6 meters above sea level?", "cypher": "match (:ENTITY{name:'415The first is the story of the first.6The M'})<-[:Relationship{name:'Height'}]-(q)-[:Relationship{name:'Location'}]->(x) return distinct x.name limit 1"}, {"query": "The first is the Internet literature, which is a choice of which platform to distribute.", "cypher": "match(:ENTITY{name:'The belly is black.orSecond, it is a choice.'})-[:Relationship{name:'Connecting platforms'}]-> (m) return m.name"}, {"query": "I need information on the three-tier relationship of my surgery to the surgeon's insulin tumor removal?", "cypher": "match (n:ENTITY{name:'Insulin-oncology is a surgical procedure.'})-[:Relationship*1..3]->(x) where x.name<>'P.C.' return distinct x.name"}, {"query": "What is the shortest path between the A-level fire door and the A-level fire door in tier 3?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Fire doors of class A'})-[*..3]-(b:ENTITY{name:'The fire doors are aluminum.'})) return count(p)"}, {"query": "Can you help me find the five dreams of a 17 year old?", "cypher": "match (q:ENTITY{name:'17The Dream of the Year'})-[:Tag{name:'The label'}]-> (p) with p order by p.name return p.name limit 5"}, {"query": "Give me three spices and introduce them.", "cypher": "match (:ENTITY{name:'The cabbage'})<-[:Relationship*]-(m),(m)-[:Describe{name:'Describe'}]->(n) return m.name,n.name limit 3"}, {"query": "Can you give me a list of the five names of relationships involved in the Lake Bay Football League in the second tier?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Lake Bay Football League'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Can you tell me about the software information within the 6 layer relationship of tutorial app cool to make money tutorial?", "cypher": "match (n:ENTITY{name:'Coo-cooing for money'}) - [*1..6]->(x) where x.name <>' Coo-cooing for money is a tutorial app, file size 621.52KB, for firmwareAndroid2.2And more .' return distinct x.name"}, {"query": "I want you to tell me about this man, Anthony LaMolinara.", "cypher": "match (:ENTITY{name:'Anthony LaMolinara'})--(x) return x.name skip 5"}, {"query": "Do you know which tournament is held in the Four Colors Region of Thailand?", "cypher": "match (:ENTITY{name:'The Four Colored Tombs of Thailand'})<-[:Relationship{name:'Location'}]- (x) return distinct x.name"}, {"query": "Can you get me three books for social science books to read?", "cypher": "match (:ENTITY{name:'Sociology books'})<-[:Tag{name:'The label'}]-(n)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "The 4S store has launched the 2008 Puma H3 ALPHA 5.3 model, can you tell us about the warranty policy?", "cypher": "match(:ENTITY{name:'2008The PonyH3 ALPHA 5.3'})-[:Relationship{name:'The policy of safeguarding'}]-> (h) return h.name"}, {"query": "Please help me find people born in Guangxi's Shaanxi province and their dates of birth.", "cypher": "match (:ENTITY{name:'The county of Guangxi'})<-[:Relationship{name:'Where I was born'}]-(h),(h)-[:Relationship{name:'Date of birth'}]->(q) return distinct h.name,q.name"}, {"query": "What are the main achievements of the society? Name three?", "cypher": "match (:ENTITY{name:'The Society'})<-[:Tag{name:'The label'}]-(h)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name limit 3"}, {"query": "Cloudwater Anger is a 2014 television series directed by Liu Xiaobo, I would like to know the specific release date?", "cypher": "match(:ENTITY{name:'The clouds are angry.[2014The year the swan is directing a TV series]'})-[:Relationship{name:'Delivery time'}]-> (h) return h.name"}, {"query": "I want to attend the 4th International Sugar Alcohol By-Food Fair 2011 but I don't know when it will be held, do you have this information?", "cypher": "match(:ENTITY{name:'2011The fourth annual International Sugar Wine By-Food Fair'})-[:Relationship{name:'When to hold'}]-> (x) return x.name"}, {"query": "Can you tell me which novels and martial arts geniuses are better for the 6th level of the label relationship?", "cypher": "match (n)<-[:Tag*6{name:'The label'}]-(p:ENTITY{name:'The Armed Forces'}) RETURN distinct n.name"}, {"query": "What is the name of the star who is friends with Inoue Naishi, Tite, and other celebrities?", "cypher": "match (h:ENTITY{name:'The film is based on the novel by the same name by the Japanese author, Yui Naishi.'})<-[:Relationship{name:'Good friends'}]-(n)-[:Relationship{name:'Other names'}]->(x) return distinct x.name limit 1"}, {"query": "What is the shortest distance between Bangor and Nima in the 2nd level?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'District of Bango'})-[*..2]-(b:ENTITY{name:'County of Nima'})) return count(p)"}, {"query": "Do you know the names of the two types of relationships in the two levels involved in the first secondary school in Shoping County?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'First Secondary School in Shoping County'}) UNWIND relationships(path) AS rel return distinct rel.name limit 2"}, {"query": "Can you tell me about the other four other little evil girls besides mothy_\u60aa\u30ceP\u3051\u3093?", "cypher": "match (:ENTITY{name:'The little girl'})--(m) with m order by m.name where m.name <> 'mothy_The Evil\u30ceP  \u3051\u3093' return distinct m.name limit 4"}, {"query": "What is the name of a game that was launched on 21/07/2012?", "cypher": "match (:ENTITY{name:'2012-07-21'})<-[:Relationship{name:'Date of birth'}]- (q) return q.name"}, {"query": "You should know that graduation is the main achievement of this person from Beijing's Zhejiang Art Institute. Can you tell me 5 things?", "cypher": "match (:ENTITY{name:'The Beijing Zhibian Art and Literature Institute'})<-[:Relationship{name:'Graduated'}]-(x),(x)-[:Relationship{name:'Major achievements'}]->(q) return q.name order by q.name limit 5"}, {"query": "I'm going to calculate the dosage of 1-methyl-1H-hydro-4-hydroxycinnamic acid, can you give me its density?", "cypher": "match(:ENTITY{name:'1-Methyl-1H-Oh, my God.-4-Nitric acid'})-[:Relationship{name:'Density'}]-> (q) return q.name"}, {"query": "Which line is Zhang Zheng?", "cypher": "match (:ENTITY{name:'Zhang Zhen'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name"}, {"query": "Can you tell me what are the four types of relationships that are involved in the three layers of money online?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The money is online'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "The thing that is involved in the ancient equation is the helium, what is it called?", "cypher": "match (:ENTITY{name:'Ancient equations'})<-[:Relationship{name:'Other issues'}]-(x),(x)-[:Relationship{name:'Other names'}]->(q) return distinct x.name,q.name"}, {"query": "I'm going to find a senior engineer and tell me his name and a representative work.", "cypher": "match (:ENTITY{name:'Senior engineer'})<-[:Relationship{name:'Professional life'}]-(q),(q)-[:Relationship{name:'Representative works'}]->(m) return q.name order by q.name,m.name limit 1"}, {"query": "Can you find me three of the publications from the Tide Press?", "cypher": "match (:ENTITY{name:'The Sea Tide'})<-[:Relationship{name:'Publishing house'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "How many major works does Liu Yi have in total?", "cypher": "match (:ENTITY{name:'The Chinese[Chinese mainland actor]'})-[:Relationship{name:'Major works'}]->(n) return count(n)"}, {"query": "The following is a list of the most popular articles on the subject of the visiting professor at the Da Nang Hospital:", "cypher": "match (:ENTITY{name:'Visiting Professor at the Daegu Hospital'})<-[:Relationship{name:'Professional life'}]-(n)-[:Relationship{name:'Representative works'}]->(m) return distinct m.name"}, {"query": "Can you tell me what are the three types of jobs that are more fun to do?", "cypher": "match (:ENTITY{name:'The increase'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 3"}, {"query": "The ship is called Type 073III Landing ship in English, what is the name in Chinese?", "cypher": "match (:ENTITY{name:'Type 073III Landing ship'})<-[:Relationship{name:'English name'}]- (n) return n.name"}, {"query": "Can you tell us about the relationship between the two levels related to Nam Park Chow?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'South Park'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What is the name of the first secondary school in Zhuhai?", "cypher": "match (:ENTITY{name:'The first secondary school in Zhuhai'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Briefly'}]->(n) return distinct n.name"}, {"query": "What is the shortest relationship path between the two layers of a precious metal detector and a gold detector?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Precious metal detectors'})-[*..2]-(b:ENTITY{name:'Gold detectors'})) return count(p)"}, {"query": "Can you find me three books published by Westinghouse Press?", "cypher": "match (:ENTITY{name:'The West Wing Press'})<-[:Relationship{name:'Publishing house'}]-(n)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "The 2011 Zhejiang Provincial Technology Week is about coping, what time is it?", "cypher": "match(:ENTITY{name:'2011Zhejiang Province and Technology[Cops]Activities week'})-[:Relationship{name:'When to hold'}]-> (n) return n.name"}, {"query": "What kind of software is it? What is its size? What version does it support?", "cypher": "match (:ENTITY{name:'Children love to look for the sparkle'})-[:Relationship{name:'Type of'}]->(n) return n.name as name union all match (:ENTITY{name:'Children love to look for the sparkle'})-[:Relationship{name:'Software size'}]->(m) return m.name as name union all match (:ENTITY{name:'Children love to look for the sparkle'})-[:Relationship{name:'The version'}]->(r) return r.name as name"}, {"query": "You know, you need to use the molecule of 4-acetaminophen-3-hydroxybutylamate, right?", "cypher": "match(n:ENTITY{name:'4-Ethyl acetate-3-Hydroxybutyric acid'})-[:Relationship{name:'Molecular weight'}]-> (h) return h.name"}, {"query": "How long is the shortest relationship between Yang Shan and Sin Jia?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Monk'})-[*..2]-(b:ENTITY{name:'The criticism'})) return count(p)"}, {"query": "Can you help me find the name of the artist who was born in the year 18 of Qing Dynasty?", "cypher": "match (:ENTITY{name:'The first was the death of the first president.'})<-[:Relationship{name:'Date of birth'}]-(n)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name"}, {"query": "Can you find the 31 page Chinese contemporary realist oil painter: dating back to no more than three layers of relationship?", "cypher": "match (n:ENTITY{name:'Chinese contemporary realist painters: back to the past'})-[:Relationship*1..2]->(x) where x.name<>'31Page' return distinct x.name"}, {"query": "What is the name of the non-profit organization that promotes freedom of computer users?", "cypher": "match (:ENTITY{name:'Nonprofit organization'})<-[:Relationship{name:'Nature of the species'}]-(m), (m)-[:Relationship{name:'The Claim'}]->(n) where n.name='Promoting freedom for computer users' return distinct m.name"}, {"query": "Who can tell us about the opening hours of the bean company?", "cypher": "match (p:ENTITY{name:'The Bean Company'}) return p.time"}, {"query": "Do you know what has a double classification with galaxies?", "cypher": "match (n)-[:Relationship*2{name:'Classified'}]->(p:ENTITY{name:'The galaxy'}) RETURN distinct n.name"}, {"query": "I'm wondering if you know of any type of relationship within the two levels of the Blue Lotus Hotel in Hanoi?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Blue Lotus Hotel in Hanoi'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "I want to know about the compound 2-metha-4-triethyl methyl-methyl-acetyl acetate, can you give me the CAS number?", "cypher": "match(:ENTITY{name:'(E)-1-Acrylic acid is a common ingredient in many foods.'})-[:Relationship{name:'CASThe number'}]-> (q) return q.name"}, {"query": "It's called \"Barbarian Wound Wrapper\" in Chinese, do you know what its equipment message is?", "cypher": "match (:ENTITY{name:'The wounds are covered with a brutal cloth.'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Equipment'}]->(q) return distinct q.name"}, {"query": "How many people does he have working for United Airlines?", "cypher": "match (:ENTITY{name:'United Airlines'})<-[:Relationship{name:'Company name'}]-(p)-[:Relationship{name:'Number of employees'}]->(n) return distinct n.name"}, {"query": "Do you know what other names she has and what sect she belongs to?", "cypher": "match (:ENTITY{name:'The heartless'})-[:Relationship{name:'Other names'}]->(n) return n.name as name union all match (:ENTITY{name:'The heartless'})-[:Relationship{name:'The Gate'}]->(m) return m.name as name"}, {"query": "What are the archaeological artifacts in the Nanjing Museum collection?", "cypher": "match (:ENTITY{name:'The museum is located in the city of Nanjing, and the museum is located in the city of Nanjing.'})<-[:Relationship{name:'The collection'}]-(m), (m)-[:Tag{name:'The label'}]->(n) where n.name='Archaeology' return distinct m.name"}, {"query": "What books are priced at $13.50? Can you help me find two?", "cypher": "match (:ENTITY{name:'13.50Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "What kind of relationships are there between the two layers of the star?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The star of the moon'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "I would like to know the full name of the morning, middle and night, night and night, moon over the mountain, the three-story building, the relationship?", "cypher": "match (n:ENTITY{name:'The morning rush; The moon passed over the mountain in the dead of night'}) - [*1..3]->(x) where x.name <>'The whole word \"mother\"' return distinct x.name"}, {"query": "Tell me, when was the founding of Barbara's company?", "cypher": "match (p:ENTITY{name:'The Barbarella Company'}) return p.time"}, {"query": "Do you have software that is 21.77M?", "cypher": "match (:ENTITY{name:'21.77M'})<--(n) return n.name"}, {"query": "Can you list the three books by Zhang Guo-Dragon and which publisher published them?", "cypher": "match (:ENTITY{name:'The Dragon'})<-[*]-(m), (m)-[:Relationship{name:'Publishing house'}]->(n) return m.name,n.name limit 3"}, {"query": "What are the types of relationships that are involved in the two layers of the rock?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Rock of the Amish'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "What is the name of the album by Half a Heart by One Direction?", "cypher": "match(:ENTITY{name:'Half a heart'})-[:Relationship{name:'Album by'}]-> (x) return x.name"}, {"query": "What is the tag of this game 100 tasks in Chinese?", "cypher": "match (:ENTITY{name:'100Chinese version of the task'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'The game' return p.name"}, {"query": "Do you know which hotels are in a 2nd floor label relationship with the Flower Garden Hotel?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'Flower Garden Hotel'}) RETURN distinct n.name"}, {"query": "What is the appearance of the spotted streaked lizard and what kind of environment does it live in?", "cypher": "match (:ENTITY{name:'The spotted ladybug'})-[:Describe{name:'The label'}]->(n) return n.name as name union all match (:ENTITY{name:'The spotted ladybug'})-[:Relationship{name:'The environment'}]->(m) return m.name as name"}, {"query": "What is the profession of the outgoing terminator, Liu Wencheng?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'The Terminator'}]-(x)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name"}, {"query": "What are the main achievements of the Chinese people?", "cypher": "match (:ENTITY{name:'Han'})<-[:Relationship{name:'Ethnicity'}]-(x)-[:Relationship{name:'Major achievements'}]->(q) return distinct q.name limit 3"}, {"query": "Compound ((R) - ((-) -2-amino spikenard, what is its Chinese name?", "cypher": "match(:ENTITY{name:'(R)-(-)-2-Amino acids'})-[:Relationship{name:'Chinese surname'}]-> (x) return x.name"}, {"query": "Can you tell me the identity of this person named Liu Yue in Chinese?", "cypher": "match (:ENTITY{name:'The Encouragement'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Tag{name:'The label'}]->(m) return distinct m.name limit 1"}, {"query": "I'm going to try to get to know you better about the Sansi Shrine.", "cypher": "match (:ENTITY{name:'The Sansi Shrine'})--(p) return p.name skip 3"}, {"query": "How many exhibitors are participating in the second China International New Building Materials and Energy Saving Building Exhibition 2011?", "cypher": "match(:ENTITY{name:'2011The second China International New Building Materials and Energy Saving Building Exhibition'})-[:Relationship{name:'Number of exhibitors'}]-> (x) return x.name"}, {"query": "Who are the same profession as Ding-wan? What are their labels? Are they in the correct order according to the number of labels for each person?", "cypher": "match (n:ENTITY{name:'Ding-wan'})-[:Relationship{name:'Professional life'}]->(:ENTITY)<-[:Relationship{name:'Professional life'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "What number is 1002 in the octahedron?", "cypher": "match (:ENTITY{name:'1002'})<-[:Relationship{name:'The Eightfold Path'}]- (m) return m.name"}, {"query": "What kind of relationships are there in the five layers that Li is talking about?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Li Daan'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "The film is about a young woman who is trying to find her dream job in a black and white three-layer relationship.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The dream-eating black and white whale'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "Who is Lee Yong-po's male double?", "cypher": "match (:ENTITY{name:'Lee Yongpo'})<-[:Relationship{name:'Male and female'}]-(m) return m.name"}, {"query": "What is the shortest path between Sichuan Branch Steel [Group] Ltd. and Sichuan Deoxy Iron Alloy [Group] Ltd. in the 2nd level?", "cypher": "match p=shortestpath((a:ENTITY{name:'Sichuan deoxyribonucleic acid[The Group]Limited liability company'})-[*..2]-(b:ENTITY{name:'Sichuan Bran and Branch Steel[The Group]Limited company'})) return p"}, {"query": "How many films have Universal Films filmed in the US?", "cypher": "match (:ENTITY{name:'The world cinema'})<--(m), (m)-[:Relationship{name:'Location'}]->(n) where n.name='The United States' return count(distinct m.name)"}, {"query": "I'm interested in the following: What effects are compatible with SMART MEDIA?", "cypher": "match (:ENTITY{name:'SMART MEDIA'})<-[:Relationship{name:'Compatibility'}]- (q) return q.name"}, {"query": "I want to see five pictures of a modern snow visit to the temple.", "cypher": "match (n:ENTITY{name:'Visiting the temple in the snow'})-[:Relationship*]->(x) where x.name<>'The modern' return distinct x.name limit 5"}, {"query": "What is the shortest path between law and life and Chinese law in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Law and Life[The half-monthly]'})-[:Relationship*..2]-(b:ENTITY{name:'Chinese law'})) return count(p)"}, {"query": "I would like to know 5 things about French national Charlotte Sylvain in the 1-5 relationship?", "cypher": "match (n:ENTITY{name:'Charlet Sylvain'})-[*1..5]->(x) where x.name<>'Charlet Sylvain,French national athlete.' return distinct x.name limit 5"}, {"query": "Besides the acronym IASI, can you tell me about the six things you know about the International Sports Information Association (IASI) in Level 2?", "cypher": "match (:ENTITY{name:'The International Sports Information Council is a nonprofit organization.'})-[:Relationship*1..2]->(p) where p.name <> 'IASI' return p.name limit 6"}, {"query": "Do you remember when you started Shanghai Super Aluminum Semiconductor Co., Ltd.?", "cypher": "match(:ENTITY{name:'Shanghai Superconductor Co., Ltd. is a Chinese company.'})-[:Relationship{name:'Founded'}]-> (q) return q.name"}, {"query": "I wonder what Zhang Wookhi does for a living?", "cypher": "match (:ENTITY{name:'The water'})<-[:Relationship{name:'Original name'}]-(n)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name"}, {"query": "Where is the martyrdom literature?", "cypher": "match (:ENTITY{name:'The Chinese literature[Youth heroes, martyrs of the revolution]'})-[:Relationship{name:'Where I was born'}]->(m) return distinct m.name"}, {"query": "What are the names of the voice actors who have the same voice acting skills as Motoi? What are the labels for each of these works? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'The Motoi'})-[:Relationship{name:'Sound'}]->(:ENTITY)<-[:Relationship{name:'Sound'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "The full name of the institution is Shengjian Medical and Beauty Hospital, located on the 5th floor of the Mid-Sho International Building in the West Zone of Loyang City.", "cypher": "match (:ENTITY{name:'The Shenzhen Medical and Beauty Hospital is located in the West Zone of the Central State International Building in Loyang City.5The building is a beauty hospital.'})<-[:Describe{name:'The label'}]-(q) return  max(q.name)"}, {"query": "What is the career of Wu Zetian besides being a famous screen star and a redhead?", "cypher": "match (n:ENTITY{name:'The first one'})-[:Relationship{name:'Professional life'}]->(h) where h.name <> 'Famous screen stars' and h.name <> 'Red people' return distinct h.name limit 1"}, {"query": "What is the shortest relationship path between the two layers of the watermelon?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Lee Yun[The novel The Water-Smokers]'})-[*..2]-(b:ENTITY{name:'The Juwi[The Long Novel The most famous person in the world]'})) return count(p)"}, {"query": "What are the main achievements of the Zhujiang Canal?", "cypher": "match (:ENTITY{name:'The Zhuang River Canal'})<-[:Relationship{name:'Brokerage company'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name"}, {"query": "The following is a list of five messages that Lee and Lee shared:", "cypher": "match (n:ENTITY{name:'The West River; The two women were also arrested.'}) - [*]->(x) where x.name<>'The Irrational' return distinct x.name limit 5"}, {"query": "Who are the partners of the believers in Judaism?", "cypher": "match (m:ENTITY{name:'Judaism'})<-[:Relationship{name:'Faith'}]-(h),(h)-[:Relationship{name:'The partner'}]->(n) return distinct n.name"}, {"query": "Can you help me find out the price of two books and their publication date?", "cypher": "match (:ENTITY{name:'62Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Do you know what book author Bobby Ford wrote?", "cypher": "match (:ENTITY{name:'Bobby is?Ford'})<-[:Relationship{name:'Written by'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 1"}, {"query": "The following is a list of the topics covered in the article \"The Great Wall of China: The Northwest View of the Great Wall of China\".", "cypher": "match (n:ENTITY{name:'The view of the north plain of the Great Rift Valley after the rain'})-[:Relationship*1..2]->(x) where x.name<>'The gossip' return distinct x.name"}, {"query": "I would like to know what the relationship is between the three levels of the school that is involved in the Liberation Street Elementary School?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Freeing the Street Primary School'}) UNWIND relationships(path) AS rel return rel.name limit 3"}, {"query": "Do you know the types of relationships within the three layers of pirated Drui?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The pirate drew'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Tell me three things about this person, Adina Porter.", "cypher": "match (:ENTITY{name:'Adina Porter'})--(m) return  distinct m.name limit 3"}, {"query": "Can you find me 10 books for $20 and when they will be published?", "cypher": "match (:ENTITY{name:'20Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 10"}, {"query": "I wonder what year the battle of Kawasaki took place?", "cypher": "match (:ENTITY{name:'The Battle of Kawasaki'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'The time'}]->(n) return distinct n.name"}, {"query": "Can you tell us about the two-tier relationship between the industry figure Liu Yansheng and the media?", "cypher": "match (n:ENTITY{name:'The Sun is silent.'})-[*1..4]->(x) where x.name<>'Industry people' return distinct x.name"}, {"query": "The Japanese film, directed by Yayoichi Shizuka, is a 2014 Japanese film, directed by Yayoichi Shizuka.", "cypher": "match(:ENTITY{name:'Oh, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, God, the.[Japanese2014The film is directed by Yuki Yatsura.]'})-[:Relationship{name:'Director'}]-> (m) return m.name"}, {"query": "Who are the people of the same sex as Yandereen? What are their labels? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'The Lady of the Lake'})-[:Relationship{name:'Gender and race'}]->(:ENTITY)<-[:Relationship{name:'Gender and race'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "I would like to know what the relationship is between the two levels of the Zarranja Museum?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Zaranjan Museum'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the main ingredient of the dish?", "cypher": "match (:ENTITY{name:'The collapsed pin'})-[:Relationship{name:'Classified'}]->(n) return n.name as name union all match (:ENTITY{name:'The collapsed pin'})-[:Relationship{name:'Main ingredients'}]->(m) return m.name as name"}, {"query": "What books are priced at $38? Can you help me find three?", "cypher": "match (:ENTITY{name:'38Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Who is the voice of the character Ash roller? Can you tell me three?", "cypher": "match (:ENTITY{name:'Ash roller(Listening to the Minister)'})<-[:Relationship{name:'The lower jaw'}]-(q),(q)-[:Relationship{name:'Sound'}]->(h) return h.name order by h.name limit 3"}, {"query": "The third edition of the 2011 Organic Food and Vegetable Expo in Spring Spring is about to start, do you know the exact time of the exhibition?", "cypher": "match(:ENTITY{name:'2011The third edition of the Organic Food and Vegetable Expo in Spring'})-[:Relationship{name:'Exhibition hours'}]-> (m) return m.name"}, {"query": "Can you find me two completed novels?", "cypher": "match (:ENTITY{name:'Completed'})<-[:Relationship{name:'The novel progresses'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "What else do you know about the Guam giant bat besides its distribution in Guam? Find 6 information in 3 layers.", "cypher": "match (:ENTITY{name:'The Guam bat'})-[:Relationship*1..3]-(p) where p.name <> 'Guam' return  p.name limit 6"}, {"query": "The Chinese version of God is a Girl has a yoga label?", "cypher": "match (:ENTITY{name:'(The Chinese version of God is a girl'})-[:Tag{name:'The label'}]-> (x) with x order by x.name return x.name"}, {"query": "Do you have the EINECS registration number for 4-methylmethacrylate-based palm acetate?", "cypher": "match(n:ENTITY{name:'4-Methyl ether-based palm phosphates'})-[:Relationship{name:'EINECSThe number of the log'}]-> (m) return m.name"}, {"query": "Is there a link between geography and tier 3 labeling?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Geography'}) RETURN distinct n.name limit 5"}, {"query": "What is the relationship between the two layers of the 49th Locarno International Film Festival?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The first49The film was screened at the Locarno International Film Festival.'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What is the relationship between the seasons that are embraced in the two layers?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The season of embrace'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I'm wondering what chemical has the CAS number 38072-94-5?", "cypher": "match (:ENTITY{name:'38072-94-5'})<-[:Relationship{name:'CASThe number'}]- (h) return h.name"}, {"query": "What is the shortest connection path between the three layers of security and field security?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The drilling of the well into safety'})-[*..3]-(b:ENTITY{name:'Safe electricity in the countryside'})) return count(p)"}, {"query": "The 4S Golf Cup College Open, did you know?", "cypher": "match (:ENTITY{name:'4SThe College Open of the Golf Cup'})--(m) return m.name skip 4"}, {"query": "Help me find two species of woolly tree.", "cypher": "match (:ENTITY{name:'The Kisanko'}) <- [:Relationship{name:'The Department'}]-(m), (m) - [:Relationship{name:'The Eye'}]->(n) where n.name='The Eye' return distinct m.name"}, {"query": "What is the magnitude 7.0 earthquake in our country?", "cypher": "match (:ENTITY{name:'7.0The earthquake'})<-[:Relationship{name:'The earthquake was of magnitude'}]- (x) return x.name"}, {"query": "The most important thing is to find the representative works of people born in October 1971.", "cypher": "match (:ENTITY{name:'1971Year of birth10The Moon'})<-[:Relationship{name:'Date of birth'}]-(q)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name"}, {"query": "And what will make you realize what the home of the Jade Eagle is?", "cypher": "match (:ENTITY{name:'The Yuletide is gone.'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Area'}]->(q) return distinct q.name"}, {"query": "What are the main areas of distribution of the long-tailed shrew and what are its habits?", "cypher": "match (:ENTITY{name:'The Long-Strapped'})-[:Relationship{name:'Distribution areas'}]->(n) return n.name as name union all match (:ENTITY{name:'The Long-Strapped'})-[:Relationship{name:'The Survival Habit'}]->(m) return m.name as name"}, {"query": "The 10th edition of the Shanghai-based startup project investment chain affiliate exhibition was held in 2011.", "cypher": "match(:ENTITY{name:'2011[Shanghai]The 10th edition of the Entrepreneurship Project Investment Chain Exhibition'})-[:Relationship{name:'The scope of the exhibition'}]-> (q) return q.name"}, {"query": "The first is the number of letters in the alphabet, the smallest is the number of letters in the alphabet.", "cypher": "match (:ENTITY{name:'Oh, my God.'})<-[:Relationship{name:'Chief of Staff'}]-(x),(x)-[:Relationship{name:'Numbered in pencil'}]->(m) return  min(m.name)"}, {"query": "What other novels are in the series?", "cypher": "match (:ENTITY{name:'Connected'})<-[:Relationship{name:'The novel progresses'}]-(q),(q)-[:Relationship{name:'Chinese name'}]->(p) return distinct p.name limit 1"}, {"query": "The name of each person's label, and the order in which they are listed, is given by the number of labels.", "cypher": "match (n:ENTITY{name:'Fa is honored'})-[:Relationship{name:'Ethnic groups'}]->(:ENTITY)<-[:Relationship{name:'Ethnic groups'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Who is the CEO of Microsoft (China)?", "cypher": "match (:ENTITY{name:'Chairman and CEO of Micro-Invest (China) Ltd.CEO'})<-[:Relationship{name:'Professional life'}]-(m) return m.name"}, {"query": "Can you tell me about any of the representative works of Biang?", "cypher": "match (:ENTITY{name:'The end'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Representative works'}]->(n) return distinct n.name"}, {"query": "Can you find me two museums?", "cypher": "match (:ENTITY{name:'The museum'})<-[:Tag{name:'The label'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "I would like to know the real name and date of birth of the person who took office.", "cypher": "match (:ENTITY{name:'The Ascension'})-[:Relationship{name:'Real name'}]->(n) return n.name as name union all match (:ENTITY{name:'The Ascension'})-[:Relationship{name:'Birthday'}]->(m) return m.name as name"}, {"query": "Can you find the 16 teaching materials published by the five Qinghai University Presses?", "cypher": "match (:ENTITY{name:'The University of Qinghai'})<-[:Relationship{name:'Publishing house'}]- (mn) -[:Relationship{name:'The book'}]->(n:ENTITY{name:'16Open up'}) return mn.name limit 5"}, {"query": "If you've been to the 2012 Beijing Sound Forest Music Festival, do you remember how much it cost?", "cypher": "match(:ENTITY{name:'2012The Sound of the Great Wall in Beijing Forest Music Festival'})-[:Relationship{name:'The price'}]-> (m) return m.name"}, {"query": "Do you have a favorite author born in Connecticut, USA?", "cypher": "match (:ENTITY{name:'Connecticut, U.S.A. The following is a list of cities in Connecticut.'})<-[:Relationship{name:'Where I was born'}]-(m)-[:Relationship{name:'Representative works'}]->(q) return distinct m.name limit 1"}, {"query": "Can you tell me about the main department of this foreign language school called Hochschule Bochum - University of Applied Sciences?", "cypher": "match (:ENTITY{name:'Hochschule Bochum - University of Applied Sciences'})<-[:Relationship{name:'Foreign language name'}]-(q),(q)-[:Relationship{name:'Main Faculty'}]->(p) return p.name order by p.name limit 1"}, {"query": "Do you know what kind of jobs people born in Guangxi North do?", "cypher": "match (:ENTITY{name:'North of Guangxi'})<-[:Relationship{name:'Where I was born'}]-(m)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name"}, {"query": "Do you remember what the theme of the first World Congress of Chinese in 2007 was?", "cypher": "match(:ENTITY{name:'2007The first World Congress of Chinese'})-[:Relationship{name:'The theme of the conference'}]-> (q) return q.name"}, {"query": "The year in which the ancient calendar of our country was called the Nanjing Decade?", "cypher": "match (:ENTITY{name:'Ten years of Nan-hyo'})<-[:Relationship{name:'The year'}]- (h) return h.name"}, {"query": "What else do you know about actress Ben Murat besides the fact that she was in the film Sakamoto's Clouds?", "cypher": "match (:ENTITY{name:'The Japanese'})-[:Relationship*1..2]-(p) where p.name <> 'Clouds on the Hill' return  p.name limit 10"}, {"query": "Do you know when the University of Nankai's Fuhai College was founded?", "cypher": "match (:ENTITY{name:'The University of Nanking'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'When did it start?'}]->(n) return distinct n.name"}, {"query": "What are the representative works of the gold marble?", "cypher": "match (:ENTITY{name:'The gold dollar'})-[:Relationship{name:'Representative works'}]->(m) return distinct m.name"}, {"query": "What chemical has the symbol T?", "cypher": "match (:ENTITY{name:'T'})<-[:Relationship{name:'The danger sign'}]- (n) return n.name"}, {"query": "Tell me about the game, the shortest name of which is the shortest description of the product?", "cypher": "match (:ENTITY{name:'The game is a mini-adventure game, released on July 1, 2013.12Year of birth01The Moon20The sun.'})<-[:Describe{name:'The label'}]-(h) return  min(h.name)"}, {"query": "What games have the same operating environment as Star Wars: The Force Awakens 2? What are the respective labels? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'The star of the show is Kabbi Super Adventure2'})-[:Relationship{name:'Operating environment'}]->(:ENTITY)<-[:Relationship{name:'Operating environment'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "I wonder what kind of relationships are involved in the three layers of riverine boiling?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The river is boiling'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I need you to tell me about the kind of relationship involved in the two-tier Andhra village committee.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Andean Village Committee'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Help me find the selfless adjectives and adverbs", "cypher": "match (:ENTITY{name:'Selflessness'})-[:Relationship{name:'The synonym'}]->(n) return n.name as name union all match (:ENTITY{name:'Selflessness'})-[:Relationship{name:'The Antithesis'}]->(m) return m.name as name"}, {"query": "I am interested in the publication 0 Guides for Early Education for Children aged 3 years.", "cypher": "match (:ENTITY{name:'0Oh, my God.3Guidelines for early childhood education'})-[:Tag{name:'The label'}]-> (x) with x order by x.name where x.name <> 'Published' return x.name"}, {"query": "Can you tell us about the five relationship types that the green-headed Hawaiian sub-species covers in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Green-headed parrot, Hawaiian subspecies'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Help me find a costume designer for the play.", "cypher": "match (:ENTITY{name:'Costume designer for the theater'})<-[:Relationship{name:'Professional life'}]-(m) return distinct m.name limit 1"}, {"query": "What are the English names of the 7 subspecies of plants? Name 10?", "cypher": "match (:ENTITY{name:'7Subspecies'})<-[:Relationship{name:'Subspecies'}]-(h)-[:Relationship{name:'English name'}]->(q) return distinct q.name limit 10"}, {"query": "12345 oil this song is so good, do you know who is the singer?", "cypher": "match(:ENTITY{name:'12345Fuel'})-[:Relationship{name:'The song was originally sung'}]-> (x) return x.name"}]