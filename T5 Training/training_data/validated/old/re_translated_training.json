[{"query": "Do you know what the hardness difference is for the most commonly used 301-SH stainless steel tape?", "cypher": "match(p:ENTITY{name:'301SHStainless steel bands'})-[:Relationship{name:'Hardness difference'}]-> (q) return q.name"}, {"query": "And when was he born, and when did he die?", "cypher": "match (:ENTITY{name:'The Roots'})-[:Relationship{name:'Ethnicity'}]->(n) return n.name as name union all match (:ENTITY{name:'The Roots'})-[:Relationship{name:'Date of birth'}]->(m) return m.name as name union all match (:ENTITY{name:'The Roots'})-[:Relationship{name:'Date of death'}]->(r) return r.name as name"}, {"query": "Can you list the games included in the Nintendo N64 platform?", "cypher": "match (:ENTITY{name:'Nintendo is a game.N64'})<-[:Relationship{name:'The game platform'}]- (x) return x.name"}, {"query": "Do you know which is Zhang's main work?", "cypher": "match (:ENTITY{name:'The Chinese government has announced that it will release the new1985Year of birth1The Moon9He is a Chinese actor and former model.'})<-[:Describe{name:'Describe'}]-(p)-[:Relationship{name:'Major works'}]->(n) return distinct n.name limit 1"}, {"query": "Do you know where he is at the University of Nankai's Fuhai College?", "cypher": "match (:ENTITY{name:'The University of Nanking'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Area'}]->(n) return distinct n.name"}, {"query": "What books are priced at $10? Can you help me find two?", "cypher": "match (:ENTITY{name:'10.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Who is the original singer of the song?", "cypher": "match (:ENTITY{name:'The song of love[Sichuanese folk songs]'})-[:Relationship{name:'The song was originally sung'}]-> (m) return distinct m.name"}, {"query": "I met my mother at the 2011 Guangzhou International Energy Saving and Environmental Technology Exhibition, do you know where the exhibition is?", "cypher": "match(:ENTITY{name:'2011The annual Guangzhou International Energy Saving and Environmental Technology Exhibition'})-[:Relationship{name:'Location of exhibition'}]-> (n) return n.name"}, {"query": "What are the species of the genus Culicoides?", "cypher": "match (:ENTITY{name:'Subfamily of the scrub-worm'})<-[:Relationship{name:'The Acoustic'}]- (m) return m.name limit 6"}, {"query": "What is the static load of the 1301TN bearing we use?", "cypher": "match(:ENTITY{name:'1301TNBearing'})-[:Relationship{name:'The stationary load'}]-> (h) return h.name"}, {"query": "I would like to know which places in the world are associated with the second tier of the label? Can you list five?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'The House of the Mountain'}) RETURN distinct n.name limit 5"}, {"query": "You know, the six-year-old who's the smartest, the sweetest, the smartest person in the world, who wrote the Encyclopedia?", "cypher": "match (h:ENTITY{name:'0Oh, my God.6The younger generation is the most intelligent.'})--(x) with x order by x.name where x.name <> 'Published' return x.name"}, {"query": "What are the investment institutions in the US?", "cypher": "match (p:ENTITY{name:'The US investment agency.'})<--(x) return x.name"}, {"query": "How many businesses have been opened in Wuhan?", "cypher": "match (p:ENTITY{location:'The Chinese'}) return count(p)"}, {"query": "Can you recommend a system that supports Android 2.3 or iOS 6.0 or higher?", "cypher": "match (:ENTITY{name:'Android2.3The first is theios6.0or higher'})<-[:Relationship{name:'Support for the system'}]- (m) return m.name"}, {"query": "Can you list the five main works of the people who graduated from the School of Communication Arts of the International Department of Chulalongkorn University?", "cypher": "match (:ENTITY{name:'School of Communication Arts at the International Department of Chulalongkorn University'})<-[:Relationship{name:'Graduated'}]-(n)-[:Relationship{name:'Major works'}]->(m) return distinct m.name limit 5"}, {"query": "Can you tell me what the three German-made weapons are?", "cypher": "match (:ENTITY{name:'Germany'})<-[:Relationship{name:'Producing country'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "What games are the same size as the game The Spider's Escape and what are their individual labels? Order them in order of how many labels they have, from most to least.", "cypher": "match (n:ENTITY{name:'The Big Spider Escape'})-[:Relationship{name:'The size of the game'}]->(:ENTITY)<-[:Relationship{name:'The size of the game'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What is the difference between the near and the opposite of the divine axe?", "cypher": "match (:ENTITY{name:'The God-made Ghost Axe'})-[:Relationship{name:'The synonym'}]->(n) return n.name as name union all match (:ENTITY{name:'The God-made Ghost Axe'})-[:Relationship{name:'The Antithesis'}]->(m) return m.name as name"}, {"query": "What is the shortest distance between the two levels of the village of Incheon Sheng and the village of Wangjiao?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Shameful Village'})-[*..2]-(b:ENTITY{name:'The royal family[A village in Shipin County, Red River State, Yunnan Province]'})) return count(p)"}, {"query": "Do you want to know more about the work of Yuyuma Yuzun in the 2nd layer relationship?", "cypher": "match (n:ENTITY{name:'The Yum-Ma Spring'})-[:Relationship*1..2]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "Can you tell me which schools have had notable alumni who have won this major award for being the first church schools founded by the American Church of Christ in China?", "cypher": "match (:ENTITY{name:'The first church schools in China established by the American Christian Church'})<-[:Relationship{name:'Main awards'}]-(h)-[:Relationship{name:'Famous alumni'}]->(p) return p.name skip 1 limit 10"}, {"query": "Can you name five?", "cypher": "match (p:ENTITY{name:'The man'})<--(x)-->(q:ENTITY{name:'Painter'}) return x.name limit 5"}, {"query": "Which country uses the .hr domain name?", "cypher": "match(:ENTITY{name:'.hr Domain name'})-[:Relationship{name:'State'}]-> (q) return q.name"}, {"query": "Ro lists five types of subjects in the two-layer relationship of the temple of the battle bird.", "cypher": "match (n:ENTITY{name:'The Temple of the Sun[The Warbird]'})-[:Relationship*1..2]->(x) where x.name<>'Five out of five' return distinct x.name"}, {"query": "Find the five Congolese footballers in Makita-Passy Fabry's six-level relationship.", "cypher": "match (n:ENTITY{name:'Makita-Passy Fabry'})-[*1..6]->(x) where x.name<>'Makita-Passy Fabry,The Congolese footballer.' return distinct x.name limit 5"}, {"query": "1TYM is the second singer-songwriter group launched by Y.G. When is their debut?", "cypher": "match(:ENTITY{name:'1tym'})-[:Relationship{name:'When to leave'}]-> (m) return m.name"}, {"query": "I want to get all the information from the Digital Media Department of the Academy of Fine Arts.", "cypher": "match (:ENTITY{name:'Department of Digital Media at the Faculty of Arts'})--(m) return m.name order by m.name"}, {"query": "Where is the Yellow River Gorge located?", "cypher": "match (:ENTITY{name:'Yellowstone Strait flows'})-[:Relationship{name:'Geographical location'}]->(n) return n.name"}, {"query": "In which year was the Vanshan Master's Higher Specialist University founded?", "cypher": "match (:ENTITY{name:'The University of Arts and Sciences of Vinshan'})-[:Relationship{name:'Founded'}]->(m) return distinct m.name"}, {"query": "Can you tell me about the five works of Lee Sang-min Shin-lin that show the reluctance to return to the past?", "cypher": "match (n:ENTITY{name:'Back to the Hajj\u00b7The article was written by a journalist from the city of Beijing.'})-[:Relationship*]->(x) where x.name<>'The End of the World' return distinct x.name limit 5"}, {"query": "You have looked in the Botanical Encyclopedia and found that the varieties of the short-stemmed sparrowflower belong to what group of plants?", "cypher": "match(:ENTITY{name:'The short-stem sparrow[Varieties]'})-[:Relationship{name:'The Outline'}]-> (x) return x.name"}, {"query": "Can you recommend two fantasy novels?", "cypher": "match (:ENTITY{name:'The Magic of the Magical'})<-[:Relationship{name:'Type of'}]- (p) return p.name limit 2"}, {"query": "Thanks for helping me find the molecular formula that is understandable in the book.", "cypher": "match(:ENTITY{name:'The Gupim'})-[:Relationship{name:'Molecular'}]-> (m) return m.name"}, {"query": "Do you have a record of the top 10 events in Korea?", "cypher": "match (:ENTITY{name:'South Korea'})<-[:Relationship{name:'Where I was born'}]-(n)-[:Relationship{name:'Important events'}]->(x) return distinct x.name limit 10"}, {"query": "Do you know what the exhibition categories of the 2011 Canadian International Plastics Expo are?", "cypher": "match(:ENTITY{name:'2011The annual Canadian International Plastics Industry Fair'})-[:Relationship{name:'Exhibition category'}]-> (p) return p.name"}, {"query": "How about a description of the following industry figures, and the people in the two-tier relationship that Hu Jiabao has?", "cypher": "match (n:ENTITY{name:'The Chinese'})-[:Relationship*1..2]->(x) where x.name<>'Industry people' return distinct x.name"}, {"query": "Do you know of anyone who has a third-tier label relationship with engineers?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Engineer'}) RETURN distinct n.name"}, {"query": "Can you give me 10 things about Huang's career?", "cypher": "match (:ENTITY{name:'Captain Hong'})<--(q)-[:Relationship{name:'Professional life'}]->(h) return h.name order by h.name limit 10"}, {"query": "The tofu soup is a food made from ingredients such as tofu, tofu and other ingredients.", "cypher": "match (:ENTITY{name:'The tofu soup is a food made from ingredients such as tofu and tofu.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Spices'}]->(m) return distinct m.name"}, {"query": "Can you give me a list of the names of the relationships involved in the two layers of the GUI?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Old Ones'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me about the kindergartens in the centre of Shanpa River Town?", "cypher": "match (:ENTITY{name:'The kindergarten in the center of the town of Shappa River'})--(m) return  distinct m.name"}, {"query": "Please list 4 and what is the second level of the label relationship with the fruit commune?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'The community of the fruit'}) return distinct n.name limit 4"}, {"query": "I'm not sure if you can tell me where the company is that produces the main product of the car trunk?", "cypher": "match (:ENTITY{name:'The trunk of a car'})<-[:Relationship{name:'Main products'}]-(q),(q)-[:Relationship{name:'Located'}]->(m) return m.name order by m.name limit 5"}, {"query": "I would like to know about five personal details of the relationship between the Maltese footballer Curuana Christian 1-6?", "cypher": "match (n:ENTITY{name:'Curuana Christian'})-[*1..6]->(x) where x.name<>'Curuana Christian,The Maltese footballer.' return distinct x.name limit 5"}, {"query": "What other positions did Ding Zhiqing, formerly the deputy secretary of the Party Committee of the Public Security Bureau of the Yangtze City District, hold?", "cypher": "match (:ENTITY{name:'Mid-autumn in Ding[Former Deputy Secretary of the Party Committee of the Public Security Bureau of Penang County]'})-[:Relationship{name:'Professional life'}]-> (n) with n order by n.name where n.name <> 'Former Deputy Secretary of the Party Committee of the Public Security Bureau of Penang County' return n.name"}, {"query": "I'm not sure if I'm ready to put my modern language in a bunch of curly hair.", "cypher": "match (:ENTITY{name:'A drug addict'})--(x) with x order by x.name where x.name <> 'Modern speech' return x.name"}, {"query": "What is the name of the river that has a catchment area of 2,543 square kilometers?", "cypher": "match (:ENTITY{name:'2543square kilometers'})<-[:Relationship{name:'Area of the watershed'}]-(h)-[:Relationship{name:'Other names'}]->(p) return distinct p.name"}, {"query": "Which characters are associated with the third layer of the tagline of the anime?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Animated characters'}) return distinct n.name"}, {"query": "Can you list information about the Beijing Virchingan Asia Laboratory Equipment Co., Ltd., a three-tiered relationship started in 1999 with a registered capital of 10.2 million yuan?", "cypher": "match (n:ENTITY{name:'Beijing Wicheng Asia Laboratory Equipment Co., Ltd. is a wholly owned subsidiary of Wicheng Asia Laboratories.'}) - [*1..3]->(x) where x.name<>'Beijing Wicheng Asia Laboratory Equipment Co., Ltd. is a wholly owned subsidiary of Wicheng Asia Laboratories. Founded in 1999Year, registered capital1020million,The company is headquartered in Nanchang, Fuzhou, Fuzhou, China. The company's production is located in Daxing, China.", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CALL\"\n  \"CONTAINS\"\n  \"CREATE\"\n  \"DELETE\"\n  \"DETACH\"\n  \"ENDS\"\n  \"FOREACH\"\n  \"IN\"\n  \"INSERT\"\n  \"IS\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"OR\"\n  \"REMOVE\"\n  \"RETURN\"\n  \"SET\"\n  \"STARTS\"\n  \"UNION\"\n  \"UNWIND\"\n  \"USE\"\n  \"WITH\"\n  \"XOR\"\n  \"^\"\n  <EOF> (line 1, column 414 (offset: 413))\n\"PROFILE match (n:ENTITY{name:'Beijing Wicheng Asia Laboratory Equipment Co., Ltd. is a wholly owned subsidiary of Wicheng Asia Laboratories.'}) - [*1..3]->(x) where x.name<>'Beijing Wicheng Asia Laboratory Equipment Co., Ltd. is a wholly owned subsidiary of Wicheng Asia Laboratories. Founded in 1999Year, registered capital1020million,The company is headquartered in Nanchang, Fuzhou, Fuzhou, China. The company's production is located in Daxing, China.\"\n                                                                                                                                                                                                                                                                                                                                                                                                                              ^"}, {"query": "What is the shortest relationship path between the two levels of the Ordeal Vocational Technical College and the Purple Rose Vocational Technical College?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Ordeal Vocational and Technical College'})-[*..2]-(b:ENTITY{name:'The Purple Rose Vocational Technical College'})) return count(p)"}, {"query": "Can you immediately say the CAS number for 2-metha-4-triethyl-methyl-methacrylate acetate?", "cypher": "match(:ENTITY{name:'2-Oh, my God.-4-Trichloroethylene-Oh, my God.-Methyl acetate'})-[:Relationship{name:'CASThe number'}]-> (p) return p.name"}, {"query": "In the meantime, I'm going to share some of the work of Lee Young-ho and Yang Yi-nan.", "cypher": "match (n:ENTITY{name:'The Chinese government has announced that it will'})-[*1..3]->(x) where x.name<>'Lee by the way.' return distinct x.name"}, {"query": "Please tell me what kind of relationship you had with the two people who posted yesterday.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The message yesterday'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you have all the types of relationships that are involved in the three levels of Kinshasa beauty school?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Kinshasa School of Beauty'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "Can you list five Scottish athletes in the MacArthur Pat 4?", "cypher": "match (n:ENTITY{name:'MacArthur Pat'})-[*1..4]->(x) where x.name<>'MacArthur Pat,The Scottish athlete.' return distinct x.name limit 5"}, {"query": "Can you tell me about the political background of this man, his position and other information?", "cypher": "match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'The political face'}]->(n) return n.name as name union all match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Title'}]->(m) return m.name as name union all match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Otherwise'}]->(r) return r.name as name"}, {"query": "Tell me about the next time you have a question about the three other tags besides language and literature.", "cypher": "match (n:ENTITY{name:'The second brother, Yang Xiu, left the puzzle in order.'})-[:Tag{name:'The label'}]->(h) where h.name <> 'Language' and h.name <> 'Literature and culture' return distinct h.name limit 3"}, {"query": "Do you know about the Richter's sea turtle? Find out what else is there to know about the other seven species of sea turtle in the 2nd layer.", "cypher": "match (:ENTITY{name:'The beaches of Richmond'})-[:Relationship*1..2]->(p) where p.name <> 'The Autumn Sea Turtle' return  p.name limit 7"}, {"query": "I would like to know what is the height of a person whose date of birth is unknown?", "cypher": "match (:ENTITY{name:'Unknown'})<-[:Relationship{name:'Date of birth'}]-(p),(p)-[:Relationship{name:'Height'}]->(q) return distinct q.name limit 5"}, {"query": "Can you tell me the chemical formula for C22H17ClN2 is silicon?", "cypher": "match (:ENTITY{name:'C22H17ClN2'})<-[:Relationship{name:'Chemical formula'}]- (q) return q.name"}, {"query": "Do you know how many companies are in Jinan?", "cypher": "match (p:ENTITY{location:'The city of Jinan'}) return count(p)"}, {"query": "Where is the Ban Chien-Kuen Eco-Tourist Resort? What time is it open?", "cypher": "match (:ENTITY{name:'The ecotourism resort of Basing-Gong'})-[:Relationship{name:'Geographical location'}]->(n) return n.name as name union all match (:ENTITY{name:'The ecotourism resort of Basing-Gong'})-[:Relationship{name:'Opening hours'}]->(m) return m.name as name"}, {"query": "What role did Shizuka play?", "cypher": "match (:ENTITY{name:'Shigure'})-[:Relationship{name:'Acting'}]-> (m) return distinct m.name"}, {"query": "You're secretly telling me about the sinking of a fishing boat on the 10th of November 28th?", "cypher": "match (:ENTITY{name:'11.28The sinking of a fishing boat in Dalian'})--(p) with p order by p.name return p.name limit 10"}, {"query": "The 2012 Healthcare Expo was a big eye opener, and I wondered who was hosting it?", "cypher": "match(:ENTITY{name:'2012Annual health exhibition'})-[:Relationship{name:'Hosted'}]-> (q) return q.name"}, {"query": "I'm curious if you can find all the relevant information about Ren Shanping?", "cypher": "match (n:ENTITY{name:'The Renzhang Peak'})-[*]->(x) where x.name<>'Teacher' return distinct x.name limit 5"}, {"query": "Can you list me five relationships that are within the two layers of the Yueyang Mountain Scenic Area?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Yueyang Mountain View District'}) UNWIND relationships(path) AS rel return rel.name limit 5"}, {"query": "What books are there by author Ding Yong-jong, edited by Deng Xiaoping? Can you tell me which publisher published them?", "cypher": "match (:ENTITY{name:'The Chinese government has announced that it will release the newest version of the game.'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Relationship{name:'Publishing house'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know the movie The Thief of Zelda? What other information besides the director of Zelda, please find the other 7 information in layer 2", "cypher": "match (:ENTITY{name:'The Thief Astor'})-[:Relationship*1..2]->(p) where p.name <> 'The Chu-Haran' return  p.name limit 7"}, {"query": "I heard that the 0280D005BNHC filter has been upgraded with new technology, how accurate is the filtering?", "cypher": "match(n:ENTITY{name:'0280D005BNHCThe core'})-[:Relationship{name:'Filtering accuracy'}]-> (x) return x.name"}, {"query": "What fish are distributed in the Hong Kong-Australia-Taiwan area?", "cypher": "match (:ENTITY{name:'The Hong Kong and Macau area'})<-[:Relationship{name:'Distribution'}]-(m) return m.name"}, {"query": "Can you recommend a novel that is a classic?", "cypher": "match (:ENTITY{name:'The Winds of Beauty'})<-[:Relationship{name:'Art style'}]- (p) return p.name"}, {"query": "Can you list the 20 species of vertebrates that live under the door?", "cypher": "match (n:ENTITY{name:'The door of the vertebrate'})<-[:Relationship{name:'The door'}]- (mn) return mn.name limit 20"}, {"query": "Do you know how he expresses the river lights in English?", "cypher": "match (:ENTITY{name:'The River Light'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Foreign language name'}]->(q) return distinct q.name"}, {"query": "Can you name some of the animals that have spinal cord injuries? Can you name five?", "cypher": "match (h:ENTITY{name:'The door of the vertebrate'})<-[:Relationship{name:'The door'}]- (q) return distinct  q.name limit 5"}, {"query": "Do you know what chemical materials are used in the products of the Gucci Company?", "cypher": "match (:ENTITY{name:'The Glue Company'})<-[:Relationship{name:'Manufacturers'}]- (n) return distinct n.name"}, {"query": "Tell me about the personal profile of this person, who is called Xifu, in Chinese, in the four levels of relationships?", "cypher": "match (n:ENTITY{name:'The City of Sioux Falls Xifu'})-[*1..4]->(x) where x.name<>'The City of Sioux Falls Xifu' return distinct x.name limit 5"}, {"query": "Please tell me what is the work of director Liu Yiyang?", "cypher": "match (:ENTITY{name:'The Sun and the Moon'})<-[:Relationship{name:'Director'}]- (m) return distinct m.name"}, {"query": "I'm going to be a part of the project, but I'm not going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project.", "cypher": "match (n:ENTITY{name:'The Sun is a calendar astronomer; Third generation of teachers of the Kyaw Lu script'}) - [:Relationship*1..2]->(x) where x.name<>'7 out of 10' return distinct x.name"}, {"query": "The song is a cover of the song \"Sweet Dreams\" by the band The Beatles.", "cypher": "match (:ENTITY{name:'The song is sung by the singer.2013Year of releaseEPAlbum: Love your heart'})<-[:Relationship{name:'Major achievements'}]-(q),(q)-[:Relationship{name:'Songs and music'}]->(n) return distinct n.name"}, {"query": "I'm going to be writing a blog about my artwork, and I'm going to be writing about my artwork.", "cypher": "match (n:ENTITY{name:'Vietnamese'})-[:Relationship*1..2]->(x) where x.name<>'Art work' return distinct x.name"}, {"query": "Can you tell me the top five achievements of Xu Jinping?", "cypher": "match (x:ENTITY{name:'Xu Jinping'})-[:Relationship{name:'Major achievements'}]-> (m) with m order by m.name return m.name limit 5"}, {"query": "What's the matter with 30,000 tons?", "cypher": "match (:ENTITY{name:'30000Oh, my God.'})<--(n) return n.name"}, {"query": "I wonder who wrote the lyrics to the song \"Lover No. 16\" by my grandfather.", "cypher": "match(:ENTITY{name:'16The Lovers'})-[:Relationship{name:'The word'}]-> (x) return x.name"}, {"query": "Please tell me who is the host of the 5th Spring Home Expo 2012 in Hyogo?", "cypher": "match(:ENTITY{name:'2012The fifth Spring Home Fair in Kobe'})-[:Relationship{name:'Hosted'}]-> (m) return m.name"}, {"query": "Can you name one representative work written by a Canadian citizen?", "cypher": "match (:ENTITY{name:'Canada'})<-[:Relationship{name:'Nationality'}]-(n)-[:Relationship{name:'Representative works'}]->(m) return distinct m.name limit 1"}, {"query": "Do you know what the taste of beef is like?", "cypher": "match(:ENTITY{name:'Sandwiches and beef'})-[:Relationship{name:'The Taste'}]-> (n) return n.name"}, {"query": "Can you find me two species of mosquitoes and describe them?", "cypher": "match (:ENTITY{name:'The Mosquitoes'})<-[:Relationship*]-(m),(m)-[:Describe{name:'Describe'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Do you know what nicknames people born in Zhuzhou, Henan have?", "cypher": "match (:ENTITY{name:'The city of Zhuzhou, Henan Province'})<-[:Relationship{name:'Where I was born'}]-(x),(x)-[:Relationship{name:'Other names'}]->(q) return distinct q.name limit 10"}, {"query": "Do you know anything about the inner ties involved in the Beijing Youth Palace?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Youth Palace in Beijing'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "The book is a poem about the relationship between the two worlds, and the story of the two worlds in which the city is destroyed by the night.", "cypher": "match (n:ENTITY{name:'The city was whistled at night.[A poem of praise]'})-[:Relationship*1..2]->(x) where x.name<>'Published' return distinct x.name"}, {"query": "Please let me know what the relationship is between choosing the toxicity content in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Choosing the Poison'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "I suddenly forgot the chemical formula for 1-hydroxy-2-alkyl, can you write it for me?", "cypher": "match(:ENTITY{name:'1-Hydrogenated-2-Alcohol'})-[:Relationship{name:'Chemical formula'}]-> (q) return q.name"}, {"query": "Fan Ko Xin, born on September 19, 1993 in Seven Rivers City, Heilongjiang Province, is a Chinese female short track speed skater.", "cypher": "match (:ENTITY{name:'The film is about a young man named Van Koen.1993Year of birth9The Moon19Born in Seitung River City, Heilongjiang Province, she is a Chinese female short track speed skater.'})<-[:Describe{name:'Describe'}]-(n),(n)-[:Relationship{name:'Main awards'}]->(h) return distinct h.name"}, {"query": "Can you give me the chemical formula for methyl methacrylate?", "cypher": "match(:ENTITY{name:'Methyl methacrylate'})-[:Relationship{name:'Chemical formula'}]-> (m) return m.name"}, {"query": "What is the main work of the 167-centimeter man?", "cypher": "match (:ENTITY{name:'167In centimeters'})<-[:Relationship{name:'Height'}]-(q),(q)-[:Relationship{name:'Major works'}]->(h) return distinct h.name limit 1"}, {"query": "The investigation has revealed how the outcome of the disappearance of a Chinese tourist in South Korea at 12.30 was reported.", "cypher": "match(:ENTITY{name:'12.30Chinese tourist disappears in South Korea'})-[:Relationship{name:'The result'}]-> (p) return p.name"}, {"query": "I need an introduction to the five layers of social theory, like the five Sullivan anxiety theories?", "cypher": "match (n:ENTITY{name:'The theory of anxiety by Sullivan'})-[*1..5]->(x) where x.name<>'The Society' return distinct x.name limit 5"}, {"query": "What are the famous alumni of Jiangsu Secondary School in Guizhou Province? Name three?", "cypher": "match (:ENTITY{name:'The secondary school in Jiangsu, Guizhou Province, was founded in1942The city is located in the Jiangsu province of Guangzhou, on the banks of the Jinjiang River, and has developed into a city with a large area of land through the efforts of generations of people from the Jiangsu region.41800The remaining square meters are for schoolchildren.2518The people, the layout, the harmony, the environment, the elegant garden-style modern school.'})<-[:Describe{name:'Describe'}]-(n),(n)-[:Relationship{name:'Famous alumni'}]->(h) return distinct h.name limit 3"}, {"query": "What kind of plant is 25cm-35cm tall?", "cypher": "match (:ENTITY{name:'25CM-35CM'})<-[:Relationship{name:'The Chief'}]- (n) return n.name"}, {"query": "What books are published by Ocean Publishing?", "cypher": "match (:ENTITY{name:'Published by Ocean'})<-[:Relationship{name:'Publishing house'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "What chemical substance has a molecular weight of 226?", "cypher": "match (:ENTITY{name:'226'})<-[:Relationship{name:'Molecular weight'}]- (m) return m.name"}, {"query": "Can you name 6 of them?", "cypher": "match (:ENTITY{name:'C12H24'})<-[:Relationship{name:'Chemical formula'}]- (m) return m.name limit 6"}, {"query": "Can you tell me about the five species of plants in the family Tiananmen?", "cypher": "match (n:ENTITY{name:'The star system'})<-[:Relationship{name:'The Department'}]- (mn) return mn.name limit 5"}, {"query": "What are the horror novels? 3 types can I recommend?", "cypher": "match (m:ENTITY{name:'The Terror'})<-[:Relationship{name:'Type of'}]-(h)-[:Relationship{name:'Chinese name'}]->(x) return distinct x.name limit 3"}, {"query": "I would like to know which unit is hosting the 2012 Industrial Computer and Embedded Systems Expo?", "cypher": "match(:ENTITY{name:'2012 Industrial computers and embedded systems exhibition'})-[:Relationship{name:'Host'}]-> (h) return h.name"}, {"query": "Help me find the five species of plants in the mulberry category", "cypher": "match (:ENTITY{name:'The Kimberley'})<-[:Relationship{name:'The Outline'}]-(m) return distinct m.name limit 5"}, {"query": "1- What is the Chinese name for methylphenidate, please help me check in the chemical catalogue.", "cypher": "match(:ENTITY{name:'1-Methyl methacrylate'})-[:Relationship{name:'Chinese surname'}]-> (m) return m.name"}, {"query": "I'm wondering about this animal that belongs to the vertebrate family, can you tell me one of its English names?", "cypher": "match (:ENTITY{name:'The door of the vertebrate'})<-[:Relationship{name:'The door'}]-(x)-[:Relationship{name:'English name'}]->(p) return p.name skip 2 limit 1"}, {"query": "Please tell me which show is sold at 557 Liberation Avenue, 2206 Shandong Square?", "cypher": "match (:ENTITY{name:'The Liberation Avenue557The square is named after the city.2206The room'})<-[:Relationship{name:'Address of ticket office'}]- (n) return n.name"}, {"query": "Do you know what the main element of phosphate is?", "cypher": "match (:ENTITY{name:'Sodium chloride'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The main elements'}]->(n) return distinct n.name"}, {"query": "What other information is there about the Zuo Dong Collection of Books published by the Commercial Printing Library? Help me find the other 6 in the 3 layers.", "cypher": "match (:ENTITY{name:'The Grand Master's School'})-[:Relationship*1..3]-(p) where p.name <> 'Commercial printing' return p.name limit 6", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 47 (offset: 46))\n\"PROFILE match (:ENTITY{name:'The Grand Master's School'})-[:Relationship*1..3]-(p) where p.name <> 'Commercial printing' return p.name limit 6\"\n                                               ^"}, {"query": "What is the relationship if I get the four layers of relationships that are associated with swine flu?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'What if I got swine flu?'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me the first three?", "cypher": "match (:ENTITY{name:'Taurus'})<-[:Relationship{name:'The constellations'}]-(m)-[:Relationship{name:'Other names'}]->(n) return n.name skip 2 limit 10"}, {"query": "I'm not sure what kind of label is this, but I'm not sure what kind of label is this.", "cypher": "match (:ENTITY{name:'Hu is a Chinese national.'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Tag{name:'The label'}]->(x) return distinct x.name limit 1"}, {"query": "Can you find me two books published by Hai Publishing?", "cypher": "match (:ENTITY{name:'The book is published by Shuhai Publishing.'})<-[:Relationship{name:'Publishing house'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "The following is a list of literary works by Liu Yi-nan.", "cypher": "match (n:ENTITY{name:'The first is the one that I sent.'})-[:Relationship*1..2]->(x) where x.name<>'Literary works' return distinct x.name"}, {"query": "Can you help me find the poem written by Don Dey on the web?", "cypher": "match (:ENTITY{name:'The Tang Dynasty'})<-[:Relationship{name:'The Tribe'}]- (mn) -[:Relationship{name:'Written by'}]->(n:ENTITY{name:'The Web'}) return mn.name "}, {"query": "What are the different labels of each person? List them in order of their number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'Sun Weng is a Chinese writer.'})-[:Relationship{name:'The political face'}]->(:ENTITY)<-[:Relationship{name:'The political face'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you name the eight cases that occurred on April 18, 2015?", "cypher": "match (:ENTITY{name:'2015Year of birth4The Moon18The Sun'})<-[:Relationship{name:'The time'}]- (m) return m.name limit 8"}, {"query": "I wonder how many companies were founded in 1998?", "cypher": "match (p:ENTITY{time:'1998'}) return count(p)"}, {"query": "The company is also known for its online magazine, The Mystery Ocean, which is published by Jilin Publishing Group Ltd.", "cypher": "match (n:ENTITY{name:'The Mysterious Sea'})-[:Relationship*1..3]->(x) where x.name<>'The company is a subsidiary of Jilin Publishing Group.' return distinct x.name"}, {"query": "Do you know of any publications published in 2006/1/1? Can you tell me two?", "cypher": "match (:ENTITY{name:'2006/1/1'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know the main edible benefits of the foam mixture?", "cypher": "match (:ENTITY{name:'The fog is thick.'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Mainly consuming power'}]->(n) return distinct n.name"}, {"query": "Which three major awards have been awarded to Shanghai Aluminum University of Technology?", "cypher": "match (:ENTITY{name:'Shanghai Aluminum Higher Technical University is a high-tech engineering university with a tradition of excellence and specialties.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Main awards'}]->(p) return distinct p.name limit 3"}, {"query": "Do you know what the name of the relationship within the five layers that this person is involved in is?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'What is the name of the ship?'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know the Chinese name for rainbow love?", "cypher": "match (:ENTITY{name:'The meaning of rainbow love'})-[:Relationship{name:'Chinese name'}]-> (q) with q order by q.name return distinct q.name"}, {"query": "13131 is a weird name for a music album, do you know that?", "cypher": "match (:ENTITY{name:'13131[The seventh album by Chen Lin]'})--(q) with q order by q.name where q.name <> 'Music' return q.name"}, {"query": "Can you tell me where the scope of the first aid for cardiac asthma is?", "cypher": "match (:ENTITY{name:'The first aid for heart attack'})<-[:Relationship{name:'Chinese name'}]-(n),(n)-[:Relationship{name:'Scope of application'}]->(x) return distinct x.name limit 1"}, {"query": "Can you give me a list of the top ten T-series products from TCL?", "cypher": "match (h)<-[:Relationship{name:'Chinese name'}]-(m) where substring(h.name,0,5)='TCL T' return distinct m.name limit 10"}, {"query": "I'm not sure what Fan Qiao Hua does for a living.", "cypher": "match (:ENTITY{name:'The Chinese'})<--(x)-[:Relationship{name:'Professional life'}]->(n) return n.name order by n.name limit 5"}, {"query": "Please give us 10 articles about Cloud Wang.", "cypher": "match (:ENTITY{name:'CLOUD WANG'})--(h) return  distinct h.name limit 10"}, {"query": "The name of the pilot, who is also known as \"Ch\u014dsh\u016b-no-Hokuto\", is not mentioned in the book.", "cypher": "match (n:ENTITY{name:'The flight officer is small.'})-[:Relationship{name:'Other names'}]->(h) where h.name <> 'The King of the Owl' and h.name <> 'North Nose' return distinct h.name limit 3"}, {"query": "Do you know how many labels are on aquatic life?", "cypher": "match(:ENTITY{name:'Aquatic life'})-[:Tag{name:'The label'}]-> (n) return n.name order by n.name"}, {"query": "Tell me about the three films you know about Sato Ryuji, besides his other work as a \"Live Spectacle Fire Movie Ninja\" assistant to Yuki Bobo.", "cypher": "match (:ENTITY{name:'Sato is a Japanese artist.'})<-[:Relationship{name:'Chinese name'}]-(x)-[:Relationship{name:'Representative works'}]->(m) where m.name <> '\"I'm not going to.Live SpectacleThe Ninja Fireworks are a great way to get your kids to enjoy the game.' return distinct m.name limit 3", "error": "Invalid input 'm': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CALL\"\n  \"CONTAINS\"\n  \"CREATE\"\n  \"DELETE\"\n  \"DETACH\"\n  \"ENDS\"\n  \"FOREACH\"\n  \"IN\"\n  \"INSERT\"\n  \"IS\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"OR\"\n  \"REMOVE\"\n  \"RETURN\"\n  \"SET\"\n  \"STARTS\"\n  \"UNION\"\n  \"UNWIND\"\n  \"USE\"\n  \"WITH\"\n  \"XOR\"\n  \"^\"\n  <EOF> (line 1, column 172 (offset: 171))\n\"PROFILE match (:ENTITY{name:'Sato is a Japanese artist.'})<-[:Relationship{name:'Chinese name'}]-(x)-[:Relationship{name:'Representative works'}]->(m) where m.name <> '\"I'm not going to.Live SpectacleThe Ninja Fireworks are a great way to get your kids to enjoy the game.' return distinct m.name limit 3\"\n                                                                                                                                                                            ^"}, {"query": "Can you tell me about the people who are in a 4th level relationship with Liu Yan? Can you name two?", "cypher": "match (n)<-[:Relationship*4{name:'The partner'}]-(p:ENTITY{name:'The Younger Ones'}) RETURN distinct n.name limit 2"}, {"query": "Who is the interim commander-in-chief of the new army of the Wu Zetian Rebellion?", "cypher": "match (:ENTITY{name:'The interim commander of the new army of the Wu Zetian insurgency'})<-[:Relationship{name:'Major achievements'}]-(m) return distinct m.name"}, {"query": "What is the alias of the main character in Grand Theft Auto: The Lost and Damned?", "cypher": "match (:ENTITY{name:'Grand Theft Auto:The Lost and Damned(Lost and cursed)'})<-[:Relationship{name:'Representative works'}]-(h)-[:Relationship{name:'Other names'}]->(n) return distinct n.name"}, {"query": "Can you tell us more about the career of Balu, what his faith is and what military rank he holds?", "cypher": "match (:ENTITY{name:'Blocking the distance'})-[:Relationship{name:'Professional life'}]->(n) return n.name as name union all match (:ENTITY{name:'Blocking the distance'})-[:Relationship{name:'Faith'}]->(m) return m.name as name union all match (:ENTITY{name:'Blocking the distance'})-[:Relationship{name:'Military officer'}]->(r) return r.name as name"}, {"query": "The 2012 Burmese Tea Party from the Tea Culture Expo to the Purple Sands Boutique Exhibition is set to be held in which exhibition hall?", "cypher": "match(:ENTITY{name:'2012 Burhan Yule from the Tea Culture Fair and the Purple Sand Boutique'})-[:Relationship{name:'The exhibition hall'}]-> (p) return p.name"}, {"query": "How do you explain the term \"misuse of public funds\"?", "cypher": "match (:ENTITY{name:'Misuse of public funds'})<-[:Relationship{name:'Interpretation'}]-(m) return distinct m.name"}, {"query": "Do you know how fast the ocean plate is moving?", "cypher": "match (:ENTITY{name:'The ocean floor'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Moving speed'}]->(q) return distinct q.name"}, {"query": "Can you tell me what kind of relationship is involved in the farmers in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'What is the Farmer?'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "I'm not sure if this is a good idea, but I'm not sure if it's a good idea.", "cypher": "match (:ENTITY{name:'The apprentice of the magician'})--(h) return h.name order by h.name limit 1"}, {"query": "Do you know the three labels in Xiaoping County besides the language?", "cypher": "match (:ENTITY{name:'Xiaoping overlooks three counties'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'Language' return p.name limit 3"}, {"query": "What is the nickname of the weapon tank developed in 1963?", "cypher": "match (h:ENTITY{name:'1963Year of birth'})<-[:Relationship{name:'R&D time'}]-(x)-[:Relationship{name:'Other names'}]->(p) return distinct p.name"}, {"query": "I wonder what the magnitude of the 10.23 Ganja earthquake was?", "cypher": "match(:ENTITY{name:'10.23The earthquake in Ganja'})-[:Relationship{name:'The earthquake'}]-> (x) return x.name"}, {"query": "What is Shi Yong-kyu's profession?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Chinese name'}]-(n),(n)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 1"}, {"query": "What is the name of the chemical called 1-Adamantyl methyl ketone?", "cypher": "match (:ENTITY{name:'1-Adamantyl methyl ketone'})<-[:Relationship{name:'Foreign language name'}]- (h) return h.name"}, {"query": "What is the name of the nation of King Seuss and what are his labels?", "cypher": "match (:ENTITY{name:'The King of the Sea Cypress'})-[:Relationship{name:'Ethnicity'}]->(n) return n.name as name union all match (:ENTITY{name:'The King of the Sea Cypress'})-[:Tag{name:'The label'}]->(m) return m.name as name union all match (:ENTITY{name:'The King of the Sea Cypress'})-[:Tag{name:'The label'}]->(r) return r.name as name"}, {"query": "Check when the 2012 Shanghai International Education Expo is taking place.", "cypher": "match(:ENTITY{name:'2012The Shanghai International Education Fair is held in Shanghai.'})-[:Relationship{name:'The session'}]-> (m) return m.name"}, {"query": "What are the main works of the authors of the 10 constellations of Virgo?", "cypher": "match (:ENTITY{name:'The Virgo'})<-[:Relationship{name:'The constellations'}]-(n)-[:Relationship{name:'Major works'}]->(m) return distinct m.name limit 10"}, {"query": "I really want to go to the Shanghai International Luxury Packaging Expo 2011 and see it.", "cypher": "match(:ENTITY{name:'2011The Shanghai International Luxury Packaging Fair is being held in Shanghai.'})-[:Relationship{name:'Show time'}]-> (h) return h.name"}, {"query": "What profession did you take after fighting in the anti-Japanese war, the liberation war, the heroic war against the Axis?", "cypher": "match (:ENTITY{name:'The war against Japan, the war of liberation, the war against the US, etc.'})<-[:Relationship{name:'Major achievements'}]-(x)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name limit 5"}, {"query": "The Soviet-built Type 671 attack nuclear submarine, when was it designed?", "cypher": "match(:ENTITY{name:'671Type attack nuclear submarine'})-[:Relationship{name:'The time of modeling'}]-> (m) return m.name"}, {"query": "Can you help me find the phone number in Yangon?", "cypher": "match(:ENTITY{name:'The town of Xiamen'})-[:Relationship{name:'Phone area code'}]-> (n) return n.name"}, {"query": "Who is the first of the top 10 entertainment personalities of 2013 according to the news, and what is your impression?", "cypher": "match(:ENTITY{name:'2013The top 10 entertainers'})-[:Relationship{name:'The first'}]-> (n) return n.name"}, {"query": "What is the shortest relationship path between the two layers of diffraction and diffraction?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The glow'})-[*..2]-(b:ENTITY{name:'Chang was cleared.'})) return count(p)"}, {"query": "Can you list any artifacts from the Zhejiang Provincial Museum collection?", "cypher": "match (:ENTITY{name:'The Museum of Zhejiang Province'})<-[:Relationship{name:'Unit of collection'}]- (p) return distinct  p.name"}, {"query": "What else do you know about the Bay of Lei besides that it belongs to the Shandong Tobacco Company?", "cypher": "match (:ENTITY{name:'Bay of Leyte'})-[:Relationship*1..2]-(p) where p.name <> 'Smoking City, Shandong Province' return  p.name limit 10"}, {"query": "Do you know how much she is charging for her book?", "cypher": "match (:ENTITY{name:'The Wind Co-authored'})<-[:Relationship{name:'Written by'}]-(x),(x)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "What is the name of the processor that uses A4 A6 A8 A10 A12 series?", "cypher": "match (:ENTITY{name:'A4 A6 A8 A10 A12'})<-[:Relationship{name:'The series'}]- (q) return q.name"}, {"query": "Do you know how the Sony A580 works?", "cypher": "match (:ENTITY{name:'I'm not sure.a580'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'How to operate'}]->(h) return distinct n.name", "error": "Invalid input 'm': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 32 (offset: 31))\n\"PROFILE match (:ENTITY{name:'I'm not sure.a580'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'How to operate'}]->(h) return distinct n.name\"\n                                ^"}, {"query": "(+) - Can you help me check the molecular weight of the bag of dandelion?", "cypher": "match(:ENTITY{name:'(+)-The bags are made of cotton.'})-[:Relationship{name:'Molecular weight'}]-> (x) return x.name"}, {"query": "I want to know who is the president of the Civilian Village of Xi'an County in accordance with the law.", "cypher": "match (:ENTITY{name:'President of the Citizens' Village of Xi'an County'})--(h) return h.name order by h.name", "error": "Invalid input 'Village': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 57 (offset: 56))\n\"PROFILE match (:ENTITY{name:'President of the Citizens' Village of Xi'an County'})--(h) return h.name order by h.name\"\n                                                         ^"}, {"query": "Do you know Sam Hunt's nickname? Name three, please.", "cypher": "match (:ENTITY{name:'Sam HuntHe is a former college football player and country singer.'})<-[:Describe{name:'Describe'}]-(p)-[:Relationship{name:'Other names'}]->(q) return distinct p.name limit 10"}, {"query": "What are the main awards that the Lao Dragon Center in Jinjiang, Jiangsu province has received?", "cypher": "match (:ENTITY{name:'The Lao Long Center in Jinjiang, Jiangsu Province'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Main awards'}]->(n) return distinct n.name limit 3"}, {"query": "Do you know what is the profession of Ben Ben?", "cypher": "match (m:ENTITY{name:'The first one.'})<-[:Relationship{name:'Chinese name'}]-(x)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name limit 1"}, {"query": "Do you know what kind of propulsion system the Type 001A carrier uses?", "cypher": "match(:ENTITY{name:'001AType of aircraft carrier'})-[:Relationship{name:'Power plant'}]-> (n) return n.name"}, {"query": "Do you know the names of the novels written by pencil marks?", "cypher": "match (:ENTITY{name:'The pencil marks'})<-[:Relationship{name:'Written by'}]-(x)-[:Relationship{name:'Chinese name'}]->(h) return distinct h.name"}, {"query": "Which books have the same literary style as the carriage maker and what are the labels on them?", "cypher": "match (n:ENTITY{name:'The carriage maker'})-[:Relationship{name:'Literary genre'}]->(:ENTITY)<-[:Relationship{name:'Literary genre'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The following is a list of topics related to the two-tiered relationship of urban geography in Northeast China, published by Science Press.", "cypher": "match (n:ENTITY{name:'Urban geography in northeastern China'})-[:Relationship*1..3]->(x) where x.name<>'Scientific publishing' return distinct x.name"}, {"query": "Tell me, what are the two main ingredients of the purple rice besides the purple rice and the iced sugar?", "cypher": "match (n:ENTITY{name:'The fascination with purple rice'})-[:Relationship{name:'Main ingredients'}]->(h) with h order by h.name where h.name <> 'Purple rice' and h.name <> 'Sugar ice cream' return h.name limit 2"}, {"query": "What are the lessons in Zhuhai's primary school?", "cypher": "match (:ENTITY{name:'The first secondary school in Zhuhai'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Schooling'}]->(n) return distinct n.name"}, {"query": "I'm going to be a little more specific about this.", "cypher": "match (:ENTITY{name:'brad paisley'})--(x) return x.name skip 3"}, {"query": "I would like to know what are the main ingredients of Taiwanese roasted corn. What is it for and what storage methods are used?", "cypher": "match (:ENTITY{name:'Taiwanese roasted corn'})-[:Relationship{name:'Primary raw materials'}]->(n) return n.name as name union all match (:ENTITY{name:'Taiwanese roasted corn'})-[:Relationship{name:'Suitable for the masses'}]->(m) return m.name as name union all match (:ENTITY{name:'Taiwanese roasted corn'})-[:Relationship{name:'Storage methods'}]->(r) return r.name as name"}, {"query": "Which dialect is the official language of Beijing - Zhongshan - Zhongshan?", "cypher": "match (:ENTITY{name:'The official Beijing-The Morning After-The Sunrise'})<-[:Relationship{name:'The dialect'}]-(x),(x)-[:Relationship{name:'The traffic'}]->(q) return distinct x.name,q.name"}, {"query": "What is the English name of Duncan?", "cypher": "match(:ENTITY{name:'The Gang'})-[:Relationship{name:'Foreign language name'}]-> (n) return n.name"}, {"query": "Do you know which units are working with the 2012 Wu Zetian Concert?", "cypher": "match(:ENTITY{name:'2012The concert in Wu Zetian'})-[:Relationship{name:'The show collaborates'}]-> (h) return h.name"}, {"query": "How much are Liu's books priced?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Written by'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "Did you mention that Beijing has a brick company?", "cypher": "match (p:ENTITY{location:'The Chinese'}) return p.name"}, {"query": "Can you tell me about the representative works of the National Tour of the City of Khartoum?", "cypher": "match (:ENTITY{name:'Dingjia cultivation calligraphy national tour of the city'})-[:Relationship{name:'Representative works'}]-> (m) return  distinct m.name"}, {"query": "Please tell me what is the nature of evening dancing and what is the good of it?", "cypher": "match (:ENTITY{name:'The Night of the Turtles'})-[:Relationship{name:'The Circle'}]->(n) return n.name as name union all match (:ENTITY{name:'The Night of the Turtles'})-[:Relationship{name:'Family'}]->(m) return m.name as name"}, {"query": "How much is the global sales of Mario Kart 8?", "cypher": "match (:ENTITY{name:'Mario racing car8'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Worldwide sales'}]->(q) return distinct q.name limit 1"}, {"query": "Do you have the content of the relationship names involved in the 3 tier commercial real estate planning blue book?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Blue book on commercial real estate planning'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I want an introduction to the three-layer relationship between the method of airtight testing of dangerous goods and airtight packaging published by China Standard Publishing.", "cypher": "match (n:ENTITY{name:'Test methods for airtight packaging of dangerous goods'})-[:Relationship*1..3]->(x) where x.name<>'China Standard Publishing' return distinct x.name"}, {"query": "Do you know what All Source Chinese translation is?", "cypher": "match (:ENTITY{name:'All source'})<-[:Relationship{name:'Foreign language name'}]- (p) return p.name"}, {"query": "Can you tell me the first three Chinese names of the Dark Souls of the Third Age?", "cypher": "match (:ENTITY{name:'The third cycle of light and darkness'})-[:Relationship{name:'Chinese name'}]-> (h) with h order by h.name return distinct h.name limit 3"}, {"query": "The Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, and the Chinese Academy of Engineering.", "cypher": "match (:ENTITY{name:'The Chinese government has also been trying to get the Chinese government to stop the use of chemical weapons.'})<-[:Describe{name:'Describe'}]-(h)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name"}, {"query": "The article is about the political education and political science topics that are being studied in the two-tiered relationship.", "cypher": "match (n:ENTITY{name:'Research on the topic of higher education in political thought'})-[:Relationship*1..2]->(x) where x.name<>'The younger brother.' return distinct x.name"}, {"query": "The Chinese with the number \"Ling\" are?", "cypher": "match (p:ENTITY{name:'The number is Liang.'})<--(x)-->(q:ENTITY{name:'China'}) return x.name"}, {"query": "I'm not sure what the main achievements of Irene Ko are.", "cypher": "match (:ENTITY{name:'Irene ko'})<-[:Relationship{name:'Foreign language name'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(n) return n.name order by n.name limit 3"}, {"query": "The price of a concert is 255, 355, 455, 655, which concert?", "cypher": "match (:ENTITY{name:'255The first is the355The first is the455The first is the655And so on and so forth.'})<-[:Relationship{name:'The concert ticket price'}]- (m) return m.name"}, {"query": "Has there come to you the news of the name of the rich man?", "cypher": "match (:ENTITY{name:'The Rich'})-[:Relationship{name:'Other names'}]-> (m) return m.name skip 2"}, {"query": "The top 10 archaeological discoveries of 2010 in the country are so amazing, I would like to know who is the organizer?", "cypher": "match(:ENTITY{name:'2010Top 10 archaeological discoveries in the country'})-[:Relationship{name:'Hosted by'}]-> (q) return q.name"}, {"query": "What is the English name of the subject of the family?", "cypher": "match (:ENTITY{name:'The Cow'})<-[:Relationship{name:'The Department'}]-(n)-[:Relationship{name:'English name'}]->(m) return distinct n.name limit 1"}, {"query": "What is the culture of the company that is on the 0912 website?", "cypher": "match(:ENTITY{name:'0912The Internet'})-[:Relationship{name:'Corporate culture'}]-> (h) return h.name"}, {"query": "Please list all the content of Sun Yat-sen.", "cypher": "match (:ENTITY{name:'Sun Yue'})--(q) return q.name skip 3"}, {"query": "What is the main treatment for the 14 amino acid solution 800 in the hospital?", "cypher": "match(:ENTITY{name:'14Amino acid injection-800'})-[:Relationship{name:'Mainly used'}]-> (n) return n.name"}, {"query": "Are you playing Minecraft?", "cypher": "match (:ENTITY{name:'Minecraft'})<--(n) return n.name"}, {"query": "Do you remember what the theme of the 2010 Mid-Autumn TV show was?", "cypher": "match(n:ENTITY{name:'2010The annual mid-autumn TV evening'})-[:Relationship{name:'The subject'}]-> (x) return x.name"}, {"query": "Can you tell me what kind of relationship is covered by the passionate fighter in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Passionate Warrior'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Could you tell me what you know about the five professions of this Dutch-born person?", "cypher": "match (:ENTITY{name:'The Netherlands'})<-[:Relationship{name:'Where I was born'}]-(m)-[:Relationship{name:'Professional life'}]->(q) return q.name skip 1 limit 5"}, {"query": "What is the name of the school of the river otter?", "cypher": "match (:ENTITY{name:'The river, the river, the river, the river, the river, the river, the river.'})<-[:Relationship{name:'Other names'}]-(m) return distinct m.name"}, {"query": "Can you help me find two people who were born in Hebei's Lotus?", "cypher": "match (:ENTITY{name:'Hebei Lottery'})<-[:Relationship{name:'Where I was born'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name"}, {"query": "What is the origin of the name of the dish?", "cypher": "match (:ENTITY{name:'The Phoenix fish ball'})-[:Relationship{name:'Classified'}]-> (m) return distinct m.name"}, {"query": "I would like to ask you about the 13 books of the People's University of China: The relationship between the two layers of the literature curriculum?", "cypher": "match (n:ENTITY{name:'The book of the year: The literature curriculum'})-[:Relationship*1..2]->(x) where x.name<>'13' return distinct x.name"}, {"query": "Can anyone help me find two national champions for Lanzhou?", "cypher": "match (:ENTITY{name:'The Lanzhou'})<-[:Relationship{name:'The Nation'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "What are the five famous places that are open from 07:00 to 17:30?", "cypher": "match (:ENTITY{name:'07:00~17:30'})<-[:Relationship{name:'Opening hours'}]-(x),(x)-[:Relationship{name:'Famous places'}]->(m) return distinct m.name limit 5"}, {"query": "Do you know the 5 facts about the chemical 2-hydroxy-3-hydroxy-methyl acetate?", "cypher": "match (n:ENTITY{name:'2-The base-3-Calcium methalic acid'}) - [*]->(x) where x.name<>'2-The base-3-Calcium methalic acid is a chemical compound with the molecular formula C11H8O2SI'm not sure.' return distinct x.name limit 5", "error": "Invalid input 'm': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CALL\"\n  \"CONTAINS\"\n  \"CREATE\"\n  \"DELETE\"\n  \"DETACH\"\n  \"ENDS\"\n  \"FOREACH\"\n  \"IN\"\n  \"INSERT\"\n  \"IS\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"OR\"\n  \"REMOVE\"\n  \"RETURN\"\n  \"SET\"\n  \"STARTS\"\n  \"UNION\"\n  \"UNWIND\"\n  \"USE\"\n  \"WITH\"\n  \"XOR\"\n  \"^\"\n  <EOF> (line 1, column 190 (offset: 189))\n\"PROFILE match (n:ENTITY{name:'2-The base-3-Calcium methalic acid'}) - [*]->(x) where x.name<>'2-The base-3-Calcium methalic acid is a chemical compound with the molecular formula C11H8O2SI'm not sure.' return distinct x.name limit 5\"\n                                                                                                                                                                                              ^"}, {"query": "I want to know the total number of Longcheng businesses.", "cypher": "match (p:ENTITY{location:'The Long Spring'}) return count(p)"}, {"query": "Where can I find the Rainforest Company?", "cypher": "match (p:ENTITY{name:'Rainforest company'}) return p.location"}, {"query": "I want to know what the three layers of the relationship that Maya Babi is involved in are?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Maya Baby'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What chemical is Beilstein's number 1764476?", "cypher": "match (:ENTITY{name:'1764476'})<-[:Relationship{name:'BeilsteinThe number'}]- (n) return n.name"}, {"query": "The people who are representing the work of the people who are climbing the mountains in the mountains?", "cypher": "match (:ENTITY{name:'The mountain is very steep.'})<-[:Relationship{name:'Representative works'}]- (p) return p.name skip 1"}, {"query": "What is the word for Kirchhoff's law? Who proposed it?", "cypher": "match (:ENTITY{name:'The Law of Kirchhoff[The laws of electricity]]'})-[:Relationship{name:'Other names'}]->(n) return n.name as name union all match (:ENTITY{name:'The Law of Kirchhoff[The laws of electricity]'})-[:Relationship{name:'The Proposer'}]->(m) return m.name as name"}, {"query": "Can you recommend some fun 8.2M software to me?", "cypher": "match (:ENTITY{name:'8.2M'})<-[:Relationship{name:'Size'}]- (h) return h.name"}, {"query": "Which people have the same birthday as Kirilenko Denis, and what tags do they each have? Please list them in order of number of tags, in order of number of tags.", "cypher": "match (n:ENTITY{name:'Kirilenko Denis'})-[:Relationship{name:'Date of birth'}]->(:ENTITY)<-[:Relationship{name:'Date of birth'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The following is a list of all the works by Ro in Guayaquil, Guanajuato, Guanajuato.", "cypher": "match (n:ENTITY{name:'The town of Guaia'})-[:Relationship*]->(x) where x.name<>'The world is full of it.' return distinct x.name"}, {"query": "What is the level of protection of the Pomodoro?", "cypher": "match (:ENTITY{name:'The Pomegranate'})-[:Relationship{name:'Protection level'}]->(m) return distinct m.name"}, {"query": "Who sang the last song of the bandit?", "cypher": "match (:ENTITY{name:'The last tear'})<-[:Relationship{name:'Representative works'}]-(m) return distinct m.name"}, {"query": "The following information is provided on the technical regulations for the management of the Huai'an and Huai'an artificial forests published by the State Forestry Department:", "cypher": "match (n:ENTITY{name:'Technical regulations for the management of the artificial forest in Hua'an'})-[:Relationship*]->(x) where x.name<>'State Forestry' return distinct x.name", "error": "Invalid input 'an': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 104 (offset: 103))\n\"PROFILE match (n:ENTITY{name:'Technical regulations for the management of the artificial forest in Hua'an'})-[:Relationship*]->(x) where x.name<>'State Forestry' return distinct x.name\"\n                                                                                                        ^"}, {"query": "What is the rated voltage of this 12V10A power adapter you use?", "cypher": "match(:ENTITY{name:'12V10APower adapter'})-[:Relationship{name:'Rated voltage'}]-> (h) return h.name"}, {"query": "I would like to know what the exam process is for the written test?", "cypher": "match (:ENTITY{name:'The pen test'})<-[:Relationship{name:'The procedure'}]- (h) return h.name"}, {"query": "Can you provide me with 10 books translated by Lee Yongping?", "cypher": "match (:ENTITY{name:'Lee Yongping'})<-[:Relationship{name:'Translated by'}]- (h) return h.name limit 10"}, {"query": "Which electronic operating systems are running Android 4.2? Name 10?", "cypher": "match (x:ENTITY{name:'Android 4.2'})<-[:Relationship{name:'Operating system'}]- (m) return m.name limit 10"}, {"query": "What are the names of the five names of the five representative works of art that are the ultimate witnesses to the real world, the Nazi murderers, the sleepers?", "cypher": "match (:ENTITY{name:'The ultimate witness to the truth of the world, the Nazi hunt for murderers, the sleeper.'})<-[:Relationship{name:'Representative works'}]-(n)-[:Relationship{name:'Other names'}]->(p) return distinct p.name limit 5"}, {"query": "What is the shortest relationship path between the pressure relief pump and the sillipari within the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Chennai police'})-[:Relationship*..2]-(b:ENTITY{name:'The Sillapuri'})) return count(p)"}, {"query": "Can you list two books that are simple Chinese?", "cypher": "match (:ENTITY{name:'Simplified Chinese'})<-[:Relationship{name:'Language'}]- (n) return n.name limit 2"}, {"query": "I'm going to do an experiment with 2-hydro-4-hydroxybutyric acid, and you tell me its CAS NO.", "cypher": "match(:ENTITY{name:'2-Oh, my God.-4-Methacrylic acid'})-[:Relationship{name:'CASNO'}]-> (n) return n.name"}, {"query": "What is the shortest distance between the village of Hohokyu and the village of Yulguy within the two levels?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'In the village of Home Bay'})-[*..2]-(b:ENTITY{name:'Yul Bay village'})) return count(p)"}, {"query": "What are the onset and symptoms of staining of the cyst?", "cypher": "match (:ENTITY{name:'Colored Bladder Disease'})-[:Relationship{name:'Common sites of disease'}]->(n) return n.name as name union all match (:ENTITY{name:'Colored Bladder Disease'})-[:Relationship{name:'Common symptoms'}]->(m) return m.name as name"}, {"query": "Excellence Unit for Contemporary Education Research in China (2013)", "cypher": "match (:ENTITY{name:'Excellence in contemporary education research in China (This is a very good post.)2013The year)'})<-[:Relationship{name:'Main awards'}]- (n) return  distinct n.name"}, {"query": "What is the analyzer for the measurement range of 0.0 to 50.0 mg/L PO4?", "cypher": "match (:ENTITY{name:'The quantity0 Oh, my God.50.0mg/L PO4'})<-[:Relationship{name:'Range of measurement'}]- (h) return h.name"}, {"query": "What hardness standards does the state require 14nicr10 to meet?", "cypher": "match(:ENTITY{name:'14nicr10'})-[:Relationship{name:'Hardness'}]-> (h) return h.name"}, {"query": "Could you please share 5 personal details about Bodanu Variu, Romanian footballer?", "cypher": "match (n:ENTITY{name:'The Bodanu Valerio is a man of many talents.'}) - [*]->(x) where x.name<>'The Bodanu Valerio is a man of many talents., Romanian footballer.' return distinct x.name limit 5"}, {"query": "Which 20 hotels are rated as five stars?", "cypher": "match(:ENTITY{name:'Five star rating'})< -[:Relationship{name:'Hotel star rating'}]-> (m) with m order by m.name limit 20 return m.name"}, {"query": "When was Kido-Momo Unified Primary School founded? Where is it located? What kind of school is it?", "cypher": "match (:ENTITY{name:'Kido-Miki Unified Primary School'})-[:Relationship{name:'When did it start?'}]->(n) return n.name as name union all match (:ENTITY{name:'Kido-Miki Unified Primary School'})-[:Relationship{name:'Area'}]->(m) return m.name as name union all match (:ENTITY{name:'Kido-Miki Unified Primary School'})-[:Relationship{name:'Type of school'}]->(r) return r.name as name"}, {"query": "Who are you representing?", "cypher": "match (:ENTITY{name:'You are such a person.'})<-[:Relationship{name:'Representative works'}]- (h) return h.name order by h.name"}, {"query": "Tell me, what kind of relationship is involved in the three layers of the Death Star?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The God of Death'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I would like to know what types of relationships are in the three layers of the knowledge management standard?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Knowledge management standards'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "The 7th National Roasting Exhibition 2011 in Beijing was held in which exhibition venue?", "cypher": "match(:ENTITY{name:'2011The seventh national[The Chinese]The Roasting Exhibition'})-[:Relationship{name:'The exhibition venue'}]-> (q) return q.name"}, {"query": "Can you tell me how to say this thing in the dialects of Liao, Shui, Shui, Gansu, and Plain? Can you tell me three?", "cypher": "match (:ENTITY{name:'The language is also spoken in the Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Yilan, Y..............................................................................................................................................................................................................................................................................................................................................................................................................................'})<-[:Relationship{name:'The dialect'}]-(q)-[:Relationship{name:'Other names'}]->(x) return x.name order by x.name limit 3"}, {"query": "I need you to tell me about the kind of relationship that Beijing Argos have in the two levels, okay?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The arrogant in Beijing'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Do you know what the main award is for the institution founded in 1939?", "cypher": "match (:ENTITY{name:'1939Year of birth'})<-[:Relationship{name:'When did it start?'}]-(x),(x)-[:Relationship{name:'Main awards'}]->(q) return distinct q.name limit 1"}, {"query": "Can you list 14 novels that are printed on paper?", "cypher": "match (:ENTITY{name:'Paper from the silk industry'})<-[:Relationship{name:'Paper'}]- (n) return n.name limit 14"}, {"query": "What CAS number do I need to check the status of the worm?", "cypher": "match(:ENTITY{name:'The Worm'})-[:Relationship{name:'CASThe number of the log'}]-> (n) return n.name"}, {"query": "Can you tell me what the relationship is between the two layers of the glass that are involved?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'See you later, glass.'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you find out all the personal information about Liu Yonglin, a Yangtze man?", "cypher": "match (n:ENTITY{name:'The Chinese'})-[:Relationship*]->(x) where x.name<>'The Owl' return distinct x.name"}, {"query": "I wonder which company has the slogan \"Honest business, service first\"?", "cypher": "match (:ENTITY{name:'The company is a company that is run with integrity and service is paramount.'})<-[:Relationship{name:'The company slogan'}]- (x) return x.name"}, {"query": "Do you know what kind of job Xu Xiaohua [a member of the Party Committee, Deputy Secretary, Director of the Guizhou Provincial Maritime Administration] has besides being a Deputy Secretary and Director?", "cypher": "match (n:ENTITY{name:'The Chinese[Member of the Party Committee, Deputy Secretary, Director of the Local Maritime Administration of Guizhou Province]'})-[:Relationship{name:'Professional life'}]->(h) where h.name <> 'Deputy secretary' and h.name <> 'The Chief' return distinct h.name limit 1"}, {"query": "You look at the instructions for the 12V7A power adapter, is there any introduction on what the rated voltage is?", "cypher": "match(:ENTITY{name:'12V7APower adapter'})-[:Relationship{name:'Rated voltage'}]-> (x) return x.name"}, {"query": "Do you know the area and population of Zhejiang?", "cypher": "match (:ENTITY{name:'Zhejiang District'})-[:Relationship{name:'Area'}]->(n) return n.name as name union all match (:ENTITY{name:'Zhejiang District'})-[:Relationship{name:'Population'}]->(m) return m.name as name"}, {"query": "What is the shortest route between the two levels of Tronlong Village and Ka-Kang Village?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Treng Long[The subdistrict of Tran Long Township, Minassian County, Kunming City]'})-[*..2]-(b:ENTITY{name:'The village of Ka-Manj[Umun Rural District, Yunnan Province]'})) return count(p)"}, {"query": "Can you tell me what the audit number of the declaration of the Institute of Wheat of the Shaanxi University of Agricultural Sciences is?", "cypher": "match (:ENTITY{name:'The Institute of Wheat at the Shaanxi University of Agricultural Sciences'})<-[:Relationship{name:'Unit of declaration'}]-(m)-[:Relationship{name:'Number of the audit'}]->(q) return distinct q.name limit 1"}, {"query": "The Treaty of Yue was signed in which year?", "cypher": "match (n:ENTITY{name:'The Treaty of the Three Eastern Provinces'})-[:Relationship{name:'Time of signing'}]->(h) return substring(h.name,0,5)"}, {"query": "Do you know who the diplomats of the modern Chinese historians are?", "cypher": "match (:ENTITY{name:'Chinese modern historian'})<-[:Relationship{name:'Professional life'}]-(m), (m)-[:Relationship{name:'Professional life'}]->(n) where n.name='Foreign Minister' return m.name"}, {"query": "Can you list some of the important events that have happened in the Star Wars franchise?", "cypher": "match (p:ENTITY{name:'The League of the Planets'})<-[:Relationship{name:'Participate in the event'}]-(m)-[:Relationship{name:'Important events'}]->(h) return distinct h.name"}, {"query": "What is the characteristic of the front tire besides the light yellow-orange powder and slightly peculiar smell?", "cypher": "match (:ENTITY{name:'Front of car'})--(q) with q order by q.name where q.name <> 'The powder is pale yellow orange with a slightly peculiar smell.' return q.name"}, {"query": "The main award of which Shanghai primary school is the City Green School?", "cypher": "match (:ENTITY{name:'City Green School'}) <- [:Relationship{name:'Main awards'}]- (m) return distinct m.name"}, {"query": "Do you know which are the most representative works of the graduates of the WU? Name three?", "cypher": "match (:ENTITY{name:'The University of Wushu'})<-[:Relationship{name:'Graduated'}]-(h)-[:Relationship{name:'Representative works'}]->(p) return distinct p.name limit 3"}, {"query": "What is the name of the city on the southern bank of the Limassol River in the Gulf of Khayao?", "cypher": "match (:ENTITY{name:'The southern bank of the Limak River mouth in the Gulf of Cayo.'})<-[:Describe{name:'Describe'}]-(m), (m)-[:Relationship{name:'Country of origin'}]->(n) return distinct m.name,n.name"}, {"query": "Can you help me find information about dating on the cf of Activ Coral Island?", "cypher": "match (:ENTITY{name:'cfThe story of love'})--(q) with q order by q.name where q.name <> 'Activities at the Coral Islands' return q.name"}, {"query": "Please help me find the other 5 pieces of information on this person in the 2nd layer.", "cypher": "match (:ENTITY{name:'Zhang Yixiang'})-[:Relationship*1..2]-(p) where p.name <> 'Characters' return p.name limit 5"}, {"query": "Which company is located in Nanjing, Jiangning District, Tangling Street, 228 Tianwan East Road, Apple City Building, Room 3207?", "cypher": "match (:ENTITY{name:'Tianwan East Road, Jilin Street, Jiangning District, Nanjing228The Apple City Building3Oh, my God.207The room'})<-[:Relationship{name:'Location'}]- (h) return distinct h.name"}, {"query": "I want to know the other 5 information about this person in the 2nd layer.", "cypher": "match (:ENTITY{name:'King of the army'})-[:Relationship*1..2]-(p) where p.name <> 'Characters' return p.name limit 5"}, {"query": "The film is based on the novel of the same name by Japanese author and filmmaker Tatsuya Nakano.", "cypher": "match (:ENTITY{name:'The spaceship2199The song is sung by the Japanese singer-songwriter, Aoichi Kouno.'})<-[:Relationship{name:'Sound'}]-(h)-[:Relationship{name:'The first stage'}]->(p) return distinct h.name limit 10"}, {"query": "I would like to know what relationship names are used for the relationship between Liu Yunzan and the two layers?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Chinese'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the role of the river lights?", "cypher": "match(:ENTITY{name:'The River Light'})-[:Relationship{name:'The role'}]-> (n) return n.name"}, {"query": "Can you introduce me to five books priced at $15?", "cypher": "match (:ENTITY{name:'15.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 5"}, {"query": "What is the nickname of the banana used in the banana plant?", "cypher": "match(:ENTITY{name:'Banana and banana'})-[:Relationship{name:'Other names'}]-> (m) return m.name"}, {"query": "Mad Machine 2: Alien Invasion: What kind of relationships are involved in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Mad Machine2The alien invasion of the world'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Which hotels and hotels in Tucson are on the 3rd floor of the label relationship can you say?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Hotel Tucson'}) return distinct n.name"}, {"query": "Can you tell me how many companies are located in Shenyang?", "cypher": "match (p:ENTITY{location:'The Sun'}) return count(p)"}, {"query": "I'm looking for a time to find a candy super sweet company.", "cypher": "match (p:ENTITY{name:'The Super Sweet Company'}) return p.time"}, {"query": "I can't remember the chemical formula for 2-acetyl-4-methylmercury-5-di-sulfuric acid, can you help me?", "cypher": "match(:ENTITY{name:'2-Acetyl-4-The methyl methyl-5-Sulfuric acid'})-[:Relationship{name:'Chemical formula'}]-> (x) return x.name"}, {"query": "Can you recommend a few novels in the genre?", "cypher": "match (n:ENTITY{name:'The Aerospace'})<-[:Relationship{name:'Novel genre'}]-(h)-[:Relationship{name:'Chinese name'}]->(m) return distinct m.name"}, {"query": "Do you know what is the main achievement of Helen?", "cypher": "match (:ENTITY{name:'The Hail Mary'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name"}, {"query": "Can you help me analyze 13 grams?", "cypher": "match (:ENTITY{name:'13The K'})--(h) with h order by h.name return h.name"}, {"query": "The 2012 Shanghai Spring Art Salon, do you know when the time is scheduled?", "cypher": "match(:ENTITY{name:'2012Shanghai Spring Art Salon is a cultural event.'})-[:Relationship{name:'When to hold'}]-> (p) return p.name"}, {"query": "I'm going to ask you a question, do you know what his symbol is?", "cypher": "match (:ENTITY{name:'The Ship of the Nile'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(q) return distinct q.name limit 2"}, {"query": "The first thing I want to say is, what is the meaning of the name of the person or thing?", "cypher": "match (:ENTITY{name:'In the morning'})<-[:Relationship{name:'The Age'}]- (h) return h.name limit 5"}, {"query": "What is the most representative work of Huberlin's father?", "cypher": "match (:ENTITY{name:'The Hobbling'})<-[:Relationship{name:'Father'}]-(q),(q)-[:Relationship{name:'Representative works'}]->(h) return distinct h.name limit 3"}, {"query": "Please tell me what kind of relationship information is contained in the three layers of a dark kingdom?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Dark Kingdom'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "The article is about the five graduates of the University of Wei Wei who are in the fourth tier of Kim Bashan's relationship.", "cypher": "match (n:ENTITY{name:'The Chinese'})-[*1..4]->(x) where x.name<>'The University of Haifa' return distinct x.name limit 5"}, {"query": "Which people were born in the same place as Tatsuya and what labels did they have? List them in order of their respective labels.", "cypher": "match (n:ENTITY{name:'The story of Takeda'})-[:Relationship{name:'Where I was born'}]->(:ENTITY)<-[:Relationship{name:'Where I was born'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What kind of genre is the \"Skype\" of the song?", "cypher": "match (:ENTITY{name:'The Axis'})-[:Relationship{name:'Sports'}]->(n) return n.name as name union all match (:ENTITY{name:'The Axis'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "Can you tell me where the geographical location of the town is? and how big is it? and how many people live there?", "cypher": "match (:ENTITY{name:'The town of Xiamen'})-[:Relationship{name:'Geographical location'}]->(n) return n.name as name union all match (:ENTITY{name:'The town of Xiamen'})-[:Relationship{name:'Area'}]->(m) return m.name as name union all match (:ENTITY{name:'The town of Xiamen'})-[:Relationship{name:'Population'}]->(r) return r.name as name"}, {"query": "What was the specific situation of enemy casualties in the 1944 Shandong campaign against Japan?", "cypher": "match(:ENTITY{name:'1944Shandong Military District to fight against Japan'})-[:Relationship{name:'The casualties'}]-> (x) return x.name"}, {"query": "Can you name the names of the Chinese Academy of Engineering members and their respective achievements?", "cypher": "match (:ENTITY{name:'Chinese Academy of Engineering'})<-[:Relationship{name:'Professional life'}]-(q)-[:Relationship{name:'Major achievements'}]->(h) return distinct q.name,h.name"}, {"query": "Do you know what kind of relationships are involved in the three layers of Samsung Decorations in Guangzhou?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The company is a subsidiary of Samsung.'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "How is June 20, 1949 in the Chinese calendar?", "cypher": "match(:ENTITY{name:'1949Year of birth6The Moon20The Sun'})-[:Relationship{name:'The Moon Calendar'}]-> (h) return h.name"}, {"query": "Do you know which chemical has the product number P100079?", "cypher": "match (:ENTITY{name:'P100079'})<-[:Relationship{name:'Product number'}]- (h) return h.name"}, {"query": "Can you tell me how many wrestlers are 183 cm tall? Can you name 6?", "cypher": "match (:ENTITY{name:'183 cm'})<-[:Relationship{name:'Height'}]- (q) return q.name limit 6"}, {"query": "Help me find 10 Chinese dishes.", "cypher": "match (:ENTITY{name:'Chinese cuisine'})<-[:Relationship{name:'Classified'}]-(m) return distinct m.name limit 10"}, {"query": "Can you tell me what the relationship is within the three levels of the Nehru Gold Cup?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Nehru Gold Cup'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "Can you list the occupations of a junkie for me?", "cypher": "match (:ENTITY{name:'You are a good man.'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Representative works'}]->(q) return q.name order by q.name limit 1"}, {"query": "What is the name of the work that Alyosha created in 1944-1948?", "cypher": "match (:ENTITY{name:'The old house'})<-[:Relationship{name:'Written by'}]-(m), (m)-[:Relationship{name:'Date of creation'}]->(n) where n.name='1944-1948' return m.name"}, {"query": "Can you tell me the name of the 16 international tournaments?", "cypher": "match (:ENTITY{name:'International competition'})<-[:Relationship{name:'Type of event'}]- (h) return h.name limit 16"}, {"query": "What is the curriculum at Hebei Sin University?", "cypher": "match (:ENTITY{name:'Hebei Sin School'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Schooling'}]->(n) return distinct n.name"}, {"query": "The story of the rose of the rose that everyone is talking about is published on which platform?", "cypher": "match(:ENTITY{name:'The flower of the rose'})-[:Relationship{name:'Connecting platforms'}]-> (n) return n.name"}, {"query": "Can you find me the main achievements of the co-founder and CTO of Desert Vision Technologies?", "cypher": "match (:ENTITY{name:'Co-founder and CEO of Desert Vision TechnologiesCTO'})<-[:Relationship{name:'Professional life'}]-(p),(p)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name"}, {"query": "I wonder which government work report quotes Deng Xiaoping's theory?", "cypher": "match (:ENTITY{name:'The theory of Deng Xiaoping'})<-[:Relationship{name:'Theory1'}]- (h) return h.name"}, {"query": "What is the shortest path between the two layers of the dome and the dome?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The little one'})-[*..2]-(b:ENTITY{name:'The dam'})) return count(p)"}, {"query": "Please tell me which platform is open on 3/15/2017?", "cypher": "match (:ENTITY{name:'2017Year of birth3The Moon15The Sun'})<-[:Relationship{name:'Platform open'}]- (x) return x.name"}, {"query": "Where is the North Sea City Aquarium?", "cypher": "match(:ENTITY{name:'The North Sea City Aquarium'})-[:Relationship{name:'Located'}]-> (n) return n.name"}, {"query": "What is the name of the cultivated area with an area of 1933 hectares?", "cypher": "match (:ENTITY{name:'1933Oh, my God.'})<-[:Relationship{name:'Cultivated land'}]-(x)-[:Relationship{name:'Other names'}]->(p) return distinct p.name limit 1"}, {"query": "Please provide me with details of the three-tier relationship regarding the provisional measures of the Standing Committee of the People's Congress of the City of Songkhun regarding incentives and guarantees for the office of the City's representative of the people.", "cypher": "match (n:ENTITY{name:'Provisional Measures of the Standing Committee of the People's Congress of the City of Songcon on Incentives and Safeguards for the Maintaining of the Office of the City Representative'})-[*1..3]->(x) where x.name<>'Standing Committee of the People's Congress of the City of Songkong' return distinct x.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 92 (offset: 91))\n\"PROFILE match (n:ENTITY{name:'Provisional Measures of the Standing Committee of the People's Congress of the City of Songcon on Incentives and Safeguards for the Maintaining of the Office of the City Representative'})-[*1..3]->(x) where x.name<>'Standing Committee of the People's Congress of the City of Songkong' return distinct x.name\"\n                                                                                            ^"}, {"query": "I'm not sure what Taegmin does for a living, but I'm not sure what he does for a living.", "cypher": "match (:ENTITY{name:'The Japanese'})<-[:Relationship{name:'Chinese name'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name"}, {"query": "And what do you know of the place where the cedar-tree sprouts come from?", "cypher": "match (:ENTITY{name:'The Cedar Blossom'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Produced by'}]->(q) return distinct q.name"}, {"query": "What are the symptoms of persistent severe abdominal pain, convulsive seizures, inhalation-free stools, marked bloating, nausea and vomiting?", "cypher": "match (:ENTITY{name:'Sudden persistent severe abdominal pain, convulsive cramping, no exhaled stools, marked bloating, nausea and vomiting'})<-[:Relationship{name:'Common symptoms'}]-(m) return distinct m.name"}, {"query": "What is the representation of the graduates of the Tokyo Tsuji-Baku Early High School?", "cypher": "match (m:ENTITY{name:'Tokyo Tsuji-Baku Early High School'})<-[:Relationship{name:'Graduated'}]-(q)-[:Relationship{name:'Representative works'}]->(p) return distinct q.name"}, {"query": "Do you know what is the fourth layer of the relationship between the labels and the original desire?", "cypher": "match (n)<-[:Tag*4{name:'The label'}]-(p:ENTITY{name:'The Primitive Desire'}) RETURN distinct n.name limit 1"}, {"query": "Please list the main achievements of one party apart from the first prize of the 2006 calligraphy exhibition and the seventh prize of the 2002 book review.", "cypher": "match (n:ENTITY{name:'Party'})-[:Relationship{name:'Major achievements'}]->(h) where h.name <> '06First prize of the year' and h.name <> '02Yearbook review for the seventh grade' return distinct h.name limit 1"}, {"query": "What are the three layers of relationships that the desire to go home contains?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The desire to return home'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Which games are the same size as Naeli's cute baby games and what are the labels for each of them? Show these games in order of number of labels.", "cypher": "match (n:ENTITY{name:'The lovely baby of Nairi'})-[:Relationship{name:'The size of the game'}]->(:ENTITY)<-[:Relationship{name:'The size of the game'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you help me find the CAS number for 1-amino cyclohexanate?", "cypher": "match(:ENTITY{name:'1-Amino cyclic acid'})-[:Relationship{name:'CASThe number'}]-> (x) return x.name"}, {"query": "The problem is that the public health press has published a two-tiered description of the relationship between the hazards of easily misused food additives and the identification of the work.", "cypher": "match (n:ENTITY{name:'Identifying the dangers of easily misused food additives'})-[:Relationship*1..2]->(x) where x.name<>'Public health publishing' return distinct x.name"}, {"query": "How many companies have you started in the last 14 years?", "cypher": "match (p:ENTITY{time:'2014'}) return count(p)"}, {"query": "What are the five types of relationships within the four levels of Lotus Bridge Station?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'Lotus Bridge station'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Which works and books were written in the same year and are each labeled with a rose?", "cypher": "match (n:ENTITY{name:'The book of Di Yanzhou'})-[:Relationship{name:'The year'}]->(:ENTITY)<-[:Relationship{name:'The year'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What is the name of the book with the ISBN number 9787549239306?", "cypher": "match (:ENTITY{name:'9787549239306'})<-[:Relationship{name:'ISBN'}]- (q) return distinct q.name"}, {"query": "Can you tell me what the foreign name of this book is and what language and publisher it is in?", "cypher": "match (:ENTITY{name:'Positive energy'})-[:Relationship{name:'Foreign name'}]->(n) return n.name as name union all match (:ENTITY{name:'Positive energy'})-[:Relationship{name:'Language'}]->(m) return m.name as name union all match (:ENTITY{name:'Positive energy'})-[:Relationship{name:'Publishing house'}]->(r) return r.name as name"}, {"query": "What is the status of the Muns in Liang Shenyang?", "cypher": "match (p:ENTITY{name:'The Manchus'})<--(x)-->(q:ENTITY{name:'The Chinese'}) return x.name"}, {"query": "Can you help me find five works by Zhang's wife?", "cypher": "match (:ENTITY{name:'The State of Zhang'})<-[:Relationship{name:'The husband'}]-(p)-[:Relationship{name:'Major works'}]->(n) return distinct n.name limit 5"}, {"query": "You don't understand what the sale of a brick in two layers has to do with it?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Selling a pumpkin'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "The painting of General Meng Zhen is from which dynasty?", "cypher": "match (:ENTITY{name:'The report was published on the website of the Ministry of Foreign Affairs.'})-[:Relationship{name:'The Tribe'}]-> (m) return distinct m.name"}, {"query": "Can you tell me who else has written about the \"Kinshasa\" campaign?", "cypher": "match (:ENTITY{name:'The Flock of the Whale'})--(x) return x.name order by x.name"}, {"query": "The film is based on the life of the French actor Th\u00e9ophile Gautier, who was born in Paris in 1928.", "cypher": "The name of the game is \"The Gottier\" (Theophilus The Gottier) and the name of the game is \"The Gottier\" (Theophilus The Gottier).", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The name of the game is \"The Gottier\" (Theophilus The Gottier) and the name of the game is \"The Gottier\" (Theophilus The Gottier).\"\n         ^"}, {"query": "I would like to know what the scope of the 50 yuan card is?", "cypher": "match (:ENTITY{name:'50Japanese yen'})<-[:Relationship{name:'The cost of the hanging'}]-(p)-[:Relationship{name:'Scope of application'}]->(x) return distinct x.name limit 1"}, {"query": "What else do you know about the campus underground besides the work of director Park Geun-hye?", "cypher": "match (:ENTITY{name:'The campus basement'})-[:Relationship*1..3]-(p) where p.name <> 'Park is a very nice person.' return  p.name limit 5"}, {"query": "Can you list five things in a four-tier relationship that are related to English footballer Delph Fabian?", "cypher": "match (n:ENTITY{name:'The Delphic Fabian'}) - [*1..4]->(x) where x.name<>'The Delphic Fabian, English footballer.' return distinct x.name limit 5"}, {"query": "What is the shortest relationship path between the two layers of the redback and the corn cob?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Red-backed spiders'})-[*..2]-(b:ENTITY{name:'The Corn Spider'})) return count(p)"}, {"query": "I'm going to ask you, what are the other names of the South Road in Han City?", "cypher": "match (:ENTITY{name:'Han City Road'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Relationship{name:'Other names'}]->(p) return distinct p.name limit 2"}, {"query": "When did the 2013 CCTV celebrity selection kick off?", "cypher": "match(x:ENTITY{name:'2013CCTVSports figures'})-[:Relationship{name:'Selected first review'}]-> (n) return n.name"}, {"query": "Do you know which labels are there in the National Palace of Culture? Can you tell me three other good ones besides entertainment?", "cypher": "match (:ENTITY{name:'The Battle of the National Palace'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'The entertainment' return p.name limit 3"}, {"query": "What are some of the songs sung by Huang Zheng?", "cypher": "match (:ENTITY{name:'The Yellow River'})<-[:Relationship{name:'The song was originally sung'}]-(p)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name"}, {"query": "Help me find 10 species of vertebrates in the subfamily", "cypher": "match (:ENTITY{name:'The Armenian vertebrate'})<-[:Relationship{name:'The Yemen'}]-(h) return h.name limit 10"}, {"query": "Do you have any information about the relationship between the three layers of the hive?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The beehive'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I know the second season of Don't Be Proud airs on January 11, 2017, do you know the other times?", "cypher": "match (:ENTITY{name:'Don't be so proud[2016The film is directed by Yash Chopra and stars Anushka Sharma.]'})-[:Relationship{name:'The time of the broadcast'}]-> (q) with q order by q.name where q.name <> '2017Year of birth1The Moon11Day (second season)' return q.name", "error": "Invalid input 't': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 34 (offset: 33))\n\"PROFILE match (:ENTITY{name:'Don't be so proud[2016The film is directed by Yash Chopra and stars Anushka Sharma.]'})-[:Relationship{name:'The time of the broadcast'}]-> (q) with q order by q.name where q.name <> '2017Year of birth1The Moon11Day (second season)' return q.name\"\n                                  ^"}, {"query": "What country is Van Kang from?", "cypher": "match(:ENTITY{name:'The Gang'})-[:Relationship{name:'Nationality'}]-> (n) return n.name"}, {"query": "The 2&#39;-deoxy-nucleotide-5&#39;-triphosphate salt mixed solution you used yesterday, what is its product number?", "cypher": "match(:ENTITY{name:'2&#39;-Deoxyribonucleic acid-5&#39;-Mixed solution of triphosphate salts'})-[:Relationship{name:'Product number'}]-> (m) return m.name"}, {"query": "I would like to know which places are associated with the third tier of the label of the University of Gambia?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The University of Kobe'}) return distinct n.name limit 5"}, {"query": "The incident of the 10.22 Ikea wreckage, which caused a sensation, what is the status of the case?", "cypher": "match(:ENTITY{name:'10.22The body in Lake Tahoe'})-[:Relationship{name:'The case'}]-> (x) return x.name"}, {"query": "The book was published on 6/1/1998, what is the price?", "cypher": "match (:ENTITY{name:'1998/6/1'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "Can you find out about the four-tier relationship between Wang Wei's work and the work of the Chongqing Monk [in the village of Abbey near Chongqing Temple]?", "cypher": "match (n:ENTITY{name:'Send the monk[The village of Abbey near the Chongqing Temple]'})-[*1..4]->(x) where x.name<>'The King' return distinct x.name"}, {"query": "What are the works of novelists called Khlo\u00e9 Ch'ing-wen?", "cypher": "match (:ENTITY{name:'Cold Brunei'})<-[:Relationship{name:'Written by'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(p) return distinct p.name"}, {"query": "Can you run away? Whose work is the little vanilla? Name the first three.", "cypher": "match (:ENTITY{name:'Run, you little bug.'})<-[:Relationship{name:'Representative works'}]- (h) return h.name order by h.name limit 5"}, {"query": "Can you tell me what the relationship is between the two levels of psychological dysfunction involved?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Psychological barriers to employment'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you name some of the famous alumni of the school?", "cypher": "match (:ENTITY{name:'The secondary school is a mountain school.'})<-[:Describe{name:'Describe'}]-(n)-[:Relationship{name:'Famous alumni'}]->(q) return distinct q.name"}, {"query": "Tell me about the work of the two-tier relationship between Hideyoshi and Nakano?", "cypher": "match (n:ENTITY{name:'The Japanese'})-[:Relationship*1..2]->(x) where x.name<>'The Enemy' return distinct x.name"}, {"query": "Can you find out the five models? What are their nationalities?", "cypher": "match (:ENTITY{name:'The model'})<-[:Relationship*]-(m), (m)-[:Relationship{name:'Nationality'}]->(n) return m.name,n.name limit 5"}, {"query": "Help me find the 11 words next to the three native words.", "cypher": "match (:ENTITY{name:'The Earth'})<-[:Relationship{name:'Chief of Staff'}]-(m), (m)-[:Relationship{name:'Total paintings'}]->(n) where n.name='11' return distinct m.name limit 3"}, {"query": "What is the price of Li's books?", "cypher": "match (:ENTITY{name:'Lee by the way.'})<-[:Relationship{name:'Written by'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "The 2012 China International Touchscreen Expo is about to be held in Qingdao, please announce the time.", "cypher": "match(:ENTITY{name:'2012China[Qinghai]The International Touchscreen Exhibition is held in the city of'})-[:Relationship{name:'Time of operation'}]-> (p) return p.name"}, {"query": "Do you know what the animals in the animal kingdom are called? Can you give me two examples?", "cypher": "match (:ENTITY{name:'The animal world'})<-[:Relationship{name:'The Circle'}]-(x),(x)-[:Relationship{name:'Other names'}]->(q) return distinct q.name limit 2"}, {"query": "Can you find the EINECS login number for the dispersed blue peach RFL?", "cypher": "match(:ENTITY{name:'The Blue PeachRFL'})-[:Relationship{name:'EINECSThe number of the log'}]-> (q) return q.name"}, {"query": "Can you name three main functions of the substances that regulate the gut microbiome?", "cypher": "match (:ENTITY{name:'Regulating the gut microbiome'})<-[:Relationship{name:'Main functions'}]-(n) return distinct n.name limit 3"}, {"query": "What is the software developed by Sun Studio?", "cypher": "match (:ENTITY{name:'The Sunrise Studio'})<-[:Relationship{name:'The developer'}]- (h) return distinct h.name"}, {"query": "What are the best-selling games developed by Nintendo?", "cypher": "match (:ENTITY{name:'Nintendo is a company.'})<-[:Relationship{name:'The developer'}]-(m), (m)-[:Relationship{name:'The best selling game'}]->(n)? return distinct m.name,n.name", "error": "Invalid input '?': expected\n  \"(\"\n  \",\"\n  \"CALL\"\n  \"CREATE\"\n  \"DELETE\"\n  \"DETACH\"\n  \"FOREACH\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REMOVE\"\n  \"RETURN\"\n  \"SET\"\n  \"UNION\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WHERE\"\n  \"WITH\"\n  <EOF> (line 1, column 154 (offset: 153))\n\"PROFILE match (:ENTITY{name:'Nintendo is a company.'})<-[:Relationship{name:'The developer'}]-(m), (m)-[:Relationship{name:'The best selling game'}]->(n)? return distinct m.name,n.name\"\n                                                                                                                                                          ^"}, {"query": "Help me find 10 companies with more than 3,000 employees.", "cypher": "match (:ENTITY{name:'The company'})<-[:Tag{name:'The label'}]-(m), (m)-[:Relationship{name:'Employees'}]->(n) where substring(n.name,0,4)>'3000' return m.name limit 10"}, {"query": "Do you know all the relationships that are involved in the three layers of the coffee? Can you tell me five?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The world is full of coffee.'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "Do you know what kind of relationships are involved in the two layers of Wonder Woman?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Godfather'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Who was born at the same time as Emeka Joseph, and what are their labels?", "cypher": "match (n:ENTITY{name:'Emeka Joseph'})-[:Relationship{name:'Date of birth'}]->(:ENTITY)<-[:Relationship{name:'Date of birth'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Do you know the professional background of this person from Yangtze Mountain? Can you give me 5 things?", "cypher": "match (:ENTITY{name:'The mountain of the sun'})<-[:Relationship{name:'Teacher'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(n) return n.name order by n.name limit 5"}, {"query": "Can you name some names related to the field of psychology?", "cypher": "match (:ENTITY{name:'The psychology'})<-[:Relationship{name:'Area'}]-(n)-[:Relationship{name:'Other names'}]->(x) return distinct x.name"}, {"query": "Find the same price as the old one and tell me what their respective labels are, then reorder them by number of labels and give them to me.", "cypher": "match (n:ENTITY{name:'The Old and New'})-[:Relationship{name:'Pricing'}]->(:ENTITY)<-[:Relationship{name:'Pricing'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you list the relationships that are covered in the two levels of the cabinet's CV?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The book of life'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you tell me the names of the relationships in the four layers involved in the following curve?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The lower curve'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you list the main achievements of Rockin' Rose?", "cypher": "match (:ENTITY{name:'RockinRose'})<-[:Relationship{name:'Foreign language name'}]-(p),(p)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name"}, {"query": "The author of the newly published novel, Chi Chi and Me, can you help me find out?", "cypher": "match(:ENTITY{name:'The rebirth of Chi Chi and Meng'})-[:Relationship{name:'Novelist'}]-> (q) return q.name"}, {"query": "The first 10 gold coins were issued for the words other than the word \"Mummy\".", "cypher": "match (:ENTITY{name:'A ton of gold'})<-[:Relationship{name:'Real name'}]-(h)-[:Relationship{name:'Title'}]->(m) where m.name <> 'Silence' return distinct m.name limit 10"}, {"query": "Can you find me five books on economics published by the publishing house Mechanical Industries?", "cypher": "match (:ENTITY{name:'Publisher of the Machine Industry'})<-[:Relationship{name:'Publishing house'}]-(m), (m)-[:Relationship{name:'The dress'}]->(n) where n.name='Plain clothes(No dishes)' return m.name limit 5"}, {"query": "How much are Ding Xiaotong's books priced?", "cypher": "match (:ENTITY{name:'Ding Shi Dong Co-authored'})<-[:Relationship{name:'Written by'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name limit 2"}, {"query": "I want to know which novel has 519481 words in total.", "cypher": "match (:ENTITY{name:'519481'})<-[:Relationship{name:'Total number of words'}]- (h) return h.name"}, {"query": "I'm going to show you a list of 10 novels that are both online and romance novels.", "cypher": "match (:ENTITY{name:'The Internet Novel'})<-[:Tag{name:'The label'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Romance novels'}) return mn.name limit 10"}, {"query": "The 2011 China International Building Structure and Engineering Technology Expo is packed with people, how many do you estimate?", "cypher": "match(:ENTITY{name:'2011China International Construction Structure and Engineering Technology Fair'})-[:Relationship{name:'The number of viewers'}]-> (n) return n.name"}, {"query": "Do you know what kind of music is the most powerful in Sanskrit?", "cypher": "match(:ENTITY{name:'The most powerful voice in the world'})-[:Relationship{name:'Type of work'}]-> (m) return m.name"}, {"query": "The 14th Home Health Expo 2013 is an event that is approved by which unit?", "cypher": "match(:ENTITY{name:'2013The 14th edition of the Home Health Expo'})-[:Relationship{name:'Approval of units'}]-> (x) return x.name"}, {"query": "What profession did the people born in Jiangsu, Wuxi, have?", "cypher": "match (:ENTITY{name:'Jiangsu is not Sichuan'})<-[:Relationship{name:'Where I was born'}]-(h)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name limit 10"}, {"query": "How do you spell the English name of 2-amino-6-methacrylate in the book?", "cypher": "match(:ENTITY{name:'2-Amino acids-6-Methacrylic acid'})-[:Relationship{name:'English name'}]-> (p) return p.name"}, {"query": "Our lab needs to usecypher": "match(:ENTITY{name:'(S)-(-)-Compared to ethanol'})-[:Relationship{name:'The flash'}]-> (x) return x.name"}, {"query": "The end of the world is a novel that is connected to the Chinese internet, and it sounds good, do you know what kind?", "cypher": "match(p:ENTITY{name:'The End of the World[The novel is connected to the Chinese-language website]'})-[:Relationship{name:'Type of'}]-> (n) return n.name"}, {"query": "Help me find a place to play all year round.", "cypher": "match (:ENTITY{name:'Available all year round'})<-[:Relationship{name:'Swimming season'}]-(m) return m.name limit 1"}, {"query": "Where is the first hospital affiliated with Jammu University?", "cypher": "match (:ENTITY{name:'The first hospital affiliated with Jammu University'})-[:Relationship{name:'Hospital address'}]->(n) return n.name"}, {"query": "Tell me about a major incident that happened in this sporting project where the men shot 25 meters with a pistol.", "cypher": "match (:ENTITY{name:'The man25The gunshot'})<-[:Relationship{name:'Sports projects'}]-(m)-[:Relationship{name:'Important events'}]->(h) return h.name order by h.name limit 1"}, {"query": "Can you describe the song \"Blood\" from the movie?", "cypher": "match (:ENTITY{name:'The Brooklyn Bridge'})--(p) return p.name skip 3"}, {"query": "Can you list the 17 TV series that Hunan TV has broadcast?", "cypher": "match (:ENTITY{name:'The Hunan Defense'})<-[:Relationship{name:'The platform'}]- (q) return q.name limit 17"}, {"query": "Do you have information on the five names of the relationships within the six layers involved in Chen Bo Nu's leather case?", "cypher": "match path=(n)<-[:Relationship*6]-(p:ENTITY{name:'The leather box of Chen Bo-nu'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "What is the shortest path between the two layers of soy and sweet almond tofu?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Oh, my God.'})-[*..2]-(b:ENTITY{name:'Milk-scented almond tofu'})) return count(p)"}, {"query": "Help me find 10 works by Liu Xiaobo other than the Mekong operation.", "cypher": "match (n:ENTITY{name:'The Giants'})-[:Relationship{name:'Major works'}]->(h) with h order by h.name where h.name <> 'Operation Mekong' return h.name limit 10"}, {"query": "What are the main awards that Yue Red Primary School has received? Can you name 3?", "cypher": "match (:ENTITY{name:'Yue Red Primary School is a five-star school in the center of Xiaoyang, which was founded in the year 2000.1958Year and area15172.52The first primary school in Liaoning Province.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Main awards'}]->(m) return distinct m.name limit 3"}, {"query": "Can you give me some information about Jobar?", "cypher": "match (:ENTITY{name:'The city of Joba'})--(x) return x.name skip 3"}, {"query": "Can you tell me about the mycotoxins?", "cypher": "match (:ENTITY{name:'The bacteria'})--(x) return x.name skip 3"}, {"query": "Do you know what the three-layer relationship is called at Grey's School of Magic?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Grey School of Magic'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the shortest path between Zhu Yucheng and Chen Jianxin in the two levels?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The memory'})-[:Relationship*..2]-(b:ENTITY{name:'The Chinese[Painter]'})) return count(p)"}, {"query": "Do you know what the basic principle of radar is?", "cypher": "match (:ENTITY{name:'The radar'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The basic principles'}]->(n) return distinct n.name"}, {"query": "Do you have any doctors with a bachelor's degree? Can you find three for me?", "cypher": "match (:ENTITY{name:'Bachelor of Arts'})<-[:Relationship{name:'Degree'}]-(m), (m)-[:Relationship{name:'Professional life'}]->(n) where n.name='The Doctor' return m.name limit 3"}, {"query": "What kind of jobs do people born in Yangon, Shandong province, do?", "cypher": "match (:ENTITY{name:'Yangdong District of Shaanxi Province'})<-[:Relationship{name:'Where I was born'}]-(h)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 1"}, {"query": "Do you recommend the two novels that are still in the series?", "cypher": "match (:ENTITY{name:'Connected'})<-[:Relationship{name:'The novel progresses'}]-(m)-[:Relationship{name:'Chinese name'}]->(p) return distinct p.name limit 2"}, {"query": "What are the main departments of the Self-Employment Vocational Training Institute, and what are the two departments besides the Electronic Electrical Engineering and Mechanical Engineering departments?", "cypher": "match (n:ENTITY{name:'The school is a tribute to the training'})-[:Relationship{name:'Main Faculty'}]->(h) where h.name <> 'Electronic and electrical engineering' and h.name <> 'Mechanical teaching laboratory' return distinct h.name limit 2"}, {"query": "Do you have any information about this man Martin Stock?", "cypher": "match (:ENTITY{name:'Martin Stock'})--(n) return n.name skip 3"}, {"query": "What are the main achievements of people born in Shanghai?", "cypher": "match (:ENTITY{name:'The City of Shanghai'})<-[:Relationship{name:'Where I was born'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(p) return distinct p.name limit 10"}, {"query": "Please tell me which company is headquartered in Dalei Economic and Technological Development Zone, Liaoning Province, in the 35th floor of the building 1-6-2 in the city of Yangzhou.", "cypher": "match (q:ENTITY{name:'The village of Yangbambu in the Daleian Economic and Technological Development Zone, Liaoning Province35The building1-6-2'})<-[:Relationship{name:'Location'}]- (n) return distinct n.name"}, {"query": "Don't call him \"Khul-Jah\", tell me his first name and his main accomplishments.", "cypher": "match (:ENTITY{name:'The comfort'})<-[:Relationship{name:'Other names'}]-(q)-[:Relationship{name:'Major achievements'}]->(p) return distinct q.name,p.name"}, {"query": "I would like to hear about Shelley.P.B. Please list the first three.", "cypher": "match (:ENTITY{name:'Shelley is a very nice person.P.B.'})--(p) return p.name order by p.name limit 3"}, {"query": "What is the model/class of the newly launched Type 081 minesweeper?", "cypher": "match(:ENTITY{name:'081Type minesweeper'})-[:Relationship{name:'The first-class'}]-> (m) return m.name"}, {"query": "The main use of this substance is for the production of oxide of tungsten, do you know?", "cypher": "match(:ENTITY{name:'2-Oxidized tin'})-[:Relationship{name:'Useful'}]-> (q) return q.name"}, {"query": "Can you introduce me to two books priced at $20?", "cypher": "match (:ENTITY{name:'20.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "What are the main awards in public high schools? List 5?", "cypher": "match (:ENTITY{name:'Public high school'})<-[:Relationship{name:'Category'}]-(x)-[:Relationship{name:'Main awards'}]->(h) return distinct h.name limit 5"}, {"query": "The Russian President Vladimir Putin has asked the Russian government to declare a national holiday in the Russian state of Petrograd.", "cypher": "match (:ENTITY{name:'The Russian government has not yet released the results.'})<-[:Relationship{name:'Capital city'}]-(x),(x)-[:Relationship{name:'National day'}]->(q) return distinct q.name"}, {"query": "What are the top 10 brands with Japanese and Korean brand labels?", "cypher": "match(:ENTITY{name:'Japanese brands'})< -[:Tag{name:'The label'}]-> (m) with m order by m.name limit 10 return m.name"}, {"query": "Do you know what three other names for Potosi in England are?", "cypher": "match (:ENTITY{name:'The city of Potoxi, England'})<-[:Relationship{name:'Where I was born'}]-(n)-[:Relationship{name:'Other names'}]->(p) return distinct n.name limit 3"}, {"query": "I remember a game with a score of 6 (Monk, Monk, Yellow, Hot Beer, Wonderful, Perfect)", "cypher": "match (:ENTITY{name:'6The monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk, the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the monk the mon mon mon mon mon mon mon monk the mon mon mon mon mon monk the monk the monk the monk the mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon'})<-[:Relationship{name:'The end number'}]- (m) return m.name"}, {"query": "Do you have any idea what the rated voltage of your 10KV circuit breakers is?", "cypher": "match(:ENTITY{name:'10KVThe circuit breaker'})-[:Relationship{name:'Rated voltage'}]-> (m) return m.name"}, {"query": "It is said that there were a lot of athletes competing in the 2010 Beijing International Marathon, do you know how many?", "cypher": "match(:ENTITY{name:'2010The annual Beijing International Marathon'})-[:Relationship{name:'Number of athletes'}]-> (q) return q.name"}, {"query": "How many books of 32 pages have been published by Kyushu Publishing, and how many of the 10 are listed?", "cypher": "match (:ENTITY{name:'The Kyushu Press'})<-[:Relationship{name:'Publishing house'}]- (mn) -[:Relationship{name:'The book'}]->(n:ENTITY{name:'32Open up'}) return mn.name limit 10"}, {"query": "What is the specifications model of the 1-amino cyclohexanate for laboratory use?", "cypher": "match(:ENTITY{name:'1-Amino ring phosphate'})-[:Relationship{name:'Specifications and models'}]-> (h) return h.name"}, {"query": "Can you find me two books published by Scholastic Publishing?", "cypher": "match (:ENTITY{name:'The School of the Sun'})<-[:Relationship{name:'Publishing house'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "What are the two main representations of the Yoga literature?", "cypher": "match(:ENTITY{name:'The Chinese Encyclopedia[Master of Political Science, head of the Department of Political Literature at the University of Qinghua]'})-[:Relationship{name:'Representative works'}]-> (n) return n.name limit 2"}, {"query": "The EINECS registration number for which chemical is 209-057-8?", "cypher": "match (:ENTITY{name:'209-057-8'})<-[:Relationship{name:'EINECSThe number of the log'}]- (q) return q.name"}, {"query": "Can you tell me what kind of relationship is involved in summoning the dead at the two levels?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Calling the dead'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Please list one person born in 1974 and one representative work owned by this person.", "cypher": "match (:ENTITY{name:'1974Year of birth'})<-[:Relationship{name:'Date of birth'}]-(q),(q)-[:Relationship{name:'Representative works'}]->(n) return q.name,n.name skip 2 limit 1"}, {"query": "I'm not sure if you're familiar with the Chicago Bulls.", "cypher": "match (:ENTITY{name:'The Chicago Bulls'})<--(n) return n.name"}, {"query": "Can you tell me what other occupations this person who is in charge of all government work has?", "cypher": "match (:ENTITY{name:'The government is in charge of the entire work.'})<-[:Describe{name:'Describe'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(p) return p.name order by p.name limit 3"}, {"query": "Do you know the specific parameters of the temperature probe on the 11036 thermometer?", "cypher": "match(:ENTITY{name:'11036Central thermometer'})-[:Relationship{name:'The temperature probe'}]-> (m) return m.name"}, {"query": "Can you name two books that could be worth 16?", "cypher": "match (:ENTITY{name:'16'})<-[:Relationship{name:'The book'}]- (n) return n.name limit 2"}, {"query": "The article is about the five best Chinese wine brands.", "cypher": "match (n:ENTITY{name:'The Day of the Lord'})-[:Relationship*]->(x) where x.name<>'You are faithful.' return distinct x.name limit 5"}, {"query": "The film is based on the novel of the same name by the Chinese writer, who also wrote the screenplay for the film.", "cypher": "match (n:ENTITY{name:'The three rainforests in Huangcheng County'})-[*1..4]->(x) where x.name<>'Oh, my God.' return distinct x.name limit 5"}, {"query": "The following is a list of the works by the Japanese artist and composer, who are known for their work in the genre of Kintetsu-Tsujin.", "cypher": "match (n:ENTITY{name:'The fire in Kintetsu'})-[:Relationship*1..2]->(x) where x.name<>'The Seven' return distinct x.name"}, {"query": "What is the price and number of pages of this book on the biology of the pineal gland?", "cypher": "match (:ENTITY{name:'The biology of the T-cell'})-[:Relationship{name:'Number of pages'}]->(n) return n.name as name union all match (:ENTITY{name:'The biology of the T-cell'})-[:Relationship{name:'Pricing'}]->(m) return m.name as name union all match (:ENTITY{name:'The biology of the T-cell'})-[:Relationship{name:'Publishing house'}]->(r) return r.name as name"}, {"query": "In which region are the striped ventriloquists mainly distributed?", "cypher": "match (:ENTITY{name:'The Striped Belly Snake'})-[:Relationship{name:'Distribution areas'}]-> (m) return distinct m.name"}, {"query": "Check out the 2012 Shanghai Air Purification and Dust Removal Technology Equipment Exhibition in China.", "cypher": "match(:ENTITY{name:'2012Shanghai Air Purification and Dust Removal Technology Equipment Exhibition in China'})-[:Relationship{name:'Industry'}]-> (m) return m.name"}, {"query": "There's a problem in the workplace, what's the ratio of 2-deoxy-D-glucose, you know that?", "cypher": "match(:ENTITY{name:'2-Deoxygenation-D-Glucose'})-[:Relationship{name:'The spin'}]-> (h) return h.name"}, {"query": "What is the relationship between the two layers of the Nietzsche translation?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Read by Nietzsche'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Please tell me what the name of the relationship involved in SHANKHAI TENNO Investment Management Ltd. is in the 3 layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Shanghai Tenno Investment Management Ltd. is a wholly owned subsidiary of Tenno Investment.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the fish that are mainly found in the shallow waters of the East China Sea and the South China Sea?", "cypher": "match (:ENTITY{name:'The shallow waters of the East China Sea and South China Sea'})<-[:Relationship{name:'Distribution areas'}]-(h) return h.name"}, {"query": "Who is the voice actor for Super Beast?", "cypher": "match (:ENTITY{name:'Super Beast is the original product of Blue Arc Cultural Communication Ltd. in Guangzhou.3DThe long-running anime series Super Beast Warriors is a team of seven superheroes from the parallel universe, including Torchfly, Lobster, Skywing, Thyre, Nightingale, Wind, Shadow, and Slim.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Sound'}]->(p) return distinct p.name"}, {"query": "The company is based in Wanda Square in Beijing's Stone Mountain.", "cypher": "match (:ENTITY{name:'Wanda Square on the Stone Mountain in Beijing'})<-[:Relationship{name:'Location'}]- (m) return m.name"}, {"query": "Do you know all the relationships involved in the two levels of the Xinjiang Education Group?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Chinese government has announced that the school will be closed.'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Are there any films with the same location as the police dog fighting, and what are the labels for each?", "cypher": "match (n:ENTITY{name:'Police dogs barking'})-[:Relationship{name:'Location'}]->(:ENTITY)<-[:Relationship{name:'Location'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "The revolutionary of which era was the great man? What were his major achievements?", "cypher": "match (:ENTITY{name:'The Grandfather[The leaders of the bitter revolution]'})-[:Relationship{name:'The times in which'}]->(n) return n.name as name union all match (:ENTITY{name:'The Grandfather[The leaders of the bitter revolution]'})-[:Relationship{name:'Major achievements'}]->(m) return m.name as name"}, {"query": "Can you tell me what the name of the relationship that Jody Lynch covered in Level 2 is?", "cypher": "The following is a list of all the different ways Jody Lynch is credited in the database:", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The following is a list of all the different ways Jody Lynch is credited in the database:\"\n         ^"}, {"query": "I'm not sure what the four layers of humor have to do with it.", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'Humor in life'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "Who has a national model of work?", "cypher": "match (:ENTITY{name:'The national labor model'})<-[:Relationship{name:'Major achievements'}]-(m) return distinct m.name"}, {"query": "Do you know what chemical is used in Palonosetron intermediate?", "cypher": "match (:ENTITY{name:'Palonosetron intermediate'})<-[:Relationship{name:'Application'}]- (h) return distinct h.name"}, {"query": "How should lotus tea be stored?", "cypher": "match (:ENTITY{name:'Lotus tea'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Storage methods'}]->(n) return distinct n.name"}, {"query": "I'm looking for a game that can be played on the Internet, but I'm not sure if I can find it.", "cypher": "match (n:ENTITY{name:'Escape from the Tomb'})-[:Relationship*1..2]->(x) where x.name<>'The Intelligent Class' return distinct x.name"}, {"query": "Tell me how many companies are operating in the port?", "cypher": "match (p:ENTITY{location:'The Bay'}) return count(p)"}, {"query": "I'm looking for a book by Satoshi Miyamoto that was published by a top publisher.", "cypher": "match (p:ENTITY{name:'The edge publishers'})<--(x)-->(q:ENTITY{name:'My friend Satoshi.'}) return x.name"}, {"query": "I want the relationship between the three 6-amino-2-methacrylate methyl groups in the 2nd layer of the methyl group.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'6-Amino acids-2-Methyl methacrylate'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "What is the relationship between acupuncture and the three layers of acupuncture?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Needle treatments'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know what browser update is the latest version 2.0.2.112?", "cypher": "match (:ENTITY{name:'V2.0.2.112'})<-[:Relationship{name:'The latest version'}]- (q) return q.name"}, {"query": "Can you tell me everything you know about the Faculty of Medicine of the University of Guam?", "cypher": "match (:ENTITY{name:'The School of Medicine'})-[:Relationship*1..3]-(p) return distinct p.name limit 10"}, {"query": "Do you have all the information about the types of relationships within the six layers that Master Gao Yong is involved in?", "cypher": "match path=(n)<-[:Relationship*6]-(p:ENTITY{name:'The Magician'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you name 10 professions that Sergeant Jun has?", "cypher": "match (:ENTITY{name:'The Army'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Professional life'}]->(q) return q.name order by q.name limit 10"}, {"query": "And what will make you know what the height of the Cup is?", "cypher": "match (n:ENTITY{name:'The Dragon Cup'})-[:Relationship{name:'General height'}]-> (h) return h.name"}, {"query": "The novel is like the flower of the year, waiting to bloom in which of the following websites?", "cypher": "match(:ENTITY{name:'The flowering of the new year'})-[:Relationship{name:'Linked site'}]-> (n) return n.name"}, {"query": "What is the shortest distance between Shenza County and Sochi County?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Shenza County'})-[*..2]-(b:ENTITY{name:'The county of So'})) return count(p)"}, {"query": "Can you name three of the most representative works of the Tanguay?", "cypher": "match (q:ENTITY{name:'The tunnel'})-[:Relationship{name:'Representative works'}]-> (x) return  distinct x.name limit 3"}, {"query": "Can you introduce me to two books priced at $68.00?", "cypher": "match (:ENTITY{name:'68.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "What other awards has Han Shan Teacher Training College received besides the third-class award for the advancement of university science and technology?", "cypher": "match (:ENTITY{name:'The school of Han Yasan'})-[:Relationship{name:'Main awards'}]->(h) where h.name <> 'The third prize for scientific and technological progress of the University of Guangdong (as of 2018)2009The year)' return h.name"}, {"query": "Can you list the following publications and information about the two-tier relationship between Dr. Liu and the prosecution?", "cypher": "match (n:ENTITY{name:'The case against Dr. Liu is a case of illness.'})-[:Relationship*1..2]->(x) where x.name<>'Published' return distinct x.name"}, {"query": "Can you tell me about the five varieties of tea?", "cypher": "match (:ENTITY{name:'Tea'})<-[:Tag{name:'The label'}]-(h) return h.name limit 5"}, {"query": "Can you list which schools have a level 3 label relationship with the Central Academy of Cinema and Television and Media?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Central Academy of Cinema and Television'}) return distinct n.name limit 3"}, {"query": "What is the shortest path between the two levels of the World's Fair and the Empire Road?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Man of the World'})-[*..2]-(b:ENTITY{name:'The Road to Empire'})) return count(p)"}, {"query": "Which machine has a blade mount angle of 35 degrees?", "cypher": "match (:ENTITY{name:'35\u00b0'})<-[:Relationship{name:'The angle of the blade'}]- (m) return m.name"}, {"query": "What is the address of the company in Dalian?", "cypher": "match (p:ENTITY{location:'The Dalyans'}) return p.name"}, {"query": "What is the shortest path between the corn cob and the corn cob?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The variety of corn'})-[:Relationship*..2]-(b:ENTITY{name:'Corn off the cob'})) return count(p)"}, {"query": "Can you share something about the marble gate?", "cypher": "match (:ENTITY{name:'The marble gate'})--(q) return q.name skip 3"}, {"query": "Do you know the person who represents the work of Madame de la Pamphale?", "cypher": "match (:ENTITY{name:'The Lady of the Pamplemousses'})<-[:Relationship{name:'Representative works'}]- (m) return m.name order by m.name"}, {"query": "Can you name three people who won the 2006 Royal Institute of British Architects Regional Award (London)?", "cypher": "match (m:ENTITY{name:'2006Awarded the Royal Institute of British Architects Regional Award (London) in the year'})--(x) return  distinct x.name limit 3"}, {"query": "I'm not sure if you're familiar with the book, but I'm not sure if you're familiar with the book, but I'm not sure if you're familiar with the book.", "cypher": "match (:ENTITY{name:'The author of the online novel, The Fall of the Flying Dragon, has abandoned the text.'})<-[:Describe{name:'Describe'}]-(m),(m)-[:Relationship{name:'Type of work'}]->(n) return distinct n.name"}, {"query": "I would like to know about the other four levels of the Goldman Sachs Group Limited in New York.", "cypher": "match (:ENTITY{name:'The Gosset Group Limited'})-[:Relationship*1..2]-(p) where p.name <> 'New York City' return p.name limit 4"}, {"query": "Can you help me find all the 10 fun labels?", "cypher": "match (p:ENTITY{name:'10The Internet'})-[:Tag{name:'The label'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you tell me five things or information about the Pharaoh's secret?", "cypher": "match (:ENTITY{name:'The Mystery of the Pharaoh'})--(q) return  distinct q.name limit 5"}, {"query": "What books are there that Hu Qingluo has written and what are they classified as?", "cypher": "match (:ENTITY{name:'The photo The book'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Tag{name:'The label'}]->(q) return distinct h.name,q.name"}, {"query": "Can you describe one of the works that have a third-tier label relationship to the attack?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The War Is Coming'}) return distinct n.name limit 1"}, {"query": "Do you know what Liu Yueping's profession is?", "cypher": "match (q:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 1"}, {"query": "I wonder what language is used in the 1996 American film 12 Monkeys directed by Terry Gilliam?", "cypher": "The film was directed by Guillaume Guillaume and produced by the French film studio, The White Language.", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The film was directed by Guillaume Guillaume and produced by the French film studio, The White Language.\"\n         ^"}, {"query": "Who is the current principal of your secondary school in Senayan Town?", "cypher": "match(:ENTITY{name:'Secondary School in Senayan Town'})-[:Relationship{name:'Current headmaster'}]-> (x) return x.name"}, {"query": "How do you explain the small number?", "cypher": "match (:ENTITY{name:'The Common People'})--(m) with m order by m.name return m.name"}, {"query": "What are the publications of China Construction and what is the price of the books?", "cypher": "match (:ENTITY{name:'China building'})<-[:Relationship{name:'Publishing house'}]-(h),(h)-[:Relationship{name:'Pricing'}]->(q) return distinct h.name,q.name"}, {"query": "What is the category of websites with more than 10 million registered users as of the end of February 2012?", "cypher": "match (:ENTITY{name:'As of2012Year of birth2By the end of the month, it had over 10 million registered users.'})<-[:Relationship{name:'Users'}]-(n)-[:Relationship{name:'Types of sites'}]->(x) return distinct x.name"}, {"query": "Can you name five professions of this man?", "cypher": "match (:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]-(p)-[:Relationship{name:'Professional life'}]->(h) return h.name skip 2 limit 10"}, {"query": "Did you know that the five types of relationships are contained within the five layers of the serpentine framework?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The Snake'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "The Wolf House depicts a monument to what era?", "cypher": "match (:ENTITY{name:'The Wolf House'})-[:Relationship{name:'The incident'}]->(n) return n.name as name union all match (:ENTITY{name:'The Wolf House'})-[:Relationship{name:'The Tribe'}]->(m) return m.name as name"}, {"query": "Asteroid 2111 and which asteroids were discovered by one discoverer, what labels did each of those asteroids have? Show them to me in reverse order of number of labels.", "cypher": "match (n:ENTITY{name:'The asteroid2111'})-[:Relationship{name:'The discoverer'}]->(:ENTITY)<-[:Relationship{name:'The discoverer'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "I would like to know where is the headquarters of my craft company, Guangzhou Municipal, when was it founded and what is its scope of operations?", "cypher": "match (:ENTITY{name:'The city of Guangzhou knows my craft company.'})-[:Relationship{name:'Location'}]->(n) return n.name as name union all match (:ENTITY{name:'The city of Guangzhou knows my craft company.'})-[:Relationship{name:'Founded'}]->(m) return m.name as name union all match (:ENTITY{name:'The city of Guangzhou knows my craft company.'})-[:Relationship{name:'Scope of operations'}]->(r) return r.name as name"}, {"query": "Who found the Swan? Can you tell five of them first?", "cypher": "match (:ENTITY{name:'The Swan'})<--(n) return n.name limit 5"}, {"query": "Tell me who is the star of the family? Name three moms?", "cypher": "match (:ENTITY{name:'The Turks'})<-[:Relationship{name:'Ethnicity'}]-(x)-[:Relationship{name:'Chinese name'}]->(h) return distinct h.name limit 3"}, {"query": "There was an incident about the death of a person from Long River poisoning, what is the name of it?", "cypher": "match (:ENTITY{name:'Longli source poisoning deaths'})<-[:Relationship{name:'The incident'}]- (m) return m.name"}, {"query": "Can you tell me what year the American Telephone Company was founded?", "cypher": "match (:ENTITY{name:'The American Telephone and Telegraph Company is a'})<-[:Relationship{name:'Company name'}]-(p)-[:Relationship{name:'Founded'}]->(n) return distinct n.name"}, {"query": "Do you know which ones have a secondary label to medicine? Can you name three?", "cypher": "match (n)-[:Tag*2{name:'The label'}]->(p:ENTITY{name:'Medical'}) return distinct n.name limit 3"}, {"query": "I'm looking for a book about the relationship between parents and their children, and I'm looking for a book about the relationship between parents and their children.", "cypher": "match (n:ENTITY{name:'Teaching children not to yell: Parenting without getting angry'})-[:Relationship*1..2]->(x) where x.name<>'See you in the morning.' return distinct x.name"}, {"query": "What are the main departments of the Nantong Industrial and Commercial Technician College (Nantong City Industrial and Commercial High Technician School)?", "cypher": "match (:ENTITY{name:'Nantong Industrial and Commercial Technician College (Nantong City Industrial and Commercial Senior Technician School)'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Main Faculty'}]->(q) return distinct x.name"}, {"query": "Kim Sang-ho: Can you tell me his name?", "cypher": "match(:ENTITY{name:'Kim Sang-hyun is crying'})-[:Relationship{name:'Title'}]-> (n) return n.name"}, {"query": "What chemical is ALG-A00683?", "cypher": "match (:ENTITY{name:'The following:ALG-A00683'})<-[:Relationship{name:'Numbered'}]- (m) return m.name"}, {"query": "What are the representative works of writers who are 171 cm tall?", "cypher": "match (:ENTITY{name:'171cm'})<-[:Relationship{name:'Height'}]-(m)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name limit 1"}, {"query": "How should the number 100 be expressed in Arabic, if it is one of the natural numbers?", "cypher": "match(:ENTITY{name:'100[One of the natural numbers]'})-[:Relationship{name:'Arabic'}]-> (x) return x.name"}, {"query": "Do you know what the relationships are within the three levels of the Boulevard?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Boulevard'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Who is the director of Fung Nam Carmen?", "cypher": "match (:ENTITY{name:'Fung is Carmen'})<-[:Relationship{name:'Representative works'}]-(m), (m)-[:Relationship{name:'Professional life'}]->(n) where n.name='Director' return distinct m.name"}, {"query": "What is the name of the dish that contains the sweet potatoes?", "cypher": "match (:ENTITY{name:'The cake is very sweet.'})-[:Relationship{name:'Classified'}]->(n) return n.name as name union all match (:ENTITY{name:'The cake is very sweet.'})-[:Relationship{name:'The Effectiveness of Recipes'}]->(m) return m.name as name"}, {"query": "The archaeological site of the ruins of Anyang City, Henan Province, lists 20 species of archaeological remains.", "cypher": "match (:ENTITY{name:'Ruins of Anyang City in Henan Province unearthed'})<-[:Relationship{name:'Point of landing'}]->(n) where n is not null return distinct n.name limit 20"}, {"query": "What is the most representative work of \u014cta-no-Fumi?", "cypher": "match (:ENTITY{name:'\u306b\u3057\u3060\u307e\u3055\u3075\u307f'})<-[:Relationship{name:'Foreign language name'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(m) return distinct m.name"}, {"query": "The following is a list of Chinese language software relatives that are called calculators.", "cypher": "match (n:ENTITY{name:'Relatives call the calculator'})-[:Relationship*1..2]->(x) where x.name<>'Chinese' return distinct x.name"}, {"query": "Does anyone know what Shao Shao's profession is? Can you tell me?", "cypher": "match (:ENTITY{name:'He was born in Guizhou, Guangdong, and graduated from the China Academy of Fine Arts.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(n) return distinct q.name"}, {"query": "What are the animals in the sunfish family?", "cypher": "match (:ENTITY{name:'The Beetle Pectinidae'}) <- [:Relationship{name:'The Department'}]-(m), (m) - [:Relationship{name:'Family'}]->(n) where n.name='The Beetle Family Amusium' return m.name"}, {"query": "What is the melting point and boiling point of curcumin?", "cypher": "match (:ENTITY{name:'The curcumin'})-[:Relationship{name:'The point of no return'}]->(n) return n.name as name union all match (:ENTITY{name:'The curcumin'})-[:Relationship{name:'Boiling point'}]->(m) return m.name as name"}, {"query": "Can you tell me what the relationships are within the three layers of the Southwest cone?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Southwest Monkey'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you recommend a six-speed manual transmission for me?", "cypher": "match (:ENTITY{name:'6The Killers'})<-[:Relationship{name:'The gearbox'}]- (x) return distinct  x.name"}, {"query": "What is the shortest path between the two layers of the A-B-C-D-B-C-D-B-C-D-B-C-D-B-C-D-B-C-D-B?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The bombs never came back.'})-[:Relationship*..2]-(b:ENTITY{name:'The One-Ball'})) return count(p)"}, {"query": "What are the different labels of the games? Please sort by the number of labels from small to large.", "cypher": "match (n:ENTITY{name:'The Red Apple of the Rhino'})-[:Relationship{name:'Type of'}]->(:ENTITY)<-[:Relationship{name:'Type of'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Please tell me who has created the calligraphy of Liu Liang Jiang.", "cypher": "match (:ENTITY{name:'The calligraphy of Liu Lingjiang'})--(q) return q.name order by q.name"}, {"query": "What is the shortest path between the two levels of the Mineral Processing Engineering major and the Metal Materials Engineering major?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Mineral processing engineering'})-[:Relationship*..2]-(b:ENTITY{name:'Engineering in metal materials'})) return count(p)"}, {"query": "What are the models that are available for the Lenovo LeapPad Leather LC200? Can you name a few?", "cypher": "match (:ENTITY{name:'The LenoxPad The leatherLC200It's a flat protective suit./The material used for the cover is superfiber.'})<-[:Describe{name:'Describe'}]-(p),(p)-[:Relationship{name:'Applicable model'}]->(q) return distinct q.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 62 (offset: 61))\n\"PROFILE match (:ENTITY{name:'The LenoxPad The leatherLC200It's a flat protective suit./The material used for the cover is superfiber.'})<-[:Describe{name:'Describe'}]-(p),(p)-[:Relationship{name:'Applicable model'}]->(q) return distinct q.name\"\n                                                              ^"}, {"query": "Can you give me an example of a label for a 4.2 magnitude earthquake in Camp 1 24 East, Chanuli?", "cypher": "match (:ENTITY{name:'1\u00b724East Camp, Li County4.2The earthquake'})-[:Tag{name:'The label'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "The law firm is a subsidiary of the Beijing Xu Xiaoming Law Firm, which is a law firm under the jurisdiction of the Ministry of Justice.", "cypher": "match (n:ENTITY{name:'Beijing Xu Xiao Ming Law Firm'})-[:Relationship{name:'The Judiciary'}]->(:ENTITY)<-[:Relationship{name:'The Judiciary'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you tell me who is the voice of the character in Aquarius? Can you name the top five?", "cypher": "match (:ENTITY{name:'The Water Vessel'})<-[:Relationship{name:'The constellations'}]-(n),(n)-[:Relationship{name:'Sound'}]->(q) return q.name skip 1 limit 10"}, {"query": "Can you give me five lines?", "cypher": "match (p:ENTITY{name:'Writer'})<--(x)-->(q:ENTITY{name:'The woman'}) return x.name limit 5"}, {"query": "Who among you has a dual career as an athlete and a teacher?", "cypher": "match (p:ENTITY{name:'Athletes'})<--(x)-->(q:ENTITY{name:'Teacher'}) return x.name"}, {"query": "There is a chemical substance called 1-Dimethylamino-2-propanol, do you know what it is?", "cypher": "match (:ENTITY{name:'1-Dimethylamino-2-propanol'})<-[:Relationship{name:'English name'}]- (m) return m.name"}, {"query": "Can you tell me the name of the startup and where is its headquarters?", "cypher": "match (:ENTITY{name:'The start-up salad'})-[:Relationship{name:'Other names'}]->(n) return n.name as name union all match (:ENTITY{name:'The start-up salad'})-[:Relationship{name:'Headquarters'}]->(m) return m.name as name"}, {"query": "What is the ingredient of the Sendai Kamen Rider?", "cypher": "match (:ENTITY{name:'The Sendai'})-[:Relationship{name:'Supplements'}]->(m) return distinct m.name"}, {"query": "Do you know the altitude of the natural village of Zanzibar? How much can you say about its area and population?", "cypher": "match (:ENTITY{name:'The natural village of Zhiji'})-[:Relationship{name:'Height'}]->(n) return n.name as name union all match (:ENTITY{name:'The natural village of Zhiji'})-[:Relationship{name:'Area'}]->(m) return m.name as name union all match (:ENTITY{name:'The natural village of Zhiji'})-[:Relationship{name:'Population'}]->(r) return r.name as name"}, {"query": "Where is the Cave of the Sun?", "cypher": "match (:ENTITY{name:'The Cave of the Phoenix'})-[:Relationship{name:'Geographical location'}]->(m) return distinct m.name"}, {"query": "What are the major works of the people born in Snyderton, Yorkshire, UK?", "cypher": "match (:ENTITY{name:'Snyderton, Yorkshire, UK, where the'})<-[:Relationship{name:'Where I was born'}]-(p)-[:Relationship{name:'Major works'}]->(x) return distinct x.name limit 1"}, {"query": "The incident was reported to be a major accident in the city of Guangzhou, China.", "cypher": "match(:ENTITY{name:'1.3The accident at the highway in Kunming'})-[:Relationship{name:'The wounded'}]-> (x) return x.name"}, {"query": "Tell me when the show is broadcast, which is about 45 minutes long?", "cypher": "match (:ENTITY{name:'45One minute'})<-[:Relationship{name:'Length of each episode'}]-(n)-[:Relationship{name:'The time of the broadcast'}]->(m) return distinct m.name limit 1"}, {"query": "What are the top 10 places that recommend a 4 hour or so tour?", "cypher": "match (:ENTITY{name:'4Hours'})<-[:Relationship{name:'Recommended playing time'}]-(q)-[:Relationship{name:'Famous places'}]->(n) return distinct n.name limit 10"}, {"query": "Which people are as tall as Gasparotto Gabriel and have a tattoo? The total number of tattoos is listed in order of size.", "cypher": "match (n:ENTITY{name:'Gasparotto Gabriel'})-[:Relationship{name:'Height'}]->(:ENTITY)<-[:Relationship{name:'Height'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Amamizuka recommended three songs to me that are not in the Spring Festival.", "cypher": "match (:ENTITY{name:'Amamizuka'})<-[:Relationship{name:'Foreign language name'}]-(q),(q)-[:Relationship{name:'Representative works'}]->(h) where h.name <> 'The Chinese New Year' return distinct h.name limit 3"}, {"query": "The Chinese name of this man is Cao Gang-gawa, and his main achievements are:", "cypher": "match (:ENTITY{name:'The first time I saw him.'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Major achievements'}]->(q) return distinct q.name"}, {"query": "I'm curious to know which of these people have the same tags, and I want you to sort them by the number of tags for each character, from small to large, please?", "cypher": "match (n:ENTITY{name:'The Chinese'})-[:Relationship{name:'Military officer'}]->(:ENTITY)<-[:Relationship{name:'Military officer'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you list the top 5 achievements of the country?", "cypher": "match (:ENTITY{name:'Thank you'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(m) return distinct m.name limit 5"}, {"query": "Can you tell me which of the six books are in the third tier of the social sciences label?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Sociology books'}) RETURN distinct n.name limit 6"}, {"query": "What is the type of cross and what is the format?", "cypher": "match (:ENTITY{name:'cross[Mathematical terms]'})-[:Relationship{name:'Type of'}]->(n) return n.name as name union all match (:ENTITY{name:'cross[Mathematical terms]'})-[:Relationship{name:'The format'}]->(m) return m.name as name"}, {"query": "I need to know what the nickname for crystalline allergic bluish eyes is, and what the English name is?", "cypher": "match (:ENTITY{name:'Crystalline allergic to blue light'})-[:Relationship{name:'Other names'}]->(n) return n.name as name union all match (:ENTITY{name:'Crystalline allergic to blue light'})-[:Relationship{name:'English name'}]->(m) return m.name as name"}, {"query": "Can you recommend my novel with a total of 1737370 words?", "cypher": "match (:ENTITY{name:'1737370'})<-[:Relationship{name:'Total number of words'}]- (h) return h.name"}, {"query": "Do you know what is the relationship between the 2nd tier label and the 8th tier label?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'The 8th'}) return distinct n.name"}, {"query": "I'm going to start with a Chinese fantasy novel, please tell me 5 of them.", "cypher": "match (:ENTITY{name:'Starting with the Chinese Web'})<-[:Relationship{name:'Linked site'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Fantasy and science fiction'}) return mn.name limit 5"}, {"query": "Can you tell me about two of the best places to visit in the spring and fall for two or three days?", "cypher": "match (:ENTITY{name:'The four seasons are different, spring and autumn are beautiful'})<-[:Relationship{name:'Suitable for seasonal play'}]-(m), (m)-[:Relationship{name:'Recommended playing time'}]->(n) where n.name='2-3The sky' return m.name limit 2"}, {"query": "What chemical has the CAS number 27625-35-0?", "cypher": "match (:ENTITY{name:'27625-35-0'})<-[:Relationship{name:'CASThe number'}]- (h) return h.name"}, {"query": "Please tell me what other representative works are there for the second deputy director of the Public Security Bureau of the city of Suzhou?", "cypher": "match (:ENTITY{name:'Deputy head of the second guard of the Juzhou City Public Security Bureau'})<-[:Relationship{name:'Professional life'}]-(n),(n)-[:Relationship{name:'Representative works'}]->(m) return m.name order by m.name limit 3"}, {"query": "Can you tell me which publisher published it?", "cypher": "match (:ENTITY{name:'The end of the world'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Relationship{name:'Publishing house'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know the time of the 2013 Health Expo, can you tell me?", "cypher": "match(h:ENTITY{name:'2013Healthcare exhibition'})-[:Relationship{name:'The time'}]-> (x) return x.name"}, {"query": "The following is a list of Howard Rosenman's personal information.", "cypher": "match (:ENTITY{name:'Howard Rosenman'})--(n) return n.name skip 1"}, {"query": "What is the content of the next project in the relationship between the 10th and 2nd levels of the Nanchang Mountain?", "cypher": "match (n:ENTITY{name:'The Ten Commandments; The Peak of the Cord'}) - [:Relationship*1..2]->(x) where x.name<>'The mother is still alive.' return distinct x.name"}, {"query": "What is the shortest relationship path between the flesh and the dried fruit in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Fruit'})-[:Relationship*..2]-(b:ENTITY{name:'Dried fruit'})) return count(p)"}, {"query": "Can you tell me about the two-layered relationship involved in the long-term relationship?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The long, narrow snout'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "I am a good English reader and I am a travel marketer, what is the shortest path between the three levels?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'I am the English teacher.'})-[*..3]-(b:ENTITY{name:'The segmentation of the tourism market'})) return count(p)"}, {"query": "Please tell me which exhibitions are on display at the Shanghai New International Expo Center?", "cypher": "match (:ENTITY{name:'The New International Expo Center in Shanghai is a great place to visit.'})<-[:Relationship{name:'The venue'}]- (p) return p.name limit 2"}, {"query": "Can you tell me about the three levels of relationships involved in the dark night of the soul?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Night of the Stranger'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What are the major departments of the higher education institutions where Su Rui-ho is the dean?", "cypher": "match (:ENTITY{name:'The Su tree'})<-[:Relationship{name:'The Dean'}]-(n)-[:Relationship{name:'Main Faculty'}]->(q) return distinct q.name"}, {"query": "What is the maximum width of the blade used in the FA-MAS rifle knife used in the army?", "cypher": "match(:ENTITY{name:'FA-MASThe rifle and knife'})-[:Relationship{name:'Maximum width of blade'}]-> (x) return x.name"}, {"query": "What is the shortest relationship between the two levels of the NEC and the Leipzig match?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Kresy will fight'})-[:Relationship*..2]-(b:ENTITY{name:'The Battle of Leipzig'})) return count(p)"}, {"query": "What are the signature sites built in the Qing Dynasty?", "cypher": "match (:ENTITY{name:'The Qing Dynasty'})<-[:Relationship{name:'Construction years'}]-(p)-[:Relationship{name:'Famous places'}]->(n) return distinct n.name"}, {"query": "Do you know which villages are located at an altitude of 1620 meters?", "cypher": "match (:ENTITY{name:'1620The M'})<-[:Relationship{name:'Height'}]- (n) return n.name limit 5"}, {"query": "I'm not sure if you know where the 4th floor label is related to the Korean family's kitchen.", "cypher": "match (n)<-[:Tag*4{name:'The label'}]-(p:ENTITY{name:'The Han family'}) RETURN distinct n.name"}, {"query": "Chat Chat Chuang is not counting the other ten achievements, including the avocado garden, the spring flower, the rose, the star, the little lady.", "cypher": "match (:ENTITY{name:'Zhang Chuying'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Major achievements'}]->(p) where p.name <> 'The flower of the avocado garden, the spring flower of the flower of the star, the little lady' return distinct p.name limit 10"}, {"query": "Do you know what the web time protocol works like?", "cypher": "match (:ENTITY{name:'Network time protocols'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The Principle'}]->(n) return distinct n.name"}, {"query": "What do i and s represent in the magnetic moment formula?", "cypher": "match (:ENTITY{name:'The magnetic moment'})-[:Relationship{name:'i'}]->(n) return n.name as name union all match (:ENTITY{name:'The magnetic moment'})-[:Relationship{name:'S'}]->(m) return m.name as name"}, {"query": "Is there a film by Min Lee in the foreign language called Yang? Is his gender male or female?", "cypher": "match (:ENTITY{name:'The windmill'})-[:Relationship{name:'Foreign name'}]->(n) return n.name as name union all match (:ENTITY{name:'The windmill'})-[:Relationship{name:'The first stage'}]->(m) return m.name as name union all match (:ENTITY{name:'The windmill'})-[:Relationship{name:'Gender and race'}]->(r) return r.name as name"}, {"query": "I watched the 2011 MTV Music Television Awards, and how many times have you seen the awards?", "cypher": "match(:ENTITY{name:'2011Year of birthMTVThe Music Television Awards'})-[:Relationship{name:'Number of sessions'}]-> (q) return q.name"}, {"query": "What are the types of relationships that are in the three layers of Inzaghi?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Inzaghi'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I forgot the chemical formula for 3-hydro-4-hydro, so let me think about it.", "cypher": "match(:ENTITY{name:'3-Oh, my God.-4-Oh, my God.'})-[:Relationship{name:'Chemical formula'}]-> (n) return n.name"}, {"query": "The film is based on the life of a young girl named Shia LaBeouf who was killed in a car accident in the early 2000s.", "cypher": "match (n:ENTITY{name:'The light is still there'})-[:Relationship*1..2]->(x) where x.name<>'7 out of 10' return distinct x.name"}, {"query": "Can you find me three books published by Shanghai University Press?", "cypher": "match (:ENTITY{name:'Published by Shanghai University'})<-[:Relationship{name:'Publishing house'}]-(n)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "I wonder what kind of novel is Sword and Destiny?", "cypher": "match(:ENTITY{name:'Sword, the turn of fate'})-[:Relationship{name:'Type of'}]-> (x) return x.name"}, {"query": "I would like to know which books are related to the third level of the label? can you give me four?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The world is full of evil.'}) RETURN distinct n.name limit 4"}, {"query": "What are the words associated with Southampton Football Club?", "cypher": "match (:ENTITY{name:'Southampton football club'})<--(n) return n.name"}, {"query": "Is the 1-aceto-4-hydroxybenzoate you often need a prescription for?", "cypher": "match(:ENTITY{name:'1-Exoxybenzyl-4-Oh, my God.'})-[:Relationship{name:'Is it a prescription?'}]-> (h) return h.name"}, {"query": "Can you recommend three movies that were released on January 1, 1999?", "cypher": "match (:ENTITY{name:'1999-01-01'})<-[:Relationship{name:'The show time'}]- (x) return x.name limit 3"}, {"query": "What is the shortest relationship path between the two layers of wheat seed 918 and 920?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'God first918'})-[*..2]-(b:ENTITY{name:'God first920'})) return count(p)"}, {"query": "What are the main achievements of CRITTY besides winning the third prize in the 16th annual growth event of the X-Men franchise?", "cypher": "match (:ENTITY{name:'CRITTY'})-[:Relationship{name:'Major achievements'}]-> (m) with m order by m.name where m.name <> 'The Zen-sword16Growth of the Year Awarded 3rd Prize' return m.name"}, {"query": "Do you know who is the third person to be named in the 2013 list of stupid charities?", "cypher": "match(:ENTITY{name:'2013The list of peaches'})-[:Relationship{name:'Third place'}]-> (p) return p.name"}, {"query": "Can you tell us about the types of relationships that are involved in the two layers of the royal family?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Queen'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me which works have a third-tier label relationship to Chinese literature?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Chinese literature'}) RETURN distinct n.name limit 3"}, {"query": "Can you tell me who Duo Swan is?", "cypher": "match (:ENTITY{name:'The Du Swan'})--(m) return m.name skip 1"}, {"query": "The following information is available in the publication Valen Economic Zone Yearbook 2005 No. 17 with no more than three levels of relationships:", "cypher": "match (n:ENTITY{name:'The yearbook of the Valmen Special Economic Zone 2005 The General17Period'})-[:Relationship*1..3]->(x) where x.name<>'Published' return distinct x.name"}, {"query": "I wonder when 007 and the Little Nurse will be released?", "cypher": "match(:ENTITY{name:'007With the little nurse'})-[:Relationship{name:'Date of birth'}]-> (m) return m.name"}, {"query": "Can you tell me where Shandong Airlines is headquartered?", "cypher": "match(:ENTITY{name:'Shandong Airlines'})-[:Relationship{name:'Location'}]-> (n) return n.name"}, {"query": "Do you know what chemical has the CAS number 64419-24-5?", "cypher": "match (:ENTITY{name:'64419-24-5'})<-[:Relationship{name:'CASNo'}]- (n) return distinct n.name"}, {"query": "The following is a list of characters who are represented by Lucius Fauci:", "cypher": "match (:ENTITY{name:'The story of the woman who was killed'})<-[:Relationship{name:'Representative works'}]- (x) return x.name order by x.name"}, {"query": "Where is Sanjay Temple located?", "cypher": "match (:ENTITY{name:'Sanjay Temple'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Geographical location'}]->(n) return distinct n.name limit 1"}, {"query": "Can you tell me about the company that is a limited liability company and its location?", "cypher": "match (:ENTITY{name:'Limited company'})<-[:Relationship{name:'Type of'}]-(q)-[:Relationship{name:'Location'}]->(m) return q.name,m.name skip 1 limit 1"}, {"query": "What are the names of the people who graduated from the same university as Liu Xiaobo and what are their labels?", "cypher": "match (n:ENTITY{name:'The dawn wind'})-[:Relationship{name:'Graduated'}]->(:ENTITY)<-[:Relationship{name:'Graduated'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "The 2010 Chinese Women and Children's State Statistics, which the book says is aimed primarily at women, are:", "cypher": "match(:ENTITY{name:'2010Statistics on the situation of women and children in China'})-[:Relationship{name:'Objects'}]-> (n) return n.name"}, {"query": "Do you know what chemical is CAS number 13115-43-0?", "cypher": "match (:ENTITY{name:'13115-43-0'})<-[:Relationship{name:'CASNo'}]- (p) return distinct p.name"}, {"query": "Do you know what Guo Wei does for a living?", "cypher": "match (:ENTITY{name:'The Gujarati'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 1"}, {"query": "The website is a product of the Internet, but does it have other label attributes?", "cypher": "match (:ENTITY{name:'136Lawyers Network'})-[:Tag{name:'The label'}]-> (m) with m order by m.name where m.name <> 'Internet products' return m.name"}, {"query": "Please list the types of information related to Sichuan Willow Town in 5 levels 3 and 4 .", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Sichuan city of Willow'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "In which regions are the red beans mainly distributed?", "cypher": "match (:ENTITY{name:'Red beans'})-[:Relationship{name:'Distribution areas'}]-> (m) return distinct m.name"}, {"query": "Can you recommend two novels that are still in print?", "cypher": "match (:ENTITY{name:'Connected'})<-[:Relationship{name:'The novel progresses'}]-(p),(p)-[:Relationship{name:'Chinese name'}]->(x) return distinct x.name limit 2"}, {"query": "Do you know how many words the book \"The Holy Eye Warrior\" has reached?", "cypher": "match(:ENTITY{name:'The Holy Eye Warrior'})-[:Relationship{name:'The word count'}]-> (m) return m.name"}, {"query": "Who has the most representative work of Odysseus?", "cypher": "match (:ENTITY{name:'The Odyssey'})<-[:Relationship{name:'Representative works'}]- (m) return m.name order by m.name limit 10"}, {"query": "What are the foods that have a sour-sweet taste? Please list 5 of them.", "cypher": "match (:ENTITY{name:'Sour and sweet'})<-[:Relationship{name:'The Taste'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Dishes'}) return mn.name limit 5"}, {"query": "What are the labels of the people who work with Wang Yan in the same profession? Please show them in order of number of labels.", "cypher": "match (n:ENTITY{name:'The King'})-[:Relationship{name:'Professional life'}]->(:ENTITY)<-[:Relationship{name:'Professional life'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Please help me find out what the theme of the 2006 Hebei International Environmental Protection Technology Equipment Expo is.", "cypher": "match(n:ENTITY{name:'2006Hebei International Environmental Protection Technology and Equipment Fair'})-[:Relationship{name:'The subject'}]-> (x) return x.name"}, {"query": "Tell me about 1999 - the 10th Annual Congress of the Chinese Archaeological Society, a collection of five articles.", "cypher": "match (p:ENTITY{name:'1999-The 10th Annual Meeting of the Chinese Archaeological Society'})--(m) with m order by m.name return distinct m.name skip 1 limit 5"}, {"query": "Who is the leader of the Four Kingdoms?", "cypher": "match (:ENTITY{name:'The Head of the Four Kingdoms'})<-[:Relationship{name:'Location'}]-(m) return distinct m.name"}, {"query": "The following is a list of articles that have been written about the two layers of the relationship between the Moon and the Moon in the book of Kosan Shammei.", "cypher": "match (n:ENTITY{name:'The gift of Koshan in May'})-[:Relationship*1..2]->(x) where x.name<>'The Portuguese' return distinct x.name"}, {"query": "Do you know which major awards Polish films have won? Name three?", "cypher": "match (p:ENTITY{name:'Polish'})<-[:Relationship{name:'White language'}]-(q)-[:Relationship{name:'Main awards'}]->(x) return distinct x.name limit 3"}, {"query": "What are the main achievements of Dong Silver Flower?", "cypher": "match (x:ENTITY{name:'The Silver Flower'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name"}, {"query": "The book is a book about the life of a young man named Rudyard Kipling.", "cypher": "match (:ENTITY{name:'The two brothers were very happy.'})<-[:Relationship{name:'Title'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "The author of the novel, Demon Blue, is nicknamed?", "cypher": "match (:ENTITY{name:'The Blue Demon'})<-[:Relationship{name:'Written by'}]-(m),(m)-[:Relationship{name:'Chinese name'}]->(h) return distinct h.name limit 1"}, {"query": "Is there a label for Chan's Chronicles other than fiction and books?", "cypher": "match (n:ENTITY{name:'The Bible is a book of inspired writings.'})-[:Tag{name:'The label'}]->(h) with h order by h.name where h.name <> 'Novel' and h.name <> 'Books and books' return h.name limit 1"}, {"query": "Do you know what exhibition was on the day of the event?", "cypher": "match (:ENTITY{name:'2011-05-9'})<-[:Relationship{name:'Show time'}]- (x) return x.name"}, {"query": "How many people are involved in the underground waterways secret room? What is the estimated time of arrival? What is the first time of arrival?", "cypher": "match (:ENTITY{name:'Underground waterways'})-[:Relationship{name:'Number of participants'}]->(n) return n.name as name union all match (:ENTITY{name:'Underground waterways'})-[:Relationship{name:'Estimated'}]->(m) return m.name as name union all match (:ENTITY{name:'Underground waterways'})-[:Relationship{name:'First time in'}]->(r) return r.name as name"}, {"query": "What is the first Chinese name of Huaxia's son?", "cypher": "match (:ENTITY{name:'The Son of Hush'})-[:Relationship{name:'Chinese name'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "I was asked to list a volunteer service station at Northeastern Electricity University.", "cypher": "match (:ENTITY{name:'Volunteer service station at Northeastern Electricity University'})--(m) return  distinct m.name limit 1"}, {"query": "Can you list which are the 5th tier label affiliations of Barbarossa Football Club?", "cypher": "match (n)<-[:Tag*5{name:'The label'}]-(p:ENTITY{name:'Barbarossa football club'}) RETURN distinct n.name"}, {"query": "What do you know about the party of the son of Chen Zhen?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Father'}]-(p)-[:Relationship{name:'Political parties'}]->(n) return distinct n.name"}, {"query": "What else is there to say about the name of the liquid white wine?", "cypher": "match (:ENTITY{name:'Liquid white wine is a liquid fermented white wine.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Other names'}]->(h) return distinct h.name"}, {"query": "The song is from the album of which you might not expect it to be, how long the song is and who is the singer?", "cypher": "match (:ENTITY{name:'Not expected'})-[:Relationship{name:'Album by'}]->(n) return n.name as name union all match (:ENTITY{name:'Not expected'})-[:Relationship{name:'Song length'}]->(m) return m.name as name union all match (:ENTITY{name:'Not expected'})-[:Relationship{name:'The song was originally sung'}]->(r) return r.name as name"}, {"query": "Can you find me two Zhejiang dishes and introduce them?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship*]-(m), (m)-[:Describe{name:'Describe'}]->(n) return  distinct m.name,n.name limit 2"}, {"query": "How many video apps are running on Android 1.5? Can you name two?", "cypher": "match (:ENTITY{name:'Android 1.5'})<-[:Relationship{name:'Operating environment'}]- (q) return q.name limit 2"}, {"query": "The 10-step tabletop game, is it paid, do you know?", "cypher": "match(:ENTITY{name:'10The sign'})-[:Relationship{name:'Payment or not'}]-> (x) return x.name"}, {"query": "Can you list some of the representative works of ceramic artists?", "cypher": "match (q:ENTITY{name:'Ceramic artists'})<-[:Relationship{name:'Professional life'}]-(m)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name"}, {"query": "What does the word \"lonely\" mean? Where did it come from?", "cypher": "match (:ENTITY{name:'The lonely'})-[:Describe{name:'The label'}]->(n) return n.name as name union all match (:ENTITY{name:'The lonely'})-[:Relationship{name:'Get out of here.'}]->(m) return m.name as name"}, {"query": "I'm not sure what other companies have labels for the same place as Beijing Dragon Wrestling and Security Prevention Technology Co., Ltd.", "cypher": "match (n:ENTITY{name:'Beijing Dragon Martial Arts and Security Prevention Technology Co., Ltd.'})-[:Relationship{name:'Location'}]->(:ENTITY)<-[:Relationship{name:'Location'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "What is the job of the next president?", "cypher": "match (:ENTITY{name:'Ren Zhen, a graduate of the Graduate School of Journalism at the Faculty of Social Sciences, is a journalist from Sansi Siyuang.'})<-[:Describe{name:'Describe'}]-(h)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name"}, {"query": "Can you tell me which species of Chinese hardwood tree the teacher introduced in class belongs to?", "cypher": "match(:ENTITY{name:'Chinese hardwood'})-[:Relationship{name:'Family'}]-> (p) return p.name"}, {"query": "Can you tell me which books are published on 2001/1/1?", "cypher": "match (:ENTITY{name:'2001/1/1'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name"}, {"query": "The first thing I want to do is write down all the information about the other name of the aromatic aluminate.", "cypher": "match (n:ENTITY{name:'Allyl alcohol'})-[:Relationship*]->(x) where x.name<>'The taste' return distinct x.name"}, {"query": "Do you know when she published this book, The Eight O'Clock Software BD0226 World Cinema Classic vs. White?", "cypher": "match (:ENTITY{name:'The eight-point softwareBD0226World cinema classics in black and white'})<-[:Relationship{name:'Title'}]-(x),(x)-[:Relationship{name:'Published'}]->(q) return distinct q.name"}, {"query": "What is the name of the web model that was derived from Alex Rampell?", "cypher": "match (:ENTITY{name:'Alex Rampell'})<-[:Relationship{name:'The source'}]- (n) return n.name"}, {"query": "What kind of jobs would people with uncommon personality traits do?", "cypher": "match (:ENTITY{name:'Not so common'})<-[:Relationship{name:'Character traits'}]-(h)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name"}, {"query": "Do you know which 5 are related to the economy with the 4th tier label?", "cypher": "match (n)-[:Tag*4{name:'The label'}]->(p:ENTITY{name:'The economy'}) RETURN distinct n.name limit 5"}, {"query": "Do you know which ones have three jump tags to do with the publications?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'The publications'}) RETURN distinct n.name limit 3"}, {"query": "The publisher is an electronic industry publisher, so please find the 6 information in the 3 layers of this book.", "cypher": "match (:ENTITY{name:'Useful4017Numerical counter utility circuits180Examples'})-[*1..3]-(p) where p.name <> 'Published by Electronic Industries' return distinct p.name limit 6"}, {"query": "I've been using 09 Returns to buy stuff lately, do you know which specific company is affiliated with it?", "cypher": "match(:ENTITY{name:'09The Net'})-[:Relationship{name:'Affiliated companies'}]-> (x) return x.name"}, {"query": "Tell me what are the three representative works of the Pearl of Konhai?", "cypher": "match (:ENTITY{name:'Pearl of the Conch Sea(1942Oh, my God. )The first woman to be killed in the attack was a woman named Kim.'})<-[:Describe{name:'Describe'}]-(m),(m)-[:Relationship{name:'Representative works'}]->(p) return distinct p.name limit 3"}, {"query": "What are the Chinese names of people born in November 1979?", "cypher": "match (:ENTITY{name:'1979Year of birth11The Moon'})<-[:Relationship{name:'Date of birth'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 5"}, {"query": "Where is the village of Zaron?", "cypher": "match (:ENTITY{name:'The village of Zaron'})-[:Relationship{name:'Geographical location'}]-> (m) return distinct m.name"}, {"query": "Can you describe the three types of relationships that are involved in the melancholy of a tennis player?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The melancholy of the tennis player'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Find me two rivers that flow into the Yellow Sea, where do they all come from?", "cypher": "match (:ENTITY{name:'The Yellow Sea'})<-[:Relationship*]-(m), (m)-[:Relationship{name:'Source of the article'}]->(n) return m.name,n.name limit 2"}, {"query": "What are the streets in Tianjin City?", "cypher": "match (n:ENTITY{name:'The city of Tianjin'})<-[:Relationship{name:'City of origin'}]-(m) return  distinct m.name "}, {"query": "What is the name of a book written by author Huang Wan in 2010 about the emperor?", "cypher": "match (:ENTITY{name:'The Rain'})<-[:Relationship{name:'Written by'}]-(m), (m)-[:Relationship{name:'Published'}]->(n) where n.name='2010-1-1' return distinct m.name"}, {"query": "I wanted to ask you, what other labels does the Tsakakron Ma have besides comics and characters?", "cypher": "match (n:ENTITY{name:'The temple of Sakata'})-[:Tag{name:'The label'}]->(h) where h.name <> 'Comic books' and h.name <> 'Characters' return distinct h.name limit 1"}, {"query": "Do you know what this person does for a living? Can you tell me five?", "cypher": "match (:ENTITY{name:'The Fairy Tale'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(n) return n.name order by n.name limit 5"}, {"query": "The University of Bologna recommends 10 different departments in addition to the Department of Chemistry.", "cypher": "match (:ENTITY{name:'The Power of Righteousness The School of Education'})<-[:Relationship{name:'Schooling'}]-(n),(n)-[:Relationship{name:'Main Faculty'}]->(p) where p.name <> 'Chemistry' return distinct p.name limit 10"}, {"query": "What is the shortest distance between the two layers of the cider and the cider tea?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Cedar'})-[*..2]-(b:ENTITY{name:'The milk is cooked.'})) return count(p)"}, {"query": "Can you list me three places that are open all day and where are the planned amenities?", "cypher": "match (:ENTITY{name:'All day'})<-[:Relationship{name:'Opening hours'}]-(x)-[:Relationship{name:'Planning for common use'}]->(m) return distinct m.name limit 3"}, {"query": "Do you know the achievements of a man born in Waeyang, South Korea?", "cypher": "match (:ENTITY{name:'The Kim Tunnel in the city of Wayang-Wong, South Korea'})<-[:Relationship{name:'Where I was born'}]-(n)-[:Relationship{name:'Major achievements'}]->(h) return distinct n.name"}, {"query": "Do you know which hotels and markets have a 3rd level label relationship?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The market hotel'}) return distinct n.name"}, {"query": "Do you know the nature of the American International Group?", "cypher": "match(:ENTITY{name:'The US International Group'})-[:Relationship{name:'The nature of the company'}]-> (n) return n.name"}, {"query": "I'm curious to know what kind of relationships are in the two layers of your villa, sister?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Sister, you are not alone.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "What else do you know about the striped tiger other than that it is a member of the family?", "cypher": "match (:ENTITY{name:'The wrinkled tiger'})-[:Relationship*1..2]-(p) where p.name <> 'The tiger familyGekkonidae' return distinct p.name limit 10"}, {"query": "What is the shortest relationship path between the contractor and the comparator in the 2 layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The commissioning calculator'})-[:Relationship*..2]-(b:ENTITY{name:'Comparison calculator'})) return count(p)"}, {"query": "Can you tell me about some of the works that Liu Jianling has represented?", "cypher": "match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Representative works'}]-> (p) return p.name skip 1"}, {"query": "Statistics on the 10 occupations of people born in 1964?", "cypher": "match (:ENTITY{name:'1964Year of birth7The Moon'})<-[:Relationship{name:'Date of birth'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name limit 10"}, {"query": "What are the main achievements of Fujian's elderly?", "cypher": "match (:ENTITY{name:'The Fujian Chieftain'})<-[:Relationship{name:'Where I was born'}]-(x)-[:Relationship{name:'Major achievements'}]->(p) return distinct p.name"}, {"query": "Which production sites are the model for integrating the research, development and production of veterinary medicines?", "cypher": "match (:ENTITY{name:'Research, development and production of veterinary drugs'})<-[:Relationship{name:'The pattern'}]-(x),(x)-[:Relationship{name:'Production facilities'}]->(p) return distinct x.name"}, {"query": "Who are the people with the same nationality as the Yomiuri? What are their labels? Please list them by number of labels from small to large.", "cypher": "match (n:ENTITY{name:'The Japanese'})-[:Relationship{name:'Nationality'}]->(:ENTITY)<-[:Relationship{name:'Nationality'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "The .NET game programming introduction classic is still available?", "cypher": "match (:ENTITY{name:'.NETThe game programming classics'})--(m) with m order by m.name where m.name <> 'Books and books' return m.name"}, {"query": "What is Zhu Shiyang's profession?", "cypher": "match (:ENTITY{name:'Zhu Shiyang'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name"}, {"query": "Do you know what her main works are? She is a purple sandstone artist, ceramicist, artisanal artist of national level, famous ceramicist.", "cypher": "match (:ENTITY{name:'The artist is a Chinese artist, a ceramicist, a national level artisan, a famous ceramicist.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Representative works'}]->(m) return distinct m.name"}, {"query": "Help me find five volumes of lyric poetry.", "cypher": "match (:ENTITY{name:'The Book of Poetry'})<-[:Relationship{name:'Origin of the work'}]-(m) return distinct m.name limit 5"}, {"query": "I'm interested in the game, but I'm not sure if I can get a sense of where Marvel's Future Battle is, what genre it is and what kind of content it's about.", "cypher": "match (:ENTITY{name:'Marvel's future is at stake'})-[:Relationship{name:'Area'}]->(n) return n.name as name union all match (:ENTITY{name:'Marvel's future is at stake'})-[:Relationship{name:'Game type'}]->(m) return m.name as name union all match (:ENTITY{name:'Marvel's future is at stake'})-[:Relationship{name:'The content'}]->(r) return r.name as name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 37 (offset: 36))\n\"PROFILE match (:ENTITY{name:'Marvel's future is at stake'})-[:Relationship{name:'Area'}]->(n) return n.name as name union all match (:ENTITY{name:'Marvel's future is at stake'})-[:Relationship{name:'Game type'}]->(m) return m.name as name union all match (:ENTITY{name:'Marvel's future is at stake'})-[:Relationship{name:'The content'}]->(r) return r.name as name\"\n                                     ^"}, {"query": "What is the religion of the people of Yangtze and what is the work that represents it?", "cypher": "match (:ENTITY{name:'The Japanese'})-[:Relationship{name:'Faith'}]->(n) return n.name as name union all match (:ENTITY{name:'The Japanese'})-[:Relationship{name:'Representative works'}]->(m) return m.name as name"}, {"query": "Do you know which platforms the game is released on? say three?", "cypher": "match (:ENTITY{name:'The Anger of Atlanta'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'The game platform'}]->(q) return distinct q.name limit 3"}, {"query": "I'm not sure if you're familiar with the term \"metallic acid\" or \"metallic acid\".", "cypher": "match (:ENTITY{name:'Methyl acrylate trioxide'})--(n) with n order by n.name return n.name"}, {"query": "What are the main departments of the university where Professor Nguyen is the current rector? Can you name three?", "cypher": "match (:ENTITY{name:'The first is the question of the future.'})<-[:Relationship{name:'Current headmaster'}]-(q),(q)-[:Relationship{name:'Main Faculty'}]->(m) return distinct m.name limit 3"}, {"query": "The novel is currently being serialized in Chinese under the title What? Say 3?", "cypher": "match (:ENTITY{name:'Connected'})<-[:Relationship{name:'The novel progresses'}]-(n)-[:Relationship{name:'Chinese name'}]->(h) return distinct n.name limit 3"}, {"query": "Where is the island of Mingan?", "cypher": "match (:ENTITY{name:'The Moon Island'})-[:Relationship{name:'Geographical location'}]->(m) return distinct m.name"}, {"query": "Can you tell me the dates of the three zodiac signs for the year of the rabbit?", "cypher": "match (:ENTITY{name:'The Year of the Rabbit'})<-[:Relationship{name:'The zodiac'}]- (q) return q.name limit 3"}, {"query": "I want to know which professors are in China? Please list me 5 of them.", "cypher": "match (p:ENTITY{name:'Professor'})<--(x)-->(q:ENTITY{name:'China'}) return x.name limit 5"}, {"query": "Can you list the names of the 10 relationships in the 2 layers of the Little Prince?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Little Prince'}) UNWIND relationships(path) AS rel RETURN rel.name limit 10"}, {"query": "How much does a book cost for a single book?", "cypher": "match (:ENTITY{name:'The light'})<-[:Relationship{name:'Written by'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "What chemical has a molecular weight of 252.2416?", "cypher": "match (:ENTITY{name:'252.2416'})<-[:Relationship{name:'Molecular weight'}]- (q) return distinct q.name"}, {"query": "What kind of people are the people with the hair in the wind?", "cypher": "match (:ENTITY{name:'The winds are so strong'})-[:Relationship{name:'Multicellular groups'}]->(n) return n.name"}, {"query": "What are the labels of these people, and where was Mineo's birthplace? Please find out how many of them are in order of the number of labels.", "cypher": "match (n:ENTITY{name:'Minayoshi'})-[:Relationship{name:'Where I was born'}]->(:ENTITY)<-[:Relationship{name:'Where I was born'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Could you please list the five most representative works of Timothy Robert DeKay?", "cypher": "match (:ENTITY{name:'Timothy Robert DeKay'})<-[:Relationship{name:'Other names'}]-(q)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name limit 5"}, {"query": "Can you recommend 2 software that are 1.67MB?", "cypher": "match (:ENTITY{name:'1.67MB'})<-[:Relationship{name:'Software size'}]- (q) return q.name limit 2"}, {"query": "Do you know where the country of Etruria is located?", "cypher": "match (:ENTITY{name:'The Etruscan'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Located'}]->(q) return distinct q.name"}, {"query": "I forgot the density of 4-hydroxyethyl diethyl, remember?", "cypher": "match(:ENTITY{name:'4-Enriched ethanol'})-[:Relationship{name:'Density'}]-> (p) return p.name"}, {"query": "Can you tell me what the relationship is between Huanggang Education and Beijing Experimental School in the three levels?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Chinese government has announced that the school will be closed.'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I want to know who is the best actress at the Berlin International Film Festival.", "cypher": "match (:ENTITY{name:'Best Actress at the Berlin International Film Festival'})--(n) return n.name skip 1"}, {"query": "I need information on the two-tier relationship between the works of Huang and the poetry of Han Fuchun.", "cypher": "match (n:ENTITY{name:'The theme of the song is \"Hong Kong Poetry\".'})-[*1..2]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "Can you list any of the three levels of relationships involved in the 2014 MTV Video Music Awards?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'2014Year of birthMTVMusic video with prize'}) UNWIND relationships(path) AS rel RETURN rel.name limit 2"}, {"query": "What is the shortest distance between the Shaanxi Province branch of China Construction Bank and Qingdao City branch of China Construction Bank within the two levels?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Branch of China Construction Bank in Shanxi Province'})-[*..2]-(b:ENTITY{name:'China Construction Bank branch in Qingdao'})) return count(p)"}, {"query": "What is the story of the reign of Inchon?", "cypher": "match (:ENTITY{name:'The rule of mercy'})-[:Tag{name:'The label'}]->(n) return n.name"}, {"query": "Do you have anything for $44.5?", "cypher": "match (:ENTITY{name:'44.5Japanese yen'})<--(n) return n.name"}, {"query": "Do you know who the representative of the first 10 best works of art is?", "cypher": "match (p:ENTITY{name:'The accident at the Ravensgate'})<-[:Relationship{name:'Representative works'}]- (x) return x.name order by x.name limit 10"}, {"query": "What is the chemical formula of sodium perchlorate in the many different information?", "cypher": "match(:ENTITY{name:'Sodium chloride'})-[:Relationship{name:'Chemical formula'}]-> (p) return p.name"}, {"query": "The two-tiered relationship between the two is related to the rainfall in the late afternoon in Denpo.", "cypher": "match (n:ENTITY{name:'The rain in the evening'})-[*1..2]->(x) where x.name<>'The world is full of it.' return distinct x.name"}, {"query": "Help me find two long novels by Yu Hua.", "cypher": "match (:ENTITY{name:'Yue Hua'})<-[:Relationship{name:'Written by'}]-(m), (m)-[:Relationship{name:'Literary genre'}]->(n) where n.name='The Long Novel' return distinct m.name limit 2"}, {"query": "What are the main achievements of people born in December 1961?", "cypher": "match (:ENTITY{name:'1961Year of birth12The Moon'})<-[:Relationship{name:'Date of birth'}]-(q)-[:Relationship{name:'Major achievements'}]->(p) return distinct p.name limit 3"}, {"query": "I want to know who is related to the 4th level of the tag?", "cypher": "match (n)<-[:Tag*4{name:'The label'}]-(p:ENTITY{name:'The dawn'}) RETURN distinct n.name"}, {"query": "I want to be a Wuhan University graduate with major achievements.", "cypher": "match (:ENTITY{name:'The University of Wuhan'})<-[:Relationship{name:'Graduated'}]-(m)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name limit 1"}, {"query": "Can you tell me about the types of relationships that are involved in the three layers of the classic romance novel?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Selected works of classic romance'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Do you have any information about the inner ties between the two groups involved in the village of Dodo?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The village of Dodo'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Manipulating the [2017 SBS Korean TV series] Do you know the time of the TV series?", "cypher": "match(:ENTITY{name:'Controlled[2017Year of birthSBSProduced by South Korean TV series]'})-[:Relationship{name:'Delivery time'}]-> (n) return n.name"}, {"query": "Find me three films directed by Li Zhensheng", "cypher": "match (:ENTITY{name:'Li Zhensheng'})<-[:Relationship{name:'Director'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "What do you know about this book? Help me find the other four in the 2nd layer.", "cypher": "match (:ENTITY{name:'The Four Seasons of Tang'})-[:Relationship*1..2]-(p) where p.name <> 'Books and books' return p.name limit 4"}, {"query": "What is the shortest relationship path between the two layers of film common alert and murder memory?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Common area of security[2000Park Chan-woo directed the Korean film]'})-[*..2]-(b:ENTITY{name:'The memory of the murder[South Korea2003The film is directed by Jun Jun.]'})) return count(p)"}, {"query": "Tell me what the ticketing campaign ended on March 3, 2016 was?", "cypher": "match (:ENTITY{name:'2016Year of birth3The Moon3The Sun'})<-[:Relationship{name:'End time'}]- (x) return distinct x.name"}, {"query": "What is the shortest path between the two levels of Taiyanlu Village and Muhu Mountain Village?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Taiyangu'})-[:Relationship*..2]-(b:ENTITY{name:'The village of Mu Lake'})) return count(p)"}, {"query": "What chemical boils at 114-115\u00b0C?", "cypher": "match (:ENTITY{name:'114-115oC'})<-[:Relationship{name:'Boiling point'}]- (p) return p.name"}, {"query": "Question 1-What is the chemical name of cyclopropylcarbonylpiperazine in Chinese?", "cypher": "match (:ENTITY{name:'1-(Cyclopropylcarbonyl)piperazine'})<-[:Relationship{name:'English name'}]- (q) return distinct q.name"}, {"query": "Can you tell us about the types of relationships involved in the four layers of Linguistics?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'Linzoy'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What is the shortest distance between the 4th hospital in Langsha and the 2nd floor of the 1st hospital in Langsha?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Fourth Hospital in Langsha'})-[*..2]-(b:ENTITY{name:'The first hospital in Langsha'})) return count(p)"}, {"query": "Is the Tai Chi chicken unique to China? Where is it mainly distributed?", "cypher": "match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Is China special?'}]->(n) return n.name as name union all match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Distribution areas'}]->(m) return m.name as name"}, {"query": "Do you know what chemical has CAS number 6261-22-9?", "cypher": "match (:ENTITY{name:'6261-22-9'})<-[:Relationship{name:'CASThe number of the log'}]- (q) return q.name"}, {"query": "Where is the location of the 2013 China International Hardware Tools Expo in Tianjin?", "cypher": "match(p:ENTITY{name:'2013China international hardware tools[The city of Tianjin]The exhibition'})-[:Relationship{name:'Location'}]-> (n) return n.name"}, {"query": "Do you know which novel is in progress of being republished?", "cypher": "match (:ENTITY{name:'The following is a list of articles that have been updated since:'})<-[:Relationship{name:'Progress'}]- (n) return n.name"}, {"query": "Can you list the types of relationships that the Horan Belturi River is involved in in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Hurun Belturi River'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Check the following ISBN numbers 7232313013, 9787232313012 for relevant information within the two-layer relationship of mine drainage pressure reduction safe mining technology?", "cypher": "match (n:ENTITY{name:'Mining technology for safe mining'})-[:Relationship*1..2]->(x) where x.name<>'7232313013, 9787232313012' return distinct x.name"}, {"query": "The following is a list of the main achievements of the Yusof Yan family:", "cypher": "match (:ENTITY{name:'The birth of Xu'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(m) return distinct q.name"}, {"query": "Can you please tell me about the top 10 amateur sports schools for teenagers in the Shijiazhuang Mountain area of Beijing?", "cypher": "match (:ENTITY{name:'Amateur sports school for children and teenagers in the Stone Mountain area of Beijing'})--(p) return p.name order by p.name limit 10"}, {"query": "Please tell me what is http://www.17k.com/?", "cypher": "match (:ENTITY{name:'http://www.17k.com/'})<-[:Relationship{name:'The official website'}]- (m) return m.name"}, {"query": "The Chinese name for the country is not more than 10 words?", "cypher": "match (:ENTITY{name:'The most powerful comedy show in the world'})-[:Relationship{name:'Chinese name'}]-> (m) with m order by m.name return m.name limit 10"}, {"query": "Can you find me two books published by Zeru Books?", "cypher": "match (:ENTITY{name:'The Zeru book company'})<-[:Relationship{name:'Publishing house'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "The 14th secondary school in Victory, East Kampong, formerly known as Victory Oilfield, has won what awards?", "cypher": "match (:ENTITY{name:'The school was originally called Victory Oilfields 14th Secondary School.1973The year2007The school was founded in the year 1962 and is located in the city of Zanzibar.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Main awards'}]->(m) return distinct m.name limit 5"}, {"query": "Tell me about the 0377 auction site you know of?", "cypher": "match (:ENTITY{name:'0377Buy and sell'})--(x) with x order by x.name where x.name <> 'The website' return x.name"}, {"query": "What is the shortest path between the two layers of the forest and the oak tree?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Limb'})-[*..2]-(b:ENTITY{name:'The Chinese'})) return count(p)"}, {"query": "I would like to know the name of the person and the main works of the author.", "cypher": "match (:ENTITY{name:'The Penguins'})-[:Relationship{name:'The times in which'}]->(n) return n.name as name union all match (:ENTITY{name:'The Penguins'})-[:Relationship{name:'Title'}]->(m) return m.name as name union all match (:ENTITY{name:'The Penguins'})-[:Relationship{name:'Major works'}]->(r) return r.name as name"}, {"query": "Help me find three representative works of art by Ryu Yayoi", "cypher": "match (:ENTITY{name:'The food is delicious.'})-[:Relationship{name:'Representative works'}]-> (m) return distinct m.name limit 3"}, {"query": "What are the famous sights in the Peninsula?", "cypher": "match (:ENTITY{name:'The Gorge'}) - [:Relationship{name:'Famous places'}]->(m) return distinct m.name"}, {"query": "Can you introduce me to books priced at $31.00 on both sides?", "cypher": "match (:ENTITY{name:'31.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name"}, {"query": "I want a Han Chinese and her corresponding job title, give me ten pairs?", "cypher": "match (m:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(q)-[:Relationship{name:'Professional life'}]->(p) return distinct q.name,p.name limit 10"}, {"query": "I don't know the molecular formula of 2-acetylbiphenyl, so I can't calculate its molecular weight, can you tell me directly what its molecular weight is?", "cypher": "match(:ENTITY{name:'2-Acetyl alcohol'})-[:Relationship{name:'Molecular weight'}]-> (x) return x.name"}, {"query": "What is the shortest relationship path between a Taoist monk and a Chinese hero in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Taoist[1997The film is directed by Yuen Ji-min.]'})-[*..2]-(b:ENTITY{name:'Chinese hero[1999The film is directed by Lin Wen-wen.]'})) return count(p)"}, {"query": "Do you know any famous alumni of the Higher Technical School of Railway Police in Yangzhou?", "cypher": "match (:ENTITY{name:'The Higher Specialist School for Railway Police in Yangzhou'})-[:Relationship{name:'Famous alumni'}]-> (m) return m.name skip 2"}, {"query": "Can you tell me about the main achievements of the actresses and models?", "cypher": "match (:ENTITY{name:'The girl star, the model'})<-[:Relationship{name:'Professional life'}]-(h)-[:Relationship{name:'Major achievements'}]->(m) return distinct m.name"}, {"query": "Do you know of any relationship types that are named within the two layers that security guard Jamie McDonnell is involved in?", "cypher": "The MacArthur's name is a reference to the name of the game, which is the same as the name of the game itself.", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The MacArthur's name is a reference to the name of the game, which is the same as the name of the game itself.\"\n         ^"}, {"query": "Do you know which book has the barcode 9787111350873?", "cypher": "match (:ENTITY{name:'9787111350873'})<-[:Relationship{name:'Barcode'}]- (h) return h.name"}, {"query": "I wonder what Fan Sun-soo is doing? Can you tell me?", "cypher": "match (n:ENTITY{name:'The scene'})<-[:Relationship{name:'Chinese name'}]-(x)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name"}, {"query": "What is the shortest distance between the two-level Kamelou Middle School and the Upper Secondary School in the city?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Camellia High School in Roda County'})-[*..2]-(b:ENTITY{name:'City High School'})) return count(p)"}, {"query": "I'm not sure which street the three and garden community belongs to.", "cypher": "match(:ENTITY{name:'Three and Garden Community'})-[:Relationship{name:'Affiliated'}]-> (m) return m.name"}, {"query": "The following is a list of three professions in which Jiangsu Yangyang can be active apart from being a strategist:", "cypher": "match (:ENTITY{name:'The city of Yangyang, Jiangsu Province'})<-[:Relationship{name:'Where I was born'}]-(q)-[:Relationship{name:'Professional life'}]->(x) where x.name <> 'The strategist' return distinct x.name limit 3"}, {"query": "What chemical is CAS number 174669-73-9?", "cypher": "match (:ENTITY{name:'174669-73-9'})<-[:Relationship{name:'CASThe number of the log'}]- (n) return n.name"}, {"query": "Can you find me two books published by the Chinese Statistical Publishing House?", "cypher": "match (:ENTITY{name:'The Chinese Statistical Publishing'})<-[:Relationship{name:'Publishing house'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "Can you tell me who is the second-tier label for Bridget Boucherlier?", "cypher": "match (n) <- [:Tag*2{name:'The label'}]-(p:ENTITY{name:'Bridgette; The French government has not yet done so.'}) return distinct n.name"}, {"query": "The school was founded in 1229 and has four main faculties.", "cypher": "match (:ENTITY{name:'1229Year of birth'})<-[:Relationship{name:'When did it start?'}]-(n)-[:Relationship{name:'Main Faculty'}]->(p) return distinct p.name"}, {"query": "I wonder if anyone has a name like Dwarf?", "cypher": "match (:ENTITY{name:'The outside number The Dwarf'}) <--(n) return n.name"}, {"query": "What are the most representative works of people born in December 1937?", "cypher": "match (:ENTITY{name:'1937Year of birth12The Moon'})<-[:Relationship{name:'Date of birth'}]-(h)-[:Relationship{name:'Representative works'}]->(q) return distinct h.name"}, {"query": "The full name of the organization, Yucatec Mining Hospital, in Chinese, is?", "cypher": "match (:ENTITY{name:'Yucca Mining Hospital'})<-[:Relationship{name:'Chinese name'}]-(n) return  max(n.name)"}, {"query": "Can you tell me what else you have in mind besides the teacher and Chinese nationality?", "cypher": "match (n:ENTITY{name:'Cao Wei and'})-->(h) with h order by h.name where h.name <> 'Teacher' and h.name <> 'China' return h.name limit 3"}, {"query": "What is the relationship between the two levels of the French army?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'French Army'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I'm going to be a little bit more specific about the three layers of relationships between Wang Zhou and the artwork.", "cypher": "match (n:ENTITY{name:'The Great Cedar Cedar'})-[:Relationship*1..3]->(x) where x.name<>'The King' return distinct x.name"}, {"query": "I'm not sure if there are any American horror movies out there.", "cypher": "match (:ENTITY{name:'The United States'})<-[:Relationship{name:'Production areas'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Surprise film'}) return mn.name  limit 20"}, {"query": "What kind of game is the game? What is the size of the game? What is the language of the game?", "cypher": "match (:ENTITY{name:'Help the little bird to unlock the nest2The ranking is open source'})-[:Relationship{name:'Game type'}]->(n) return n.name as name union all match (:ENTITY{name:'Help the little bird to unlock the nest2The ranking is open source'})-[:Relationship{name:'The size of the game'}]->(m) return m.name as name union all match (:ENTITY{name:'Help the little bird to unlock the nest2The ranking is open source'})-[:Relationship{name:'Language'}]->(r) return r.name as name"}, {"query": "The alphabetical list of the three types of relationships that Alpha people share is as follows:", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Alpha'}) UNWIND relationships(path) AS rel RETURN rel.name limit 3"}, {"query": "What else does director Liu Xiaobo have to do with his work other than work?", "cypher": "match (:ENTITY{name:'The family of Liu'}) <- [:Relationship{name:'Director'}]-(m) where m.name <>'Time to work [1985 The family of LiuDirector film]' return distinct m.name"}, {"query": "Can you tell me about the 3 layer relationship of the XTC900 series, which uses multi-zone independent backlight control and HiView graphics engine technology?", "cypher": "match (n:ENTITY{name:'The HaishengXT900The series'}) - [*1..3]->(x) where x.name<>'The HaishengXT900The series is a LEDBacklight LCD display released by The Haisheng Company, with multi-zone independent backlight control and HiViewThe painting engine technology.' return distinct x.name"}, {"query": "What is the boiling point of DL-3-methyl rings, can you help me check?", "cypher": "match(:ENTITY{name:'DL-3-Methyl ring phosphate'})-[:Relationship{name:'Boiling point'}]-> (n) return n.name"}, {"query": "Can you tell me about the five types of relationships that Hopkin is involved in in the 3 layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Hopkin and others'}) UNWIND relationships(path) AS rel return rel.name limit 5"}, {"query": "I'm going to write about the five food information about the five-tier relationship of cheese-roasted corn.", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Cheese and roasted corn'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Trouble Row lists five fantasy novels that are available on the Linx City reading link site.", "cypher": "match (:ENTITY{name:'Reading in the city'})<-[:Relationship{name:'Linked site'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Fantasy and science fiction'}) return mn.name limit 5"}, {"query": "The number of companies that have been established in the last 12 years?", "cypher": "match (p:ENTITY{time:'2012'}) return count(p)"}, {"query": "Do you know which report says that the 2011 Tai Chi Wind construction yearbook and the 2011 Tai Chi tender?", "cypher": "match (:ENTITY{name:'2011The year isYear of constructionandThe tender'}) <-[:Relationship{name:'What it is'}]- (p) return p.name"}, {"query": "I'm not sure if I can understand the Queen's request for me to be silent in more than three words, can you?", "cypher": "match (:ENTITY{name:'The Princess made me giggle.'})--(m) with m order by m.name return m.name limit 3"}, {"query": "Can you describe the types of relationships within the four layers of the Four Yellow Liaisons?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The Yellow Lion'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "Tell me what the word for today is.", "cypher": "match (:ENTITY{name:'This afternoon.'})<-[:Relationship{name:'Real name'}]-(h),(h)-[:Relationship{name:'Title'}]->(m) return distinct m.name limit 1"}, {"query": "I'm going to be the director of the secondary school chemistry experiment by Yu-Rung Zhang, and I'm going to study the three-tier relationship.", "cypher": "match (n:ENTITY{name:'Secondary school chemical experimental research'})-[:Relationship*1..3]->(x) where x.name<>'Ren Yu-Red Zhang Ziyi' return distinct x.name"}, {"query": "What types of relationships are involved in the two layers of marriage intelligence do you know about?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Marriage wisdom'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "What is the shortest relationship between the two layers of cabinet and the glass bulb?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Oh, my God.'})-[:Relationship*..2]-(b:ENTITY{name:'Glass canisters'})) return count(p)"}, {"query": "What is the shortest route between the two levels of the village of Ryujo and the village of White River?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Village of Ryujo[Baihua village of Popo Town of Jiyuan City, Henan Province]'})-[*..2]-(b:ENTITY{name:'Village of White River'})) return count(p)"}, {"query": "What is the shortest relationship path between the two layers of the flat thoracic and the squamous?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Flat-breasted'})-[:Relationship*..2]-(b:ENTITY{name:'The Octopus'})) return count(p)"}, {"query": "I'm not sure if I'm going to be able to do it, but I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it.", "cypher": "match (n:ENTITY{name:'The Feyong'})-[:Relationship{name:'Representative works'}]->(h) with h order by h.name where h.name <> 'The chickens grow up to be chickens.' and h.name <> 'The mother in my heart' return h.name limit 1"}, {"query": "The following is a list of the topics covered in the book:", "cypher": "match (n:ENTITY{name:'The Blow'})-[:Relationship*1..2]->(x) where x.name<>'Literary works' return distinct x.name"}, {"query": "Tell me about the three layers of relationships that are involved in wearing asphalt. Can you name three?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Asphalt'}) UNWIND relationships(path) AS rel RETURN rel.name limit 3"}, {"query": "What is the name of the classic work of the Western master painter?", "cypher": "match (:ENTITY{name:'The Western master of painting'})<-[:Relationship{name:'The book of the fox'}]- (h) return h.name"}, {"query": "Which software's tagline is \"I'm here\"?", "cypher": "match (:ENTITY{name:'I'm here'})<-[:Relationship{name:'The software password'}]- (n) return distinct n.name", "error": "Invalid input 'm': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 32 (offset: 31))\n\"PROFILE match (:ENTITY{name:'I'm here'})<-[:Relationship{name:'The software password'}]- (n) return distinct n.name\"\n                                ^"}, {"query": "The Intel Mercedes 3 933EB (box) is a Chinese car that was designed by Intel in the late 1980s.", "cypher": "match (:ENTITY{name:'Intel The Mercedes3 933EB(The box)'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Tag{name:'The label'}]->(n) return distinct n.name limit 1"}, {"query": "The name of the company in Suzhou?", "cypher": "match (p:ENTITY{location:'South Korea'}) return p.name"}, {"query": "Do you have any idea how many local businesses are doing?", "cypher": "match (p:ENTITY{location:'Lightening'}) return count(p)"}, {"query": "Please tag the road collapse in Taihuahua on 12.26", "cypher": "match (:ENTITY{name:'12.26Road collapse in Taipei'})-[:Tag{name:'The label'}]-> (h) with h order by h.name return h.name"}, {"query": "Can you find me two calligraphers?", "cypher": "match (:ENTITY{name:'Calligraphers'})<-[:Relationship{name:'Professional life'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "What are the most representative works of people born in December 1966?", "cypher": "match (:ENTITY{name:'1966Year of birth12The Moon'})<-[:Relationship{name:'Date of birth'}]-(m)-[:Relationship{name:'Representative works'}]->(q) return distinct m.name"}, {"query": "I accidentally learned about Zhang Lianying's ball-throwing incident at the World Table Tennis Championships in Yokohama, and in order to make the game more enjoyable, you can give me three more details about it.", "cypher": "match (n:ENTITY{name:'Zhang Liying to allow ball incident'})-->(h) with h order by h.name where h.name <> 'The World Table Tennis Championships in Yokohama' and h.name <> 'To make the game more enjoyable' return h.name limit 3"}, {"query": "How many points of interest do the data show for the substitute?", "cypher": "match(:ENTITY{name:'He is a good man.'})-[:Relationship{name:'The point of no return'}]-> (q) return q.name"}, {"query": "The song is sung by a group of musicians from the city of Turku, who are the songwriters, composers and lyricists of the song.", "cypher": "match (:ENTITY{name:'The Turks are defeated.'})-[:Relationship{name:'The word'}]->(n) return n.name as name union all match (:ENTITY{name:'The Turks are defeated.'})-[:Relationship{name:'Music'}]->(m) return m.name as name union all match (:ENTITY{name:'The Turks are defeated.'})-[:Relationship{name:'Composed'}]->(r) return r.name as name"}, {"query": "Can you list some of the main works of SNH48?", "cypher": "match (:ENTITY{name:'SNH48'})<-[:Relationship{name:'Group'}]-(q)-[:Relationship{name:'Major works'}]->(m) return distinct q.name"}, {"query": "Help me find three films by director Wouter.", "cypher": "match (:ENTITY{name:'The Wool Whisperer'})<-[:Relationship{name:'Director'}]-(m) return distinct m.name limit 3"}, {"query": "Do you know when Chen Da Kai was founded?", "cypher": "match (p:ENTITY{name:'The Chinese company'}) return p.time"}, {"query": "The date of birth and nationality of Wang Rin Sung.", "cypher": "match (x:ENTITY{name:'The King'}),(x)-[:Relationship{name:'Date of birth'}]-> (m), (x)-[:Relationship{name:'Ethnicity'}]->(n) return m.name,n.name"}, {"query": "I want to know about the next rebirth novel, \"Jumen Yang Killing Two\".", "cypher": "match (n:ENTITY{name:'Zhu Men is killed'})-[:Relationship*1..2]->(x) where x.name<>'Reborn' return distinct x.name"}, {"query": "Please tell me 5 things about the third layer of the publication's label relationship.", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Published'}) RETURN distinct n.name limit 5"}, {"query": "Can you tell me five of them?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(h)-[:Relationship{name:'Professional life'}]->(m) return m.name skip 2 limit 5"}, {"query": "Can you find me two books published in 1989?", "cypher": "match (:ENTITY{name:'1989Year of birth'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "What are the works that these people have been involved in creating?", "cypher": "match (:ENTITY{name:'??'})<--(n) return n.name"}, {"query": "What novels are published on Jinjiang Literary Network?", "cypher": "match (p:ENTITY{name:'Novel'})<--(x)-->(q:ENTITY{name:'The Jinjiang Literary Network'}) return x.name"}, {"query": "Please tell me what chemical CAS NO is: 81-55-0?", "cypher": "match (n:ENTITY{name:'.The following:81-55-0'})<-[:Relationship{name:'CASNO'}]- (q) return q.name"}, {"query": "What are some of the articles in the book Chinese Discipline - The World of Ink Painting?", "cypher": "match (:ENTITY{name:'Chinese discipline--The world of watercolor'})-[:Relationship{name:'The book is available here.'}]-> (h) return  distinct h.name"}, {"query": "I was focusing on the 10th Shenzhen Mobile World Congress 2010 but forgot the exact launch date, you know?", "cypher": "match(:ENTITY{name:'2010The 10th Shenzhen International Mobile Phone Industry Expo and the workshop'})-[:Relationship{name:'Time of exhibition'}]-> (x) return x.name"}, {"query": "Can you share with me the types of relationships within the three layers of the \"Pyramid Revolution\" saga?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The bitter revolutionary clouds'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What does the nickname read? What does it mean?", "cypher": "match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Spelling'}]->(n) return n.name as name union all match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Interpretation'}]->(m) return m.name as name"}, {"query": "What is the shortest path between Alganon and the crater within the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Alganon'})-[:Relationship*..2]-(b:ENTITY{name:'The fight'})) return count(p)"}, {"query": "What is the slogan of the 1688 Logistics Network?", "cypher": "match(:ENTITY{name:'1688The logistics network'})-[:Relationship{name:'The slogan'}]-> (n) return n.name"}, {"query": "What are the characteristics of the APS-C specification digital microelectronics?", "cypher": "match (:ENTITY{name:'APS-CSpecifications and numerical details'})<-[:Relationship{name:'Characteristics of the aircraft'}]-(q)-[:Tag{name:'The label'}]->(p) return distinct p.name limit 1"}, {"query": "Can you tell me the main award that Desperate Housewives MP4 Season 1-4 has won?", "cypher": "match (:ENTITY{name:'Desperate housewives1-4SeasonsMP4[Tri-core version8MP4+1MP3+8The manual]'})-[:Relationship{name:'Main awards'}]-> (m) return  distinct m.name"}, {"query": "Please help me find 5 books for $13 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'13.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can anyone list 20 of the revolutionary fighters in China?", "cypher": "match (:ENTITY{name:'China'})<-[:Relationship{name:'Nationality'}]- (mn) -[:Relationship{name:'Professional life'}]->(n:ENTITY{name:'The Revolutionary Fighters'}) return mn.name limit 20"}, {"query": "Can you find me five varieties with microbial labels?", "cypher": "match (n:ENTITY{name:'Microbes'})<-[:Tag{name:'The label'}]- (mn) return mn.name limit 5"}, {"query": "The subject is \"Does any animal in Armenia have a snout?\" Can you list 13?", "cypher": "match (:ENTITY{name:'The Armenian limb'})<-[:Relationship{name:'The Yemen'}]- (q) return q.name limit 13"}, {"query": "Please tell me about the main department of the School of Architecture and Construction in Zhuzhou District, Taizhou City.", "cypher": "match (:ENTITY{name:'The School of Architecture and Construction in Zhuzhou District, Chengde City'})-[:Relationship{name:'Main Faculty'}]-> (x) return  distinct x.name limit 3"}, {"query": "Can you describe in detail the man who is the father of the Buddha?", "cypher": "match (:ENTITY{name:'The Roman philosopher and politician, Boethius, was born in Rome.'})<-[:Describe{name:'Describe'}]-(n) return distinct n.name limit 1"}, {"query": "What kind of relationship is involved in the two levels of Yangzhou Yongsheng?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Chinese government has announced that the Chinese government will'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What awards have been won by the school at the Yuming Missionary Base in Kunming City, Yunnan Province?", "cypher": "match (:ENTITY{name:'The Yumen Missionary Base in Kunming, Yunnan Province'})<-[:Relationship{name:'School address'}]-(m)-[:Relationship{name:'Main awards'}]->(h) return distinct h.name"}, {"query": "Besides the location in Beijing's West Gate, can you tell me six things you know about the blood feud in the second floor of the Chen family?", "cypher": "match (:ENTITY{name:'The Blood War'})-[:Relationship*1..2]->(p) where p.name <> 'The lower Yangtze River (now just outside Beijing's western gate)' return p.name limit 6", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CALL\"\n  \"CONTAINS\"\n  \"CREATE\"\n  \"DELETE\"\n  \"DETACH\"\n  \"ENDS\"\n  \"FOREACH\"\n  \"IN\"\n  \"INSERT\"\n  \"IS\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"OR\"\n  \"REMOVE\"\n  \"RETURN\"\n  \"SET\"\n  \"STARTS\"\n  \"UNION\"\n  \"UNWIND\"\n  \"USE\"\n  \"WITH\"\n  \"XOR\"\n  \"^\"\n  <EOF> (line 1, column 140 (offset: 139))\n\"PROFILE match (:ENTITY{name:'The Blood War'})-[:Relationship*1..2]->(p) where p.name <> 'The lower Yangtze River (now just outside Beijing's western gate)' return p.name limit 6\"\n                                                                                                                                            ^"}, {"query": "Who is a professional and what are their respective labels? Please list them in order of number of labels.", "cypher": "match (n:ENTITY{name:'The newly-founded'})-[:Relationship{name:'Professional life'}]->(:ENTITY)<-[:Relationship{name:'Professional life'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you recommend a client that is 132MB?", "cypher": "match (:ENTITY{name:'132MB'})<-[:Relationship{name:'The client'}]- (x) return x.name"}, {"query": "The shortest name for content with a cultural label is?", "cypher": "match (:ENTITY{name:'The culture'})<-[:Tag{name:'The label'}]-(q) return  min(q.name)"}, {"query": "What is the concentration of 4-trimethan-3-methylamide?", "cypher": "match(:ENTITY{name:'4-Triethylamine-3-Methamphetamine'})-[:Relationship{name:'The point of no return'}]-> (n) return n.name"}, {"query": "I want to know what the two layers of the relationship are that the Jodo family is involved in?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Jo-dong family'}) UNWIND relationships(path) AS rel return rel.name limit 4"}, {"query": "Do you know what Kim Jong-un's main achievements are?", "cypher": "match (:ENTITY{name:'Kim Yong-hoon, Party member of Zhejiang District Planning Bureau, Chongqing, Deputy Director:It is responsible for law enforcement supervision, law and order dissemination, planning and implementation, supervision and inspection, administrative and criminal prosecution, and the enforcement of the law, interception, security and security.'})<-[:Describe{name:'Describe'}]-(x),(x)-[:Relationship{name:'Major achievements'}]->(q) return distinct q.name limit 10"}, {"query": "What are the attributes of the tags that can be associated with the .NET Framework eCommerce Site Builder Guide?", "cypher": "match (:ENTITY{name:'.NET Guidelines for building e-commerce sites in the framework'})-[:Tag{name:'The label'}]-> (m) with m order by m.name return m.name"}, {"query": "Who wrote the song \"My Daughter Is So Terrible\" ?", "cypher": "match (:ENTITY{name:'My daughter is so miserable.'})<-[:Relationship{name:'Representative works'}]-(m) return distinct m.name"}, {"query": "What ancient books have been unearthed in Loyang City, Henan Province?", "cypher": "match (:ENTITY{name:'The city of Loyang, Henan Province'})<-[:Relationship{name:'Location'}]->(n) where n is not null return distinct n.name "}, {"query": "Tell me what are the two types of relationships between animals in the 3 layers and animal techniques?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Experimental animals and animal testing techniques'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "I'm wondering if you can tell me which controller has humidity between 20 and 95%?", "cypher": "match (:ENTITY{name:'(20~95)%'})<-[:Relationship{name:'Humidity'}]- (m) return m.name"}, {"query": "Do you have any content about the types of relationships within the five levels of foreign language schools in cities?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Foreign language secondary school'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What is the name of the state of Zhejiang? When was it created? What is the classification of Zhejiang?", "cypher": "match (:ENTITY{name:'The state of Zhejiang'})-[:Relationship{name:'Foreign name'}]->(n) return n.name as name union all match (:ENTITY{name:'The state of Zhejiang'})-[:Relationship{name:'The time of creation'}]->(m) return m.name as name union all match (:ENTITY{name:'The state of Zhejiang'})-[:Relationship{name:'Classified'}]->(r) return r.name as name"}, {"query": "Can you explain to me three things about the International Silk Road Conference?", "cypher": "match (:ENTITY{name:'The Silk Road International Conference is held in the capital of the country.'})--(x) return  distinct x.name limit 3"}, {"query": "Please tell me which people have the same nationality as Yukiyama, and what other labels they have. Please order the number of labels from small to large by each character.", "cypher": "match (n:ENTITY{name:'The Japanese'})-[:Relationship{name:'Nationality'}]->(:ENTITY)<-[:Relationship{name:'Nationality'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "I especially want to know when the 2012 Saudi Jeddah International Hotel and Hotel Supplies Show will be held, do you know?", "cypher": "match(m:ENTITY{name:'2012The annual Saudi Jeddah International Hotel and Hotel Supplies Show'})-[:Relationship{name:'Show time'}]-> (q) return q.name"}, {"query": "The longest ISBN of Hitchcock's work is?", "cypher": "match (m:ENTITY{name:'The city of Kirkuk'})<-[:Relationship{name:'Written by'}]-(h)-[:Relationship{name:'ISBN'}]->(x) return  max(h.name)"}, {"query": "Can you tell me about the three layers of relationships that are contained in a male love song?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The love song of men'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "What chemical is the cas number 335-27-3?", "cypher": "match (m:ENTITY{name:'335-27-3'})<-[:Relationship{name:'CASThe number'}]- (n) return n.name"}, {"query": "Do you know what the main achievements of the graduates of Nanjing University are?", "cypher": "match (:ENTITY{name:'The University of Nanjing'})<-[:Relationship{name:'Graduated'}]-(q)-[:Relationship{name:'Major achievements'}]->(h) return distinct h.name limit 5"}, {"query": "What is the name of the music video directed by Tabitha Denholm, Peter Williams, Alex Koch?", "cypher": "match (:ENTITY{name:'Tabitha DenholmThe first is thePeter WilliamsThe first is theAlex Koch'})<-[:Relationship{name:'MVDirector'}]- (q) return distinct q.name"}, {"query": "Help me find three other representative works of Liu Jing, other than the Wolf of War.", "cypher": "match (n:ENTITY{name:'The Chinese[Mainland Chinese actor, director]'}) - [:Relationship{name:'Representative works'}]->(h) with h order by h.name where h.name <> 'The Wolf' and h.name <> 'The WolfII' return h.name limit 3"}, {"query": "Do you know which books are available for the exam? Can you give me five examples?", "cypher": "match (:ENTITY{name:'Exam books'})<-[:Tag{name:'The label'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 5"}, {"query": "Please help me find out which album this song is from.", "cypher": "match (:ENTITY{name:'The funeral of the hero'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Album by'}]->(q) return distinct q.name"}, {"query": "What is the most recent novel you have seen about the seven fairies in the underworld?", "cypher": "match(:ENTITY{name:'Seven Fairies in the Otherworld'})-[:Relationship{name:'Novel category'}]-> (x) return x.name"}, {"query": "I want to hear about the two layers of relationship names that middle school students have to use in a poem.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Secondary school students must recite poetry'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you recommend some 2012 edition textbooks?", "cypher": "match (:ENTITY{name:'2012'})<-[:Relationship{name:'The version'}]- (q) return distinct  q.name"}, {"query": "I'm not sure how many of these devices you know about that don't have a display.", "cypher": "match (:ENTITY{name:'No'})<-[:Relationship{name:'The screen'}]- (h) return h.name limit 3"}, {"query": "Can you tell me about the type of relationship that the new openers are involved in in 5 layers?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The Newlyweds'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you find out what ingredients are used in the 10 Ways of Cooking?", "cypher": "match (:ENTITY{name:'The Kawasaki'})<-[:Relationship*]-(m), (m)-[:Relationship{name:'Main ingredients'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What are the other names for the Lanning order?", "cypher": "match (:ENTITY{name:'The opening of the Palantium[The calligraphy of Wang Yi]'})-[:Relationship{name:'Other names'}]-> (m) return m.name order by m.name"}, {"query": "Can you help me find two books by the authors of Autumn Rain?", "cypher": "match (:ENTITY{name:'The rest of the fall'})<-[:Relationship{name:'Written by'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "What is the nature of Jinan Wangchun He Enterprise Management Consulting Limited? When was it founded?", "cypher": "match (:ENTITY{name:'Jinan Heung-Hyun Enterprise Management Consulting Co., Ltd. is a wholly owned subsidiary of Jinan Heung-Hyun.'})-[:Relationship{name:'The nature of the company'}]->(n) return n.name as name union all match (:ENTITY{name:'The state of Zhejiang'})-[:Relationship{name:'Founded'}]->(m) return m.name as name union all match (:ENTITY{name:'The state of Zhejiang'})-[:Relationship{name:'Registration office'}]->(r) return r.name as name"}, {"query": "What are the representative works of the Chinese literati?", "cypher": "match (p:ENTITY{name:'Han'})<-[:Relationship{name:'Ethnicity'}]-(q)-[:Relationship{name:'Representative works'}]->(n) return distinct n.name limit 1"}, {"query": "Tell me about the three levels of relationship of this person?", "cypher": "match (n:ENTITY{name:'Shi Murayama'})-[*1..3]->(x) where x.name<>'Characters' return distinct x.name"}, {"query": "I'm going to find three private research universities for me.", "cypher": "match (:ENTITY{name:'Private research universities'})<-[:Relationship{name:'Category'}]-(p)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 3"}, {"query": "I'm wondering what chemical has the CAS number 196597-78-1?", "cypher": "match (:ENTITY{name:'196597-78-1'})<-[:Relationship{name:'CAS'}]- (h) return h.name"}, {"query": "What is the shortest relationship path between the three layers of the greenhouse and the greenhouse?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The green leaves'})-[*..3]-(b:ENTITY{name:'The green leafy vegetables'})) return count(p)"}, {"query": "The .NET and design patterns are known as computer books, but are there other tag features?", "cypher": "match (:ENTITY{name:'.NETDesign and pattern'})-[:Tag{name:'The label'}]-> (m) with m order by m.name where m.name <> 'Computer books' return m.name"}, {"query": "What are the main achievements of Chinese citizens?", "cypher": "match (:ENTITY{name:'China'})<-[:Relationship{name:'Nationality'}]-(n)-[:Relationship{name:'Major achievements'}]->(m) return distinct m.name limit 5"}, {"query": "Can you tell me what kind of relationships are involved in 91 express cars in 3 levels?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'91The Express'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you tell me about the famous sights in the old town of Chiang Mai?", "cypher": "match (:ENTITY{name:'The old town of Chiang Mai'})-[:Relationship{name:'Famous places'}]-> (p) return p.name skip 1"}, {"query": "What are the other three names of the film besides Love Copper Blow and Sweet Man Blow?", "cypher": "match (n:ENTITY{name:'The taste of sand'})-[:Relationship{name:'Other translations'}]->(h) where h.name <> 'The brass is burning' and h.name <> 'Sweet and sour' return distinct h.name limit 3"}, {"query": "How did you introduce me to Charles Gilibert's information?", "cypher": "match (p:ENTITY{name:'Charles Gilibert'})--(n) return n.name skip 1"}, {"query": "What are the occupations of this zodiac sign, Taurus?", "cypher": "match (:ENTITY{name:'Taurus'})<-[:Relationship{name:'The constellations'}]-(q)-[:Relationship{name:'Professional life'}]->(x) return x.name skip 2 limit 5"}, {"query": "What are some of the main achievements of Kim Mei-young? Please tell me one.", "cypher": "match (:ENTITY{name:'The beauty of the water'})<-[:Relationship{name:'Chinese name'}]-(n),(n)-[:Relationship{name:'Major achievements'}]->(q) return q.name order by q.name limit 1"}, {"query": "The book is available in the review material for the 2011-2012 Securities Investment Analysis on-boarding exam question book.", "cypher": "match(:ENTITY{name:'2011-2012The yearly stock investment analysis online exam question book'})-[:Relationship{name:'Pricing'}]-> (n) return n.name"}, {"query": "What is Shen Yun's job?", "cypher": "match (:ENTITY{name:'Shanahan'})<-[:Relationship{name:'Chinese name'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name"}, {"query": "Who is Hoodie Allen? Do you know him?", "cypher": "match (:ENTITY{name:'Hoodie Allen'})--(p) return  distinct p.name"}, {"query": "What is the scope of application of the academic theory proposed by Descartes?", "cypher": "match (:ENTITY{name:'Descartes'})<-[:Relationship{name:'The Proposer'}]-(x),(x)-[:Relationship{name:'Scope of application'}]->(m) return distinct m.name"}, {"query": "This encyclopedia on the care of children aged 0-5 years is useful. Do you know the nationality of the author?", "cypher": "match(:ENTITY{name:'0~5Children and young people'})-[:Relationship{name:'Nationality of the author'}]-> (n) return n.name"}, {"query": "What is the name of the original work by STELLA?", "cypher": "match (:ENTITY{name:'STELLA'})<-[:Relationship{name:'Originally'}]- (m) return m.name"}, {"query": "What is the size of the main screen of this GSM, CDMA2000 network mode?", "cypher": "match (:ENTITY{name:'GSMThe first is theCDMA2000'})<-[:Relationship{name:'The network model'}]-(h)-[:Relationship{name:'Main screen size'}]->(q) return distinct q.name limit 1"}, {"query": "I would like to know if any of you have any links to the third tier label in Li Zhongqing?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Li Zhong city'}) return distinct n.name limit 4"}, {"query": "Who knows what Van Yarin does for a living?", "cypher": "match (:ENTITY{name:'Van Yarin is a writer'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name"}, {"query": "Can you please list the different places in Jiangsu Village and the same area, what are the labels and please list the number of labels in each location from small to large?", "cypher": "match (n:ENTITY{name:'The village of Jiangcheng'})-[:Relationship{name:'Area'}]->(:ENTITY)<-[:Relationship{name:'Area'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Do you understand the eight relationships that are included in the three-layer triad?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The love triangle'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 8"}, {"query": "In the past, which calendar year was the year of the leopard?", "cypher": "match (:ENTITY{name:'The Ugly Year'})<-[:Relationship{name:'The Moon Calendar'}]- (x) return x.name limit 9"}, {"query": "I wanted to see what modern revisionist novels Cha Chao-ching has written.", "cypher": "match (p:ENTITY{name:'Modern Rectification'})<--(x)-->(q:ENTITY{name:'The Courage'}) return x.name"}, {"query": "Check out what the rare foreign name in the past is called and where it originated.", "cypher": "match (:ENTITY{name:'The past'})-[:Relationship{name:'Foreign language name'}]->(n) return n.name as name union all match (:ENTITY{name:'The past'})-[:Relationship{name:'Origin of the work'}]->(m) return m.name as name"}, {"query": "What chemical is CAS number 528-29-0?", "cypher": "match (:ENTITY{name:'528-29-0'})<-[:Relationship{name:'CASThe number of the log'}]- (h) return h.name"}, {"query": "What is the difference between a close-up and a counter-clockwise?", "cypher": "match (:ENTITY{name:'The trick of bending'})-[:Relationship{name:'The synonym'}]->(n) return n.name as name union all match (:ENTITY{name:'The trick of bending'})-[:Relationship{name:'The Antithesis'}]->(m) return m.name as name"}, {"query": "I wonder who will be performing at the 2012 Goku Kin Naning Concert?", "cypher": "match(:ENTITY{name:'2012The concert of the Grand National'})-[:Relationship{name:'The show'}]-> (m) return m.name"}, {"query": "The ancient tombs are also crazy and what is the shortest path to the two levels of the village?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The tomb is crazy.'})-[:Relationship*..2]-(b:ENTITY{name:'The legend of the zodiac'})) return count(p)"}, {"query": "Can you tell me who the representative of the Dream Sky Turtles is?", "cypher": "match (:ENTITY{name:'The dream of the sky'})<-[:Relationship{name:'Representative works'}]- (x) return x.name skip 4"}, {"query": "What is the name of the beach in the easternmost corner of Shenzhen?", "cypher": "match (:ENTITY{name:'The easternmost tip of Shenzhen'})<-[:Relationship{name:'Geographical location'}]-(m) return m.name"}, {"query": "What is the shortest connection path between the two levels of the Tianjin Zhenjiang Anhui Football Club and the Tianjin Xiangyang Park Football Club?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The club is based in the city of Taizhou.'})-[*..2]-(b:ENTITY{name:'The football club is currently playing in the Sian Anhui Park.'})) return count(p)"}, {"query": "The width of the car is 1695 mm, is that a brake?", "cypher": "match (:ENTITY{name:'1695mm'})<-[:Relationship{name:'width'}]- (p) return p.name"}, {"query": "What are the main departments of the National Higher Education Institution? Can I list 3 categories?", "cypher": "match (:ENTITY{name:'National higher education'})<-[:Relationship{name:'Category'}]-(x),(x)-[:Relationship{name:'Main Faculty'}]->(q) return distinct q.name limit 3"}, {"query": "What chemical has a flash point at 230\u00b0F?", "cypher": "The flash is a flash of light, and the flash is a flash of light.", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The flash is a flash of light, and the flash is a flash of light.\"\n         ^"}, {"query": "Do you know three famous alumni of Tanjung Primary School?", "cypher": "match (:ENTITY{name:'Tanjung Primary School'})-[:Relationship{name:'Famous alumni'}]-> (n) return  distinct n.name limit 3"}, {"query": "What books are priced at 58 dollars? Can you help me find three?", "cypher": "match (:ENTITY{name:'58Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Do you have any information on the names of the five people who are behind the attack?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Chinese name'}]-(h),(h)-[:Relationship{name:'Other names'}]->(x) return x.name order by x.name limit 5"}, {"query": "Can you describe the three-tiered relationships that are associated with the term \"belly yellow\" for me?", "cypher": "match (n:ENTITY{name:'Yellow fever'})-[*1..3]->(x) where x.name<>'Life terms' return distinct x.name"}, {"query": "Do you have any Chinese novels, can you find 10?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Language'}]- (mn) -[:Relationship{name:'Category'}]->(n:ENTITY{name:'Novel'}) return mn.name limit 10"}, {"query": "I would like to know who the pig in the zodiac is and what his main works are. Can you list five?", "cypher": "match (:ENTITY{name:'The pig'})<-[:Relationship{name:'The zodiac'}]-(n)-[:Relationship{name:'Major works'}]->(x) return n.name,x.name skip 1 limit 5"}, {"query": "Can you find me two doctors from the first people's hospital in Sundar and tell me their job title?", "cypher": "match (:ENTITY{name:'The first people's hospital in Sunderland'})<-[:Relationship{name:'Hospital'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 2", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 47 (offset: 46))\n\"PROFILE match (:ENTITY{name:'The first people's hospital in Sunderland'})<-[:Relationship{name:'Hospital'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 2\"\n                                               ^"}, {"query": "The 2012 China International Web Printing Industry Expo in Shenzhen, which approval unit can you find?", "cypher": "match(:ENTITY{name:'2012China[The Shenzhen]The International Internet Printing Industry Fair'})-[:Relationship{name:'Approval of units'}]-> (h) return h.name"}, {"query": "Can you give me five links to this person Laoufi in the 2nd level of relationships?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Laoufi'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "The following is a list of the top 10 most popular Chinese political figures in the world:", "cypher": "match (n:ENTITY{name:'Yusmin'})-[*1..4]->(x) where x.name<>'Political figures' return distinct x.name"}, {"query": "Where is the location of the Shanghai IoT Technology and Applications Expo 2011 that was reportedly held?", "cypher": "match(m:ENTITY{name:'2011Shanghai IoT Technology and Applications Fair is held in Shanghai.'})-[:Relationship{name:'Location'}]-> (n) return n.name"}, {"query": "What do you know about the alias of Enrikon?", "cypher": "match (:ENTITY{name:'The Enricon'})-[:Relationship{name:'Other names'}]-> (p) return p.name skip 4"}, {"query": "Do you know how much hydrogen is in the 1Cr5Mo oil-cracking tube used by the plant?", "cypher": "match(:ENTITY{name:'1Cr5MoOil shale pipeline'})-[:Relationship{name:'The amount of sodium'}]-> (x) return x.name"}, {"query": "Can you tell me what else is related to the second tier of the oil palm sub-family?", "cypher": "match (n)<-[:Relationship*2{name:'Family'}]-(p:ENTITY{name:'The oil palm'}) RETURN distinct n.name"}, {"query": "I can't find the chemical formula for 4-amino-1-cholesterol-hydroxyacetate, can you tell me?", "cypher": "match(x:ENTITY{name:'4-Amino acids-1-Cholinesterase is a calcium salt'})-[:Relationship{name:'Chemical formula'}]-> (q) return q.name"}, {"query": "The two-tiered relationship between the sweet and salty water and the East Asian pickled vegetables?", "cypher": "match (n:ENTITY{name:'The East Asian pickle'})-[:Relationship*1..2]->(x) where x.name<>'Sweet and salty.' return distinct x.name"}, {"query": "Did you know that yoga is a million-person game?", "cypher": "match (:ENTITY{name:'100The game of Mahjong'})--(q) with q order by q.name return q.name limit 10"}, {"query": "Share your story about the award.", "cypher": "match (n:ENTITY{name:'The Chinese'})--(m) return m.name skip 5"}, {"query": "Please tell me what company is this in Beijing, Beijing, Beijing, Beijing, Shanghai, Shanghai, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, and other places.", "cypher": "match (:ENTITY{name:'Beijing city, B Street, in the Soyang District6The number4Layers'})<-[:Relationship{name:'Address'}]- (n) return n.name"}, {"query": "The children of the school are being taught to be kind and to be kind.", "cypher": "match (:ENTITY{name:'Children's nursery'})--(n) return n.name skip 2", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 39 (offset: 38))\n\"PROFILE match (:ENTITY{name:'Children's nursery'})--(n) return n.name skip 2\"\n                                       ^"}, {"query": "I want to know what is the relationship between the two layers of the work of Zhou Zhou's Dong Lianmen?", "cypher": "match (n:ENTITY{name:'Don Quixote is back'})-[:Relationship*1..2]->(x) where x.name<>'The Moon' return distinct x.name"}, {"query": "Do you know what kind of relationships are involved in the three levels of Guangdong's Shaanmei Street?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The street is named after the Chinese city of Guangzhou.'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the shortest path between the two floors of the village of Longtai and the village of Bamboo Mountain?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Takeda'})-[:Relationship*..2]-(b:ENTITY{name:'The village of Bamboo Mountain'})) return count(p)"}, {"query": "Where can I find the Ericsson Company?", "cypher": "match (p:ENTITY{name:'The Ericsson Corporation'}) return p.location"}, {"query": "What is the nationality of Yang Pao Rong? What is his nationality? Where was he born?", "cypher": "match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Nationality'}]->(n) return n.name as name union all match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Ethnicity'}]->(m) return m.name as name union all match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Where I was born'}]->(r) return r.name as name"}, {"query": "Do you have any information about the novel 3 and the third level of the label?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The Cloud Sword and the Evil Sword'}) return distinct n.name limit 3"}, {"query": "I would like to know what are the main achievements of Cao Lei Yu, can you list three?", "cypher": "match (:ENTITY{name:'Cao Liyu'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name limit 3"}, {"query": "The following is a list of the three levels of relationship in the work of the artist.", "cypher": "match (n:ENTITY{name:'And the Chinese people are in the snow.'})-[:Relationship*1..2]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "Can you tell me which teams this player born on April 13, 1987 has played for?", "cypher": "match (:ENTITY{name:'1987-04-13'})<-[:Relationship{name:'Date of birth'}]-(q)-[:Relationship{name:'Former team'}]->(h) return h.name order by h.name limit 3"}, {"query": "Can you tell me what kind of relationships the Little White Rats novel covers in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Experimental white rats'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "I want to tell you some news about HB.", "cypher": "match (:ENTITY{name:'HB'})--(p) return p.name skip 3"}, {"query": "Do you have a five-line rhyme for the morning? Help me find ten.", "cypher": "match (:ENTITY{name:'The Sunrise'})<-[:Relationship{name:'Date of creation'}]- (mn) -[:Relationship{name:'Literary genre'}]->(n:ENTITY{name:'The five-word rhyme'}) return mn.name limit 10"}, {"query": "List the other three-day properties besides the natural ones?", "cypher": "match (:ENTITY{name:'(S)-(-)-4-The Uncle-2-The Wicked'})--(h) with h order by h.name where h.name <> 'The natural world' return h.name limit 3"}, {"query": "I would like to ask what is the EINECS registration number for 2-hydroxybutyric acid?", "cypher": "match(n:ENTITY{name:'2-The name of the plant is'})-[:Relationship{name:'EINECSThe number of the log'}]-> (p) return p.name"}, {"query": "Please name some of the major awards that have been given to works in the White language.", "cypher": "match (m:ENTITY{name:'The Chinese'})<-[:Relationship{name:'White language'}]-(q),(q)-[:Relationship{name:'Main awards'}]->(h) return h.name skip 3 limit 10"}, {"query": "What is the full name of Han Yasan Teachers' College?", "cypher": "match (:ENTITY{name:'The Han Shan School'})<-[:Relationship{name:'Briefly'}]-(h) return h.name"}, {"query": "Can you find me a song sung by Hu Yanqiang?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'The song was originally sung'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 1"}, {"query": "What chemical is CAS number 75-68-3?", "cypher": "match (:ENTITY{name:'75-68-3'})<-[:Relationship{name:'CASThe number of the log'}]- (n) return n.name"}, {"query": "Which song was composed by YUICHI HAMAMATSU?", "cypher": "match (x:ENTITY{name:'YUICHI HAMAMATSU'})<-[:Relationship{name:'Composed'}]- (m) return m.name"}, {"query": "I would like to know what kind of job is offered to people who have been a marshal and a warlord?", "cypher": "match (:ENTITY{name:'The General'})<-[:Relationship{name:'Military officer'}]-(h)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name"}, {"query": "What is the longest description of the Golden Bell?", "cypher": "match (:ENTITY{name:'The Golden Bell'})--(q) return  max(q.name)"}, {"query": "Do you remember who won the 2008 China Red Song Contest?", "cypher": "match(:ENTITY{name:'2008Chinese Red Song'})-[:Relationship{name:'The champion'}]-> (m) return m.name"}, {"query": "The lead actress of the boy who lies and the girl who is broken, who is the voice of the housewife?", "cypher": "match (:ENTITY{name:'The main character of the film is a boy who lies and a girl who is broken.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Sound'}]->(x) return distinct q.name"}, {"query": "What are the names of the people who graduated from the same university as Wang Zi? What are the labels of these people? Please list them in order of their number of labels from small to large.", "cypher": "match (n:ENTITY{name:'The list of the winners'})-[:Relationship{name:'Graduated'}]->(:ENTITY)<-[:Relationship{name:'Graduated'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you identify the problems and difficulties of deforestation and the increase in harvests for farmers?", "cypher": "match (x:ENTITY{name:'Replanting, restoring forests, growing grass and increasing farmers' yields'}),(x)-[:Relationship{name:'The problem'}]-> (m), (x)-[:Relationship{name:'The difficulty'}]->(n) return m.name,n.name", "error": "Invalid input 'yields': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 100 (offset: 99))\n\"PROFILE match (x:ENTITY{name:'Replanting, restoring forests, growing grass and increasing farmers' yields'}),(x)-[:Relationship{name:'The problem'}]-> (m), (x)-[:Relationship{name:'The difficulty'}]->(n) return m.name,n.name\"\n                                                                                                    ^"}, {"query": "Remember the 1994 Taiwan Strait earthquake, it was so terrible, do you know how big it was?", "cypher": "match(:ENTITY{name:'1994Year of the Taiwan Strait earthquake'})-[:Relationship{name:'The earthquake'}]-> (h) return h.name"}, {"query": "What does the water of the tribute taste like when it is cooked?", "cypher": "match (:ENTITY{name:'Tribute water for cooking beef'})-[:Relationship{name:'The Taste'}]->(m) return distinct m.name"}, {"query": "The first is the one that is a representative work of water in the beginning of the game, tell me, don't be a ghost face, the channel of the ghost face, the wife and mother when love is in the game, can they both?", "cypher": "match (n:ENTITY{name:'The water is soft.'})-[:Relationship{name:'Representative works'}]->(h) where h.name <> 'The tunnel wife of the demon-faced wizard' and h.name <> 'The love is in the air.' return distinct h.name limit 1"}, {"query": "Do you know what year the company was founded?", "cypher": "match(:ENTITY{name:'The power'})-[:Relationship{name:'Founded'}]-> (n) return n.name order by n.name"}, {"query": "What is the representative work of ????", "cypher": "match (x:ENTITY{name:'???'})<-[:Relationship{name:'Foreign language name'}]-(q),(q)-[:Relationship{name:'Representative works'}]->(p) return distinct p.name"}, {"query": "Do you know where Casir was born?", "cypher": "match (:ENTITY{name:'Casil'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Where I was born'}]->(n) return distinct n.name"}, {"query": "The 2011 Yangzhou Yue Nanjing Concert is about to start, I'm so excited, do you know when it's going to be?", "cypher": "match(:ENTITY{name:'2011The concert in Nanjing'})-[:Relationship{name:'Show time'}]-> (q) return q.name"}, {"query": "1+1 hip fracture is a symptom of a disease, what other labels are there, to name 10?", "cypher": "match (:ENTITY{name:'1+1The Waist Room'})-[:Tag{name:'The label'}]-> (n) with n order by n.name where n.name <> 'Symptoms of the disease' return n.name limit 10"}, {"query": "Do you know of any novels that have a single-page volume of six volumes?", "cypher": "match (:ENTITY{name:'6The Book'})<-[:Relationship{name:'Number of books in a single line'}]- (x) return x.name limit 8"}, {"query": "What is the shortest path between the three levels of the new Zhu Men Ryu and the evil Grand Master?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The new Zhu Men complained'})-[*..3]-(b:ENTITY{name:'The Wicked Witch'})) return count(p)"}, {"query": "What is the latest book you have seen, The Angel's Parrot, which book category does it belong to?", "cypher": "match(:ENTITY{name:'The Mystery of the Angel of Heaven'})-[:Relationship{name:'Novel category'}]-> (h) return h.name"}, {"query": "Can you recommend a platform that supports multiplayer games?", "cypher": "match (:ENTITY{name:'Many people'})<-[:Relationship{name:'Number of players'}]-(x)-[:Relationship{name:'The game platform'}]->(p) return distinct p.name limit 1"}, {"query": "Can you tell me what the GDP per capita of the city where the Taipei City Government is located is?", "cypher": "match (:ENTITY{name:'The city of Taipei'})<-[:Relationship{name:'Government residence'}]-(p),(p)-[:Relationship{name:'Per capitaGDP'}]->(m) return m.name order by m.name limit 3"}, {"query": "The first is that the political figures who give gifts to the people of Akisama are people who are in the two-tier relationship.", "cypher": "match (n:ENTITY{name:'The Giver of the Ashish Road'})-[:Relationship*1..2]->(x) where x.name<>'Political figures' return distinct x.name"}, {"query": "Besides culture, what other two labels does Wang Yujun have?", "cypher": "match (:ENTITY{name:'You are a good man.'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'The culture' return p.name limit 2"}, {"query": "Can you describe the three dishes that are in the second tier of Chinese food?", "cypher": "match (n)-[:Relationship*2{name:'Classified'}]->(p:ENTITY{name:'Lunch'}) RETURN distinct n.name limit 5"}, {"query": "Can you give me some information about this person?", "cypher": "match (:ENTITY{name:'What is it?'})--(x) return x.name skip 2"}, {"query": "Name the total number of companies founded in 99 years.", "cypher": "match (p:ENTITY{time:'1999'}) return count(p)"}, {"query": "What is the shortest path between the plate's surface and the plate's hard surface?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Peace be upon the stone tablets.'})-[:Relationship*..2]-(b:ENTITY{name:'The hardness of the stone'})) return count(p)"}, {"query": "Who was the first writer of A Song of Ice and Fire?", "cypher": "match (:ENTITY{name:'Youth of Ice and Fire'})-[:Relationship{name:'Writer'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "Can you list the names of the relationships in the two layers of the 10 pieces of paper?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Slipper'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 10"}, {"query": "Do you know what the relationship is between the food and the things that are on the 6th level of the label?", "cypher": "match (n)-[:Tag*6{name:'The label'}]->(p:ENTITY{name:'Dishes'}) RETURN distinct n.name"}, {"query": "What is the shortest path between the two levels of the village of Yug and the village of Shaan?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Yug'})-[*..2]-(b:ENTITY{name:'The village of Shaan'})) return count(p)"}, {"query": "Please tell me the nationality of Mr. Ikeda and the date of birth and death.", "cypher": "match (:ENTITY{name:'I was so happy.'})-[:Relationship{name:'Nationality'}]->(n) return n.name as name union all match (:ENTITY{name:'I was so happy.'})-[:Relationship{name:'Date of birth'}]->(m) return m.name as name union all match (:ENTITY{name:'I was so happy.'})-[:Relationship{name:'Date of death'}]->(r) return r.name as name"}, {"query": "What kind of company is a company with 600 employees?", "cypher": "match (:ENTITY{name:'600Name'})<-[:Relationship{name:'Number of employees'}]-(h)-[:Relationship{name:'Type of'}]->(q) return distinct q.name"}, {"query": "What is the shortest distance between the University of Bonn and the Industrial University of Berlin within the two levels?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'University of Bonn'})-[:Relationship*..2]-(b:ENTITY{name:'The Industrial University of Berlin'})) return count(p)"}, {"query": "I'm wondering what chemical has the CAS number 207226-02-6?", "cypher": "match (:ENTITY{name:'207226-02-6'})<-[:Relationship{name:'CASThe number of the log'}]- (x) return x.name"}, {"query": "Please tell me that there is a quake with a magnitude of 36.0 degrees north latitude and a magnitude of 140.1 degrees east longitude, which is nicknamed?", "cypher": "match (n:ENTITY{name:'The North Star36.0The East140.1Degree'})<-[:Relationship{name:'The source of the quake'}]- (p) return p.name"}, {"query": "Do you know anything that has to do with the layer 3 tag?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The Cloud of Volunteers'}) RETURN distinct n.name"}, {"query": "Do you know which government officials graduated from Nanjing University?", "cypher": "match (:ENTITY{name:'The University of Nanjing'})<-[:Relationship{name:'Graduated'}]- (n) return n.name limit 14"}, {"query": "When did the single-board skiing competition at the 2006 Winter Olympics end?", "cypher": "match(:ENTITY{name:'2006The single-board skiing competition at the Winter Olympics'})-[:Relationship{name:'End of story'}]-> (h) return h.name"}, {"query": "Can you tell me the Chinese name of the windmill?", "cypher": "match (:ENTITY{name:'The winds of the centuries'})-[:Relationship{name:'Chinese name'}]-> (n) with n order by n.name return distinct n.name"}, {"query": "What is the name of the company founded by Little Grass, Memba Dance?", "cypher": "match (:ENTITY{name:'The grass, the turnip'})<-[:Relationship{name:'Founder'}]- (n) return n.name"}, {"query": "What is the shortest distance between Henan German Electrical Equipment Co. Ltd. and Beijing Air Lighting Engineering Co. Ltd.", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Henan German Mechanical and Electrical Equipment Co., Ltd.'})-[*..2]-(b:ENTITY{name:'Beijing Airfield Lighting Engineering Co., Ltd.'})) return count(p)"}, {"query": "3 pieces of information for 0-3 year olds - Animals and the environment - You guessed it - Fun cognitive - Rainbow Folding Book - Volume 2", "cypher": "match (:ENTITY{name:'0~3Age-Animals and the Environment-And what is the knowledge of the Hereafter?-Rainbow Folding the Book-The first2The album'})--(m) with m order by m.name return distinct m.name skip 1 limit 3"}, {"query": "Please tell me the name of the movie starring Liu Yiu, Matsusaka Michili, Yuyun Mi-Li, Murakami Yuming and others is Liu Yi?", "cypher": "match (:ENTITY{name:'He is also a member of the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol group, the Japanese idol.'})<-[:Relationship{name:'Starring'}]- (p) return p.name"}, {"query": "What is the 1-bit EINECS login number?", "cypher": "match(:ENTITY{name:'1-Oh, my God.'})-[:Relationship{name:'EINECSThe number of the log'}]-> (n) return n.name"}, {"query": "Tell me, what are the awards that people who are 185 have won?", "cypher": "match (n:ENTITY{name:'185cm'})<-[:Relationship{name:'Height'}]-(q)-[:Relationship{name:'Main awards'}]->(x) return distinct x.name limit 5"}, {"query": "Do you know which songs are composed by Guo Shi? Can you tell me 10 songs?", "cypher": "match (:ENTITY{name:'The Guo'})<-[:Relationship{name:'Music'}]- (q) return q.name limit 10"}, {"query": "Do you know the types of relationships within the five levels of the two Jiangsu City Prisons in Jilin?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Jiangsu City Prison in Jilin City'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "I want three of you to be human April Day: Lin Feng, because of this work, information in the two-tier relationship?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'You are the man of April: Lin Xieyin'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "The recent Guangzhou International Food Expo 2011 was good, do you know which supporting unit?", "cypher": "match(:ENTITY{name:'2011The international food exhibition in Guangzhou'})-[:Relationship{name:'Supporting units'}]-> (m) return m.name"}, {"query": "Do you have any information about some of the major achievements of Lin Qian? Can you give me 5?", "cypher": "match (:ENTITY{name:'The Fountain of Lin'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Major achievements'}]->(n) return n.name order by n.name limit 5"}, {"query": "Can you tell me what kind of relationships are covered in the three layers of the novel?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Holy Door'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you list the three competitions that are controlled by Huynh?", "cypher": "match (:ENTITY{name:'Hoon'})<-[:Relationship{name:'Controlled'}]- (m) return m.name limit 3"}, {"query": "Can you tell me about the three-tiered relationship in the Chinese border travel map published by Haitian Press?", "cypher": "match (n:ENTITY{name:'Map of the Chinese border'})-[:Relationship*1..3]->(x) where x.name<>'The Sea of Books' return distinct x.name"}, {"query": "Please help me find out 5 other information about the horror movie killer girls in the second floor of the dormitory.", "cypher": "match (:ENTITY{name:'Murdered in the dorm of a girl'})-[:Relationship*1..2]-(p) where p.name <> 'Surprise film' return p.name limit 5"}, {"query": "Please tell me what exhibition dates are available for 2012-12-22 - 2012-12-24?", "cypher": "match (:ENTITY{name:'2012-3-22--2012-3-24'})<-[:Relationship{name:'Dates of exhibition'}]- (q) return q.name"}, {"query": "What songs are sung by Lin Xie, Liang Wenhong and Lin Xie?", "cypher": "match (:ENTITY{name:'Lin Xie'})<-[:Relationship{name:'The word'}]- (mn) -[:Relationship{name:'The song was originally sung'}]->(n:ENTITY{name:'The Liang language'}) return mn.name"}, {"query": "What is the name of the chicken?", "cypher": "match (:ENTITY{name:'What is it?1950He was born in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, in the year, the year, the year, in the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year, the year.'})<-[:Describe{name:'Describe'}]-(x)-[:Relationship{name:'Other names'}]->(h) return distinct h.name limit 1"}, {"query": "Please tell me when the 1946 Copa Am\u00e9rica Argentina starts, I'm afraid I won't be able to come.", "cypher": "match(q:ENTITY{name:'1946The year of the Argentine America Cup'})-[:Relationship{name:'Start time'}]-> (h) return h.name"}, {"query": "What are the types of relationships that are involved in the two layers of the shopping cart?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Shopping malls'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "The question is, how do you do it in the three-layer relationship of the single-cooking green leather steamer that breaks freeze?", "cypher": "match (n:ENTITY{name:'Coated green onions'})-[:Relationship*1..3]->(x) where x.name<>'The gas is frozen.' return distinct x.name"}, {"query": "Please help me find 5 books for $18.80 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'18.80Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Tell me about the three-layered relationship between the reborn computer clouds of midnight smoking creators and the fictional information bubble.", "cypher": "match (n:ENTITY{name:'The rebirth of cloud computing'})-[:Relationship*1..3]->(x) where x.name<>'Smoking at midnight' return distinct x.name"}, {"query": "Find me 7 places to see in the Khothai Desert, besides 100 tickets and the address in Nanchang City, Jiangxi Province.", "cypher": "match (n:ENTITY{name:'The scenery of the Hokkaido Desert'})-->(h) with h order by h.name where h.name <> '100Japanese yen' and h.name <> 'The city of Nanjing, Jiangxi Province' return h.name limit 7"}, {"query": "Do you know which school is the main achievement of the National School of Advanced Research in Education and Science in Hohhot and the Advanced School of Educational Science and Research in Hont City?", "cypher": "match (:ENTITY{name:'National School of Education and Research in Hohhot and the University of Education and Research in Pyeongchang'})<-[:Relationship{name:'Main awards'}]- (p) return  distinct p.name"}, {"query": "Can I get three books on management to read?", "cypher": "match (:ENTITY{name:'Manage books'})<-[:Tag{name:'The label'}]-(n)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "What is the shortest distance between Shenyang City College and Dalian University of Technology?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Shenyang City College'})-[*..2]-(b:ENTITY{name:'The Dalyani Institute of Technology'})) return count(p)"}, {"query": "Can you tell me about three types of electronic parts that work at -10\u00b0C plus +60\u00b0C?", "cypher": "The name of the game is \"Relationship\" (which is a reference to the fact that the game is a game of chess).", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The name of the game is \"Relationship\" (which is a reference to the fact that the game is a game of chess).\"\n         ^"}, {"query": "What is the name of the old-time song sung by Liu Shaofeng and Liu Yifei?", "cypher": "match (:ENTITY{name:'The people of the region are very friendly.'})<-[:Relationship{name:'The song was originally sung'}]-(m), (m)-[:Relationship{name:'Music style'}]->(n) where n.name='The Old Wind' return distinct m.name"}, {"query": "What is this thing called 1-Kestose?", "cypher": "match (:ENTITY{name:'1-Kestose'})<-[:Relationship{name:'English name'}]- (x) return x.name"}, {"query": "Do you know what the name of the relationship is that involves the essential elements of entrepreneurship in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Essential Elements of Entrepreneurship'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "The date of death of the official from Nanchang, Kang Yong-ho, is written in the history books?", "cypher": "match(:ENTITY{name:'The plantation'})-[:Relationship{name:'Date of death'}]-> (x) return x.name"}, {"query": "I want to know what the relationship is between the three levels of the Royal University of Cavendish?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Royal University of Cavendish'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Did you know that the 1983 Panda Gold, Silver and Bronze commemorative coin was issued in a few sets?", "cypher": "match(:ENTITY{name:'1983Panda gold and silver bronze commemorative coin'})-[:Relationship{name:'Number of'}]-> (x) return x.name"}, {"query": "Can you tell me what the most popular profession is?", "cypher": "match (x:ENTITY{name:'The Department of Defense'})<-[:Relationship{name:'Other names'}]-(p)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name"}, {"query": "Can you name three species of plants in the family Parrots?", "cypher": "match (x:ENTITY{name:'The sparrow'})<-[:Relationship{name:'The tribe'}]- (h) return h.name limit 3"}, {"query": "What else is there besides the gift of the white horse king?", "cypher": "match (:ENTITY{name:'The five-word poem'})<-[:Relationship{name:'Literary genre'}]-(m), (m)-[:Relationship{name:'Written by'}]->(:ENTITY{name:'Cao planted'}) where m.name <>'The white horse king' return m.name limit 3"}, {"query": "On the advanced worker, the third grade of memory, awarded the best secondary school language teacher in Shandong province, his representative is the language characteristics of the practical language of the language.", "cypher": "match (:ENTITY{name:'Advanced worker, remembered third grade, awarded as the best secondary language teacher in Shandong province'})<-[:Relationship{name:'Major achievements'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(h) where h.name <> 'The language features of the Java language' return distinct h.name limit 5"}, {"query": "Help me find a soup made with golden needles.", "cypher": "match (:ENTITY{name:'The needle'})<-[:Relationship{name:'Main ingredients'}]-(m), (m)-[:Relationship{name:'Classified'}]->(n) where n.name='Oh, my God.' return distinct m.name"}, {"query": "Can you recommend 5 books weighing 798g?", "cypher": "match (:ENTITY{name:'798 g'})<-[:Relationship{name:'Weight'}]- (n) return n.name limit 5"}, {"query": "The relationship that is involved in the death assumption is also related to the three levels of relationships.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Estimated deaths'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Are you looking for a career in attending a Genghis Khan?", "cypher": "match (:ENTITY{name:'The seat of the congress'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name"}, {"query": "Can you find me someone who has been a net singer, a radio host, and his school?", "cypher": "match (:ENTITY{name:'The singer is a netizen and radio host.'})<-[:Describe{name:'Describe'}]-(h),(h)-[:Relationship{name:'Graduated'}]->(q) return distinct h.name,q.name"}, {"query": "Can you find three characters in the story and help me introduce them?", "cypher": "match (:ENTITY{name:'The Sunrise'})<-[:Relationship*]-(m), (m)-[:Describe{name:'Describe'}]->(n) return m.name,n.name limit 3"}, {"query": "What are the types of relationships within the three layers of the problem you talk about Zhang Xiaoming?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Zhang Xiaoming'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I want to know which publisher is the science fiction show Hello Aliens?", "cypher": "match(:ENTITY{name:'You are a good alien.'})-[:Relationship{name:'Publishing company'}]-> (m) return m.name"}, {"query": "Who has a list of five-letter words?", "cypher": "match (:ENTITY{name:'The letter is in Arabic.'})<-[:Describe{name:'Describe'}]-(q) return distinct q.name limit 5"}, {"query": "Can you list five Japanese anime films?", "cypher": "match (:ENTITY{name:'Japanese'})<-[:Relationship{name:'The show'}]- (mn) -[:Relationship{name:'Category'}]->(n:ENTITY{name:'Animated'}) return mn.name  limit 5"}, {"query": "Tell me about how many businesses have been started in 96 years?", "cypher": "match (p:ENTITY{time:'1996'}) return count(p)"}, {"query": "10 Corso Como is the world's first fashion design concept store, do you know where it was founded?", "cypher": "match(:ENTITY{name:'10 Corso Como'})-[:Relationship{name:'Location'}]-> (x) return x.name"}, {"query": "I wonder which book's ISBN is 9787308054591?", "cypher": "match (:ENTITY{name:'9787308054591'})<-[:Relationship{name:'ISBN'}]- (p) return p.name"}, {"query": "A travel strategy that is all about the daily life in East Africa, with specific themes and expresses the spirit of hospitality, regional unity and spiritual experience, is called \"What's Up?\"", "cypher": "match (:ENTITY{name:'The city is a place of spiritual experience and hospitality.'})<-[:Relationship{name:'The daily life in East Africa has specific themes'}]- (q) return distinct q.name"}, {"query": "Check out when 123 is coming online.", "cypher": "match(:ENTITY{name:'123Computational navigation'})-[:Relationship{name:'Uptime'}]-> (h) return h.name"}, {"query": "Can you list the five places where 92 Yangtze scholars have their PhDs?", "cypher": "match (:ENTITY{name:'92People'})<-[:Relationship{name:'Yangtze scholar'}]-(n),(n)-[:Relationship{name:'Doctorate'}]->(q) return distinct q.name limit 5"}, {"query": "I wonder if the relationship names within the two layers covered by the grandson image are possible?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The grandson'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Please help me find the synonyms and antonyms for the word \"dragon\"", "cypher": "match (:ENTITY{name:'The Dragonfly'})-[:Relationship{name:'The synonym'}]->(n) return n.name as name union all match (:ENTITY{name:'The Dragonfly'})-[:Relationship{name:'The Antithesis'}]->(m) return m.name as name"}, {"query": "The book of the Book of the Book of Solomon is a collection of books written by the famous author of the Book of Solomon.", "cypher": "match (:ENTITY{name:'The Scroll of the Yellow River'})-[:Relationship{name:'The year'}]->(n) return n.name as name union all match (:ENTITY{name:'The Scroll of the Yellow River'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "I'm not sure if you can tell me what are the main achievements of Huang Zhenzhen?", "cypher": "match (:ENTITY{name:'The yellow heart,1992Year of birth12Moon enlisted in the army, is a member of the Communist Party of China, and is currently a political instructor at the head of the Guangdong Provincial Border Security Command, Zhejiang City Border Guard Branch, and the head of the Sand Border Guard Mission.'})<-[:Describe{name:'Describe'}]-(m)-[:Relationship{name:'Major achievements'}]->(h) return distinct h.name"}, {"query": "Can you find me a video that was released in 2000?", "cypher": "match (:ENTITY{name:'2000Year of birth'})<-[:Relationship{name:'Delivery time'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "I'm sorry, but you mentioned that the label of the village under the rock is not a village.", "cypher": "match (:ENTITY{name:'The village of Dawa'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'Village' return p.name limit 1"}, {"query": "What is the definition of watermelon?", "cypher": "match (:ENTITY{name:'Water flowers'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'The Outline'}]->(q) return distinct q.name"}, {"query": "Can you find me two Chinese literature publications published by the Chinese Union of Literary Publishers?", "cypher": "match (:ENTITY{name:'The Chinese Union of Audio-visual Publishers'})<-[:Relationship{name:'Publishing house'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "Can you describe the product features of the Bedi detergent?", "cypher": "match (:ENTITY{name:'The Bedi Cleanser'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Product features'}]->(h) return distinct h.name"}, {"query": "Can you tell me the name of the relationship between the two layers of the red clover?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Red-shouldered grass'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What are the names of the relationships on the three floors of the Atlanta hotel?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Hotel Atlanta'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Do you know anything about the 5-1-4 relationship with the Maltese footballer Agius Andrei?", "cypher": "match (n:ENTITY{name:'Agius Andrei'})-[*1..4]->(x) where x.name<>'Agius Andrei,The Maltese footballer.' return distinct x.name limit 5"}, {"query": "Which works are classified as the same as Loja, and which are labeled with them?", "cypher": "match (n:ENTITY{name:'The Lower House'})-[:Relationship{name:'Art style'}]->(:ENTITY)<-[:Relationship{name:'Art style'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you tell me what kind of relationship Wang Xingyu included in the 3 layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The King of the Jungle'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you tell me the name of the relationship between the two layers of the Jiangxi border watershed?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Water village on the Jiangxi border'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you find me two music teachers at their graduate schools?", "cypher": "match (:ENTITY{name:'Professor of music'})<-[:Relationship{name:'Professional life'}]-(x),(x)-[:Relationship{name:'Graduated'}]->(q) return distinct q.name limit 2"}, {"query": "What games are developed by Greenbreir Games?", "cypher": "match (:ENTITY{name:'Greenbreir Games'})<-[:Relationship{name:'The developer'}]- (p) return p.name"}, {"query": "What does the word \"abhor\" mean? Where did it come from?", "cypher": "match (:ENTITY{name:'Bored and tired'})-[:Relationship{name:'Interpretation'}]->(n) return n.name as name union all match (:ENTITY{name:'Bored and tired'})-[:Relationship{name:'Get out of here.'}]->(m) return m.name as name"}, {"query": "I'm going to tell you about this book, the Golden Book of Emotional Development for 3-year-olds that you know of.", "cypher": "match (:ENTITY{name:'0Oh, my God.3The baby is a love interest.'})--(m) with m order by m.name where m.name <> 'Books and books' return m.name"}, {"query": "Many compounds have nicknames, do you know the Chinese nickname for 2-methylphenidate?", "cypher": "match(:ENTITY{name:'2-Methylphenidate'})-[:Relationship{name:'Chinese surname'}]-> (n) return n.name"}, {"query": "What is the shortest relationship between the two layers of consular arbitration and consular immunity?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Consular jurisdiction'})-[*..2]-(b:ENTITY{name:'Consular immunity'})) return count(p)"}, {"query": "Which book has the uniform number 10094-568?", "cypher": "match (:ENTITY{name:'10094-568'})<-[:Relationship{name:'Unified book number'}]- (p) return p.name"}, {"query": "Where is Pirate Andy's debut film? What is the gender of Pirate Andy? What is his foreign name?", "cypher": "match (:ENTITY{name:'The Pirate Andy'})-[:Relationship{name:'The first stage'}]->(n) return n.name as name union all match (:ENTITY{name:'The Pirate Andy'})-[:Relationship{name:'Gender and race'}]->(m) return m.name as name union all match (:ENTITY{name:'The Pirate Andy'})-[:Relationship{name:'Foreign name'}]->(r) return r.name as name"}, {"query": "Do you have any other tags for Liu Xiaobo besides the person?", "cypher": "match (:ENTITY{name:'The Chinese'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'Characters' return p.name limit 1"}, {"query": "The author of the book, who is a Chinese writer, wrote about the five representative works of this Ming Dynasty figure.", "cypher": "match (:ENTITY{name:'In the morning'})<-[:Relationship{name:'Nationality'}]-(n),(n)-[:Relationship{name:'Representative works'}]->(h) return h.name order by h.name limit 5"}, {"query": "The film, which runs for 96 minutes, features Wang Vijun and Lee Ji-hye.", "cypher": "match (p:ENTITY{name:'96One minute'})<--(x)-->(q:ENTITY{name:'King Vixen The Li River'}) return x.name"}, {"query": "The school is ZUNYI HANGTIAN MIDDLE SCHOOL, located in Guangzhou's middle section of Guangzhou's Shenzhen district.", "cypher": "match (:ENTITY{name:'The secondary school in accordance with space (((ZUNYI HANGTIAN MIDDLE SCHOOLThe city is located in the middle of Guangzhou Road in the Hsichuan District of Shenzhen.'})<-[:Describe{name:'Describe'}]-(n),(n)-[:Relationship{name:'Main awards'}]->(p) return p.name order by p.name limit 10"}, {"query": "Can you recommend four songs released by Banner Entertainment?", "cypher": "match (:ENTITY{name:'The film was released on DVD on August 8, 2010.'})<-[:Relationship{name:'The record company'}]- (x) return x.name limit 4"}, {"query": "Write the information of the work in the four-layer relationship between two analytical techniques and operations: chemical analysis and basic operations.", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'Analytical techniques and operations2Chemical analysis and basic operation'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "What is the shortest relationship path between a Ka-29 and a Ka-50 helicopter in 2 layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Card-29The helicopter'})-[:Relationship*..2]-(b:ENTITY{name:'The Card-50The helicopter'})) return count(p)"}, {"query": "Help me find three songs sung by the Oasis.", "cypher": "match (:ENTITY{name:'The storm'})<-[:Relationship{name:'The singer'}]-(m) return distinct m.name limit 3"}, {"query": "What is the shortest relationship path between the two layers of the word \"capture\" and \"capture\"?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The neck is caught.'})-[:Relationship*..2]-(b:ENTITY{name:'The neck is numb.'})) return count(p)"}, {"query": "Can you name a Buddha that is popularly believed and loved in the folk?", "cypher": "match (h:ENTITY{name:'The sight is the most popular goddess among the people, and the one closest to people. Each goddess or Buddha is high above and rarely interacts with the living.'})<-[:Describe{name:'Describe'}]-(p)-[:Relationship{name:'Attributes'}]->(m) return distinct m.name"}, {"query": "What is the chemical formula of CH6N2?", "cypher": "match (:ENTITY{name:'CH6N2'})<-[:Relationship{name:'Chemical formula'}]-(m) return distinct m.name"}, {"query": "I would like to know where this unknown person has worked, do you have 5 articles?", "cypher": "match (:ENTITY{name:'Not known'})<-[:Relationship{name:'Ethnicity'}]-(n),(n)-[:Relationship{name:'Played'}]->(p) return p.name skip 2 limit 3"}, {"query": "What is the nickname of the cigarette factory in China's capital, Lu'an?", "cypher": "match (:ENTITY{name:'The capital of China; The cigarette'}) - [:Relationship{name:'Other names'}]-> (x) return distinct x.name"}, {"query": "What are the types of relationships in the three layers that Guo Zhongwen is talking about?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Guo Guan'}) UNWIND relationships(path) AS rel RETURN rel.name limit 3"}, {"query": "Please help me find the information of five Serbian people, Mirda Kovacic and Milian.", "cypher": "match (n:ENTITY{name:'Myrda Kovacic is a writer; The Millian'}) - [*]->(x) where x.name<>'Serbia' return distinct x.name limit 5"}, {"query": "What are the different labels of the works that belong to the same period as the one-offs? Can you please list them in order of number of labels?", "cypher": "match (n:ENTITY{name:'The only sign of people staying'})-[:Relationship{name:'The year'}]->(:ENTITY)<-[:Relationship{name:'The year'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Find out about five people in the four-tier relationship of sports personality Khrushchev Ant?", "cypher": "match (n:ENTITY{name:'The Kurushchi Ant'}) - [*1..4]->(x) where x.name <>'Sports figures' return distinct x.name limit 5"}, {"query": "What is the musical style of the song 2 BE FREE by Twins?", "cypher": "match(:ENTITY{name:'2 BE FREE'})-[:Relationship{name:'Music style'}]-> (q) return q.name"}, {"query": "The compound is 1-DNJ, and its molecular formula is 1-DNJ.", "cypher": "match(:ENTITY{name:'1-DNJ'})-[:Relationship{name:'Molecular'}]-> (m) return m.name"}, {"query": "How many people live in your village now?", "cypher": "match(:ENTITY{name:'The village of Da Mengchi'})-[:Relationship{name:'Population'}]-> (x) return x.name"}, {"query": "Find out about the inner workings of French footballer Zeghdane Lehit's two-tiered relationship.", "cypher": "match (n:ENTITY{name:'Zeghdane Lehit'})-[:Relationship*1..2]->(x) where x.name<>'Zeghdane Lehit,French footballer.' return distinct x.name"}, {"query": "What is the price of Romy Rich's books?", "cypher": "match (:ENTITY{name:'Romy Rich'})<-[:Relationship{name:'Written by'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "Can you find me five books priced at $100 and when they will be published?", "cypher": "match (:ENTITY{name:'100Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you list the works published by Jiangsu Sheng Science and Technology Publishing?", "cypher": "match (:ENTITY{name:'Jiangsu-based scientific and technological publishing house'})<-[:Relationship{name:'Publishing house'}]- (n) return distinct  n.name"}, {"query": "What is the shortest distance between Dingqing County and Zhongguan County in the 2nd tier?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Dingqing County'})-[*..2]-(b:ENTITY{name:'The county of Longgong'})) return count(p)"}, {"query": "Do you know how many pens there are for that word?", "cypher": "match (:ENTITY{name:'The Edge'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Painting'}]->(q) return distinct q.name"}, {"query": "What important events happened in the life of Tomomi Hosoda? Can you tell me five?", "cypher": "match (:ENTITY{name:'The beauty of the tree'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Important events'}]->(x) return x.name order by x.name limit 5"}, {"query": "What are the major achievements of students graduating from the Chinese University of Media (Beijing Broadcasting Academy)?", "cypher": "match (:ENTITY{name:'The University of Media and Communication of China (Beijing Broadcasting Academy)'})<-[:Relationship{name:'Graduated'}]-(n)-[:Relationship{name:'Major achievements'}]->(q) return distinct q.name"}, {"query": "Can you give me a list of the names of the relationships that Ai Weiwei is involved in?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Aunt'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "Do you know what software can run on Android 1.6?", "cypher": "match (:ENTITY{name:'android 1.6'})<-[:Relationship{name:'Operating environment'}]- (x) return distinct  x.name"}, {"query": "Social Activities 111. What are the labels for the Yukon Song Festival?", "cypher": "match (:ENTITY{name:'111\u00b7The Song Festival in the Yangtze language'})-[:Tag{name:'The label'}]-> (q) with q order by q.name where q.name <> 'Social activities' return q.name"}, {"query": "I'm now curious about Kawai Namori's whole story.", "cypher": "match (:ENTITY{name:'Kawai is a very special place.'})--(x) return x.name skip 3"}, {"query": "MarineKing is a professional eSports player in StarCraft 2, do you know what his main achievements are?", "cypher": "match (:ENTITY{name:'MarineKingThe Star Wars is a dispute.2Lee Jong-hyun is a South Korean professional e-sports player, formerly known as Lee Jong-hyun.'})<-[:Describe{name:'Describe'}]-(p),(p)-[:Relationship{name:'Major achievements'}]->(q) return distinct q.name"}, {"query": "Do you know what the mint brain is also called?", "cypher": "match (:ENTITY{name:'The Mint Brain'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Other names'}]->(q) return distinct q.name"}, {"query": "Can you tell me which film and TV series have Kenji Kobayashi and Hiroyuki Hiroyuki as main voices?", "cypher": "match (:ENTITY{name:'Kenji, Hiroyuki and Hiroyuki'})<-[:Relationship{name:'Main vocals'}]- (h) return distinct h.name"}, {"query": "Can you list the top 10 achievements of Jia Yuliu?", "cypher": "match (:ENTITY{name:'Jia Yuliu'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Relationship{name:'Major achievements'}]->(p) return distinct p.name limit 10"}, {"query": "I want to know when the Big Star Company opened.", "cypher": "match (p:ENTITY{name:'The Star Spangled Banner'}) return p.time"}, {"query": "Can anyone explain the main achievements of Wang Xiaolu?", "cypher": "match (:ENTITY{name:'King of the Fighters'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Relationship{name:'Major achievements'}]->(n) return distinct h.name"}, {"query": "Can you recommend a tablet with 1GB of DDR3 cache in 2 systems?", "cypher": "match (:ENTITY{name:'1GB DDR3Cache'})<-[:Relationship{name:'System memory'}]- (x) return x.name limit 2"}, {"query": "Did you know that Liu Jian is a cook by profession?", "cypher": "match (x:ENTITY{name:'The first is that[Design of the website]'})-[:Relationship{name:'Professional life'}]-> (p) return p.name order by p.name"}, {"query": "Do you know what other major accomplishments Xu Ma Ting has besides being a deputy fire department investigator and the commander of the Shandong Provincial Fire Brigade?", "cypher": "match (n:ENTITY{name:'The Chinese'})-[:Relationship{name:'Major achievements'}]->(h) with h order by h.name where h.name <> 'Deputy investigator at the Ministry of Public Security Fire Department' and h.name <> 'Chief of the Shandong Provincial Public Security Fire Brigade' return h.name limit 2"}, {"query": "The school at 186 South Tai-Shan Street in Rincun, Sichuan province, belongs to which school?", "cypher": "match (:ENTITY{name:'South Street in Tai-Shan, Sichuan Province186The number'})<-[:Relationship{name:'School address'}]-(x),(x)-[:Relationship{name:'Attributes'}]->(p) return distinct p.name limit 1"}, {"query": "Can you help me find two books by Liu Xiaobo?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Written by'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "I bet you that this song was written for the military department of the new district of Zhejiang, sung by Zhao Yan, and I want 4 more information about this song.", "cypher": "match (n:ENTITY{name:'The West Bank'})-->(h) with h order by h.name where h.name <> 'The sail' and h.name <> 'The song was written for the military ministry of the new district of Fuhai.' return h.name limit 4"}, {"query": "This question is about the English name for tubular bowel cancer, would you?", "cypher": "match(:ENTITY{name:'Tumours of the tubular gland[The large intestine]'})-[:Relationship{name:'English name'}]-> (h) return h.name"}, {"query": "Can you name some of Peng Jiabi's most representative works?", "cypher": "match (p:ENTITY{name:'Peng Jiabi'})<-[:Relationship{name:'English name'}]-(q)-[:Relationship{name:'Representative works'}]->(h) return distinct h.name"}, {"query": "What is the shortest relationship path between the two layers of the sea turtle and the tide turtle?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Sea Turtles'})-[:Relationship*..2]-(b:ENTITY{name:'The Tide'})) return count(p)"}, {"query": "Can you find out the names of 10 alumni of Guangxi Master's University? Please help me introduce them.", "cypher": "match (:ENTITY{name:'The University of Guangxi'})<-[*]-(m), (m)-[:Describe{name:'Describe'}]->(n) return distinct m.name,n.name limit 10"}, {"query": "What are the four main ingredients of the cook besides the cooked chicken and the bean soup?", "cypher": "match (n:ENTITY{name:'The Dragon and his party of seven'})-[:Relationship{name:'Starring'}]->(h) where h.name <> 'Fujimori is also' and h.name <> 'The Japanese' return distinct h.name limit 4"}, {"query": "What kind of work does Jinliang do? Can you tell me no?", "cypher": "match (:ENTITY{name:'Jinliang'})<-[:Relationship{name:'Foreign language name'}]-(x)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 1"}, {"query": "Who are the representative works of the puppetry of Bobby Pope?", "cypher": "match (:ENTITY{name:'Bobby Pope High School'})<-[:Relationship{name:'Representative works'}]- (x) return x.name order by x.name limit 5"}, {"query": "Do you know what kind of relationships are in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Tiger'}) UNWIND relationships(path) AS rel return rel.name limit 5"}, {"query": "What are the 70 minute movies you can recommend?", "cypher": "match (:ENTITY{name:'70One minute'})<-[:Relationship{name:'The Long'}]- (h) return h.name limit 3"}, {"query": "The Chinese name is Li, and what is his profession?", "cypher": "match (:ENTITY{name:'Lee was a great man.'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name"}, {"query": "Who is the director, writer and lead actor of the film Perfect Guy for me?", "cypher": "match (:ENTITY{name:'The perfect guy.'})-[:Relationship{name:'Director'}]->(n) return n.name as name union all match (:ENTITY{name:'The perfect guy.'})-[:Relationship{name:'Writer'}]->(m) return m.name as name union all match (:ENTITY{name:'The perfect guy.'})-[:Relationship{name:'Starring'}]->(r) return r.name as name"}, {"query": "What is the name of this drug called horseweed?", "cypher": "match (:ENTITY{name:'The horseshoe'})<-[:Relationship{name:'Name of the drug'}]-(x),(x)-[:Relationship{name:'Other names'}]->(q) return distinct q.name"}, {"query": "I am going to the 2010 Guangzhou International Home Decorations and Furniture Exhibition in China, can you tell me where it is?", "cypher": "match(:ENTITY{name:'2010The international home decor and home furnishing exhibition in Guangzhou, China'})-[:Relationship{name:'Location'}]-> (q) return q.name"}, {"query": "Please tell me 10 things you know about the Ujian-Zhongshan Strait.", "cypher": "match (:ENTITY{name:'The Ujiang Dragon Strait'})--(p) return p.name limit 10"}, {"query": "Can you name three types of chemicals with the EINECS registration number 000-000-0?", "cypher": "match (:ENTITY{name:'000-000-0'})<-[:Relationship{name:'EINECSThe number of the log'}]- (q) return q.name limit 3"}, {"query": "I'm not sure what kind of job I can sell, but I'm not sure what kind of job I can sell.", "cypher": "match (n:ENTITY{name:'The summer is unusual.'})<-[:Relationship{name:'Chinese name'}]-(x)-[:Relationship{name:'Professional life'}]->(h) return distinct x.name"}, {"query": "Can you name 10 exhibitions in Quanzhou, China?", "cypher": "match (:ENTITY{name:'Quanzhou, China'})<-[:Relationship{name:'The city of exhibition'}]- (n) return n.name limit 10"}, {"query": "What are the names of the objects with the same label as asteroid 9931? Please list them in order of their number from small to large.", "cypher": "match (n:ENTITY{name:'The asteroid9931'})-[:Tag{name:'The label'}]->(:ENTITY)<-[:Tag{name:'The label'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you tell me which relationships are covered in the second issue of the Heat Diary in the two layers?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The second issue of the Hot Blood Daily'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "I'm wondering what kind of chemical is CAS No. 1076-38-6?", "cypher": "match (:ENTITY{name:'1076-38-6'})<-[:Relationship{name:'CASNo'}]- (q) return q.name"}, {"query": "Can you name a year in which Tsing Tzu is in office?", "cypher": "match (:ENTITY{name:'The Chinese government is right.'})<-[:Relationship{name:'The Tribe'}]- (h) return h.name"}, {"query": "Please share with me all the information about the relationship between the two levels of Ho Chi Minh City Primary School.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'What is Primary School?'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What are the top five achievements of Chinese talents?", "cypher": "match (:ENTITY{name:'China'})<-[:Relationship{name:'Nationality'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name limit 5"}, {"query": "The compound called sodium chloride. Do you know its chemical formula?", "cypher": "match(:ENTITY{name:'Sodium phosphate'})-[:Relationship{name:'Chemical formula'}]-> (q) return q.name"}, {"query": "What chemical is C9H19NaO3S?", "cypher": "match (:ENTITY{name:'C9H19NaO3S'})<-[:Relationship{name:'Molecular'}]- (x) return x.name"}, {"query": "Do you know anything about Xiaoao's nationality and where she was born?", "cypher": "match (:ENTITY{name:'In the Rocks'})-[:Relationship{name:'Nationality'}]->(n) return n.name as name union all match (:ENTITY{name:'In the Rocks'})-[:Relationship{name:'Where I was born'}]->(m) return m.name as name"}, {"query": "Do you know which organizations are hosting the 2011 China International Entrepreneurship Expo in Guangzhou?", "cypher": "match(:ENTITY{name:'2011China[The city of Guangzhou]The International Entrepreneurship Fair'})-[:Relationship{name:'Host'}]-> (h) return h.name"}, {"query": "Who is the creator of the Guinness World Record for the largest canopy?", "cypher": "match (:ENTITY{name:'The Guinness World Records are full.'})-[:Relationship{name:'The initiator'}]->(n) return n.name as name union all match (:ENTITY{name:'The Guinness World Records are full.'})-[:Relationship{name:'Release date'}]->(m) return m.name as name"}, {"query": "I'm curious to know which novels are being re-released?", "cypher": "match (:ENTITY{name:'Connected'})<-[:Relationship{name:'The novel progresses'}]-(n)-[:Relationship{name:'Chinese name'}]->(h) return distinct h.name limit 3"}, {"query": "What is the name of the person born on Christmas Day?", "cypher": "match (:ENTITY{name:'Christmas day'})<-[:Relationship{name:'Birthdays'}]-(m)-[:Relationship{name:'Other names'}]->(q) return distinct m.name"}, {"query": "Can you name the relationships within the three layers that Jos\u00e9 Padilha covers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Jose Fontana'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "The monotypic brown-browed mulberry belongs to what family and is mainly distributed in which regions?", "cypher": "match (:ENTITY{name:'The monotypic brown mulberry'})-[:Relationship{name:'The Department'}]->(n) return n.name as name union all match (:ENTITY{name:'The monotypic brown mulberry'})-[:Relationship{name:'Distribution areas'}]->(m) return m.name as name"}, {"query": "What are the major achievements of people born in 1971?", "cypher": "match (:ENTITY{name:'1971Year of birth'})<-[:Relationship{name:'Date of birth'}]-(x),(x)-[:Relationship{name:'Major achievements'}]->(q) return q.name order by q.name limit 1"}, {"query": "Can you tell me about the three-layer relationship that the brown-bearded willow is involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The brown-bearded willow'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the main ingredients used to make vanilla cream foam?", "cypher": "match (:ENTITY{name:'Vanilla cream foam'})-[:Relationship{name:'Main ingredients'}]->(n) return n.name as name union all match (:ENTITY{name:'Vanilla cream foam'})-[:Relationship{name:'Classified'}]->(m) return m.name as name"}, {"query": "The hero of the prison, the fearless prisoner, is the symbol of the lion, what else is he representing besides this one?", "cypher": "match (h:ENTITY{name:'The Levant'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Representative works'}]->(x) where x.name <> 'The Warriors of the Eagle' return distinct x.name limit 1"}, {"query": "What are the main awards for the institution in the Lake Tekapo district of East Kampong, Shandong province?", "cypher": "match (q:ENTITY{name:'Lake Yang New District, East Kampung City, Shandong Province'})<-[:Relationship{name:'New school address'}]-(x),(x)-[:Relationship{name:'Main awards'}]->(h) return distinct h.name"}, {"query": "Do you know how many villages have an area of 4.01 square kilometers? Can you name three?", "cypher": "match (:ENTITY{name:'4.01square kilometers'})<-[:Relationship{name:'Area'}]- (n) return n.name limit 3"}, {"query": "Li Jiehua is a member of the Association of Guangxi Fine Artists.", "cypher": "match (:ENTITY{name:'Li Jiehua is a member of the Association of Guangxi Artists and has painted Chinese pencil flower paintings, painted flowers, and watercolors.'})<-[:Describe{name:'Describe'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(h) return distinct x.name"}, {"query": "Can you tell me what kind of relationship is involved in the four layers of the article?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The High Priest'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "What does it mean to be blunt?", "cypher": "match (:ENTITY{name:'Straight to the point'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Explanation'}]->(n) return distinct n.name"}, {"query": "Please tell me what is the installation method for a 16CTQ100 type of direct current diode?", "cypher": "match(:ENTITY{name:'16CTQ100'})-[:Relationship{name:'Type of installation'}]-> (q) return q.name"}, {"query": "Do you know what Goldman Sachs' main achievements are?", "cypher": "match (:ENTITY{name:'Former Chief Economist at Goldman Sachs and Professor Emeritus of Economics at the University of Manchester, UK'})<-[:Relationship{name:'Professional life'}]-(m),(m)-[:Relationship{name:'Major achievements'}]->(h) return distinct h.name limit 5"}, {"query": "I want to find software that can be installed on 5 Apple devices?", "cypher": "match (:ENTITY{name:'IOS'})<--(n) return n.name limit 5"}, {"query": "What other professions does this person who won the Best Actress award at the 5th China Long Spring Film Festival have?", "cypher": "match (:ENTITY{name:'The first5Best Actress Award at the Chinese Long Spring Film Festival'})<-[:Relationship{name:'Representative works'}]-(n)-[:Relationship{name:'Professional life'}]->(h) return h.name order by h.name limit 10"}, {"query": "The novel that was called The Night of the Long Knives is called \"Yue\" in Chinese.", "cypher": "match (:ENTITY{name:'The night of the crying'})<-[:Relationship{name:'Written by'}]-(h)-[:Relationship{name:'Chinese name'}]->(m) return distinct m.name limit 1"}, {"query": "Can you find fresh, refreshing cabbage?", "cypher": "match (:ENTITY{name:'The freshness of the mouth'})<-[:Relationship{name:'The Taste'}]- (mn) -[:Relationship{name:'Classified'}]->(n:ENTITY{name:'The cabbage'}) return mn.name "}, {"query": "I'm not sure if you're familiar with the name of the artist, but I'm not sure if you're familiar with the name of the artist.", "cypher": "match (:ENTITY{name:'Ding Xiaoping'})-[:Relationship{name:'Representative works'}]-> (x) return  distinct x.name"}, {"query": "Do you know what are the benefits of drinking red wine?", "cypher": "match (:ENTITY{name:'Red wine'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Mainly consuming power'}]->(n) return distinct n.name"}, {"query": "Can you provide a description of the spirit of community of the 128th Student Development Alliance?", "cypher": "match(:ENTITY{name:'128The Union for the Development of Universities'})-[:Relationship{name:'The spirit of community'}]-> (p) return p.name"}, {"query": "The following is a list of some of the topics that are covered in this blog:", "cypher": "match (n:ENTITY{name:'Send the ancient mountain people'})-[:Relationship*1..3]->(x) where x.name<>'Literary works' return distinct x.name"}, {"query": "Internet lecturer at Tsinghua University Research Institute, China E-Commerce Association Certified Trainer, Founder of Shenzhen Longlin Group, WeChat Marketing Lecturer, 2013 Micro-marketing Newcomer of the Year Award, participated in the 2013 New Media Micro-marketing Development Report.", "cypher": "match (:ENTITY{name:'Internet lecturer at the Institute of Research of Tsinghua University Certified trainer by the China E-Commerce Association Founder of Shenzhen Longlin Group WeChat Marketing Lecturer2013The annual Micro-Marketing Newcomer Award is a big deal.2013New media micro-marketing development report written and published by Yui...'})<-[:Describe{name:'Describe'}]-(h)-[:Relationship{name:'Major achievements'}]->(q) return distinct h.name,q.name"}, {"query": "I wonder what the relationship is between the three tiers that the Shard is involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The German side'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "The 2012 JSWB Home Buying Conference was held in Guangzhou, where did you say the venue is?", "cypher": "match(p:ENTITY{name:'2012JSWB[The city of Guangzhou]Home buying conference'})-[:Relationship{name:'The venue'}]-> (h) return h.name"}, {"query": "Who is the author of the Pedantic Principle and what are its applications?", "cypher": "match (:ENTITY{name:'The Peter Principle'})-[:Relationship{name:'Written by'}]->(n) return n.name as name union all match (:ENTITY{name:'The Peter Principle'})-[:Relationship{name:'What it is'}]->(m) return m.name as name"}, {"query": "How many tactical software are running on Android 2.1? Can you name 4?", "cypher": "match (:ENTITY{name:'Android 2.1'})<-[:Relationship{name:'Operating environment'}]- (m) return m.name limit 4"}, {"query": "Help me find 10 different types of lettuce.", "cypher": "match (:ENTITY{name:'The Rupee'})<-[:Relationship{name:'Classified'}]-(m) return m.name limit 10"}, {"query": "Did you know that 5 and comics are the fourth layer of the label relationship?", "cypher": "match (n)-[:Tag*4{name:'The label'}]->(p:ENTITY{name:'Comic books'}) RETURN distinct n.name limit 5"}, {"query": "What are the most representative works of talent born in California, USA? Name 5?", "cypher": "match (:ENTITY{name:'California, USA, is a state in the Pacific Northwest.'})<-[:Relationship{name:'Where I was born'}]-(n)-[:Relationship{name:'Representative works'}]->(h) return distinct h.name limit 5"}, {"query": "Look who is the legal representative of Shanghai Yonglei Logistics Limited.", "cypher": "match(:ENTITY{name:'Shanghai Yongyuan Logistics Ltd.'})-[:Relationship{name:'Legal representatives'}]-> (q) return q.name"}, {"query": "Please share with me what you know about Zhang Gongyuan.", "cypher": "match (:ENTITY{name:'Zhang Go-shing'})--(h) return h.name skip 3"}, {"query": "What is the status of Sun Yat-sen?", "cypher": "match (:ENTITY{name:'Sun Yat-sen'})-[:Relationship{name:'Lordship'}]-> (m) return distinct m.name"}, {"query": "What is the shortest path between the two layers of semiconductor physics and the manufacturing process of devices and electronics?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Semiconductor physics and devices'})-[*..2]-(b:ENTITY{name:'Manufacturing of electronics'})) return count(p)"}, {"query": "Do you know the nationality of Kobe Jones?", "cypher": "The name of the game is \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"National name\" (national name\" (national name) - \"National name\" (national name) - \"National name\" (national name) \"National name\" (national name\" (national name) \" (national name) \" (national name\" (national name) \" (national name) \" (national name\" (national) \" (national) \" (national) \" (national) \" (national) \" (national) \" (national\" (national) \" (national) \" (national) \" (national\" (national) \" (national) \" (national\" (national) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n) \" (n\" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n) \" (n) \" (n) \" (n\" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n\" (n) \" () \" () \" () \" () \" () \" () \" () \" () \" () \" () \" (\" () \" (\" () \" (\" (\" (\" () \" () \" () \" (\" (\" () \" (\" () \" (\" () \" (\" () \" (\" () \" (\" (\" () \" (\" () \" (\" () \" (\" (\" (", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The name of the game is \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (Chinese name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"Jones\" (national name) - \"National name\" (national name\" (national name) - \"National name\" (national name) - \"National name\" (national name) \"National name\" (national name\" (national name) \" (national name) \" (national name\" (national name) \" (national name) \" (national name\" (national) \" (national) \" (national) \" (national) \" (national) \" (national) \" (national\" (national) \" (national) \" (national) \" (national\" (national) \" (national) \" (national\" (national) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n) \" (n\" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n) \" (n) \" (n) \" (n\" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n) \" (n\" (n) \" (n\" (n) \" () \" () \" () \" () \" () \" () \" () \" () \" () \" () \" (\" () \" (\" () \" (\" (\" (\" () \" () \" () \" (\" (\" () \" (\" () \" (\" () \" (\" () \" (\" () \" (\" (\" () \" (\" () \" (\" () \" (\" (\" (\"\n         ^"}, {"query": "The following is a list of the works translated by the Julan Painting Gallery: How do you describe the relationship between my new clothes and my new clothes?", "cypher": "match (n:ENTITY{name:'The painting gallery in Pyongyang: My new clothes'})-[:Relationship*1..2]->(x) where x.name<>'The Brands' return distinct x.name"}, {"query": "What are the business aspects of your Shanghai Keio Clothing Co., Ltd.?", "cypher": "match(q:ENTITY{name:'Shanghai Keio Clothing Co., Ltd.'})-[:Relationship{name:'Scope of operations'}]-> (p) return p.name"}, {"query": "What is the shortest relationship path between the two layers of the inner bean sub-leaf and the sweet spinach nightingale?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The leafy bean'})-[:Relationship*..2]-(b:ENTITY{name:'Sweet pepper nightingale'})) return count(p)"}, {"query": "What records have been released by the 7th Beijing Cultural Company?", "cypher": "match (:ENTITY{name:'The 7th Culture of Beijing'})<-[:Relationship{name:'The record company'}]-(m) return distinct m.name"}, {"query": "Can you list me the three main achievements of the man who opened the screen of the statue of the man who is the representative of the statue of the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man is the man who is the man who is the man who is the man is the man who is the man is the man who is the man is the man who is the man who is the man who is the man who is the man is the man is the man who is the man is the man is the man who is the man who is the man is the man is the man who is the man who is the man who is the man is the man who is the man is the man is the man who is the man who is the man is the man who is the man is the man is the man is the man who is the man who is the man who is the man is the man is the man who is the man is the man who is the man who is the man is the man who is the man is the man is the man is the man who is the man who is the man who is the man is the man is the man who is the man is the man is the man is the man is the man is the man is the man is the man is the man is the man is the man", "cypher": "match (:ENTITY{name:'The palace of the king of the jungle, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the lion, the palace of the man, the palace of the man.'})<-[:Relationship{name:'Representative works'}]-(m),(m)-[:Relationship{name:'Major achievements'}]->(n) return n.name order by n.name limit 3"}, {"query": "Please help me find two CDs for $82 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'82.0Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Can you name 10 chemicals with a purity \u2265 98%?", "cypher": "The following is a list of the most commonly used parameters for the calculation of the p-value of a data structure:", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The following is a list of the most commonly used parameters for the calculation of the p-value of a data structure:\"\n         ^"}, {"query": "I was wondering how much capacity is a 3.7V lithium battery (~1100mAh)?", "cypher": "match (:ENTITY{name:'3.7V The battery is lithium.1100mAh(This is a very good article.)'})<-[:Relationship{name:'Use of batteries'}]-(p)-[:Relationship{name:'Storage capacity'}]->(q) return distinct p.name"}, {"query": "I'm going to introduce you to a 13 book series of interesting stories about the two layers of the relationship between old Jiangsu and the presentation of the work.", "cypher": "match (n:ENTITY{name:'The curious legend of the old Jiangsu'})-[:Relationship*1..2]->(x) where x.name<>'13' return distinct x.name"}, {"query": "Please tell me what are the names of the places that belong to the city of Samsun? Please give me 5 names.", "cypher": "match (:ENTITY{name:'The city of Da Nang'})<-[:Relationship{name:'Area'}]-(q)-[:Relationship{name:'Other names'}]->(x) return x.name order by x.name limit 5"}, {"query": "Who is the one who has the strength to fight the enemy?", "cypher": "match (:ENTITY{name:'The City of Joy'})--(x) return x.name order by x.name"}, {"query": "And what will explain to you what the profession of the Jinn is?", "cypher": "match (:ENTITY{name:'The Giving Tree'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 1"}, {"query": "The report also highlights the importance of the oil spill in the Dalyans, which is a major cause of the oil spill in the country.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'China oil spill in Dalian'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Recently learned the nature of wintering herbal acetate, do you know its molecular formula?", "cypher": "match(:ENTITY{name:'The plant is a herb.'})-[:Relationship{name:'Molecular'}]-> (n) return n.name"}, {"query": "Please help me find out who the author of this book is who is smiling you to death without paying for it.", "cypher": "match(:ENTITY{name:'Laughing is not worth dying for.'})-[:Relationship{name:'Written by'}]-> (n) return n.name"}, {"query": "What do you achieve when you are a professor, a PhD student, a graduate tutor?", "cypher": "match (:ENTITY{name:'Professor, PhD, postgraduate teacher'})<-[:Relationship{name:'Professional life'}]-(m)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name"}, {"query": "What is the name of the school where the first principal is named Li Huang?", "cypher": "match (:ENTITY{name:'Lee Hye-hyo'})<-[:Relationship{name:'The first principal'}]-(m)-[:Relationship{name:'Briefly'}]->(h) return distinct h.name limit 3"}, {"query": "Can you get me five books for $25.80?", "cypher": "match (:ENTITY{name:'Books and books'})<-[:Tag{name:'The label'}]-(m), (m)-[:Relationship{name:'Pricing'}]->(n) where n.name='25.80Japanese yen' return m.name limit 5"}, {"query": "Can you find the five species of bony fish? Can you help me introduce them?", "cypher": "match (:ENTITY{name:'The family of bony fishes'})<-[:Relationship*]-(m), (m)-[:Describe{name:'Describe'}]->(n) return  distinct m.name,n.name limit 5"}, {"query": "Do you know who is in the same profession as Yang Yong-jun? What are the labels of each person and please list them in order of the number of labels of each person?", "cypher": "match (n:ENTITY{name:'The army of Liu Yong'})-[:Relationship{name:'Professional life'}]->(:ENTITY)<-[:Relationship{name:'Professional life'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "I would like to know what is the model of DVD.VCD.SVCD distributor?", "cypher": "match (:ENTITY{name:'DVD.VCD.SVCD'})<-[:Relationship{name:'Applicable'}]- (x) return x.name"}, {"query": "Which institution is the host of the 2012 China Football Association Cup?", "cypher": "match(:ENTITY{name:'2012China Football Association Cup is being held in China.'})-[:Relationship{name:'Hosted by'}]-> (h) return h.name"}, {"query": "What are the names of the schools that belong to the New Library category?", "cypher": "match (:ENTITY{name:'The New Library'})<-[:Relationship{name:'Category'}]-(q),(q)-[:Relationship{name:'Famous alumni'}]->(p) return distinct q.name,p.name"}, {"query": "What is the representative work of the Catholic Church?", "cypher": "match (:ENTITY{name:'Catholicism'})<-[:Relationship{name:'Faith'}]-(h)-[:Relationship{name:'Representative works'}]->(q) return distinct q.name limit 1"}, {"query": "The first thing I want to say is, is that the people who are in the middle of the story, the people who are in the middle of the story, the people who are in the middle of the story, the people who are in the middle of the story, the people who are in the middle of the story, the people who are in the middle of the story.", "cypher": "match (n:ENTITY{name:'The Great Wall1'}) - [:Relationship*1..2]->(x) where x.name<>'The city of Mangan' return distinct x.name"}, {"query": "Do you know what CDC stands for?", "cypher": "match (:ENTITY{name:'CDC'})<--(n) return n.name"}, {"query": "Show me some information about Jia Jiang's paintings/artworks in the name of famous school names?", "cypher": "match (n:ENTITY{name:'Paintings by Shiji Sheng/School names'})-[:Relationship*1..2]->(x) where x.name<>'Jadejiang' return distinct x.name"}, {"query": "What is the shortest path between the two layers of the relationship between the force attack and the force attack frequency?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The attack was heavy.'})-[*..2]-(b:ENTITY{name:'The attack was free'})) return count(p)"}, {"query": "Tell us about five personal details about the four-tier relationship of sports personality DeVoe.", "cypher": "match (n:ENTITY{name:'The Law of the Sea'})-[*1..4]->(x) where x.name<>'Sports figures' return distinct x.name limit 5"}, {"query": "Can you find out the online time of 159dnf search service?", "cypher": "match(:ENTITY{name:'159dnfSearching the Internet'})-[:Relationship{name:'Uptime'}]-> (n) return n.name"}, {"query": "I wonder what comedy shows are there in the UK?", "cypher": "match (p:ENTITY{name:'The United Kingdom'})<--(x)-->(q:ENTITY{name:'Comedy'}) return x.name"}, {"query": "Who is the principal of the Xuzhou City Yue Star Middle School? How many students are there?", "cypher": "match (:ENTITY{name:'The school is located in the city of Xuzhou.'})-[:Relationship{name:'Former Principal'}]->(n) return n.name as name union all match (:ENTITY{name:'The school is located in the city of Xuzhou.'})-[:Relationship{name:'In high school'}]->(m) return m.name as name"}, {"query": "Please tell me what kind of relationship is involved in a non-principled dispute in the three levels?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The conflict is without principle'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know which chemical has a boiling point of 47.4?", "cypher": "match (:ENTITY{name:'-47.4'})<-[:Relationship{name:'The point of no return'}]- (x) return x.name"}, {"query": "I'm not sure what the third level of the label is with the youth revolution.", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Youth Revolution'}) return distinct n.name"}, {"query": "Can you recommend 30 free tickets to the scenic spots?", "cypher": "match (l:ENTITY{name:'Free of charge'})<-[:Relationship{name:'The price of tickets'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Landscape attractions'}) return mn.name limit 30"}, {"query": "Can you introduce yourself to the guy who infiltrated C?", "cypher": "match (:ENTITY{name:'The PersecutionCYou.'})--(p) return p.name order by p.name"}, {"query": "Who is the author of the whole of the tongue?", "cypher": "match (:ENTITY{name:'The whole world'})-[:Relationship{name:'Written by'}]-> (m) return distinct m.name"}, {"query": "What is the shortest path between the two levels of the cabinet, the common people and Liu Hongzhi?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The common people'})-[:Relationship*..2]-(b:ENTITY{name:'The Chinese'})) return count(p)"}, {"query": "What are the types of relationships that are involved in the two layers of polytechnics?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Less education'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Do you know which chords make up the #1, #3, #5, or #6?", "cypher": "match (:ENTITY{name:'#1The first is the#3The first is the#5'})<-[:Relationship{name:'The composite sound'}]- (m) return distinct m.name"}, {"query": "Do you know what programs CCTV-1 and CCTV-4 have been broadcasting?", "cypher": "match (:ENTITY{name:'CCTV-1The first is theCCTV-4'})<-[:Relationship{name:'Channel broadcast'}]- (x) return distinct x.name"}, {"query": "Can you give me the information of the 5 companies of the cultural company Dalian Hai Star Violin Bands Limited?", "cypher": "match (n:ENTITY{name:'The company is a subsidiary of the Dalyane Sea Orchestra.'})-[*]->(x) where x.name<>'The culture' return distinct x.name limit 5"}, {"query": "I want to know the six main works of the actors in this industry?", "cypher": "match (n:ENTITY{name:'Actor'})<-[:Relationship{name:'Professional life'}]-(h)-[:Relationship{name:'Major works'}]->(p) return distinct p.name limit 6"}, {"query": "There is a word family, the one that says monkey, do you know his name?", "cypher": "match (:ENTITY{name:'The word family, the mother says the monkey.'})<--(n) return n.name"}, {"query": "The story of Carmen Tudela is a story of love and love.", "cypher": "match (:ENTITY{name:'Carmen Tudela'})--(p) return p.name skip 1"}, {"query": "Can you tell me the name of the relationship in the three layers that Ai Weiwei is involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Ah Hui'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "The word \"Yay\" is a Chinese word that means \"to be\".", "cypher": "match (:ENTITY{name:'Mother and grandmother'})-[:Relationship{name:'Get out of here.'}]->(m) return distinct m.name"}, {"query": "What is the position of the company that was awarded the title of Zhejiang New Venture Management Limited in 2016?", "cypher": "match (:ENTITY{name:'2016He founded Zhejiang New Venture Management Limited in 2000.'})<-[:Relationship{name:'Major achievements'}]-(m)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name limit 1"}, {"query": "What chemical is C7H5N?", "cypher": "match (:ENTITY{name:'C7H5N'})<-[:Relationship{name:'Molecular'}]- (x) return x.name"}, {"query": "Can you list some of the noble professions that you can do?", "cypher": "match (:ENTITY{name:'Chang Chong-liang'})<-[:Relationship{name:'Chinese name'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(m) return m.name order by m.name limit 1"}, {"query": "I wonder what Zhang Huiyuan does for a living? Can you list five jobs she does?", "cypher": "match (:ENTITY{name:'Zhang Huiying'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 5"}, {"query": "Please tell me if there are any tags that are Google's Node.js tag.", "cypher": "match (:ENTITY{name:'GoogleUse the language of the web pageNode.js'})-[:Tag{name:'The label'}]-> (p) return p.name skip 1"}, {"query": "Please find the two main awards of Hunan Financial Industry Professional Technology College, but apart from the Hunan Province's only finance-oriented, literate and blended higher education institution and Hunan Province's exemplary higher education institution, Hunan Province's Excellence Higher Education Institute.", "cypher": "match (n:ENTITY{name:'Hunan College of Finance and Industry'})-[:Relationship{name:'Main awards'}]->(h) where h.name <> 'The only higher education institution in Hunan province that is both financial and literary.' and h.name <> 'Hunan Provincial Exemplary Higher School, Hunan Provincial Superior Higher School' return distinct h.name limit 2"}, {"query": "What games are similar to the 1950s art game? What are the different labels? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'Art of the 1950s'})-[:Relationship{name:'Game type'}]->(:ENTITY)<-[:Relationship{name:'Game type'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "I would like to know what the relationship is between the five levels involved in the Ryong Village in Ningxia County?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Nanking County to Long Village'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "How many classes are there in the girls' class? Who is the main character?", "cypher": "match (:ENTITY{name:'The bride[Indian television series]'})-[:Relationship{name:'Starring'}]->(n) return n.name as name union all match (:ENTITY{name:'The bride[Indian television series]'})-[:Relationship{name:'The set'}]->(m) return m.name as name"}, {"query": "The 20km long distance race, when did it start, do you remember?", "cypher": "match(:ENTITY{name:'20The mile run'})-[:Relationship{name:'Origin time'}]-> (p) return p.name"}, {"query": "What is the name of the relationship between the three levels of the Japanese Embassy in the UK?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Japanese Embassy in the UK'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you get me two books for $150?", "cypher": "match (:ENTITY{name:'150Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "The names of the people who were born in the same time period as the people of the Jiangxi and Vietnamese empires, and what labels each of them has.", "cypher": "match (n:ENTITY{name:'The Yangtze'})-[:Relationship{name:'Where I was born'}]->(:ENTITY)<-[:Relationship{name:'Where I was born'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "This is the book you are looking at for a 0-2 year old: Black and White 2, which publisher?", "cypher": "match(:ENTITY{name:'0-2The babybookBlack and white:2'})-[:Relationship{name:'Publishing house'}]-> (m) return m.name"}, {"query": "Can you tell us about the kind of relationships that the tidal flavor involves in the four layers?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The smell of the tide'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What is the shortest relationship path between LCA and HF-24 fighters in the 3rd level?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'LCAFighter aircraft'})-[:Relationship*..3]-(b:ENTITY{name:'HF-24Fighter aircraft'})) return count(p)"}, {"query": "Can you look at this 1-hydroxybenzyl, can you calculate the molecular weight?", "cypher": "match(:ENTITY{name:'1-The Penguin'})-[:Relationship{name:'Molecular weight'}]-> (p) return p.name"}, {"query": "Can you tell me the name of the relationship within the three layers that the Huawei G730 is involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'HuaweiG730'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you provide a CAS number for 2-nitrogen N-oxide salts?", "cypher": "match(q:ENTITY{name:'2-Oh, my God.N-Oxide salts'})-[:Relationship{name:'CASThe number of the log'}]-> (p) return p.name"}, {"query": "Can you tell me what the relationship is between the three layers of the beauty of the zodiac?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Beauty of the Stars'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "The 10/1 Las Vegas casino shooting reported in the newspapers was so horrific, where was the location?", "cypher": "The shooting at the Las Vegas casino in Las Vegas, Nevada, USA, on July 10, 2010 at the age of 84, was reported to have occurred in a hotel in Las Vegas.", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The shooting at the Las Vegas casino in Las Vegas, Nevada, USA, on July 10, 2010 at the age of 84, was reported to have occurred in a hotel in Las Vegas.\"\n         ^"}, {"query": "There is a 302-page book, can you tell me the top 5 information about its price?", "cypher": "match (:ENTITY{name:'302'})<-[:Relationship{name:'Number of pages'}]-(h),(h)-[:Relationship{name:'Pricing'}]->(p) return p.name skip 1 limit 5"}, {"query": "When was Yang Kang born?", "cypher": "match(:ENTITY{name:'The Gang'})-[:Relationship{name:'Date of birth'}]-> (n) return n.name"}, {"query": "Please tell me the main department setting of the Banyang Petrochemical Higher Specialist University?", "cypher": "match (:ENTITY{name:'The University of Petrochemical Engineering in Liaoning'})<-[:Relationship{name:'Chinese name'}]-(q),(q)-[:Relationship{name:'Main Faculty'}]->(p) return distinct q.name"}, {"query": "What are the non-hereditary categories and grades of quartz lamps?", "cypher": "match (:ENTITY{name:'The colour of the marble lamp'})-[:Relationship{name:'Non-hereditary'}]->(n) return n.name as name union all match (:ENTITY{name:'The colour of the marble lamp'})-[:Relationship{name:'Non-hereditary'}]->(m) return m.name as name"}, {"query": "Who knows what the main prize is for the famous fenmaster?", "cypher": "match (:ENTITY{name:'The famous gate master, Feng Lin Lin, is a very good man.'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Main awards'}]->(h) return distinct h.name"}, {"query": "I would like to know what kind of relationships are there within the three layers of Zhou Sam Village?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Cho Sam Village'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "In addition to being an economist, Sheng introduces 10 other professions related to him.", "cypher": "match (:ENTITY{name:'Thank you.'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Professional life'}]->(q) where q.name <> 'Economist' return distinct q.name limit 10"}, {"query": "Do you know the name of a car with an engine model called RFJ?", "cypher": "match (:ENTITY{name:'RFJ'})<-[:Relationship{name:'Engine model'}]- (q) return q.name"}, {"query": "What kind of companies are the ones that have earned the reputation of being the leading brands in e-commerce between building materials companies?", "cypher": "match (:ENTITY{name:'The famous brand of e-commerce between building materials companies'})<-[:Relationship{name:'Achievement'}]-(h)-[:Relationship{name:'Type of'}]->(x) return distinct h.name"}, {"query": "What was the 1953 KGB inside?", "cypher": "match (:ENTITY{name:'1953The inside of the KGB'})-[:Tag{name:'The label'}]-> (x) with x order by x.name return x.name limit 1"}, {"query": "What chemical has a density of 1.333 g/cm3?", "cypher": "match (:ENTITY{name:'1.333g/cm3'})<-[:Relationship{name:'Density'}]- (n) return n.name"}, {"query": "Can you find me a representation of a new teacher?", "cypher": "match (:ENTITY{name:'The New'})<-[:Relationship{name:'Teacher'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(q) return distinct q.name limit 1"}, {"query": "What dialect is spoken in the area?", "cypher": "match (:ENTITY{name:'The Baryan Bayar'})-[:Relationship{name:'Area'}]->(n) return n.name as name union all match (:ENTITY{name:'The Baryan Bayar'})-[:Relationship{name:'The dialect'}]->(m) return m.name as name"}, {"query": "What is the density of 1-methoxyethylene?", "cypher": "match(:ENTITY{name:'1-The foundation of the world-4-Methyl acetate'})-[:Relationship{name:'Density'}]-> (m) return m.name"}, {"query": "What are some of the major accomplishments of Michael W. Young?", "cypher": "match (h:ENTITY{name:'Michael W. Young'})<-[:Relationship{name:'Foreign language name'}]-(p)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name"}, {"query": "How many 4A sites are there in our country?", "cypher": "match (:ENTITY{name:'AAAA'})<--(m), (m)-->(n) where n.name='China' return count(distinct m.name)"}, {"query": "Do you know where the home stadium of AC Milan is?", "cypher": "match(:ENTITY{name:'ACMilan football club'})-[:Relationship{name:'The main venue'}]-> (p) return p.name"}, {"query": "What is the profession of Yang Kang?", "cypher": "match(:ENTITY{name:'The Gang'})-[:Relationship{name:'Professional life'}]-> (n) return n.name"}, {"query": "I know the molecular formula for 3-hydroxybenzene, but I don't know the molecular weight, can you help me?", "cypher": "match(:ENTITY{name:'3-The Penguin'})-[:Relationship{name:'Molecular weight'}]-> (m) return m.name"}, {"query": "In addition to \"Soft and Too Loving You\", there are three other works by Liu Xiaobo.", "cypher": "match (n:ENTITY{name:'The research'})-[:Relationship{name:'Representative works'}]->(h) where h.name <> 'Softly' and h.name <> 'I love you too much.' return distinct h.name limit 3"}, {"query": "Is Lee Zhou-Ping a cook? Can you name five?", "cypher": "match (:ENTITY{name:'Lee Zhou-pyo'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 5"}, {"query": "What are the school profiles of the following three primary schools in the Cabinet 2 level?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Primary School'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Who is as tall as Reynaldo and what are their individual labels?", "cypher": "match (n:ENTITY{name:'Reynaldo'})-[:Relationship{name:'Height'}]->(:ENTITY)<-[:Relationship{name:'Height'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What is the profession of people born in October 1984?", "cypher": "match (:ENTITY{name:'1984Year of birth10The Moon'})<-[:Relationship{name:'Date of birth'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name"}, {"query": "Do you know what the main awards are for ambition, kindness, yes, innovation in schools?", "cypher": "match (:ENTITY{name:'The project is a collaboration between the two organizations.'})<-[:Relationship{name:'Schooling'}]-(h)-[:Relationship{name:'Main awards'}]->(x) return distinct x.name limit 5"}, {"query": "Can you find me three books published by Educational Science Publishing?", "cypher": "match (:ENTITY{name:'Educational and scientific publishing'})<-[:Relationship{name:'Publishing house'}]-(n)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "The scope of the evaluation of the evaluation work includes the implementation of a sanitary rural rehabilitation project in the area, called the \"Page name\"?", "cypher": "match (:ENTITY{name:'The area where the sanitary rural rehabilitation project is being implemented.'})<-[:Relationship{name:'Scope of the audit'}]- (p) return p.name"}, {"query": "In which city is the South of Five Love Market?", "cypher": "match(:ENTITY{name:'South of the Five Love Market'})-[:Relationship{name:'Location'}]-> (n) return n.name"}, {"query": "Do you know the first two words of the name of the publisher of The Last of the Mohicans and the full name of the publisher?", "cypher": "MATCH (n:ENTITY{name:'The Last of the Magi'})-[:Relationship{name:'Publishing company'}]->(m) RETURN m.name,substring(m.name,0,2)"}, {"query": "What other information does Yuen Yuen have besides the Japanese information?", "cypher": "match (:ENTITY{name:'Yusei Yong,'})--(m) with m order by m.name where m.name <> 'Japanese' return distinct m.name limit 2"}, {"query": "Do you know what chemical has CAS number 106505-90-2?", "cypher": "match (:ENTITY{name:'106505-90-2'})<-[:Relationship{name:'CASNumbered'}]- (q) return q.name"}, {"query": "What is the name of the long-tailed weasel?", "cypher": "match (:ENTITY{name:'The Long and the Tough'})-[:Relationship{name:'Other names'}]->(n) return n.name as name union all match (:ENTITY{name:'The Long and the Tough'})-[:Relationship{name:'Distribution areas'}]->(m) return m.name as name"}, {"query": "Who is the founder of the two-time drivers' championship and four-time team championship?", "cypher": "match (:ENTITY{name:'2The second driver champion,4Second team champion'})<-[:Relationship{name:'Major achievements'}]-(n)-[:Relationship{name:'Founder'}]->(m) return distinct m.name limit 1"}, {"query": "Who is the astronomer who wrote the book on the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth?", "cypher": "match (:ENTITY{name:'The day of the cosmic butterfly'})<-[:Relationship{name:'Representative works'}]-(m), (m)-[:Relationship{name:'Professional life'}]->(n) where n.name='The astronomer' return m.name"}, {"query": "What is the shortest path to studying the comparison of the East and West reproductive cultures in the three layers of the electronic circuit experiment tutorial?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The experimental tutorial on electronic circuits'})-[*..3]-(b:ENTITY{name:'East and West comparative studies'})) return count(p)"}, {"query": "What is the Latin name of the Emerald Budgies butterfly described in the book?", "cypher": "match(:ENTITY{name:'Emerald BudgiesThe Owl'})-[:Relationship{name:'Latin name'}]-> (m) return m.name"}, {"query": "Can you list two software that were launched in 2013?", "cypher": "match (:ENTITY{name:'2013'})<-[:Relationship{name:'The time'}]- (q) return q.name limit 2"}, {"query": "Can anyone tell me what Liu Wei Ming does for a living?", "cypher": "match (:ENTITY{name:'And the people of the land, and the people of the valley,1961Born in Wuhan, Hubei, he studied calligraphy from an early age.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 1"}, {"query": "I would like to know what the relationship is between the three levels of administrative penalties that customs impose?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Customs administrative penalties'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Can you tell me two things about Kim Quayle's main achievements?", "cypher": "match (:ENTITY{name:'The King of Quetta'})<-[:Relationship{name:'Other names'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name limit 2"}, {"query": "I would like to know all the information about Wang Xia's work in Qingdao Chapter 2, Chapter 4?", "cypher": "match (n:ENTITY{name:'The Chinese government has been trying to stop the spread of the virus.'})-[:Relationship*]->(x) where x.name<>'The King' return distinct x.name"}, {"query": "I'm not sure if you understand, but can you tell me about him?", "cypher": "match (:ENTITY{name:'Good wishes'})--(p) return p.name skip 1"}, {"query": "I would like to know what kind of jobs are people with socialist, Marxist, communist beliefs doing?", "cypher": "match (:ENTITY{name:'Socialism, Marxism and Communism'})<-[:Relationship{name:'Faith'}]-(m)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name"}, {"query": "What are the three Chinese names of Chin Dong, born in Hong Kong in 1954 and a native of Shandong, China?", "cypher": "match (:ENTITY{name:'The first is the Shandong cigarette factory.1954Born in Taipei, Hong Kong, Li entered the Chinese Drama School at the age of six to study drama. He first entered the film industry as a martial artist, gradually developing into an actor, director and supervisor.'})<-[:Describe{name:'Describe'}]-(m),(m)-[:Relationship{name:'Chinese name'}]->(q) where q.name <> 'The Dragon' return distinct q.name limit 3"}, {"query": "Life is tough, which company is producing? Who is the director? Who is the main actor in this drama?", "cypher": "match (:ENTITY{name:'Life is long.'})-[:Relationship{name:'Production company'}]->(n) return n.name as name union all match (:ENTITY{name:'Life is long.'})-[:Relationship{name:'Director'}]->(m) return m.name as name union all match (:ENTITY{name:'Life is long.'})-[:Relationship{name:'Starring'}]->(r) return r.name as name"}, {"query": "I want to find six plants, and what are their families?", "cypher": "match (:ENTITY{name:'Plants'})<-[*]-(m), (m)-[:Relationship{name:'The Department'}]->(n) return m.name,n.name limit 6"}, {"query": "What is the name of the theory proposed by J. Piaget for its application in psychology?", "cypher": "match (:ENTITY{name:'J.Piaget is a man of many talents.'})<-[:Relationship{name:'The Proposer'}]-(m), (m)-[:Relationship{name:'Applied disciplines'}]->(n) where n.name='The psychology of development' return distinct m.name"}, {"query": "Do you know anything about Shan Lin's career other than modeling and acting?", "cypher": "match (n:ENTITY{name:'The Sun'})-[:Relationship{name:'Professional life'}]->(h) with h order by h.name where h.name <> 'The model' and h.name <> 'Actor' return h.name limit 1"}, {"query": "Can you provide me with five details of the five levels of relationship of Yuki Kobayashi, a football player?", "cypher": "match (n:ENTITY{name:'The city of Yue'})-[*1..5]->(x) where x.name<>'Soccer player' return distinct x.name limit 5"}, {"query": "What is the best way to get rid of the smell of strawberries?", "cypher": "match (:ENTITY{name:'The clean straw'})-[:Relationship{name:'Not for crowds'}]-> (m) return distinct m.name"}, {"query": "What are the private companies in Chengdu?", "cypher": "match (:ENTITY{name:'Private companies'})<-[:Relationship{name:'The nature of the company'}]- (mn) -[:Relationship{name:'Location'}]->(n:ENTITY{name:'The capital'}) return mn.name"}, {"query": "What is the logP of the chemical: 1.86480?", "cypher": "match (x:ENTITY{name:'1.86480'})<-[:Relationship{name:'logP'}]- (n) return n.name"}, {"query": "Can you tell me the name of the relationship between the two layers involved in Jiangxi Stone City?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Stone City of Jiangxi'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What is the acronym used by the National Academic Conference on Sensitive Elements and Sensors?", "cypher": "match(:ENTITY{name:'National academic conference on sensitive components and sensors'})-[:Relationship{name:'Briefly'}]-> (h) return h.name"}, {"query": "Can you tell me the spelling of the word \"Jubei\" for me?", "cypher": "match(:ENTITY{name:'The word \"juju\"'})-[:Relationship{name:'Spelling'}]-> (n) return n.name"}, {"query": "Please recommend a famous place to visit in Kangme-ta Lake Rock, if not the Great Wall of Japan and the Taichung Rock Prophecy.", "cypher": "match (n:ENTITY{name:'The rocks of Lake Connemara'})-[:Relationship{name:'Famous places'}]->(h) where h.name <> 'The Great Treasure' and h.name <> 'The Lake Tahoe Limestone' return distinct h.name limit 1"}, {"query": "What is the shortest path of corn starch to corn stem rot in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Corn Rotted Dry'})-[:Relationship*..2]-(b:ENTITY{name:'Corn Stomach Disease'})) return count(p)"}, {"query": "The magazine is published in Shanghai and where is it published?", "cypher": "match (:ENTITY{name:'Eat all over Shanghai'})<-[:Relationship{name:'Title'}]-(p)-[:Relationship{name:'Publishing house'}]->(n) return distinct n.name limit 3"}, {"query": "Can you name the name of this thing with the life tag?", "cypher": "match (:ENTITY{name:'Life and work'})<-[:Tag{name:'The label'}]-(h),(h)-[:Relationship{name:'Other names'}]->(m) return m.name skip 2 limit 1"}, {"query": "Which five novels are listed in the Jinjiang Literary City?", "cypher": "match (:ENTITY{name:'The City of Literature'})<-[:Relationship{name:'Linked site'}]-(q)-[:Relationship{name:'Chinese name'}]->(p) return distinct p.name limit 5"}, {"query": "What are the main awards for the company located in the northern part of the city of Pyongyang?", "cypher": "match (:ENTITY{name:'The city of Yangyang, north of Rich People Road (East Ring Road)'})<-[:Relationship{name:'Address'}]-(q)-[:Relationship{name:'Main awards'}]->(m) return distinct m.name"}, {"query": "What are the advantages and disadvantages of polishing rubber?", "cypher": "match (:ENTITY{name:'Polished aluminum'})-[:Relationship{name:'Features'}]->(n) return n.name as name union all match (:ENTITY{name:'Polished aluminum'})-[:Relationship{name:'The disadvantages'}]->(m) return m.name as name"}, {"query": "If you know the date of the founding of Wanhua Chemical Limited, it was in Beijing.", "cypher": "match(:ENTITY{name:'The Chinese Chemical[The Chinese]Limited company'})-[:Relationship{name:'Founded'}]-> (h) return h.name"}, {"query": "I want to publish all the information about .NET XML Advanced Programming?", "cypher": "match (:ENTITY{name:'.NET XMLAdvanced programming'})--(n) with n order by n.name where n.name <> 'Published' return n.name"}, {"query": "When the reporter is Chinese, who is there?", "cypher": "match (p:ENTITY{name:'Chinese'})<--(x)-->(q:ENTITY{name:'The journalist'}) return x.name"}, {"query": "Can you tell us about the three attributes of 1234?", "cypher": "match (:ENTITY{name:'1234[The website is navigated by Red Dust Song]'})--(h) with h order by h.name return h.name limit 3"}, {"query": "Do you have five books of encouragement in plain clothes?", "cypher": "match (:ENTITY{name:'Plain clothes'})<-[:Relationship{name:'The dress'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'The book of encouragement'}) return mn.name limit 5"}, {"query": "Who and where was born in the same place, and who have all these people with a tag? Show these people in order of their tag number.", "cypher": "match (n:ENTITY{name:'The well is still there'})-[:Relationship{name:'Where I was born'}]->(:ENTITY)<-[:Relationship{name:'Where I was born'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The head of the four noble families is from which family?", "cypher": "match (:ENTITY{name:'The heads of the four nobles'})<-[:Relationship{name:'Location'}]-(m) return distinct m.name"}, {"query": "How many companies are located in Philadelphia, USA? Can you name 11?", "cypher": "match (:ENTITY{name:'The city of Philadelphia'})<-[:Relationship{name:'Location'}]- (m) return m.name limit 11"}, {"query": "What is the relationship between the two layers of the banana egg breakfast cake?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Banana and egg breakfast cake'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "So if you've learned to decimal, what's the decimal of 10, would you do it?", "cypher": "match(:ENTITY{name:'-10'})-[:Relationship{name:'Countdown'}]-> (m) return m.name"}, {"query": "Do you know the time of the loading of the 2S31 self-propelled gun I have?", "cypher": "match(:ENTITY{name:'2S31Self-propelled gun'})-[:Relationship{name:'Loading time'}]-> (p) return p.name"}, {"query": "The list of 50 free apps on Android?", "cypher": "match (:ENTITY{name:'Android'})<-[:Relationship{name:'Software platform'}]- (mn) -[:Relationship{name:'The price'}]->(n:ENTITY{name:'Free of charge'}) return mn.name limit 50"}, {"query": "Do you know what the profession of the whale is?", "cypher": "match (:ENTITY{name:'The Whigs'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 1"}, {"query": "What is the species of the striped parrot and where is it mainly distributed?", "cypher": "match (:ENTITY{name:'The tightly striped ribbon'})-[:Relationship{name:'The Department'}]->(n) return n.name as name union all match (:ENTITY{name:'The tightly striped ribbon'})-[:Relationship{name:'Distribution areas'}]->(m) return m.name as name"}, {"query": "Do you know the five Chinese occupations?", "cypher": "match (n:ENTITY{name:'Han'})<-[:Relationship{name:'Ethnicity'}]-(h)-[:Relationship{name:'Professional life'}]->(q) return q.name skip 1 limit 10"}, {"query": "Which version of the software is v2.5.4?", "cypher": "match (:ENTITY{name:'v2.5.4'})<-[:Relationship{name:'Version number'}]- (q) return q.name"}, {"query": "What are the main achievements of people born in 1982? Can you list 5?", "cypher": "match (:ENTITY{name:'1982Year of birth'})<-[:Relationship{name:'Date of birth'}]-(p)-[:Relationship{name:'Major achievements'}]->(m) return distinct m.name limit 5"}, {"query": "Do you know which of the five relationship names in the two layers that the girl in the factory is involved in?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Girl at the Factory'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "What is the shortest path between the village of Rai Bay and the village of Bergo Bay on the second floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Village of Ray Bay'})-[*..2]-(b:ENTITY{name:'The village of Bergo Bay'})) return count(p)"}, {"query": "What is the molecular weight of 3-hydro-5-hydroxybutyric acid?", "cypher": "match(:ENTITY{name:'3-Oh, my God.-5-Methacrylic acid'})-[:Relationship{name:'Molecular weight'}]-> (h) return h.name"}, {"query": "What are the three letters of the alphabet? What do they mean?", "cypher": "match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Spelling'}]->(n) return n.name as name union all match (:ENTITY{name:'Oh, my God.'})-[:Describe{name:'The label'}]->(m) return m.name as name"}, {"query": "What other ways to visit the Park of the Yangmye Rinpoche Scenic Area are there besides cycling and hiking?", "cypher": "match (n:ENTITY{name:'The park is located in the Jiangmen Rungstone Scenic Area.'})-[:Relationship{name:'How to visit'}]->(h) where h.name <> 'Walking' and h.name <> 'Riding' return distinct h.name limit 2"}, {"query": "What are the main characters in the film written by Tao Jianhui?", "cypher": "match (:ENTITY{name:'The pottery'})<-[:Relationship{name:'Writer'}]-(p)-[:Relationship{name:'Starring'}]->(m) return distinct p.name"}, {"query": "Can you name 10 jobs that men do?", "cypher": "match (p:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 10"}, {"query": "Can you help me check the noise parameter of a 2X vacuum tube?", "cypher": "match(:ENTITY{name:'2XThe vacuum pump'})-[:Relationship{name:'Noise and noise'}]-> (q) return q.name"}, {"query": "Would you recommend a bus that can take you to the hotel complex?", "cypher": "match (:ENTITY{name:'The hotel complex'})<-[:Relationship{name:'Nature of the species'}]-(q),(q)-[:Relationship{name:'Buses'}]->(x) return distinct x.name limit 1"}, {"query": "Can you tell me where the baby was born?", "cypher": "match (:ENTITY{name:'The submarine'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Where I was born'}]->(n) return distinct n.name"}, {"query": "Can you tell me what the ISBN is for a book of 278 pages?", "cypher": "match (:ENTITY{name:'278'})<-[:Relationship{name:'Number of pages'}]-(n)-[:Relationship{name:'ISBN'}]->(q) return q.name skip 2 limit 1"}, {"query": "Please let me know what are the main achievements of this person who believes in the Communist Party? 3 lines?", "cypher": "match (:ENTITY{name:'The Communist Party'})<-[:Relationship{name:'Faith'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(m) return m.name skip 2 limit 5"}, {"query": "Guess how many companies are in Dalian?", "cypher": "match (p:ENTITY{location:'The Dalyans'}) return count(p)"}, {"query": "What chemical is the CAS number 71-36-3?", "cypher": "match (:ENTITY{name:'71-36-3'})<-[:Relationship{name:'CASThe number of the log'}]- (q) return q.name"}, {"query": "What is the work of someone born in April 1973?", "cypher": "match (:ENTITY{name:'1973Year of birth4The Moon'})<-[:Relationship{name:'Date of birth'}]-(p),(p)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name"}, {"query": "What is the maximum speed of the AIM-9X Rattlesnake in common use?", "cypher": "match(p:ENTITY{name:'AIM-9XThe sound of snake-tail missiles'})-[:Relationship{name:'Maximum speed'}]-> (h) return h.name"}, {"query": "Can you tell me about the famous sights of the Revolutionary History Memorial of the Middle East Primary School?", "cypher": "match (:ENTITY{name:'The Revolutionary History Memorial at the East Central Primary School'})-[:Relationship{name:'Famous places'}]-> (h) return h.name order by h.name limit 10"}, {"query": "Can you tell me about the content of the Khaos Legions dish?", "cypher": "match (:ENTITY{name:'Oh, my God.Khaos LegionsOh, my God.'})--(q) return q.name order by q.name"}, {"query": "I want to attend the 2012 China International Rental Industry Expo, which venue do I need to go to?", "cypher": "match(:ENTITY{name:'2012China International Rental Industry Fair is held in Beijing.'})-[:Relationship{name:'The venue'}]-> (x) return x.name"}, {"query": "Please list one of the occupations of this female figure for me.", "cypher": "match (:ENTITY{name:'The woman'})<-[:Relationship{name:'Gender and race'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(m) return m.name skip 1 limit 1"}, {"query": "The film is based on the novel of the same name by the writer, who is the author of the book.", "cypher": "match (:ENTITY{name:'The mother-in-law[Poetry by Wu]'})-[:Relationship{name:'Date of creation'}]->(n) return n.name as name union all match (:ENTITY{name:'The mother-in-law[Poetry by Wu]'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "Can you tell me what is the name of the foreign language of Jida Takami?", "cypher": "match (:ENTITY{name:'The Japanese'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Foreign language name'}]->(n) return distinct n.name"}, {"query": "Please provide three publications priced at 28.0 yuan", "cypher": "match (:ENTITY{name:'28.0Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "I would like to ask what are the relations between the two levels of the bilateral monopoly?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Dual Monopoly'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What is the shortest path between the two levels of Umun and Nauru?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Umun'})-[*..2]-(b:ENTITY{name:'The village of Nauru'})) return count(p)"}, {"query": "The problem is that the content of the five literary works is in the four-tier relationship with the Hanmin Palace of the Chancellor of the Exchequer, Lee Kuan Yew.", "cypher": "match (n:ENTITY{name:'The silver table of the Duke of Li, the Duke of Buckingham and the Duke of York'})-[*1..4]->(x) where x.name<>'Literary works' return distinct x.name limit 5"}, {"query": "What is the pressure difference between the company's new 0110R003BH5HC core and the current one?", "cypher": "match(:ENTITY{name:'0110R003BH5HCThe core'})-[:Relationship{name:'Low pressure'}]-> (x) return x.name"}, {"query": "The Type 039B submarine we are using now is made by which country?", "cypher": "match(:ENTITY{name:'039BType of submarine'})-[:Relationship{name:'State'}]-> (q) return q.name"}, {"query": "So let me calculate what is the molecular weight of 7-diamethylsanoic acid-4-acetate?", "cypher": "match(:ENTITY{name:'7-Diethyl methacrylate-4-Acid'})-[:Relationship{name:'Molecular weight'}]-> (p) return p.name"}, {"query": "So what's the factorization of 22 times 31?", "cypher": "The following is a list of the most commonly used parameters for the calculation of the value of a variable:", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The following is a list of the most commonly used parameters for the calculation of the value of a variable:\"\n         ^"}, {"query": "Can you please check out the developer and software platform of the corn helper?", "cypher": "match (:ENTITY{name:'The Corn Helper'})-[:Relationship{name:'The developer'}]->(n) return n.name as name union all match (:ENTITY{name:'The Corn Helper'})-[:Relationship{name:'Software platform'}]->(m) return m.name as name union all match (:ENTITY{name:'The Corn Helper'})-[:Relationship{name:'Category'}]->(r) return r.name as name"}, {"query": "Do you know who the most representative of the water cannon is? Can you name five?", "cypher": "match (m:ENTITY{name:'The water gun'})<-[:Relationship{name:'Representative works'}]- (p) return  distinct p.name limit 5"}, {"query": "Do you know which games don't have a time stamp? Name three?", "cypher": "match (:ENTITY{name:'No'})<-[:Relationship{name:'When to update'}]- (h) return h.name limit 3"}, {"query": "What else do you know about gossip besides being the second Prime Minister of Singapore?", "cypher": "match (:ENTITY{name:'The cries of the cries'})-[:Relationship*1..2]-(p) where p.name <> 'Second Prime Minister of Singapore' return p.name limit 10"}, {"query": "Did you have trouble telling me what Steven does for a living?", "cypher": "match (:ENTITY{name:'The Stiglitz'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Professional life'}]->(p) return distinct q.name"}, {"query": "I'm not sure if you can tell me about the three messages that you have for me besides the passion films.", "cypher": "match (:ENTITY{name:'The Mystery of the Twin Sisters'})--(m) with m order by m.name where m.name <> 'The film' return distinct m.name limit 3"}, {"query": "I recently bought a 2008 Santana Shijun 2.0AT luxury car, can you help me check what engine model it has?", "cypher": "match(:ENTITY{name:'2008The name of the song is Santanaji Jun. 2.0AT Luxury'})-[:Relationship{name:'Engine model'}]-> (h) return h.name"}, {"query": "Can you tell me about the types of relationships within the six layers that Ingmar Carr is involved in?", "cypher": "match path=(n)<-[:Relationship*6]-(p:ENTITY{name:'The English Triad'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know the address of the 2012 China Boutique Fair in Zhejiang?", "cypher": "match(:ENTITY{name:'2012China[The State of Zhejiang]The boutique fair'})-[:Relationship{name:'Location'}]-> (p) return p.name"}, {"query": "What is the relationship between the two layers of the relationship with Dr. Huumen?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Dr. Hu is a doctor.'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "In which regions is the blue arrowhead primarily distributed?", "cypher": "match (:ENTITY{name:'The Blue Arrow'})-[:Relationship{name:'Distribution areas'}]-> (m) return distinct m.name"}, {"query": "The first foreign member of the Japan National Electronic Keyboard Association to be removed from the list of double-reed organists, what are his other three identities?", "cypher": "match (:ENTITY{name:'First foreign member of the National Electronic Keyboard Association of Japan'})<-[:Relationship{name:'Major achievements'}]-(q)-[:Relationship{name:'Professional life'}]->(p) where p.name <> 'Double-reed electronic pipe organ player' return distinct p.name limit 3"}, {"query": "Can you name two different professions that are available to American citizens?", "cypher": "match (:ENTITY{name:'The United States'})<-[:Relationship{name:'Nationality'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 2"}, {"query": "Do you know when the Super Nintendo will be released?", "cypher": "match (x:ENTITY{name:'SFCThe game is called Super Nintendo.'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'When to go'}]->(q) return distinct q.name limit 1"}, {"query": "What are the relationships between the two levels of the North Primary School?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'North Primary School'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "The actor who won the Golden Bell Award for Best Supporting Actor in a Drama Program on Taiwanese TV, who is the representative of the other actor besides My 30 Laws?", "cypher": "match (:ENTITY{name:'Taiwan TV Golden Bell Award for Best Supporting Actor in a Drama In the end'})<-[:Relationship{name:'Major achievements'}]-(x)-[:Relationship{name:'Representative works'}]->(q) where q.name <> 'My30Law' return distinct q.name limit 1"}, {"query": "Can you tell me if there is a person who is related to Sun Feng in the second tier of the label?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'Sun Feng is'}) RETURN distinct n.name limit 1"}, {"query": "This property is for a school with a normal undergraduate degree, what are its main departments?", "cypher": "match (:ENTITY{name:'Normal undergraduate schools'})<-[:Relationship{name:'Attributes of the school'}]-(q),(q)-[:Relationship{name:'Main Faculty'}]->(h) return h.name order by h.name limit 3"}, {"query": "Is there any benefit to eating a pie?", "cypher": "match (:ENTITY{name:'The pie'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Mainly consuming power'}]->(n) return distinct n.name"}, {"query": "Tell me, what historical work comes from the Key of Solomon?", "cypher": "match (:ENTITY{name:'The Key of Solomon'})<-[:Relationship{name:'The source'}]- (x) return distinct x.name"}, {"query": "What is the shortest path between the two floors of Shaanxi Village and Sheyang Village?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Shaan'})-[*..2]-(b:ENTITY{name:'The village of Sheshun'})) return count(p)"}, {"query": "Check out the company information in the two-tier relationship of this organization, Business Information Consulting Ltd.", "cypher": "match (n:ENTITY{name:'Hebei is not expecting business information consulting company'})-[*1..2]->(x) where x.name<>'Organizing body' return distinct x.name"}, {"query": "The man named Flower Gundam is a cook?", "cypher": "match (:ENTITY{name:'Flower just spoke'})<-[:Relationship{name:'Chinese name'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name"}, {"query": "The teacher wants us to calculate the molecular mass of the nitroglycerin, can you help me write the chemical formula first?", "cypher": "match(:ENTITY{name:'The Chinese'})-[:Relationship{name:'Chemical formula'}]-> (q) return q.name"}, {"query": "Can you tell me about any spy films you have?", "cypher": "match(:ENTITY{name:'Spy film'})-[:Relationship{name:'The video'}]-> (n) return n.name"}, {"query": "What can you tell me about this person, Nick Helen?", "cypher": "match (:ENTITY{name:'Nick is a good guy.\u00b7The Hellen'})--(p) return p.name skip 2"}, {"query": "I want to ask you, what is the name of the chemical compound with the molecular formula C9H7NO6?", "cypher": "match (:ENTITY{name:'C9H7NO6'})<-[:Relationship{name:'Molecular'}]- (q) return q.name"}, {"query": "Help me find 10 different types of Jiangsu food.", "cypher": "match (:ENTITY{name:'Jiangsu dishes'})<-[:Relationship{name:'Classified'}]-(m) return distinct m.name limit 10"}, {"query": "Help me find the famous sights and monks of Yummin Temple", "cypher": "match (:ENTITY{name:'The Yumin Temple'})-[:Relationship{name:'Famous places'}]->(n) return n.name as name union all match (:ENTITY{name:'The Yumin Temple'})-[:Relationship{name:'Famous monks'}]->(m) return m.name as name"}, {"query": "Can you list any of the three levels of relationships involved in teaching the new curriculum?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'New curriculum teaching'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What song was originally sung by Owl City?", "cypher": "match (:ENTITY{name:'Owl City(Owl City)'})<-[:Relationship{name:'The song was originally sung'}]- (p) return distinct p.name"}, {"query": "Bamboo fish soup is its main ingredient. Do you know what it is?", "cypher": "match(:ENTITY{name:'Bamboo fish soup'})-[:Relationship{name:'Main ingredients'}]-> (n) return n.name"}, {"query": "Born in Guizhou in 1974, what are the 10 identities of Rojaweed besides being a member of the National Religious Affairs Bureau of Guizhou's Udan District?", "cypher": "match (:ENTITY{name:'And the man of Lot,1974Year of birth01Moon was born in Guizhou, graduated from university, and is from Guizhou.'})<-[:Describe{name:'Describe'}]-(h),(h)-[:Relationship{name:'Professional life'}]->(m) where m.name <> 'Member of the Party Group of the Bureau of Ethnic Religious Affairs of Udan District, Quang City' return distinct m.name limit 10"}, {"query": "The 2013 Cologne International Food Fair in Germany is quite high-end, do you know the specific cycle?", "cypher": "match(:ENTITY{name:'2013The annual Cologne International Food Fair'})-[:Relationship{name:'The cycle'}]-> (x) return x.name"}, {"query": "Can you give me a place in the world heritage site of the city of Xi'an?", "cypher": "match (:ENTITY{name:'The world heritage site of the city of Chiang Mai'})<-[:Relationship*]-(m),(m)-[:Relationship{name:'Period'}]->(n) return m.name,n.name limit 2"}, {"query": "How long is the Hermes Glacier?", "cypher": "match(:ENTITY{name:'The Hermes Glacier'})< -[:Relationship{name:'The whole length'}]-> (m)  return m.name"}, {"query": "Can you help me find the chemical formula for 2-acetyl-hydroxyethyl acetate, if I need it right now?", "cypher": "match(:ENTITY{name:'2-Acetyl-hydroxyethyl acetate'})-[:Relationship{name:'Chemical formula'}]-> (m) return m.name"}, {"query": "The case against the three sisters was filed on behalf of whom?", "cypher": "match (:ENTITY{name:'The new drama starring is: My sisters are suing my sister'})<-[:Relationship{name:'Representative works'}]- (m) return m.name order by m.name"}, {"query": "Can you recommend me a product with six 5\" screens?", "cypher": "match (:ENTITY{name:'5Inches'})<-[:Relationship{name:'Screen size'}]- (p) return p.name limit 6"}, {"query": "What are the labels for each of the works? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'Blue Elephant Nose Lake is a beautiful lake.'})-[:Relationship{name:'Written by'}]->(:ENTITY)<-[:Relationship{name:'Written by'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you tell us about the types of relationships within the two layers of the Xi Jinping document?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The political situation'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "I want to know the basic relationship between five Welsh athletes, Tovey Jason and no less than six?", "cypher": "match (n:ENTITY{name:'Tovey Jason'})-[*1..6]->(x) where x.name<>'Tovey Jason,Welsh athlete.' return distinct x.name limit 5"}, {"query": "Can you list any of the 85 inter-relationships that are involved in secondary schools?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'85Secondary school'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What does it mean to be angry and bitter?", "cypher": "match (:ENTITY{name:'The secret of anger'})-[:Relationship{name:'Explanation'}]->(n) return n.name"}, {"query": "I want to know about the relationship between the two layers of the word \"Jigsaw\" and \"Jigsaw\" in the work \"Jigsaw\".", "cypher": "match (n:ENTITY{name:'The flowers of the lotus flower are in the rose bush in the Jinsha.'})-[:Relationship*2]->(x) where x.name<>'The Word' return distinct x.name"}, {"query": "Can you name five works by a graphic designer who graduated from the University of Georgia?", "cypher": "match (n:ENTITY{name:'The University of Georgia Graphic Design Department (on leave from school)'})<-[:Relationship{name:'Graduated'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(h) return distinct h.name limit 5"}, {"query": "What is the shortest path between the two levels of Wenling Village and Yangling Village?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Wenling'})-[:Relationship*..2]-(b:ENTITY{name:'The village of Yum[Village under the administration of Kinro Town, Shaanxi Province, Shandong County]'})) return count(p)"}, {"query": "What is the name of the online store owned by Beijing-based Toshiba Hongtou Network Technology Co., Ltd.?", "cypher": "match (:ENTITY{name:'Beijing Jiaoxi Hongtu Networking and Technology Co., Ltd.'})<-[:Relationship{name:'Belonging'}]- (m) return m.name"}, {"query": "And what do you know about the characteristics of spy films?", "cypher": "match (:ENTITY{name:'Spy film'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Features'}]->(n) return distinct n.name"}, {"query": "I forgot the CAS number of 4-boc-2-methyl acetate again, please tell me again, thank you.", "cypher": "match(:ENTITY{name:'4-boc-2-Methyl chloride'})-[:Relationship{name:'CASThe number of the log'}]-> (q) return q.name"}, {"query": "Do you know what kind of company is Beijing Nanjing Village Software Limited?", "cypher": "match(:ENTITY{name:'The company is based in Beijing.'})-[:Relationship{name:'The nature of the company'}]-> (m) return m.name"}, {"query": "What chemical is YLZ348?", "cypher": "match (n:ENTITY{name:'YLZ348'})<-[:Relationship{name:'Product number'}]- (m) return m.name"}, {"query": "Find out what chemical is dangerously described as 2149 mg/kg (oral rat)", "cypher": "match (:ENTITY{name:'2149 mg/kg (Mouse whispering)'})<-[:Relationship{name:'The danger described'}]- (n) return n.name"}, {"query": "Which school won the second prize of the Ministry of Education in 2009 for its data collection platform for the development of high-level talent?", "cypher": "match (:ENTITY{name:'2009Year of birth Data collection platform for high-level talent The results won the second prize of the Ministry of Education'}) --(m) return distinct m.name"}, {"query": "The Tang Dynasty Shui-Tzu is a literature of which dynasty?", "cypher": "match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Published'}]->(n) return n.name as name union all match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "What other achievements have been made by the Chinese who have been awarded the title of Hero of the Fighter Carrier Pilot?", "cypher": "match (m:ENTITY{name:'Chinese'}) <- [:Relationship{name:'Ethnicity'}]- ((q),(q) - [:Relationship{name:'Major achievements'}]->(h) where h.name <> 'HonoredHeroes of the aircraft carrier fighter pilotHonorary title' return distinct h.name limit 3", "error": "Invalid input '(': expected \":\" or an identifier (line 1, column 81 (offset: 80))\n\"PROFILE match (m:ENTITY{name:'Chinese'}) <- [:Relationship{name:'Ethnicity'}]- ((q),(q) - [:Relationship{name:'Major achievements'}]->(h) where h.name <> 'HonoredHeroes of the aircraft carrier fighter pilotHonorary title' return distinct h.name limit 3\"\n                                                                                 ^"}, {"query": "Can you tell me the name of the other person who is in the building?", "cypher": "match (:ENTITY{name:'The Big Wind'})<-[:Relationship{name:'Name of the drug'}]-(x)-[:Relationship{name:'Other names'}]->(n) return distinct n.name"}, {"query": "Do you know what nutrients are in the rice cake?", "cypher": "match (:ENTITY{name:'Dried mushrooms'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The main nutrients'}]->(n) return distinct n.name"}, {"query": "Please help me find two books for $35.00 and tell me what category they belong to.", "cypher": "match (:ENTITY{name:'35.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Tag{name:'The label'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "What are the three professions of people born on May 18, 1935?", "cypher": "match (:ENTITY{name:'1935.5.18'})<-[:Relationship{name:'Date of birth'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 3"}, {"query": "Besides being in Xiamen, can you tell me five things you know about the two levels of the Art Deco Village?", "cypher": "match (:ENTITY{name:'The Aesthetic Village'})-[:Relationship*1..2]->(p) where p.name <> 'The city of Xiamen, Fujian Province' return p.name limit 5"}, {"query": "The city of the same name, which has an artistic version of the city of Yangon, is a city of extraordinary significance for the people of Yangon.", "cypher": "match (:ENTITY{name:'The artistic version of the film is a tribute to the scholarship of the author.'})<-[:Relationship{name:'Meaning'}]-(x)-[:Relationship{name:'City of origin'}]->(m) return distinct m.name"}, {"query": "I want you to tell me all the relationship names that the three layers of the cabinet cameron contain, please.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Chinese'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Can you name the three key features of this book on the psychology of training 0-3 year old babies in intellectual enlightenment?", "cypher": "match (:ENTITY{name:'0-3The first step is to train the child in the use of the Internet.'})-[:Tag{name:'The label'}]-> (p) with p order by p.name where p.name <> 'Psychology books' return p.name limit 3"}, {"query": "I've heard that many drugs are prescription drugs, but is this 1-methyl-4-methacrylate a prescription drug?", "cypher": "match(:ENTITY{name:'1-The base-4-The methane'})-[:Relationship{name:'Is it a prescription?'}]-> (m) return m.name"}, {"query": "The problem is that the next iteration of the theme is the second volume of Lin Wen's poetry, which contains information about the two-tier relationship.", "cypher": "match (n:ENTITY{name:'The second volume of the Tibetan poetry'})-[:Relationship*1..2]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "Do you know any Japanese teachers?", "cypher": "match (p:ENTITY{name:'Japanese'})<--(x)-->(q:ENTITY{name:'Teacher'}) return x.name"}, {"query": "What are the benefits of lilac shark fin soup?", "cypher": "match(:ENTITY{name:'The lily shark'})-[:Relationship{name:'Effectiveness'}]-> (n) return n.name"}, {"query": "Where is the host of Zero Evening News?", "cypher": "match (:ENTITY{name:'The evening news'})-[:Relationship{name:'Hosted'}]->(n) return n.name as name union all match (:ENTITY{name:'The evening news'})-[:Relationship{name:'Pricing'}]->(m) return m.name as name"}, {"query": "Who knows what Fan Zhiying does for a living?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Professional life'}]->(x) return distinct p.name"}, {"query": "Do you know how many general agents have performed for Barley Network and China Online Ticketing?", "cypher": "match (:ENTITY{name:'Barley net China online ticketing'})<-[:Relationship{name:'The General'}]- (h) return h.name limit 3"}, {"query": "Can you tell me about the current principal of Yang Yong's school and any other famous alumni?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Current headmaster'}]-(h)-[:Relationship{name:'Famous alumni'}]->(p) return p.name order by p.name limit 5"}, {"query": "Do you know what chemical has a molecular weight of 223.25? Can you tell me five?", "cypher": "match (:ENTITY{name:'223.25'})<-[:Relationship{name:'Molecular weight'}]- (p) return p.name limit 5"}, {"query": "You know, the Chinese are cooking.", "cypher": "match (:ENTITY{name:'The School of Law'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 1"}, {"query": "Please describe the three main departments of the schools belonging to the General Government Higher Professional Schools.", "cypher": "match (:ENTITY{name:'Publicly funded general higher education'})<-[:Relationship{name:'Category'}]-(q)-[:Relationship{name:'Main Faculty'}]->(x) return x.name skip 1 limit 3"}, {"query": "Do you know what happened on April 16, 2015?", "cypher": "match (:ENTITY{name:'2015.04.16'})<-[:Relationship{name:'The time'}]- (h) return h.name"}, {"query": "Can you put together a report on the number of companies you founded in 2008?", "cypher": "match (p:ENTITY{time:'2008'}) return count(p)"}, {"query": "Do you know what the three levels of the relationship are in Tiantai County, east of Zhejiang Province?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Tiantai County in eastern Zhejiang Province'}) UNWIND relationships(path) AS rel return distinct rel.name limit 2"}, {"query": "Do you know what Alexander Gottlieb Tom Carton's main achievement was?", "cypher": "match (:ENTITY{name:'The name of the city; The city of Gottlieb Tom Carton'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'Major achievements'}]->(n) return distinct n.name"}, {"query": "Can you tell me who's representative work is the Blue Sky?", "cypher": "match (x:ENTITY{name:'The sky is blue'})<-[:Relationship{name:'Representative works'}]- (p) return  distinct p.name"}, {"query": "What else do you know about the term \"Chen-Tsu-Tsu\" in the Internet?", "cypher": "match (n:ENTITY{name:'The old body'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Explanation'}]->(x) where x.name <> 'Internet slang' return distinct x.name limit 5"}, {"query": "The publication also has a story called \"1DVDROM\" about the flaming ninja?", "cypher": "match (:ENTITY{name:'(1DVDROM)Fire Ninjas are spreading'})-[:Tag{name:'The label'}]-> (h) with h order by h.name where h.name <> 'Published' return h.name"}, {"query": "Can you name 6 chemicals with a molecular weight of 180.21?", "cypher": "match (:ENTITY{name:'180.21'})<-[:Relationship{name:'Molecular weight'}]- (q) return q.name limit 6"}, {"query": "Which one of the cameras is supervised by Satoshi Shinkai?", "cypher": "match (:ENTITY{name:'Sato is a good man.'})<-[:Relationship{name:'Monitoring'}]-(n)-[:Relationship{name:'The film was released on DVD.'}]->(m) return distinct m.name limit 1"}, {"query": "What is the shortest relationship path between the two layers of hurricane downpour and hurricane storm?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Hurricane and heavy rain'})-[:Relationship*..2]-(b:ENTITY{name:'Hurricane and heavy rain'})) return count(p)"}, {"query": "Tell me about the person who is 5 times the size of the river.", "cypher": "match (n:ENTITY{name:'The first one'})-[*]->(x) where x.name<>'Characters' return distinct x.name limit 5"}, {"query": "Tell me about this person who graduated from the University of Hong Kong, what are his main achievements?", "cypher": "match (:ENTITY{name:'The University of Hong Kong'})<-[:Relationship{name:'Graduated'}]-(p)-[:Relationship{name:'Major achievements'}]->(q) return q.name skip 2 limit 3"}, {"query": "Can you tell me about the five relationship names within the three layers that make up the Natural Village?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Natural Village'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "What is the shortest path to the design of the electronic filter and the introduction of electronic processes within the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Electronic filter design'})-[*..2]-(b:ENTITY{name:'The introduction of electronics'})) return count(p)"}, {"query": "How tall is Yang Hisheng?", "cypher": "match (:ENTITY{name:'The Good News'})-[:Relationship{name:'Height'}]-> (m) return m.name"}, {"query": "Can you list the relationships that are covered by the Suzhou Ceremonial Services Limited within the two levels?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The following is a list of the main events in the year of the festival:'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you list the five interlayered relationships that are involved in the three types of anaphylactic rhinitis?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The most common cause of this is inflammation of the nose.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Can you tell me about the type of relationship involved in the 4th floor Neco Tree Fountain?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The Fountain of the Ko Tree'}) UNWIND relationships(path) AS rel RETURN rel.name limit 1"}, {"query": "The Yellow Group is a cooking group?", "cypher": "match (:ENTITY{name:'Yellow-bellied parrots'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Professional life'}]->(x) return distinct q.name"}, {"query": "The book is a price you know?", "cypher": "match (:ENTITY{name:'Hand-painted advertising footage'})<-[:Relationship{name:'Title'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "Please list the information of the members of the Shinkansen Customs Group.", "cypher": "match (:ENTITY{name:'Member of the Shinkansen Customs Party'})--(m) return  distinct m.name"}, {"query": "Can you recommend a producer who is a producer of UIG Entertainment's TV series?", "cypher": "match (:ENTITY{name:'UIG Entertainment'})<-[:Relationship{name:'Producer'}]- (m) return m.name"}, {"query": "The national 11315, which we use all the time, was launched in what year?", "cypher": "match(:ENTITY{name:'11315The national signaling system'})-[:Relationship{name:'Started on'}]-> (m) return m.name"}, {"query": "Can you give me four pieces of information about the five-tier relationship of selling code?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The sale code'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "What are Tonon's major achievements?", "cypher": "match (:ENTITY{name:'Tonon'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name limit 1"}, {"query": "Can you share with me the relationship between the three layers of Chinese medicine? Can you give me 5?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Chinese medical dictionary'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "What is the shortest path of the three layers of the 2010 Chinese Pharmaceutical Simulation and Analysis of High Power Transverse Current CO2 Laser and its Applications?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'High-power crossflowCO2Lasers and their applications'})-[*..3]-(b:ENTITY{name:'2010Chinese pharmaceutical simulation and analysis'})) return count(p)"}, {"query": "Which schools are identical to the East Lake School in Yue Lake County and have the same labels? Find me the number of labels from big to small.", "cypher": "match (n:ENTITY{name:'East Lake School, Yue Pike County'})-[:Relationship{name:'Type of school'}]->(:ENTITY)<-[:Relationship{name:'Type of school'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you tell me what this Chinese man does for a living?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(x)-[:Relationship{name:'Professional life'}]->(m) return m.name skip 3 limit 3"}, {"query": "How many companies are there that are right in the deep?", "cypher": "match (p:ENTITY{location:'The Shenzhen'}) return count(p)"}, {"query": "What is the history of the Maghreb culture and what are its main findings?", "cypher": "match (:ENTITY{name:'The culture of the Magnetic Mountains'})-[:Relationship{name:'The Age'}]->(n) return n.name as name union all match (:ENTITY{name:'The culture of the Magnetic Mountains'})-[:Relationship{name:'Major discoveries1'}]->(m) return m.name as name union all match (:ENTITY{name:'The culture of the Magnetic Mountains'})-[:Relationship{name:'Major discoveries2'}]->(r) return r.name as name"}, {"query": "What is the name of the person who is a professional and what are their individual labels? Please list them in order of number of labels, from big to small.", "cypher": "match (n:ENTITY{name:'The first was the death of the first.'})-[:Relationship{name:'Professional life'}]->(:ENTITY)<-[:Relationship{name:'Professional life'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The Korean film starring Liu Bei, Two Men, what kind of movie is it, good looking?", "cypher": "match(:ENTITY{name:'Two men[South Korean film starring Wu Hao]'})-[:Relationship{name:'Type of'}]-> (q) return q.name"}, {"query": "Help me find three other representative works of Liu Jing, other than the Wolf of War.", "cypher": "match (n:ENTITY{name:'The Chinese[Mainland Chinese actor, director]'}) - [:Relationship{name:'Representative works'}]->(h) with h order by h.name where h.name <> 'The Wolf' and h.name <> 'The WolfII' return h.name limit 3"}, {"query": "What is the boiling point and boiling point of the extract?", "cypher": "match (:ENTITY{name:'The Strange'})-[:Relationship{name:'The point of no return'}]->(n) return n.name as name union all match (:ENTITY{name:'The Strange'})-[:Relationship{name:'Boiling point'}]->(m) return m.name as name"}, {"query": "How about the shortest description of the Emanuela Villa Studio Hotel?", "cypher": "match (:ENTITY{name:'The hotel is located in the village of Emanuela.'})--(h) return  min(h.name)"}, {"query": "What chemical is CAS number 107-15-3?", "cypher": "match (:ENTITY{name:'107-15-3'})<-[:Relationship{name:'CASThe number of the log'}]- (x) return x.name"}, {"query": "Do you know what individual awards the members of the University of Windsor's Student Debate Season Team have won?", "cypher": "match (:ENTITY{name:'The University of Wenzhou's student debating season team'})<-[:Relationship{name:'2014Year of birth10The Moon'}]-(p),(p)-[:Relationship{name:'Individual awards'}]->(h) return distinct h.name limit 1", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 56 (offset: 55))\n\"PROFILE match (:ENTITY{name:'The University of Wenzhou's student debating season team'})<-[:Relationship{name:'2014Year of birth10The Moon'}]-(p),(p)-[:Relationship{name:'Individual awards'}]->(h) return distinct h.name limit 1\"\n                                                        ^"}, {"query": "Can you tell us about the type of relationship that Taiwanese tea is involved in in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Taiwanese Chilli Tea'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "I would like to know what kind of agencies are there in the rural area of Yangwon County?", "cypher": "match (:ENTITY{name:'Farmers and Ranchers in Yangwon County'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'In-house agency'}]->(x) return distinct x.name"}, {"query": "I would like to know the template for the cDNA library can you tell me?", "cypher": "match(:ENTITY{name:'cDNAThe library'})-[:Relationship{name:'Template'}]-> (n) return n.name"}, {"query": "How many square meters of exhibition space will China Electronics Expo 2012 have?", "cypher": "match(:ENTITY{name:'2012China electronics exhibition'})-[:Relationship{name:'Area of the meeting'}]-> (m) return m.name"}, {"query": "What books are published by the publisher?", "cypher": "match (:ENTITY{name:'The publisher'})<-[:Relationship{name:'Publishing house'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 1"}, {"query": "What type of weapons are used in the 10m mobile shooting events?", "cypher": "match(:ENTITY{name:'10The rice is moving'})-[:Relationship{name:'Use of firearms'}]-> (h) return h.name"}, {"query": "What theory did Carlson propose?", "cypher": "match (:ENTITY{name:'The first one is Carlson.'})<-[:Relationship{name:'Characters'}]- (n) return n.name"}, {"query": "What are the relationships within the three layers of the Hangzhou Busan School of Engineering? Please tell me the names of these relationships.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Hangzhou Busan Technical School'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Can you find me three economics books published by Shanghai Education Publishing?", "cypher": "match (:ENTITY{name:'Shanghai Education Publishing'})<-[:Relationship{name:'Publishing house'}]-(m), (m)-[:Relationship{name:'The dress'}]->(n) where n.name='Fully equipped' return m.name limit 3"}, {"query": "The following table shows the number of lawyers who are assigned to a judicial office, and what labels they have.", "cypher": "match (n:ENTITY{name:'Beijing City Law Firm'})-[:Relationship{name:'The Judiciary'}]->(:ENTITY)<-[:Relationship{name:'The Judiciary'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Do you know who owns the iconic work of the owner of the statue?", "cypher": "match (:ENTITY{name:'The owner of the potato'})<-[:Relationship{name:'Representative works'}]- (h) return  distinct h.name"}, {"query": "What are Wen-won's main achievements?", "cypher": "match (:ENTITY{name:'The Weng'})-[:Relationship{name:'Major achievements'}]->(m) return distinct m.name"}, {"query": "What is the shortest path between the two levels of the relationship between Dazhou Steel Group Limited and Sichuan Thunder Technology Holdings Limited?", "cypher": "match p=shortestpath((a:ENTITY{name:'Dazhou Steel Group Limited of Sichuan Province'})-[*..2]-(b:ENTITY{name:'Sichuan Thunderbolt Technology and Shares Limited'})) return p"}, {"query": "And I'm going to use 2-Zet in a chemical experiment, and I want to know what the point of the reaction is.", "cypher": "match(:ENTITY{name:'2-The Tsunami'})-[:Relationship{name:'The point of no return'}]-> (x) return x.name"}, {"query": "There are several Chinese aliases for 1-shotin-oxygen-ki-ki, can you list them?", "cypher": "match(:ENTITY{name:'1-The oxygen is hydrogen peroxide.'})-[:Relationship{name:'Chinese surname'}]-> (m) return m.name"}, {"query": "I wonder if there are any returnees in Shenzhen, Henan?", "cypher": "match (p:ENTITY{name:'The Returned'})<--(x)-->(q:ENTITY{name:'The Shenanigans'}) return x.name"}, {"query": "Do you know the product number of 1-acetaminophen that we talk about every day?", "cypher": "match(:ENTITY{name:'1-Acetaminophen'})-[:Relationship{name:'Product number'}]-> (h) return h.name"}, {"query": "Can you please show me the five categories of the Twin Leaf Plant Outline?", "cypher": "match (:ENTITY{name:'The twins'})<--(m), (m)-[:Relationship{name:'The door'}]->(n) return distinct n.name limit 5"}, {"query": "Can you name anyone who has the voice of 5 of the 18 year old characters?", "cypher": "match (:ENTITY{name:'18'})<-[:Relationship{name:'Age of the child'}]-(q),(q)-[:Relationship{name:'Sound'}]->(n) return n.name skip 2 limit 5"}, {"query": "What chemical is called butane-1-sulfonic acid?", "cypher": "match (:ENTITY{name:'Butane-1-sulfonic acid'})<-[:Relationship{name:'English aliases'}]- (n) return distinct n.name"}, {"query": "I'm going to introduce you to David Barker.", "cypher": "match (:ENTITY{name:'David Barker'})--(n) return n.name skip 3"}, {"query": "I wonder what Han Qingyuan does for a living?", "cypher": "match (:ENTITY{name:'The video was posted on the official Twitter account of the Chinese government.'})<-[:Describe{name:'Describe'}]-(n)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name"}, {"query": "The number of ships in the country is 46 ships, which model?", "cypher": "match (:ENTITY{name:'46'})<-[:Relationship{name:'Number of'}]- (n) return n.name"}, {"query": "Can you tell me about the three layers of relationships that olive oil is involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Olive'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Please tell me the name of the Hong Kong director, screenwriter, and screenwriter who has written numerous works including The One-Man Wrecking Crew, The Great Wizard of Oz, The Painting of the Wrecking Crew, The King of the Wrecking Crew, The King of the Wrecking Crew, The Wind Turning, The Wrecking Crew, The Three Kingdoms of the Dragon, The Dragon Taking Off the Shield, and the director's maiden role as the Wrecking Crew.", "cypher": "match (:ENTITY{name:'Hong Kong director, screenwriter, with numerous screenplays including The One with the Dragon, The Great Magician, The Painting of the Skin, The King of the Gun, The Wind Turning, The Sands of the Wind, The Dress of the Sun, The Dragon Taking Off the Shield, The Three Kingdoms of the Dragon, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Girl Who Stole the Carriage, The Carriage, The Girl Who Stole the Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Carriage, The Car, The Car, The Carriage, The Carriage, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The Car, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The, The'})<-[:Describe{name:'Describe'}]-(x)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name"}, {"query": "Please tell me the name of the relationship in the three layers that Yu Shigawa is involved in.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Yuki Shigawa'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "List below the information in the three-tiered relationship of the National Women's and Children's Health Information Training Program.", "cypher": "match (n:ENTITY{name:'National information training on health policy for mothers and children'})-[:Relationship*1..3]->(x) where x.name<>'Social activities' return distinct x.name"}, {"query": "Do you know about the Sun Yat-sen's military headquarters? What other information is there besides the fact that it is located outside Guangzhou, please find the other 5 information in the 2nd layer", "cypher": "match (:ENTITY{name:'The Sun Yat-sen Warlord'})-[*1..2]->(p) where p.name <> 'The city of Guangzhou' return  p.name limit 5"}, {"query": "What was Ma'ru'een's faith? What was her profession? What year did she die?", "cypher": "match (:ENTITY{name:'The Mauilian'})-[:Relationship{name:'Faith'}]->(n) return n.name as name union all match (:ENTITY{name:'The Mauilian'})-[:Relationship{name:'Professional life'}]->(m) return m.name as name union all match (:ENTITY{name:'The Mauilian'})-[:Relationship{name:'Date of death'}]->(r) return r.name as name"}, {"query": "What is the shortest relationship between the Vickers and the Pioneer within the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Vickers probe'})-[:Relationship*..2]-(b:ENTITY{name:'The Pioneer probe'})) return count(p)"}, {"query": "How to spell ten Chinese words?", "cypher": "match (:ENTITY{name:'Chinese dictionary'})<-[:Relationship{name:'Attributes'}]-(m)-[:Relationship{name:'Spelling'}]->(q) return q.name order by q.name limit 10"}, {"query": "Please help me find a job as a host, singer, actor, writer, please.", "cypher": "match (:ENTITY{name:'Host, singer, actor, writer'})<-[:Relationship{name:'Professional life'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 1"}, {"query": "His English name is XIDANStation, do you know what it is?", "cypher": "match (:ENTITY{name:'XIDANStation'})<-[:Relationship{name:'Foreign language name'}]-(m),(m)-[:Relationship{name:'Operating units'}]->(q) return distinct q.name"}, {"query": "Can you tell me what the relationship between cities and culture is on these two levels?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Cities and Culture'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you tell us about the type of relationship involved in grilling turkey in 5 layers?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Roasted turkey'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "You don't understand what the coverage of Green Boat Primary School in the three levels has to do with it?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Primary School Green Boat'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Do you know who is the manufacturer of this 2007 Kosta 4.0T diesel luxury 20s that we are looking at?", "cypher": "match(:ENTITY{name:'2007The Costco 4.0TDiesel luxury version 20The seat'})-[:Relationship{name:'Manufacturers'}]-> (h) return h.name"}, {"query": "Do you know which one was a 2.6 magnitude earthquake?", "cypher": "match (m:ENTITY{name:'2.6'})<-[:Relationship{name:'Levels'}]- (x) return x.name"}, {"query": "Who won the title of best male player at the 2013 East Asian Cup in South Korea?", "cypher": "match(:ENTITY{name:'2013South Korea East Asian Cup'})-[:Relationship{name:'Best male player'}]-> (h) return h.name"}, {"query": "Did you know that the coal mine accident in Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, on on on on on on on on on on on on on on on on on on on on on on on on on on on on on on on a Sunnyside, is a Sunnyside, is a Sunnyside, Sunnyside, is a Sunnyside, Sunnyside, is a Sunnyside, Sunnyside, is a Sunnyside, on a Sunnyside is a Sunnyside is a Sunnyside is a Sunnyside is a Sunnyside is a Sunnyside is a Sunny.", "cypher": "match (:ENTITY{name:'Sun Zhao Township Sun Zhao Coal Mine in Shincheng County'})<-[:Relationship{name:'Location'}]- (p) return distinct p.name"}, {"query": "Can you list any of the 3rd level labels that are related to Left Eye Detective? 5 can you?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Left-eyed detective'}) return distinct n.name limit 5"}, {"query": "Can you tell me five things you know about the second layer of the national news, other than the newspaper that belongs to the Qing Dynasty?", "cypher": "match (:ENTITY{name:'The National News'})-[:Relationship*1..2]->(p) where p.name <> 'The newspaper of the Shinto Reformed' return p.name limit 5"}, {"query": "Do you know which weapons are the 56-1, 56-2, 81 classes?", "cypher": "match (p:ENTITY{name:'56-1The first is the56-2The first is the81The formula'})<-[:Relationship{name:'Sub-class'}]- (m) return distinct m.name"}, {"query": "Which game was originally called 1500 DS Spirits Vol.2 Shogi?", "cypher": "match (:ENTITY{name:'1500 DS Spirits Vol.2 Shogi'})<-[:Relationship{name:'Original name of the game'}]- (h) return h.name"}, {"query": "Do you know the date of birth of football star Lundstram?", "cypher": "match(:ENTITY{name:'The first is the Lundstrand.'})-[:Relationship{name:'Date of birth'}]-> (h) return h.name"}, {"query": "What chemical is CAS number 119171-18-5?", "cypher": "match (:ENTITY{name:'119171-18-5'})<-[:Relationship{name:'CASThe number'}]- (h) return h.name"}, {"query": "Do you know his 5 main achievements? He is Park Jung-hyun, No. 1 in the tree, North Korean Qin Shan-do, also known as Kochi Sung-young.", "cypher": "match (:ENTITY{name:'Park Jong-hyun, also known as Kim Jong-hyun, is a North Korean singer.'})<-[:Describe{name:'Describe'}]-(x),(x)-[:Relationship{name:'Major achievements'}]->(q) return q.name order by q.name limit 5"}, {"query": "I'm wondering now what kind of relationships are involved in the Chinese Social Science Evaluation Center in the two layers?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Chinese Social Science Evaluation Center'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Do you know where the scope of application of cost classification management is?", "cypher": "match (:ENTITY{name:'The term \"cost classification management\" refers to the classification of costs according to their different nature.'})<-[:Describe{name:'Describe'}]-(x),(x)-[:Relationship{name:'Scope of application'}]->(q) return distinct q.name"}, {"query": "I need you to tell me about the types of relationships that are involved in Guangdong, focusing on the two layers.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Focused on Guangdong'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What chemical has a molar volume of 104 ((m3/mol) ?", "cypher": "match (:ENTITY{name:'104(This is a very good post.)m3/mol(This is a very good article.)'})<-[:Relationship{name:'The volume of the mole'}]- (p) return distinct p.name"}, {"query": "Please help me find out what kind of buildings are in the East Wing Gardens.", "cypher": "match (:ENTITY{name:'The East Wing'})-[:Relationship{name:'Type of building'}]-> (m) with m order by m.name return m.name"}, {"query": "Please list the schools and the primary schools that are of the same school type and what are their labels. Please list them in order of number of labels for each school.", "cypher": "match (n:ENTITY{name:'Primary School'})-[:Relationship{name:'Type of school'}]->(:ENTITY)<-[:Relationship{name:'Type of school'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Do you know which channel was chosen for the 1984 Central Television Spring Festival?", "cypher": "match(:ENTITY{name:'1984The annual Central TV Spring Festival party'})-[:Relationship{name:'Channel broadcast'}]-> (q) return q.name"}, {"query": "The project is a collaboration between the two artists, who have been working together since the beginning of the project.", "cypher": "match (n:ENTITY{name:'The next day, the monkey was seen fasting and was seen by the people.'})-[:Relationship*1..3]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "I need you to tell me about one type of relationship that is involved in Guangxi Baijian in the 2nd level, okay?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The city of Guangxi'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "What is the Chinese name of the China Initiative of Social Finance?", "cypher": "match (:ENTITY{name:'China Initiative of Social Finance'})<-[:Relationship{name:'Foreign language name'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "The first book of the series, The Book of the Dead, was published in the United States in the year 2000.", "cypher": "match (:ENTITY{name:'Guo Ru'})<-[:Relationship{name:'Other names'}]-(m)-[:Relationship{name:'Major works'}]->(q) return distinct m.name,q.name"}, {"query": "What are the main ingredients in lamb soup and what are the benefits of the supplement?", "cypher": "match (:ENTITY{name:'When the sheep is eaten'})-[:Relationship{name:'Main ingredients'}]->(n) return n.name as name union all match (:ENTITY{name:'When the sheep is eaten'})-[:Relationship{name:'Basic features'}]->(m) return m.name as name"}, {"query": "What is the shortest relationship path between the two levels of Tianjin Sports Academy Sports and Cultural Arts College and Tianjin Foreign Language College and Tianjin Foreign Affairs College?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'School of Sport and Cultural Arts at Tianjin Sports Academy'})-[:Relationship*..2]-(b:ENTITY{name:'Tianjin Foreign Language College and the School of Foreign Affairs'})) return count(p)"}, {"query": "Can you name four brands of medicinal marijuana from South Korea?", "cypher": "match (:ENTITY{name:'South Korea'})<-[:Relationship{name:'Originally'}]- (x) return x.name limit 4"}, {"query": "I need information about the work of Huang Junsuo's Chiang Kai-shek, which is not above two levels of relationship.", "cypher": "match (n:ENTITY{name:'The Queen of the Spring'})-[:Relationship*1..2]->(x) where x.name<>'The Left' return distinct x.name"}, {"query": "What kind of projects are supported by the Shanghai Conservatory of Music's Creative Committee?", "cypher": "match (p:ENTITY{name:'Special commission from the composition committee of the Shanghai Conservatory'})<-[:Relationship{name:'Project support'}]- (h) return h.name order by h.name"}, {"query": "Do you know the types of relationships that are involved in the three levels of the middle school in Ji County?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Three Secondary Schools in Ji County'}) UNWIND relationships(path) AS rel return rel.name limit 5"}, {"query": "Who are the directors and writers of the film in the city and outside?", "cypher": "match (:ENTITY{name:'In the city, outside the city[Ren Wen is starring in the TV series]'})-[:Relationship{name:'Director'}]->(n) return n.name as name union all match (:ENTITY{name:'In the city, outside the city[Ren Wen is starring in the TV series]'})-[:Relationship{name:'Writer'}]->(m) return m.name as name"}, {"query": "Check the calendar to see what day December 19, 1999 was on Sunday.", "cypher": "match(q:ENTITY{name:'1999Year of birth12The Moon19The Sun'})-[:Relationship{name:'The week'}]-> (p) return p.name"}, {"query": "Please tell me which works are by the same author as the Fourth and Fourth Quotations, and what labels are on each of them? Please list them in order of number of labels.", "cypher": "match (n:ENTITY{name:'The Second Book of Kings'})-[:Relationship{name:'Written by'}]->(:ENTITY)<-[:Relationship{name:'Written by'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "I wonder what plants are distributed in Taiwan and the middle provinces of China?", "cypher": "match (:ENTITY{name:'Taiwan and the Middle Provinces of China'})<-[:Relationship{name:'Distribution areas'}]- (h) return h.name"}, {"query": "How long is the barrel length of the 1880 mm rear-wheel drive 210 mm cannon in my army?", "cypher": "match(m:ENTITY{name:'1880The formula210mmThe back of the steel cannon'})-[:Relationship{name:'The Chief'}]-> (x) return x.name"}, {"query": "What chemical is EINECS number 204-438-5?", "cypher": "match (:ENTITY{name:'204-438-5'})<-[:Relationship{name:'EINECSThe number'}]- (h) return h.name"}, {"query": "What is the first dish in the world? What are the main ingredients?", "cypher": "match (:ENTITY{name:'The first meal of the day[Traditional name dishes]'})-[:Describe{name:'The label'}]->(n) return n.name as name union all match (:ENTITY{name:'The first meal of the day[Traditional name dishes]'})-[:Relationship{name:'Main ingredients'}]->(m) return m.name as name"}, {"query": "Please list 5 names of the relationships involved in the Zhejiang Family Center in the 3rd floor.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Zhejiang Teaching Center'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Which schools and what type of school is the Changdong College of the North China University of Technology?", "cypher": "match (n:ENTITY{name:'The University of North China'})-[:Relationship{name:'Type of school'}]->(:ENTITY)<-[:Relationship{name:'Type of school'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "I need to know 5 things about Bosnian and Herzegovinian footballer Vasil Velibor in the 4th level relationship?", "cypher": "match (n:ENTITY{name:'Vasilic Velibor'})-[*1..4]->(x) where x.name<>'Vasilic Velibor,The Bosnian-Hispanic footballer is also a football player.' return distinct x.name limit 5"}, {"query": "Can you tell me about the five types of relationships in the three layers that Cheneyel is involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Cheney'}) UNWIND relationships(path) AS rel return rel.name limit 5"}, {"query": "Who and what are the labels of each of them? Please show them in order of number of labels.", "cypher": "match (n:ENTITY{name:'Yellow fever'})-[:Relationship{name:'Professional life'}]->(:ENTITY)<-[:Relationship{name:'Professional life'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The Japanese are known for their Japanese-Japanese language, but they are also known for their Japanese-Japanese language.", "cypher": "match (:ENTITY{name:'Kyoto, Japan'})<-[:Relationship{name:'The Nation'}]-(m),(m)-[:Relationship{name:'Sound'}]->(h) where h.name <> 'The island must be beautiful' return distinct h.name limit 10"}, {"query": "Do you know what the theme of the 2011 Happy Girls' Concert in Beijing is?", "cypher": "match(:ENTITY{name:'2011The Chinese women's chorus in Beijing'})-[:Relationship{name:'The subject'}]-> (x) return x.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 51 (offset: 50))\n\"PROFILE match(:ENTITY{name:'2011The Chinese women's chorus in Beijing'})-[:Relationship{name:'The subject'}]-> (x) return x.name\"\n                                                   ^"}, {"query": "What is the shortest path of relationship between the asphyxiant and the inactivating agents in the 2 layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The asphyxiating agent'})-[:Relationship*..2]-(b:ENTITY{name:'The drug is called an anesthetic.'})) return count(p)"}, {"query": "3D Power Company, their company slogan, you know?", "cypher": "match (:ENTITY{name:'3DThe Power'})<-[:Relationship{name:'Company name'}]-(x),(x)-[:Relationship{name:'The company slogan'}]->(q) return distinct q.name"}, {"query": "I wonder who else is the main actor besides Ma Yun-Long and Chang Wei?", "cypher": "match (n:ENTITY{name:'It tastes good.'})-[:Relationship{name:'Starring'}]->(h) with h order by h.name where h.name <> 'The Ma Yun-Dong' and h.name <> 'Changwei' return h.name limit 3"}, {"query": "What are the main achievements of people born in Jiangsu Province?", "cypher": "match (:ENTITY{name:'Jiangsu Province'})<-[:Relationship{name:'Where I was born'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name limit 3"}, {"query": "What is the symbol for magnetic field strength? What is the unit?", "cypher": "match (:ENTITY{name:'Magnetic field strength'})-[:Relationship{name:'The symbol'}]->(n) return n.name as name union all match (:ENTITY{name:'Magnetic field strength'})-[:Relationship{name:'Unit'}]->(m) return m.name as name"}, {"query": "What are the health risks of long-term inhalation of industrial dust?", "cypher": "match (:ENTITY{name:'Long-term inhalation of productive dust (dust)'})<-[:Relationship{name:'Common causes'}]-(m), (m)-[:Relationship{name:'Common sites of disease'}]->(n) where n.name='The lungs' return distinct m.name"}, {"query": "Can you help me to find out about the Shanghai Yichang Pension?", "cypher": "match (:ENTITY{name:'Shanghai Yichang Senior Center'})-[*1..3]-(p) return p.name limit 10"}, {"query": "Can you please tell me which chemical has the EINECS registration number 000-000-0?", "cypher": "match (:ENTITY{name:'000-000-0'})<-[:Relationship{name:'EINECSThe number of the log'}]- (m) return m.name limit 389"}, {"query": "How to pick two school profiles in the 9th and 3rd level of Zizhar?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Secondary School No. 9 in Zizhar'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "Can you tell me about all the relationship types that are in the six layers of the Flying Dragon?", "cypher": "match path=(n)<-[:Relationship*6]-(p:ENTITY{name:'The Flying Dragon'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you help me to find out about the two famous white cloud caves in the mountains of Oahu?", "cypher": "match(:ENTITY{name:'The White Cloud Cave at Yosemite'})-[:Relationship{name:'Famous places'}]-> (n) return n.name limit 2"}, {"query": "I need to know 5 things about Seong-jo Jeong.", "cypher": "match (:ENTITY{name:'Seong-jo Jeong'})--(m) return  distinct m.name limit 5"}, {"query": "Do you know which zoos were built in 1959? Can you find five for me?", "cypher": "match (:ENTITY{name:'1959Year of birth'})<-[:Relationship{name:'The time of the brickwork'}]-(p)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "Find out what chemical has CAS number 147702-16-7?", "cypher": "match (:ENTITY{name:'147702-16-7'})<-[:Relationship{name:'CASThe number'}]- (n) return n.name"}, {"query": "I have a lot of pieces priced the same as my architectural tour, and they have different brick labels.", "cypher": "match (n:ENTITY{name:'My journey to building a harmonious mother'})-[:Relationship{name:'Pricing'}]->(:ENTITY)<-[:Relationship{name:'Pricing'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What is the same as the eleven nine-year-old works of the Moon Ballad, and what are their labels? List them in order of number of labels for me.", "cypher": "match (n:ENTITY{name:'The Moon Moon is a string of 11 beads.9'})-[:Relationship{name:'The year'}]->(:ENTITY)<-[:Relationship{name:'The year'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The book is a work of Orthodox history, how many words are there in it?", "cypher": "match(:ENTITY{name:'The history of the Orthodox Church'})-[:Relationship{name:'The word count'}]-> (m) return m.name"}, {"query": "What kind of event do you like to watch the 1987 NBA All-Star Game?", "cypher": "match(:ENTITY{name:'1987Year of birthnbaThe All-Star game'})-[:Relationship{name:'Type of event'}]-> (n) return n.name"}, {"query": "Help me find five species of plants.", "cypher": "match (:ENTITY{name:'The Coconut TreeSterculiaceae(This is a very good article.)'})<-[:Relationship{name:'The Department'}]-(m) return distinct m.name limit 5"}, {"query": "Which exhibitions are held in the National Agricultural Exhibition Hall? Can you name eight?", "cypher": "match (:ENTITY{name:'The National Agricultural Gallery'})<-[:Relationship{name:'The exhibition venue'}]- (q) return q.name limit 8"}, {"query": "What is the shortest distance between the South China Vocational College and the Hunan Transportation Vocational Technical College on the second floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'South China Vocational College'})-[:Relationship*..2]-(b:ENTITY{name:'Hunan Transportation Vocational College and Technology'})) return count(p)"}, {"query": "What are the famous sights in Hanyang District? Where are they located?", "cypher": "match (:ENTITY{name:'The Hanyang District'})-[:Relationship{name:'Famous places'}]->(n) return n.name as name union all match (:ENTITY{name:'The Hanyang District'})-[:Relationship{name:'Geographical location'}]->(m) return m.name as name"}, {"query": "Can you tell me what kind of relationship is covered in the middle of the 5 layers of melon?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The Middle of the Night'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Give me three antibiotics and describe them.", "cypher": "match (:ENTITY{name:'Antibiotics'})<-[:Relationship*]-(m), (m)-[:Describe{name:'Describe'}]->(n) return  distinct m.name,n.name limit 3"}, {"query": "The exhibition is a great opportunity to learn about the benefits of outdoor products, outdoor equipment, outdoor industry and more.", "cypher": "match (:ENTITY{name:'Outdoor products, outdoor equipment, outdoor industry and more'})<-[:Relationship{name:'The main'}]-(x)-[:Relationship{name:'The advantages of the exhibition'}]->(h) return distinct h.name"}, {"query": "Who is it that brings death, and you cannot repay it?", "cypher": "match (:ENTITY{name:'Laughing is not worth dying for.'})<-[:Relationship{name:'Title'}]-(x),(x)-[:Relationship{name:'Written by'}]->(q) return distinct q.name"}, {"query": "What are the three main awards received by the Anhui Province Teaching Center in addition to the National Priority Secondary Vocational School and the Anhui Province Model School for the Educational and Moral Education of Minors?", "cypher": "match (n:ENTITY{name:'The Teaching Center of Anhui Province'})-[:Relationship{name:'Main awards'}]->(h) where h.name <> 'National focused secondary vocational schools' and h.name <> 'An Anhui Province School of Moral Education for Minors' return distinct h.name limit 3"}, {"query": "Do you know what tea is made with this process?", "cypher": "match (:ENTITY{name:'Half-puddled'})<-[:Relationship{name:'The process'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "The following is a list of the topics covered in the book:", "cypher": "match (n:ENTITY{name:'The Ancient Grave'})-[:Relationship*1..2]->(x) where x.name<>'North and South' return distinct x.name"}, {"query": "Can you list the 10 main achievements of Franciscus Vieta?", "cypher": "match (:ENTITY{name:'Franciscus Vieta'})<-[:Relationship{name:'Foreign language name'}]-(m)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name limit 10"}, {"query": "Did you know that Pamplona (Spain) usually plays with his left or right foot?", "cypher": "match (:ENTITY{name:'The Pamplona(Spain)'})<-[:Relationship{name:'Where I was born'}]-(p)-[:Relationship{name:'The usual foot'}]->(x) return distinct p.name"}, {"query": "Can you tell me what the ghost of a pig is?", "cypher": "match (:ENTITY{name:'The pigs.'})--(q) return q.name skip 1"}, {"query": "I'm a big fan of the idea of having a four-tier relationship with my five sisters.", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'My sister is stubborn.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Can you tell me about the three professions of this politician?", "cypher": "match (:ENTITY{name:'Political figures'})<-[:Tag{name:'The label'}]-(h)-[:Relationship{name:'Professional life'}]->(q) return q.name skip 2 limit 3"}, {"query": "Please tell me about the types of relationships that are involved in the three levels of Hubei Daji Senior Secondary School.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'High School in Hubei'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "Can you tell me when the book will be published?", "cypher": "match(:ENTITY{name:'The Fairy Goddess'})-[:Relationship{name:'Published'}]-> (p) return p.name"}, {"query": "Can you list the names of the 10 relationships in the 2 layers that are not the same?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The horse is not the same.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 10"}, {"query": "Do you know where the restaurant 1F has a desire kitchen coming?", "cypher": "match (:ENTITY{name:'The Desire Kitchen'})<-[:Relationship{name:'1F'}]- (p) return p.name"}, {"query": "Name the main award received by a school in the East District of the city of Yerevan.", "cypher": "match (:ENTITY{name:'The experimental middle school in the eastern district of Imersa'})-[:Relationship{name:'Main awards'}]-> (q) return  distinct q.name limit 1"}, {"query": "What is the price of books by Thich Nhat Hanh?", "cypher": "match (:ENTITY{name:'What is the meaning of this?'})<-[:Relationship{name:'Written by'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "Which industries have won the National Award for Technological Invention 1 and the National Award for Scientific and Technological Progress 2?", "cypher": "match (:ENTITY{name:'National Prize for technological invention1National Prize for scientific and technological progress2The item'})<-[:Relationship{name:'Major achievements'}]-(n)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name"}, {"query": "Where is the scope of application of round angle feed?", "cypher": "match (:ENTITY{name:'Rounded feed'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Scope of application'}]->(h) return distinct h.name limit 1"}, {"query": "What is the meaning of the Pearl of Great Price?", "cypher": "match (:ENTITY{name:'The Pearl of the Sea[The Word]'})-[:Tag{name:'The label'}]->(n) return n.name"}, {"query": "What is the shortest path between the 2nd floor of the building of Baolide Steel Pipe Co., Ltd. in Zhejiang and the 2nd floor of the building of the building of Ningbo Zhijin Machinery Co., Ltd.?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Polydor Steel Pipe Co., Ltd. of the city of Yangzhou'})-[*..2]-(b:ENTITY{name:'Ningbo City Zinc Machinery Co., Ltd.'})) return count(p)"}, {"query": "What books and what labels are there for each book? List them from most to least according to the number of labels for each book.", "cypher": "match (n:ENTITY{name:'The Bean-Old Man'})-[:Relationship{name:'Publishing house'}]->(:ENTITY)<-[:Relationship{name:'Publishing house'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The book is a collection of poems written by the poet and poetess, who is also a writer.", "cypher": "match (n:ENTITY{name:'The first is the book of Proverbs.'})-[:Relationship*1..3]->(x) where x.name<>'The channel' return distinct x.name"}, {"query": "The film's introduction mentions which people are starring in The Wonderful Night of the Museum 3?", "cypher": "match(:ENTITY{name:'The Wonderful Night at the Museum3'})-[:Relationship{name:'Starring'}]-> (q) return q.name"}, {"query": "Can you name five of the main achievements of this man?", "cypher": "match (:ENTITY{name:'1960Year of birth'})<-[:Relationship{name:'Date of birth'}]-(m)-[:Relationship{name:'Major achievements'}]->(n) return n.name order by n.name limit 5"}, {"query": "Do you know about the Battle of Ming Dynasty? What other information besides what happened in Shanxi Dynasty, please find the other 7 information in layer 2", "cypher": "match (:ENTITY{name:'The Battle of Ming Dynasty'})-[:Relationship*1..2]->(p) where p.name <> 'The Sansi District' return  p.name limit 7"}, {"query": "Can you tell me what the relationship is between the two layers of productive consumption demand?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Productive consumption needs'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "The .NET model has a bunch of tags, tell me no more than 5?", "cypher": "match (:ENTITY{name:'.NETThe pattern'})-[:Tag{name:'The label'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "What is the English name of the Great Basin National Park?", "cypher": "match (:ENTITY{name:'The Great Basin National Park'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Foreign language name'}]->(n) return distinct n.name"}, {"query": "Can you find information on the 5 levels of relationships related to the Fog Lock Longshan Temple in Wu Hongqing?", "cypher": "match (n:ENTITY{name:'The Temple of the Dragon'})-[*1..5]->(x) where x.name<>'The Chinese' return distinct x.name"}, {"query": "The following is a selection of the Chinese medical classics by Zhang Yuxiang: Information on the two-tier relationship between theories of typhoid fever.", "cypher": "match (n:ENTITY{name:'Selected titles: The cold theory'})-[:Relationship*1..2]->(x) where x.name<>'Zhang Yue' return distinct x.name"}, {"query": "Can you tell me about the types of relationships within the three layers involved in the Chinese Emperor?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The first emperor of China'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you tell me about the five types of relationships in the four layers of the hierarchy?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'by Ijin'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "What is the content of copper (Cu) in a material like 1370 tons of alloy?", "cypher": "match(:ENTITY{name:'1370Aluminium alloy'})-[:Relationship{name:'CopperCu'}]-> (q) return q.name"}, {"query": "How many species of plants are protected?", "cypher": "match (:ENTITY{name:'The short-haired yellow-bellied'})-[:Relationship{name:'Protection level'}]->(m) return distinct m.name"}, {"query": "What are the works published by Spring Wind Literature Publishing? When were they published? Do you know 5?", "cypher": "match (:ENTITY{name:'The Spring Winds Literary and Art Publishing House'})<-[:Relationship{name:'Publishing house'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you name any novel that has a link to the 5th level tag of the person whose phone I picked up?", "cypher": "match (n)<-[:Tag*5{name:'The label'}]-(p:ENTITY{name:'Whose phone did I pick up?'}) RETURN distinct n.name"}, {"query": "Send me the tag you wrote on the .NET Windows app development tutorial?", "cypher": "match (:ENTITY{name:'.NET WindowsHow to develop apps'})-[:Tag{name:'The label'}]-> (m) with m order by m.name return m.name"}, {"query": "Do you know what chemical CAS is 51102-74-0?", "cypher": "match (:ENTITY{name:'51102-74-0'})<-[:Relationship{name:'CAS'}]- (m) return m.name"}, {"query": "Can you tell me what you know about the Chinese name for embedded egg?", "cypher": "match (:ENTITY{name:'Embroidery process for eggs'})<-[:Relationship{name:'Chinese surname'}]- (h) return distinct h.name"}, {"query": "What chemical is C10H10N2O2S?", "cypher": "match (:ENTITY{name:'C10H10N2O2S'})<-[:Relationship{name:'Chemical formula'}]- (q) return q.name"}, {"query": "I'm looking for someone who can find me a Capricorn and provide me with three of their major works.", "cypher": "match (:ENTITY{name:'The Giant'})<-[:Relationship{name:'The constellations'}]-(h)-[:Relationship{name:'Major works'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "The following is a list of the three-tiered relationships between the long-suffering nightingale and the evening flowering plant.", "cypher": "match (n:ENTITY{name:'The Nightingale; The evening dew'}) - [*1..3]->(x) where x.name <>'The End of the World' return distinct x.name"}, {"query": "Can you explain what the foreign name of the Zhejiang Ocean University Computer Center is?", "cypher": "match (:ENTITY{name:'Computer Center at Zhejiang Marine College'})-[:Relationship{name:'Foreign name'}]->(n) return n.name as name union all match (:ENTITY{name:'Computer Center at Zhejiang Marine College'})-[:Relationship{name:'Department of the Ministry'}]->(m) return m.name as name"}, {"query": "I am Lin Shuo, and what is the subtitle of this book?", "cypher": "match (:ENTITY{name:'I am the king of the jungle.'})<-[:Relationship{name:'Title'}]-(x),(x)-[:Relationship{name:'Subtitles'}]->(q) return distinct q.name limit 2"}, {"query": "The book is a priceless book, you know?", "cypher": "match (:ENTITY{name:'Grammatics and grammar studies'})<-[:Relationship{name:'Title'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "Can you list 20 Chinese industry figures?", "cypher": "match (:ENTITY{name:'China'})<-[:Relationship{name:'Nationality'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Industry people'}) return mn.name limit 20"}, {"query": "Please help me find the software version of People's News, no more than five?", "cypher": "match (:ENTITY{name:'People's news'})-[:Relationship{name:'Software version'}]-> (p) with p order by p.name return p.name limit 5", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 37 (offset: 36))\n\"PROFILE match (:ENTITY{name:'People's news'})-[:Relationship{name:'Software version'}]-> (p) with p order by p.name return p.name limit 5\"\n                                     ^"}, {"query": "What are the three professions that have been awarded the National Commission for Advancement of Science and Technology's second-class achievement award?", "cypher": "match (:ENTITY{name:'Second prize for the National Committee for Science and Technology'})<-[:Relationship{name:'Major achievements'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 3"}, {"query": "Do you know what the refractory temperature of 1.2344 molds steel needs to be?", "cypher": "match(:ENTITY{name:'1.2344Molded steel'})-[:Relationship{name:'Fire back'}]-> (p) return p.name"}, {"query": "Can you fill in the CAS number for C12-14 mediocre chain polystyrene-8?", "cypher": "match(:ENTITY{name:'C12-14The median chain is polyethylene-8'})-[:Relationship{name:'CASThe number of the log'}]-> (h) return h.name"}, {"query": "I'm going to find out 10 things about Wang Xuanhua in 2 layers, graduated from National Central University, this information I know.", "cypher": "match (:ENTITY{name:'The King is honored'})-[*1..2]->(p) where p.name <> 'The National Central University' return p.name limit 10"}, {"query": "I need seven roasted chicken recipes in a two-tier relationship?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The roasted chicken'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 7"}, {"query": "What is the shortest relationship path between the two layers of heterogeneity 2 and heterogeneity 3?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The anomaly2'})-[*..2]-(b:ENTITY{name:'The anomaly3'})) return count(p)"}, {"query": "What songs are as long as the Peach Sisters and what are their labels? List them in order of number of labels.", "cypher": "match (n:ENTITY{name:'The Peach Sisters'})-[:Relationship{name:'Song length'}]->(:ENTITY)<-[:Relationship{name:'Song length'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you see the 222 pages of the book on the relationship between the two layers of legal education and the reform of teaching?", "cypher": "match (n:ENTITY{name:'Legal education and teaching reform explore'})-[:Relationship*1..2]->(x) where x.name<>'222Page' return distinct x.name"}, {"query": "The following is a list of all the information about the five-line three-ringed hat?", "cypher": "match (:ENTITY{name:'The Rebellion'})--(q) with q order by q.name where q.name <> 'Five lines of three rings' return q.name"}, {"query": "I'm going to give you four science fiction movies, tell me when they're coming out.", "cypher": "match (:ENTITY{name:'The science fiction'})<-[:Relationship*]-(m), (m)-[:Relationship{name:'The show time'}]->(n) return m.name,n.name limit 4"}, {"query": "What is the gender of the Pedersen you mentioned in your post?", "cypher": "match(:ENTITY{name:'The first was the death of a man.'})-[:Relationship{name:'Gender and race'}]-> (n) return n.name"}, {"query": "What is the shortest path between the two layers of wanting to be able to be and wanting to be able to be?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'What do you want?[Chinese pronunciation]'})-[*..2]-(b:ENTITY{name:'The first step'})) return count(p)"}, {"query": "Do you want to know 5 personal details about Alfadhel Amer, a Kuwaiti footballer?", "cypher": "match (n:ENTITY{name:'Alfadhel Amer'})-[*]->(x) where x.name<>'Alfadhel Amer,The Kuwaiti footballer.' return distinct x.name limit 5"}, {"query": "Which books by Li Min have been published by Fudan University Press?", "cypher": "match (p:ENTITY{name:'Lee Min-ho'})<--(x)-->(q:ENTITY{name:'The University of Fudan publishes'}) return x.name"}, {"query": "Can you tell me what the relationship is between the two layers of the presentation?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Division'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What is the name of the character in the TV series \"Shanghai Beach\" who is accompanied by her new friend, Kim Ji-young?", "cypher": "match (h:ENTITY{name:'Fung Yi-yi, television series about the Shanghai beach The new Shanghai beach character, accompanied by Kim Jong-un.'})<-[:Describe{name:'Describe'}]-(x) return distinct x.name"}, {"query": "Do you know what the three-step label has to do with regional development innovation?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The innovation theory of regional development'}) RETURN distinct n.name"}, {"query": "Do you know what Ruth Winona T's signature work is?", "cypher": "match (:ENTITY{name:'Ruth Winona T'})<-[:Relationship{name:'Foreign language name'}]-(q),(q)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name limit 1"}, {"query": "What are the areas of application of this knowledge that can be classified as applied mathematics?", "cypher": "match (:ENTITY{name:'Mathematics'})<-[:Relationship{name:'Applied disciplines'}]-(m)-[:Relationship{name:'Scope of application'}]->(p) return p.name skip 1 limit 5"}, {"query": "Can you list the top 10 achievements of the mountain?", "cypher": "match (:ENTITY{name:'The South Peak'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Major achievements'}]->(x) return x.name order by x.name limit 10"}, {"query": "What are the labels of each plant and can they be sorted from small to large by the number of labels?", "cypher": "match (n:ENTITY{name:'The Night of the Turtles'})-[:Relationship{name:'The Circle'}]->(:ENTITY)<-[:Relationship{name:'The Circle'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Who is this person? What are some of his representative works? Can you tell me a good one?", "cypher": "match (:ENTITY{name:'1981He graduated from the China Drama Academy in 2000, majoring in acting.'})<-[:Describe{name:'Describe'}]-(x),(x)-[:Relationship{name:'Major works'}]->(m) return x.name,m.name skip 1 limit 1"}, {"query": "Can you tell me how many people have been in the movie \"The Big Bang Theory\" by Choi Ma Bollie?", "cypher": "match (:ENTITY{name:'The film is being made by the Chinese company.'})--(n) return n.name order by n.name"}, {"query": "What is the profession and representative work of Chopra?", "cypher": "match (:ENTITY{name:'The Rose of Pigeon'})-[:Relationship{name:'Professional life'}]->(n) return n.name as name union all match (:ENTITY{name:'The Rose of Pigeon'})-[:Relationship{name:'Representative works'}]->(m) return m.name as name"}, {"query": "Can you tell us about the date of his birth, where he graduated from college and what he does now?", "cypher": "match (:ENTITY{name:'The Wave'})-[:Relationship{name:'Date of birth'}]->(n) return n.name as name union all match (:ENTITY{name:'The Wave'})-[:Relationship{name:'Graduated'}]->(m) return m.name as name union all match (:ENTITY{name:'The Wave'})-[:Relationship{name:'Professional life'}]->(r) return r.name as name"}, {"query": "Can you find the three books published by the Yue-Yue Book Company?", "cypher": "match (:ENTITY{name:'The Yue-Hsiang book company'})<-[:Relationship*]-(m), (m)-[:Relationship{name:'Pricing'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What chemical has a molecular weight of 574.9215?", "cypher": "match (:ENTITY{name:'574.9215'})<-[:Relationship{name:'Molecular weight'}]- (m) return m.name"}, {"query": "The game is based on the game of the same name, which is based on the game of the same name.", "cypher": "match (n:ENTITY{name:'The mountain of Xinjiang'})-[:Relationship*1..2]->(x) where x.name<>'The Sun' return distinct x.name"}, {"query": "What is the shortest relationship path between the level B fire door and the level 2 fire door?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Fire doors of level B'})-[:Relationship*..2]-(b:ENTITY{name:'The fire doors are aluminum.'})) return count(p)"}, {"query": "Do you know the Chinese name of the China Brand Innovation and Development Project?", "cypher": "match (:ENTITY{name:'China Brand Innovation And Development Project'})<-[:Relationship{name:'Foreign language name'}]-(n)-[:Relationship{name:'Chinese name'}]->(m) return distinct m.name"}, {"query": "What is the adoption unit of the statute of the Henan Chamber of Commerce in Xuzhou City? When was it adopted? When was it implemented?", "cypher": "match (:ENTITY{name:'The Charter of the Henan Chamber of Commerce in Xuzhou'})-[:Relationship{name:'by unit'}]->(n) return n.name as name union all match (:ENTITY{name:'The Charter of the Henan Chamber of Commerce in Xuzhou'})-[:Relationship{name:'Through time'}]->(m) return m.name as name union all match (:ENTITY{name:'The Charter of the Henan Chamber of Commerce in Xuzhou'})-[:Relationship{name:'Implementation time'}]->(r) return r.name as name"}, {"query": "I'm wondering now what kind of relationships are involved on the two-level campus of the University of Inner China?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Chinese campus'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Do you know which district belongs to Songjiang Town?", "cypher": "match (:ENTITY{name:'The town of Songjiang'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Political district'}]->(n) return distinct n.name"}, {"query": "Do you know what is the third layer of the label relationship with Concordola?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The Conchadora'}) return distinct n.name limit 1"}, {"query": "You know that citizenship is outside China, and that's 8 information in the 4th tier of the military.", "cypher": "match (:ENTITY{name:'The Second Army'})-[*1..4]-(p) where p.name <> 'China' return distinct p.name limit 8"}, {"query": "I'm not sure what the name of the land is that has a family-owned farm.", "cypher": "match (:ENTITY{name:'The family farm'})<-[:Relationship{name:'The Law'}]- (p) return p.name"}, {"query": "Do you know what kind of art is there?", "cypher": "match (:ENTITY{name:'The rain'})<-[:Relationship{name:'Written by'}]- (m) return m.name"}, {"query": "I would like to know what are the main achievements of Xu Dejie?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Major achievements'}]->(x) return x.name skip 1 limit 10"}, {"query": "The teacher asked us about the molecular weight of the sodium dihydrate dihydrate, can you tell me?", "cypher": "match(:ENTITY{name:'Sodium dihydrogenate'})-[:Relationship{name:'Molecular weight'}]-> (m) return m.name"}, {"query": "In addition to 42 bucks for one book, find out 6 more about me in this book by Bumblebee Jun.", "cypher": "match (n:ENTITY{name:'I am the day that is coming.'})-->(h) with h order by h.name where h.name <> '42Japanese yen' and h.name <> 'The Bear Bear Cloud' return h.name limit 6"}, {"query": "I am not sure if you are aware of the fact that the film is based on a true story.", "cypher": "match (n:ENTITY{name:'The return of the Gujarat police'})-[:Relationship*1..2]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "Do you know Laurent Ban? Please tell me about him.", "cypher": "match (:ENTITY{name:'Laurent Ban'})--(m) return m.name skip 1"}, {"query": "What is the shortest path of one of the five layers of the American science fiction film heterogeneity versus heterogeneity 2?", "cypher": "match p=shortestpath((a:ENTITY{name:'Different[The United States2007Horror science fiction series of the year]'})-[*..2]-(b:ENTITY{name:'Different2'})) return p"}, {"query": "The main characters of the 2015 Japanese film \"Coffee by the Sea\" [Sozumi-Sohmi, starring Yuna B\u014dmei] are:", "cypher": "match (n:ENTITY{name:'Coffee house by the beach[Japanese2015The film starring Bomi, Satsumi and Sato]'})-[:Relationship{name:'Starring'}]->(h) where h.name <> 'I'm not sure.' and h.name <> 'The beauty of the world' return distinct h.name limit 2", "error": "Invalid input 'm': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CALL\"\n  \"CONTAINS\"\n  \"CREATE\"\n  \"DELETE\"\n  \"DETACH\"\n  \"ENDS\"\n  \"FOREACH\"\n  \"IN\"\n  \"INSERT\"\n  \"IS\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"OR\"\n  \"REMOVE\"\n  \"RETURN\"\n  \"SET\"\n  \"STARTS\"\n  \"UNION\"\n  \"UNWIND\"\n  \"USE\"\n  \"WITH\"\n  \"XOR\"\n  \"^\"\n  <EOF> (line 1, column 171 (offset: 170))\n\"PROFILE match (n:ENTITY{name:'Coffee house by the beach[Japanese2015The film starring Bomi, Satsumi and Sato]'})-[:Relationship{name:'Starring'}]->(h) where h.name <> 'I'm not sure.' and h.name <> 'The beauty of the world' return distinct h.name limit 2\"\n                                                                                                                                                                           ^"}, {"query": "What is the shortest path between the two levels of the museum and archaeology majors?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Museology major'})-[:Relationship*..2]-(b:ENTITY{name:'Archaeology major'})) return count(p)"}, {"query": "Can you list some of the most representative works of the jurists?", "cypher": "match (:ENTITY{name:'Law teacher'})<-[:Relationship{name:'Professional life'}]-(q)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name"}, {"query": "The following three characters in the two-tier relationship of Amorim?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Amorim'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you show me the show time of the 13th Shanghai International Machine Tool Expo 2011?", "cypher": "match(:ENTITY{name:'2011The first13The Shanghai International Machine Tool Fair is being held in Shanghai.'})-[:Relationship{name:'Show time'}]-> (n) return n.name"}, {"query": "What is the shortest path between the Orange and German tides in the 3rd layer?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Orange is the tide'})-[*..3]-(b:ENTITY{name:'Germany is on the rise'})) return count(p)"}, {"query": "The first Chinese name of the out-of-towner in Guangzhou is?", "cypher": "match (:ENTITY{name:'The children of the outback mixed in Guangzhou'})-[:Relationship{name:'Chinese name'}]-> (m) with m order by m.name return m.name limit 1"}, {"query": "Please tell me what kind of relationship information is involved in the two layers of the five-spec concept car?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Peugeot concept car'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Chen Zheng, a Han man, was born in July 1967 in Anhui, Hunan, and is the current chairman of Hunan Coconut and Tea Group Co., Ltd., Hunan Zhengda Commodity Exchange Market Co., Ltd., Hunan Zhejiang Agricultural Development Co., Ltd., China Black Tea Cultural Expo, Hunan Zheyada Food Co., Ltd.; can you name 5 of his major achievements?", "cypher": "match (x:ENTITY{name:'The Chinese government has also been trying to prevent the spread of the virus.1967Year of birth7Moon was born in Anhui, Hunan, and is currently the chairman of Hunan Aluminum and Tea Group Holdings Limited, Hunan Zhengda Commodity Exchange Market Limited, Hunan Zhengda Agricultural Development Limited, China Black Tea Cultural Expo Park, and Hunan Zhengda Food Co., Ltd.'})<-[:Describe{name:'Describe'}]-(h)-[:Relationship{name:'Major achievements'}]->(p) return p.name order by p.name limit 5"}, {"query": "Where is the exhibition hall for the 2012 Shanghai International Beverage Machinery and Equipment Exhibition?", "cypher": "match(:ENTITY{name:'2012Shanghai International Beverage Machinery and Equipment Exhibition'})-[:Relationship{name:'The exhibition hall'}]-> (h) return h.name"}, {"query": "Do you not understand all the relationship information involved in the law of diffusion in the two layers?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Law of Spread'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What do you know about the moniker 02LF\u00d703F?", "cypher": "match (:ENTITY{name:'02LF\u00d703F'})--(x) with x order by x.name where x.name <> 'Proper nouns' return x.name"}, {"query": "What word has the American phonetic spelling [s?ri?s]?", "cypher": "match (:ENTITY{name:'[?s?ri?s]'})<-[:Relationship{name:'The United States'}]- (x) return distinct x.name"}, {"query": "What are the most representative works of a writer born in Jiangsu Province (now Suzhou)? Can you name five?", "cypher": "match (:ENTITY{name:'Jiangsu Province (now Suzhou)'})<-[:Relationship{name:'Where I was born'}]-(q)-[:Relationship{name:'Representative works'}]->(h) return distinct h.name limit 5"}, {"query": "You've seen the 2014 Eastern Guard Spring Night, remember what the theme was?", "cypher": "match(n:ENTITY{name:'2014The Eastern Guard at the Spring'})-[:Relationship{name:'The subject'}]-> (x) return x.name"}, {"query": "Please help me figure out what the theme of the 4th Xinjiang International Auto Show 2011 is?", "cypher": "match(n:ENTITY{name:'2011The fourth edition of the Shanghai International Auto Show'})-[:Relationship{name:'Subject'}]-> (p) return p.name"}, {"query": "What is the name of the company that owns Ju-Jin?", "cypher": "match (:ENTITY{name:'The Juju[Contemporary hosts]'})-[:Relationship{name:'Companies'}]->(n) return n.name as name union all match (:ENTITY{name:'The Juju[Contemporary hosts]'})-[:Relationship{name:'Representative works'}]->(m) return m.name as name"}, {"query": "The price is 10.00 yuan/issue; who has the shortest name of the 120.00 yuan/year product?", "cypher": "match (q:ENTITY{name:'10.00Japanese yen/The period;120.00Japanese yen/Year of birth'})<-[:Relationship{name:'Pricing'}]-(x) return  min(x.name)"}, {"query": "I heard that 3003 is a very versatile tool, can you list some specific applications?", "cypher": "match(:ENTITY{name:'3003The stick'})-[:Relationship{name:'Application'}]-> (n) return n.name"}, {"query": "The following is a brief description of the three-tiered relationship between sports personality Ito Ichinose and his personal life:", "cypher": "match (n:ENTITY{name:'The real Ito'})-[*1..3]->(x) where x.name<>'Sports figures' return distinct x.name"}, {"query": "The food therapy reference for bronchitis is?", "cypher": "match (:ENTITY{name:'The airway'})<-[:Relationship{name:'For the disease'}]-(x)-[:Relationship{name:'Dietary references'}]->(n) return distinct n.name"}, {"query": "New colored electric door repair commonly used information quick check manual and electronic equipment thermal design quick check manual 2 layers what is the shortest path", "cypher": "match p=allshortestpaths((a:ENTITY{name:'New coloring page for the repair of the electric door'})-[*..2]-(b:ENTITY{name:'The electronic equipment thermal design quick reference manual'})) return count(p)"}, {"query": "What is the EINECS# for chemicals 204-924-7?", "cypher": "match (:ENTITY{name:'204-924-7'})<-[:Relationship{name:'EINECS'}]- (x) return distinct x.name"}, {"query": "What are the main achievements of Aung San Suu Kyi?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Major achievements'}]->(q) return distinct q.name"}, {"query": "What kinds of relationships are there in the three layers of the relationship that the Doenig Zen master contains?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Zen master'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the major departments of Texas State University? Name 3 categories?", "cypher": "match (:ENTITY{name:'Texas, U.S.A.'})<-[:Relationship{name:'Area'}]-(p),(p)-[:Relationship{name:'Main Faculty'}]->(m) return distinct m.name limit 3"}, {"query": "What is the shortest path in the 2 layers of the IMS and electronic device thermal design speed check manual based on cellular systems?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The cell-based systemIMS'})-[*..2]-(b:ENTITY{name:'The electronic equipment thermal design quick reference manual'})) return count(p)"}, {"query": "I'm not sure what the job of men is.", "cypher": "match (:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]-(m)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name limit 1"}, {"query": "I want to drink the wine of the gift of the Lord, and I want to write five poems in gratitude.", "cypher": "match (n:ENTITY{name:'The wine of the gift is to make drunk, and the song of thanksgiving.'})-[:Relationship*]->(x) where x.name<>'Don, please.' return distinct x.name limit 5"}, {"query": "Can you help me find the relevant character tags for the 10/1 Rebirth PBY-5A waterplane crash?", "cypher": "match (:ENTITY{name:'10\u00b71The airline is revivedPBY-5AThe water plane crash'})-[:Tag{name:'The label'}]-> (q) with q order by q.name return q.name"}, {"query": "Can you help me find two openly gay people born in Henan?", "cypher": "match (:ENTITY{name:'Henan is open'})<-[:Relationship{name:'Where I was born'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "Please tell me about the types of relationships within the two layers of the four East-East City railway traffic?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'East Sun City railway'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "What is the name of the XY-10KW monopoly?", "cypher": "match (:ENTITY{name:'XY-10KW'})<-[:Relationship{name:'Model of aircraft'}]- (h) return h.name"}, {"query": "Which asteroids and asteroid 5093 were discovered by the same discoverer and what are their respective labels? Find the asteroids in order of how many labels they have.", "cypher": "match (n:ENTITY{name:'The asteroid5093'})-[:Relationship{name:'The discoverer'}]->(:ENTITY)<-[:Relationship{name:'The discoverer'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The book published by the Economic Science Press introduced me to two books.", "cypher": "match (:ENTITY{name:'The publisher of Economic Science'})<-[:Relationship{name:'Publishing house'}]-(p)-[:Relationship{name:'Title'}]->(n) return distinct n.name limit 2"}, {"query": "Who are the few celebrity men who have won the H5 Special Award for Popular Men?", "cypher": "match (:ENTITY{name:'The popular male exclusiveH5Special rewards'})<-[:Relationship{name:'The Mysterious Reward'}]-(n)-[:Relationship{name:'Popular man'}]->(q) return distinct q.name"}, {"query": "Give me the molecular weight of 4-aceto-2-methionine, which I need to use for calculations now.", "cypher": "match(:ENTITY{name:'4-B-oxide-2-Oh, my God.'})-[:Relationship{name:'Molecular weight'}]-> (p) return p.name"}, {"query": "Can you tell me where the horse company is?", "cypher": "match (p:ENTITY{name:'The Pony Company'}) return p.location"}, {"query": "The problem is asking where Hugo was born, when he was born, where he graduated from high school.", "cypher": "match (:ENTITY{name:'The Hugo'})-[:Relationship{name:'Where I was born'}]->(n) return n.name as name union all match (:ENTITY{name:'The Hugo'})-[:Relationship{name:'Graduated'}]->(m) return m.name as name union all match (:ENTITY{name:'The Hugo'})-[:Relationship{name:'Date of birth'}]->(r) return r.name as name"}, {"query": "Can you name the top 5 works by this CCP member?", "cypher": "match (:ENTITY{name:'Chinese Communist Party'})<-[:Relationship{name:'Faith'}]-(n)-[:Relationship{name:'Representative works'}]->(x) return x.name skip 1 limit 5"}, {"query": "What is the yield strength of the 16Mn2SiCrMoVTiA material we are using now?", "cypher": "match(:ENTITY{name:'16Mn2SiCrMoVTiA'})-[:Relationship{name:'The Strength of Submission'}]-> (p) return p.name"}, {"query": "The three-layer relationship between the six great masters of the repertoire and the work of the six great masters of the repertoire?", "cypher": "match (n:ENTITY{name:'The six great windmills'})-[:Relationship*1..3]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "Can you tell us about the main works of this person born in Milton, England?", "cypher": "match (:ENTITY{name:'Milton, England'})<-[:Relationship{name:'Where I was born'}]-(m)-[:Relationship{name:'Major works'}]->(h) return h.name skip 1 limit 10"}, {"query": "I'm going to start with a list of five Chinese online games that are athletic.", "cypher": "match (:ENTITY{name:'Starting with the Chinese Web'})<--(m), (m)-->(n) where n.name='Games and Competitions' return distinct m.name limit 5"}, {"query": "I'm going to ask you to give me a personal profile of the three-tier relationship of the village secretary, Mr. Tsuerugan.", "cypher": "match (n:ENTITY{name:'The Root of the Cork Tree'})-[:Relationship*1..3]->(x) where x.name<>'Village clerk' return distinct x.name"}, {"query": "Do you know Alan Kolman?", "cypher": "match (:ENTITY{name:'Allan Kolman'})--(h) return h.name skip 2"}, {"query": "I would like to know what events are planned for the 2012 Baidu Festival in the city of Huangdi.", "cypher": "match(:ENTITY{name:'2012The festival of Baidu in honor of the Yellow Emperor'})-[:Relationship{name:'Content of the event'}]-> (q) return q.name"}, {"query": "I'm not sure what the name of the work by Ken Ben-Ping is, but I'm wondering what the name of the work is.", "cypher": "match (:ENTITY{name:'The child is flat, the child is flat.'})<-[:Relationship{name:'Written by'}]- (h) return h.name"}, {"query": "What is the shortest path of the relationship between the helix and the helix in the second parameter?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Nose'})-[*..2]-(b:ENTITY{name:'The Cinnamon'})) return count(p)"}, {"query": "Do you have a pill for oral use? Can you find 10?", "cypher": "match (:ENTITY{name:'The tablet'})<-[:Relationship{name:'Dose of the drug'}]- (mn) -[:Relationship{name:'Use of dosage'}]->(n:ENTITY{name:'The mouth'}) return mn.name  limit 10"}, {"query": "What is the shortest distance between Fujian Province's Fujian 1st and Fujian Province's Fujian 4th?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The first secondary school in Fujian Province'})-[:Relationship*..2]-(b:ENTITY{name:'Fourth secondary school in Fujian Province'})) return count(p)"}, {"query": "What are the properties of public documents? Can you tell me about 5 of them?", "cypher": "match (:ENTITY{name:'The publications'})<--(n) return n.name limit 5"}, {"query": "What are the main achievements of Chang Yu-hsiung?", "cypher": "match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Major achievements'}]->(m) return distinct m.name"}, {"query": "Do you know what the Tibetan mountain is called?", "cypher": "match (n:ENTITY{name:'The mountains of Tibet'})-[:Relationship{name:'Other names'}]->(h) with h order by h.name where h.name <> 'The mountains of Tibet' return h.name"}, {"query": "Can you tell me what the relationship is between the two layers of Zen Buddhism?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Sun'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Can you get me two books for $15.00?", "cypher": "match (:ENTITY{name:'15.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "What games have the same game size as the Magic Bullet Adventure and what are their respective labels? How many of them do you show in order of number of labels?", "cypher": "match (n:ENTITY{name:'The Magic Bomb is a big risk'})-[:Relationship{name:'The size of the game'}]->(:ENTITY)<-[:Relationship{name:'The size of the game'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "And what will make you know who is Ikhham?", "cypher": "match (:ENTITY{name:'The Eckham'})<--(n) return n.name"}, {"query": "I want to watch the 2010 Mnet Asian Music Awards, do you know the exact time of the awards?", "cypher": "match(:ENTITY{name:'2010MnetThe Asian Music Awards'})-[:Relationship{name:'Time of award'}]-> (p) return p.name"}, {"query": "Who is the author of the novel Yue Jun-young?", "cypher": "match(:ENTITY{name:'The Yue Yue'})< -[:Relationship{name:'Written by'}]-> (m)  return m.name"}, {"query": "What are the major awards of the university located at 65 Tongshan Road, Shenzhen, Shenzhen, China?", "cypher": "match (:ENTITY{name:'The city of Shenyang, Shenzhen, North New District65The number'})<-[:Relationship{name:'School address'}]-(p)-[:Relationship{name:'Main awards'}]->(q) return distinct q.name"}, {"query": "Can you please find me a CAS number for 4-phenol, if you need it?", "cypher": "match(:ENTITY{name:'4-Alcohol'})-[:Relationship{name:'CASThe number of the log'}]-> (x) return x.name"}, {"query": "I heard that the 17th Shanghai Kitchenware Expo was held, so I went to see it too.", "cypher": "match(:ENTITY{name:'17The Shanghai Kitchen Show'})-[:Relationship{name:'Location'}]-> (q) return q.name"}, {"query": "What is the shortest distance between the two levels of Suzhou School of Civil Engineering and the Volkswagen Vocational Training School?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Suzhou School of Architecture and Engineering'})-[*..2]-(b:ENTITY{name:'The Volkswagen Vocational Training School'})) return count(p)"}, {"query": "How many meters high is the Type 21 submarine we know of?", "cypher": "match(:ENTITY{name:'21Type of submarine'})-[:Relationship{name:'High'}]-> (q) return q.name"}, {"query": "Has anyone calculated the molecular weight of the lightning bolt in the reaction?", "cypher": "match(:ENTITY{name:'The thunderbolt is not.'})-[:Relationship{name:'Molecular weight'}]-> (n) return n.name"}, {"query": "I want to know if you have any information about the tag for Liu Wenwei? I want three tags besides the economic and the political ones.", "cypher": "match (n:ENTITY{name:'The Chinese'})-[:Tag{name:'The label'}]->(h) with h order by h.name where h.name <> 'The economy' and h.name <> 'Characters' return h.name limit 3"}, {"query": "Please tell me what the relationship between the two layers of the Queen Camilla is?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Queen Camilla'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Chance The Rapper You know?", "cypher": "match (:ENTITY{name:'Chance The Rapper'})--(p) return p.name skip 2"}, {"query": "Who are the main characters in this movie of my gangster girlfriend?", "cypher": "match (:ENTITY{name:'My Gangster Girlfriend'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Starring'}]->(n) return distinct n.name"}, {"query": "I'm not sure if you can check all the information about the maintenance of the car on the 10th of December.", "cypher": "match (n:ENTITY{name:'The car is in good condition.'})-[:Relationship*]->(x) where x.name<>'13' return distinct x.name"}, {"query": "Do you know what Li Xianlian's work represents?", "cypher": "match (:ENTITY{name:'The man, Li Xuanlian, was a man.1938He was born in Beijing, graduated from Beijing Chinese Medical University, and is head of the ear, nose and throat department at West China Hospital of the Chinese Academy of Sciences.'})<-[:Describe{name:'Describe'}]-(h)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name limit 10"}, {"query": "I want to see the rest of the work in the Tomb of Zhou Wenling, with no more than three layers of relationships.", "cypher": "match (n:ENTITY{name:'The Mausoleum'})-[:Relationship*1..3]->(x) where x.name<>'The Moon' return distinct x.name"}, {"query": "What is the shortest distance between Dawangtu Village and Stone Tower House Village on the 3rd floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Village of the Great King'})-[*..3]-(b:ENTITY{name:'The village of Stone Tower'})) return count(p)"}, {"query": "Do you know which pavilion is hosting the 2011 Shenzhen China Real Estate Exchange during the Spring Festival?", "cypher": "match(m:ENTITY{name:'2011Shenzhen, China[The spring]The real estate market'})-[:Relationship{name:'The exhibition hall'}]-> (q) return q.name"}, {"query": "What chemical is C5H1004?", "cypher": "match (:ENTITY{name:'C5H10O4'})<-[:Relationship{name:'Chemical formula'}]- (p) return p.name"}, {"query": "Can you give me the address of Sunli?", "cypher": "match (p:ENTITY{name:'Sunli is a company'}) return p.location"}, {"query": "What fish has a rounded tip and a prominent head after the nostrils?", "cypher": "match (:ENTITY{name:'The kiss is rounded, with the head raised significantly behind the nostrils.'})--(x) return distinct x.name"}, {"query": "Can you list the names of the relationships within the two layers of the three drought maps?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Map of the drought'}) UNWIND relationships(path) AS rel return rel.name limit 3"}, {"query": "What is the name of the accident that happened at Pudong International Airport in Shanghai?", "cypher": "match (:ENTITY{name:'Shanghai Pudong International Airport'})<-[:Relationship{name:'Location'}]- (q) return q.name"}, {"query": "Can you tell me everything you know about Texas A&M Information Co. Ltd.?", "cypher": "match (:ENTITY{name:'The company is based in San Francisco, California.'})-[:Relationship*1..3]-(p) return p.name limit 10"}, {"query": "What chemical is C18H25NO3?", "cypher": "match (:ENTITY{name:'C18H25NO3'})<-[:Relationship{name:'Molecular'}]- (x) return x.name"}, {"query": "What kind of label attribute does the 101st Airborne 506th Regiment 2nd Battalion E even involve?", "cypher": "match (:ENTITY{name:'101Airborne506The Regiment2The CampEconnected'})-[:Tag{name:'The label'}]-> (x) with x order by x.name return x.name"}, {"query": "What are the occupations of students who graduated from Sichuan's Zhejiang Medical University?", "cypher": "match (:ENTITY{name:'Sichuan Zhejiang Medical School'})<-[:Relationship{name:'Graduated'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name"}, {"query": "What are the main awards of the local organizations/schools in Xi'an?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Area'}]-(h)-[:Relationship{name:'Main awards'}]->(n) return distinct h.name,n.name"}, {"query": "Can you recommend a few songs with Michael Jackson lyrics?", "cypher": "match (p:ENTITY{name:'Michael Jackson'})<-[:Relationship{name:'The word'}]- (m) return distinct  m.name"}, {"query": "Can you list the types of relationships within the three layers that two of the two chambers of the Na'vi are involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The God of the Jungle'}) UNWIND relationships(path) AS rel return distinct rel.name limit 2"}, {"query": "What chemical has a molecular weight of 179.22?", "cypher": "match (:ENTITY{name:'179.22'})<-[:Relationship{name:'Molecular weight'}]- (x) return x.name"}, {"query": "7-Cyan-1-Cyanol is a rare compound, can you tell me where it boils?", "cypher": "match(:ENTITY{name:'7-Oh, my God.-1-Alcohol'})-[:Relationship{name:'Boiling point'}]-> (q) return q.name"}, {"query": "The school was founded in 1902; its main department was established in 2001.", "cypher": "match (:ENTITY{name:'1902School year;2001Founded in'})<-[:Relationship{name:'When did it start?'}]-(q),(q)-[:Relationship{name:'Main Faculty'}]->(p) return distinct p.name"}, {"query": "What are the features of a one-way online streaming service?", "cypher": "match (:ENTITY{name:'One-way online broadcast'})<-[:Relationship{name:'Services'}]-(h)-[:Relationship{name:'Features'}]->(n) return distinct n.name"}, {"query": "The book is written by a young man named Yuri, who is a student of the University of Tokyo.", "cypher": "match (:ENTITY{name:'The Roof[The poetry of Cao Cao]'})-[:Relationship{name:'Date of creation'}]->(n) return n.name as name union all match (:ENTITY{name:'The Roof[The poetry of Cao Cao]'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "What is the synonym of the word \"simplified\"?", "cypher": "match (:ENTITY{name:'The price is right.'})-[:Relationship{name:'The synonym'}]->(n) return n.name"}, {"query": "Is the Chuangtai Steel Group Limited a public company or a private company?", "cypher": "match (:ENTITY{name:'The company is a subsidiary of the Chongqing Steel Group.'})-[:Relationship{name:'The nature of the company'}]->(n) return n.name"}, {"query": "Can you list three famous sites with an area of 122 acres?", "cypher": "match (:ENTITY{name:'122Oh, my God.'})<-[:Relationship{name:'Area'}]-(q)-[:Relationship{name:'Famous places'}]->(x) return distinct x.name limit 3"}, {"query": "Help me find five of Cao's paintings.", "cypher": "match (:ENTITY{name:'Cao planted'})<-[:Relationship{name:'Written by'}]-(m) return distinct m.name limit 5"}, {"query": "It is said that the 3rd Shanghai International Liquid Food Processing and Packaging Technology Expo 2011 is short-lived, can you tell me the exact time of the exhibition?", "cypher": "match(p:ENTITY{name:'2011The third Shanghai International Liquid Food Processing and Packaging Technology Exhibition was held in Shanghai.'})-[:Relationship{name:'Exhibition hours'}]-> (q) return q.name"}, {"query": "Can you name three people who have a relationship with the rose garden on the third level of the label?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The Owl Garden'}) return distinct n.name limit 3"}, {"query": "Can you tell me where the monument to the 18th martyr is located?", "cypher": "match(:ENTITY{name:'The monument to the 18th martyr'})-[:Relationship{name:'Location'}]-> (m) return m.name"}, {"query": "Can you tell me the English name of the Dickinson jellyfish?", "cypher": "match (:ENTITY{name:'The Dickinson jellyfish'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Foreign language name'}]->(q) return distinct q.name"}, {"query": "What kind of relationships are there in the two layers that Chen Dazhi is talking about?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Chinese'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Help me find a drug for the polysaccharide hormone.", "cypher": "match (:ENTITY{name:'Polysorbate'})<-[:Relationship{name:'Type of'}]-(m) return distinct m.name limit 1"}, {"query": "Please help me find five books for $100 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'100.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "What is the shortest path between the two levels of the new Dragon Gate and the new Dragon Gate?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The new Dragon Gate guesthouse'})-[*..2]-(b:ENTITY{name:'The new Dragon Gate guesthouse2'})) return count(p)"}, {"query": "What are the types of relationships within the three layers of the seven emerging industries that you can tell us about?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The seven emerging industries'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "The book was published in which year?", "cypher": "match (:ENTITY{name:'Laughing is not worth dying for.'})<-[:Relationship{name:'Title'}]-(p)-[:Relationship{name:'Published'}]->(n) return distinct n.name"}, {"query": "Can you list me some of the stainless steel available in GB/T 1220-1992 standard?", "cypher": "match (:ENTITY{name:'GB/T 1220-1992'})<-[:Relationship{name:'The standard'}]- (q) return distinct  q.name"}, {"query": "The most recent hot millennial Guardian: I'm a snake girl I'm afraid of whose novel, what genre of novel?", "cypher": "match(:ENTITY{name:'Millennial Guard: I am the snake woman, who am I afraid of?'})-[:Relationship{name:'Novel genre'}]-> (n) return n.name"}, {"query": "Do you know about the main award of this school in the national key town of Zhejiang, Sichuan Province? Please give me 5 articles.", "cypher": "match (:ENTITY{name:'The school is located in the Sichuan province of Sichuan.The DifferenceIt is a national key town in the Zhejiang River Delta.The city is a mixed-use community.'}) <-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Main awards'}]->(p) return p.name order by p.name limit 5"}, {"query": "Can you find me three books priced at $29 and when they will be published?", "cypher": "match (:ENTITY{name:'29Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Please tell me what is the relationship between the third layer of labels and the verbal novel?", "cypher": "match (n)-[:Tag*3{name:'The label'}]->(p:ENTITY{name:'Romance novels'}) RETURN distinct n.name"}, {"query": "I wonder what William Francis Gibbs does for a living?", "cypher": "match (:ENTITY{name:'William Francis Gibbs'}) <- [:Relationship{name:'Chinese name'}]-(n) - [:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 1"}, {"query": "GodMobi Huawei Asus Eee PC U3 4400mm Laptop Battery What color is it?", "cypher": "match (:ENTITY{name:'GodMobi The ChineseAsus Eee PC U3 4400The Mi-nan laptop battery is an electronic product with a lithium-ion battery.'})<-[:Describe{name:'Describe'}]-(n)-[:Relationship{name:'Color of product'}]->(m) return distinct m.name"}, {"query": "Can you help me find an English quarterly?", "cypher": "match (p:ENTITY{name:'Quarterly'})<--(x)-->(q:ENTITY{name:'English'}) return x.name"}, {"query": "Can you get me two management books and tell me their price?", "cypher": "match (:ENTITY{name:'Manage books'})<-[:Tag{name:'The label'}]-(h),(h)-[:Relationship{name:'Pricing'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Where is the main editor of the 2012 Zhejiang Accounting Practice Qualification Exam - Primary Accounting Computerised Exam Briefing and Classification Problem Book?", "cypher": "match(q:ENTITY{name:'2012Zhejiang accounting qualification paperless exam-Primary accounting and computer science essays and classification book'})-[:Relationship{name:'Editor in chief'}]-> (h) return h.name"}, {"query": "Can anyone name two people who have a relationship with Gao Xiaowen?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'The Gao language'}) RETURN distinct n.name limit 2"}, {"query": "What is the shortest path between the two levels of Enzo Village and Teaching Camp?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Enzo village'})-[:Relationship*..2]-(b:ENTITY{name:'Teaching Camp'})) return count(p)"}, {"query": "Do you know the details of Wang Yang's gift of the sky in the old three-tier relationship?", "cypher": "match (n:ENTITY{name:'The pool was given back to the old'})-[:Relationship*1..2]->(x) where x.name<>'The Wang Yan' return distinct x.name"}, {"query": "What is the shortest distance between the site of Sihu and the site of the Neolithic site of the Three Kingdoms?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The site of the Siege'})-[*..2]-(b:ENTITY{name:'The Neolithic site of the Three Kingdoms'})) return count(p)"}, {"query": "Can you name the names of the five Lu Chanbens?", "cypher": "match (:ENTITY{name:'The book of Lu.'})<-[:Relationship{name:'Chinese name'}]-(n),(n)-[:Relationship{name:'Other names'}]->(h) return h.name order by h.name limit 5"}, {"query": "Please list me the three main departments of the Jilin Academy of Animation's Film and Television Drama School.", "cypher": "match (:ENTITY{name:'Film and TV drama school at Jilin Animation Academy'})-[:Relationship{name:'Main Faculty'}]-> (p) return  distinct p.name limit 3"}, {"query": "The situation on Mount Fuji, can you explain something?", "cypher": "match (:ENTITY{name:'The Volcano'})--(q) return  distinct q.name limit 1"}, {"query": "Can you tell me about the five relationships that are included in the four tiers of the Xinjiang Yuzhou-Kazakhstan Autonomous Region?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The Autonomous Region of Xinjiang'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Can you tell me which books are published on 9/1/2012?", "cypher": "match (:ENTITY{name:'2012/9/1'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name"}, {"query": "And what are the labels of each of these people, and how many of them are listed from big to small by the number of labels?", "cypher": "match (n:ENTITY{name:'Damasceno Magno'})-[:Relationship{name:'Date of birth'}]->(:ENTITY)<-[:Relationship{name:'Date of birth'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "I want a great horror novel with a plot and a cynical doctor with no less than two levels of relationship details.", "cypher": "match (n:ENTITY{name:'The Cygnian'})-[:Relationship*1..2]->(x) where x.name<>'The horror of a perfectly good story' return distinct x.name"}, {"query": "Can you recommend the three novels that are currently being re-released?", "cypher": "match (:ENTITY{name:'Connected'})<-[:Relationship{name:'The novel progresses'}]-(h),(h)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "Can you find me 5 books priced at $16 and when they will be published?", "cypher": "match (:ENTITY{name:'16Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "You don't know what the three levels of relationships are that are covered by the primary and secondary schools in Chiricahua?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Primary and secondary school in Chiricahua'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "This C programming experimental guide and homework book that the teacher made us buy, when is the release date?", "cypher": "match(:ENTITY{name:'CProgramming experimental instructions and homework'})-[:Relationship{name:'Date of publication'}]-> (p) return p.name"}, {"query": "What is the CAS number of 1-acetylmethacrylate, please help me see?", "cypher": "match(:ENTITY{name:'1-Acetyl chloride'})-[:Relationship{name:'CASThe number'}]-> (p) return p.name"}, {"query": "What is the difference between the old and the new ink paintings?", "cypher": "match (:ENTITY{name:'The former generation'})<-[:Relationship{name:'Date of creation'}]-(m), (m)-[:Relationship{name:'Painting type'}]->(n) where n.name='Painting in ink' return distinct m.name"}, {"query": "What is the shortest path between the cone and the cone 2?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Octopus'})-[:Relationship*..2]-(b:ENTITY{name:'The Octopus'})) return count(p)"}, {"query": "Tell me the Chinese names of the three river umbrellas.", "cypher": "match (:ENTITY{name:'The river is covered with smoke'})-[:Relationship{name:'Chinese name'}]-> (h) with h order by h.name return h.name limit 3"}, {"query": "The following is a list of the top 10 political figures in the country:", "cypher": "match (n:ENTITY{name:'The Marshal'})-[*1..4]->(x) where x.name<>'Political figures' return distinct x.name"}, {"query": "Can you list three main achievements of this Chinese person?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(n)-[:Relationship{name:'Major achievements'}]->(p) return p.name skip 1 limit 5"}, {"query": "Can you recommend seven books for history class?", "cypher": "match (:ENTITY{name:'The history'})<-[:Relationship{name:'Category'}]- (q) return q.name limit 7"}, {"query": "What is the name of the Hindu and Jain architectural complexes in India in the Middle Ages?", "cypher": "match (:ENTITY{name:'The Hindu and Jain architectural complexes of India in the Middle Ages.'})--(x) return distinct x.name"}, {"query": "Can you tell me about the three layers of relationships involved in the welfare of birds?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Benefiting the Birds'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Do you know which clubs the player who joined in January 2000 played for? Can you name three?", "cypher": "match (:ENTITY{name:'2000January'})<-[:Relationship{name:'Enlistment time'}]-(x)-[:Relationship{name:'Played'}]->(m) return distinct m.name limit 3"}, {"query": "What is the shortest path between the International Politics major and the Diplomacy major in the two levels?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'International political studies'})-[:Relationship*..2]-(b:ENTITY{name:'Diplomacy major'})) return count(p)"}, {"query": "I wonder what the scope of application of history is?", "cypher": "match (n:ENTITY{name:'The history'})<-[:Relationship{name:'Applied disciplines'}]-(m),(m)-[:Relationship{name:'Scope of application'}]->(q) return distinct q.name limit 3"}, {"query": "What are the main features of the newly developed 19talk software?", "cypher": "match(:ENTITY{name:'19talk'})-[:Relationship{name:'Main functions'}]-> (p) return p.name"}, {"query": "Can you recommend eight Eastern fantasy novels?", "cypher": "match (:ENTITY{name:'The Eastern Myth'})<-[:Relationship{name:'Novel genre'}]- (q) return q.name limit 8"}, {"query": "When was Searchlight founded?", "cypher": "match (p:ENTITY{name:'The company'}) return p.time"}, {"query": "Please help me find three books for $200 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'100.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "What are the names of the characters who are in the same rank as Cao Yanbo? What are their respective labels? Please list them in order of their number of labels from small to large.", "cypher": "match (n:ENTITY{name:'Cao was a good man.'})-[:Relationship{name:'Military officer'}]->(:ENTITY)<-[:Relationship{name:'Military officer'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "What chemical has the linear molecular formula C6H4ClNO2?", "cypher": "match (:ENTITY{name:'C6H4ClNO2'})<-[:Relationship{name:'Linear molecular formula'}]- (p) return p.name"}, {"query": "JB/Julia Bardera/Harudera Yuria have a voice for what character?", "cypher": "match (:ENTITY{name:'JB/Julia Bardera/Harudera Yuria'})<-[:Relationship{name:'Other names'}]-(q),(q)-[:Relationship{name:'Sound'}]->(n) return distinct n.name limit 2"}, {"query": "Can you find me three plants in the family of the ginger beetles and describe them?", "cypher": "match (:ENTITY{name:'The family of the gingerberries'})<-[:Relationship*]-(m),(m)-[:Describe{name:'Describe'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What is the name of the TV series directed by Wang Min, starring Liu Wenhui, Liu Li, and others?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Director'}]-(m), (m)-[:Relationship{name:'Starring'}]->(n) where n.name='The following people are listed in the order of their birth:' return m.name"}, {"query": "If you are familiar with the online shopping platform 5054 Mall, tell us about its main business and what its products include.", "cypher": "match(:ENTITY{name:'5054The Mall'})-[:Relationship{name:'The main'}]-> (x) return x.name"}, {"query": "Can you tell me what his English name is Shandong Airlines Limited?", "cypher": "match (:ENTITY{name:'Shandong Airline Shares Limited'})<-[:Relationship{name:'Company name'}]-(x),(x)-[:Relationship{name:'Foreign language name'}]->(q) return distinct q.name"}, {"query": "What is the main career of the artist who has achieved the pioneering role of the Latter-day Saint?", "cypher": "match (h:ENTITY{name:'The pioneers of the apocalyptic art'})<-[:Relationship{name:'Major achievements'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name"}, {"query": "eGoBuy software is his platform you know?", "cypher": "match (:ENTITY{name:'eGoBuy'})<-[:Relationship{name:'Software name'}]-(x),(x)-[:Relationship{name:'Software platform'}]->(q) return distinct q.name"}, {"query": "How about three graduates from Imperial University of Tokyo?", "cypher": "match (:ENTITY{name:'Japanese Imperial University'})<-[:Relationship{name:'Graduated'}]-(x) return distinct x.name limit 3"}, {"query": "How many companies have been in business for 20 years?", "cypher": "match (p:ENTITY{time:'2020'}) return count(p)"}, {"query": "Do you know which places and parks are on the 5th level of the label relationship?", "cypher": "match (n)-[:Tag*5{name:'The label'}]->(p:ENTITY{name:'The Park'}) RETURN distinct n.name"}, {"query": "Please tell me what is the relationship between the third tier label and the stock dividend?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Share dividend'}) RETURN distinct n.name"}, {"query": "Which books are in the same literary genre as Ms. Yang, and what are the labels on each?", "cypher": "match (n:ENTITY{name:'The woman is a woman.'})-[:Relationship{name:'Literary genre'}]->(:ENTITY)<-[:Relationship{name:'Literary genre'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "You have the top 5 messages from Paulo Trancoso?", "cypher": "match (m:ENTITY{name:'Paulo Trancoso'})--(n) return  distinct n.name limit 5"}, {"query": "Please list the games in which Gretzky scored a goal.", "cypher": "match (:ENTITY{name:'Gertzer'})<-[:Relationship{name:'Goalkeeper'}]- (p) return distinct p.name"}, {"query": "I'm not a street person, so you don't know?", "cypher": "match (:ENTITY{name:'I am the street urchin.'})--(q) return q.name order by q.name"}, {"query": "Do you know what kind of jobs are there for you to be a positive person in?", "cypher": "match (:ENTITY{name:'She was born in Taiwan, studied in Taiwan, served in TaiwanMilitary serviceI have been in the US and France for a while.'}) <- [:Describe{name:'Describe'}]-(x) - [:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 5"}, {"query": "The book on the daily education of the 0-3 year old baby in your bookshelf, which publisher published it?", "cypher": "match(:ENTITY{name:'0-3The daily education of a baby'})-[:Relationship{name:'Publishing house'}]-> (n) return n.name"}, {"query": "What ingredients are used to make healthy, low-calorie food that everyone can eat?", "cypher": "match (:ENTITY{name:'Weight lossMMThe source of energy for breakfast for diabetics--After making some turkey, I personally prefer turkey with wood sugar, because it is healthy and low in calories!'})<-[:Describe{name:'Describe'}]-(n)-[:Relationship{name:'Raw materials'}]->(p) return distinct p.name"}, {"query": "Do you have any information about the relationships within the three layers that this person is involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The View from the Peak'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "It's too complicated for this compound, can you write the chemical formula?", "cypher": "match(:ENTITY{name:'For the benzyl acetate[Amino-ethylene]'})-[:Relationship{name:'Chemical formula'}]-> (x) return x.name"}, {"query": "What chemical has a molecular weight of 69.07?", "cypher": "match (:ENTITY{name:'69.07'})<-[:Relationship{name:'Molecular weight'}]- (n) return n.name"}, {"query": "Please help me find two books for $25.00 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'25.00Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Can you name six Chinese government employees?", "cypher": "match (q:ENTITY{name:'China'})<-[:Relationship{name:'Nationality'}]- (h) return h.name limit 6"}, {"query": "What are the best representative works of a writer born in 1909? Can you list 10?", "cypher": "match (:ENTITY{name:'1909Year of birth'})<-[:Relationship{name:'Date of birth'}]-(m)-[:Relationship{name:'Representative works'}]->(q) return distinct m.name limit 10"}, {"query": "Can you recommend two books with simple Chinese characters?", "cypher": "match (:ENTITY{name:'Simplified Chinese'})<-[:Relationship{name:'Language'}]- (q) return q.name limit 2"}, {"query": "What is the name of the actress who is the representative of the work of the Queen of the Underworld, the Queen of the Underworld, the Queen of the Underworld?", "cypher": "match (:ENTITY{name:'The Queen of the Jungle is a dark-skinned, dark-skinned, and delicious.'})<-[:Relationship{name:'Representative works'}]-(n),(n)-[:Relationship{name:'Other names'}]->(q) return distinct q.name"}, {"query": "Can you tell me where Chamb\u00e9ry graduated from?", "cypher": "match (:ENTITY{name:'The Chambliss'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Graduated'}]->(n) return distinct n.name"}, {"query": "I'm not sure if you're interested in finding a Mongolian and listing one of his major achievements.", "cypher": "match (x:ENTITY{name:'Mongolian people'})<-[:Relationship{name:'Ethnicity'}]-(q)-[:Relationship{name:'Major achievements'}]->(m) return q.name order by q.name,m.name limit 1"}, {"query": "What chemical is CAS number 21902-38-5?", "cypher": "match (:ENTITY{name:'The following:21902-38-5'})<-[:Relationship{name:'CASThe number'}]- (h) return h.name"}, {"query": "The total number of businesses in the city of Ibiza?", "cypher": "match (p:ENTITY{location:'The Stone House'}) return count(p)"}, {"query": "Can you help me find two songs with lyrics by Chen Wei and lyrics by Liu Xiaobo?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'The word'}]-(m), (m)-[:Relationship{name:'Music'}]->(n) where n.name='Chen Wei' return m.name limit 2"}, {"query": "Do you know what the English name for oral thrush is?", "cypher": "match(:ENTITY{name:'Mouth ulcers'})-[:Relationship{name:'English name'}]-> (n) return n.name"}, {"query": "Tell me more about the King and Queen in person?", "cypher": "match (:ENTITY{name:'The Kings are in love'})--(h) with h order by h.name return h.name"}, {"query": "Can anyone tell me what famous places are in Jiangnan? Can I recommend two?", "cypher": "match (:ENTITY{name:'Jiangnan, literally meaning south of the Yangtze River, in human geography refers to the south of the lower reaches of the Yangtze River.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Famous places'}]->(m) return distinct m.name limit 2"}, {"query": "What is the shortest relationship path between the two layers of the poem Autumn and Dream Day?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Autumn is coming'})-[:Relationship*..2]-(b:ENTITY{name:'The Dream'})) return count(p)"}, {"query": "Besides being a private university, can you tell me about the six things you know about the Hunan Transportation Engineering College on the second floor?", "cypher": "match (:ENTITY{name:'The International Sports Information Council is a nonprofit organization.'})-[:Relationship*1..2]->(p) where p.name <> 'Private colleges' return p.name limit 6"}, {"query": "What is Zhang Yiwei's first name?", "cypher": "match (:ENTITY{name:'Zhang Yiwei'})-[:Relationship{name:'Title'}]-> (x) return  distinct x.name"}, {"query": "Please help me find the names of 10 companies in Chengdu.", "cypher": "match (:ENTITY{name:'The capital'})<--(m) ,(m)-[:Relationship{name:'Company name'}]->(n) return n.name limit 10"}, {"query": "Which books and which books are published by the same publisher and what are the labels?", "cypher": "match (n:ENTITY{name:'The city is in a state of war'})-[:Relationship{name:'Publishing house'}]->(:ENTITY)<-[:Relationship{name:'Publishing house'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Who among us is a French-born illusionist?", "cypher": "match (:ENTITY{name:'The Illusionist'})<-[:Relationship{name:'Professional life'}]-(m), (m)-[:Relationship{name:'Where I was born'}]->(n) where n.name='FrenchMaisons-Laffitte' return m.name"}, {"query": "The Ming Dynasty was a period of great change in the history of China.", "cypher": "match (:ENTITY{name:'The Ming Dynasty'})-[:Relationship{name:'The year'}]->(n) return n.name as name union all match (:ENTITY{name:'The Ming Dynasty'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "What do people in Fujian do?", "cypher": "match (:ENTITY{name:'Fujian Valley'})<-[:Relationship{name:'The Nation'}]-(m)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name"}, {"query": "I heard that there were many babies at the first boutique jewelry fair in 2013 in Shanxi, do you know the scope of the exhibition?", "cypher": "match(:ENTITY{name:'2013The first boutique jewelry fair in Shanxi'})-[:Relationship{name:'The scope of the exhibition'}]-> (p) return p.name"}, {"query": "Please help me find out what are the three desserts and their ingredients?", "cypher": "match (:ENTITY{name:'The dessert'})<-[*]-(m), (m)-[:Relationship{name:'Supplements'}]->(n) return m.name,n.name limit 3"}, {"query": "I wonder what the relationship is between the five levels involved in the Villa Beach Hotel?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The beach hotel in Beira'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What is the shortest path between the twin boys and the rose dance on the 2nd floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Gemini boys'})-[:Relationship*..2]-(b:ENTITY{name:'The Rose Dance'})) return count(p)"}, {"query": "What is the shortest path between the two levels of the village and the training camp?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Village of Yedeh'})-[*..2]-(b:ENTITY{name:'Teaching Camp'})) return count(p)"}, {"query": "Do you have any information about the names of the relationships at the two levels involved?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Little One'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know the language used in this film and other films to describe the same as the one used in The Exorcist 2015? Tell me what the labels are for each of these films, and how they are listed in order of the number of labels for each film?", "cypher": "match (n:ENTITY{name:'The Exorcist2015'})-[:Relationship{name:'White language'}]->(:ENTITY)<-[:Relationship{name:'White language'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you tell me about the relationship between the two layers of the four infinite holy heavens?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Holy Land of the Infinite Moon'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "Do you know how many 26th volume of the manga series are there? Can you recommend 6?", "cypher": "match (:ENTITY{name:'Twenty-six times'})<-[:Relationship{name:'The View'}]- (x) return x.name limit 6"}, {"query": "Which companies and which brands of clothes were founded on the same day as RIZAN SHINA Clothing Ltd. in Manchuria? Please list the companies in order of number of labels, from large to small.", "cypher": "match (n:ENTITY{name:'The company is a subsidiary of the Manchu-based Rizan Shinha Clothing Co., Ltd.'})-[:Relationship{name:'Founded'}]->(:ENTITY)<-[:Relationship{name:'Founded'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What is the shortest path between the two layers of learning, Marxist political economy innovation and the construction of a contemporary harmonious society and communication principles?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Marxist political economy innovation and building a contemporary harmonious society'})-[*..2]-(b:ENTITY{name:'Learning how to communicate'})) return count(p)"}, {"query": "I want to go to the company of the head of the company, where should I go?", "cypher": "match (p:ENTITY{name:'The Big Head'}) return p.location"}, {"query": "Can you tell me what kind of relationships are covered in the paint job network in the 3 layers? Can you list 3?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Painting recruitment network'}) UNWIND relationships(path) AS rel return rel.name limit 3"}, {"query": "Please help me find two books for $10.8 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'10.8Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "How do you describe the appearance of Kangaroo net semihydrate in physical terms?", "cypher": "match(:ENTITY{name:'Kangerring pure hydrated'})-[:Relationship{name:'Appearance'}]-> (m) return m.name"}, {"query": "Besides the wax, can you tell me three things you know about the two layers of the Chinese Western mother-of-pearl painting?", "cypher": "match (:ENTITY{name:'The painting by Chiang Kai-shek depicts a Western mother and son.'})-[*1..2]->(p) where p.name <> 'The silos' return distinct p.name limit 3"}, {"query": "It's interesting to hear about the 2012 China International Health and Beauty Expo, do you know the date?", "cypher": "match(:ENTITY{name:'2012China International Health and Beauty Fair'})-[:Relationship{name:'Dates of exhibition'}]-> (x) return x.name"}, {"query": "Where is the collection of the King's Musical Works? How many are there?", "cypher": "match (:ENTITY{name:'The Emperor'})-[:Relationship{name:'The collection'}]->(n) return n.name as name union all match (:ENTITY{name:'The Emperor'})-[:Relationship{name:'Currently in storage'}]->(m) return m.name as name"}, {"query": "Pick three types of openings [starting platinum-selling novel by a dancing writer] that are relevant to the author other than dancing?", "cypher": "match (:ENTITY{name:'The Gate of Heaven[The first novel by the platinum-selling writer Dancing]'})--(m) with m order by m.name where m.name <> 'Dancing' return distinct m.name limit 3"}, {"query": "What kind of song language is used in the solo single Ringa Linga by the singing group BigBang member Sun?", "cypher": "match(:ENTITY{name:'Ringa Linga'})-[:Relationship{name:'The language of song'}]-> (m) return m.name"}, {"query": "What is the main ingredient of rabbit meat?", "cypher": "match (:ENTITY{name:'The rabbit stuffed meat'})-[:Relationship{name:'Main ingredients'}]-> (m) return distinct m.name"}, {"query": "Can you help me find the ICP file number for 028 Chengdu Training Network?", "cypher": "match(:ENTITY{name:'028Adult Training Network'})-[:Relationship{name:'ICPThe case number'}]-> (h) return h.name"}, {"query": "I'm not sure what the name of the novel is, but I'm sure it's a novel.", "cypher": "match (:ENTITY{name:'White and white'})<-[:Relationship{name:'CP'}]- (x) return x.name"}, {"query": "I'm going to ask you about the artistic activities of the artists' category. Can you list five?", "cypher": "match (:ENTITY{name:'The artist'})<-[:Tag{name:'The label'}]-(h)-[:Relationship{name:'Activities'}]->(x) return distinct x.name limit 5"}, {"query": "What is the name of the yellow-bellied parrot in English?", "cypher": "match (:ENTITY{name:'Yellow diarrhea'})<-[:Relationship{name:'species'}]-(x)-[:Relationship{name:'English name'}]->(q) return distinct q.name limit 1"}, {"query": "Are you familiar with the material properties of 18Mn2CrMoBA?", "cypher": "match(:ENTITY{name:'18Mn2CrMoBA'})-[:Relationship{name:'Features of materials'}]-> (n) return n.name"}, {"query": "Can you help me find 50 works of literature with 16 pages?", "cypher": "The name of the game is \"The Book of the Dead\" (the name of the game is \"The Book of the Dead\").", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The name of the game is \"The Book of the Dead\" (the name of the game is \"The Book of the Dead\").\"\n         ^"}, {"query": "What chemical substance has the molecular formula C6H11O2?", "cypher": "match (:ENTITY{name:'C6H11O2'})<-[:Relationship{name:'Molecular'}]- (h) return h.name"}, {"query": "Please list the representative works of Fresh Pirates Youth Group.", "cypher": "match (:ENTITY{name:'freshThe Boy Scouts'})-[:Relationship{name:'Representative works'}]-> (x) return  distinct x.name"}, {"query": "What is the motive power of the Type 096 ballistic missile nuclear submarine in China?", "cypher": "match(:ENTITY{name:'096Ballistic missile nuclear submarine'})-[:Relationship{name:'The Power'}]-> (x) return x.name"}, {"query": "What is the exhibition on March 15-18, 2013?", "cypher": "match (:ENTITY{name:'2013Year of birth3The Moon15-18The Sun'})<-[:Relationship{name:'The session'}]- (p) return distinct p.name"}, {"query": "Ask for the Si content of a material such as 00Cr25Ni20Nb stainless steel.", "cypher": "match(:ENTITY{name:'00Cr25Ni20NbStainless steel'})-[:Relationship{name:'Oh, my God.Si'}]-> (n) return n.name"}, {"query": "I wonder who else wrote the script for Death Save the Brethren besides Huang Yilong and Zhou Yue An?", "cypher": "match (n:ENTITY{name:'The brother of the rescue of death'})-[:Relationship{name:'Writer'}]->(h) where h.name <> 'Yellow Dragon' and h.name <> 'The week is good.' return distinct h.name limit 3"}, {"query": "Can you provide the full profile of this Chinese person named Yu Yu?", "cypher": "match (n:ENTITY{name:'The Temple'})-[*]->(x) where x.name<>'The Temple' return distinct x.name"}, {"query": "I need information on the two and the fake London 3 tag relationship, do you have it?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The fake London'}) return distinct n.name limit 2"}, {"query": "Could you tell me what the chemical is for CAS number 2386-54-1?", "cypher": "match (:ENTITY{name:'2386-54-1'})<-[:Relationship{name:'CASThe number'}]- (p) return p.name"}, {"query": "What is the shortest connection between the two levels of the Beijing Olympic Water Park and the Beijing Olympic Park?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Beijing Olympic water park'})-[:Relationship*..2]-(b:ENTITY{name:'Beijing Olympic Park'})) return count(p)"}, {"query": "What is the shortest relationship between the two layers of tofu and tofu?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The tofu'})-[:Relationship*..2]-(b:ENTITY{name:'Monkey roasting tofu'})) return count(p)"}, {"query": "Do you know which works and which chronology of the years of Liu Xiaobo were written by the same publisher? What are the labels of each of these works? Please sort them in order of the number of labels of your brother's works?", "cypher": "match (n:ENTITY{name:'The year of the first monarch'})-[:Relationship{name:'Publishing house'}]->(:ENTITY)<-[:Relationship{name:'Publishing house'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Do you know when the book Teaching Children How to Be Human was printed before they were 10?", "cypher": "match(:ENTITY{name:'10Teaching Children to Be Human Before They Are 18'})-[:Relationship{name:'Printing time'}]-> (h) return h.name"}, {"query": "The problem is that you can tell us what kind of relationships are there in the three levels of the international service market?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'International service market'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What else do you know about the second spring of Lao-mo besides the Taiwanese drama?", "cypher": "match (:ENTITY{name:'The second spring of La Mo'})-[:Relationship*1..2]-(p) where p.name <> 'Taiwanese film' return  p.name limit 10"}, {"query": "Can you tell me what kind of relationship is involved in the two layers of the relationship?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The little girl'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "The number of companies in Fujairah is estimated at about 7 million.", "cypher": "match (p:ENTITY{location:'Fujian'}) return count(p)"}, {"query": "Do you know what year Du Jan was born?", "cypher": "MATCH (n:ENTITY{name:'Du Jia'})-[:Relationship{name:'Date of birth'}]->(m) return substring(m.name,0,5)"}, {"query": "Who is the prominent leader of the Kyaw Kyaw Kyaw Mieng people's anti-Qin uprising?", "cypher": "match (:ENTITY{name:'The prominent leader of the Miyanma anti-Qin uprising'})--(x) return distinct x.name"}, {"query": "Which companies are registered with the CARICOM Market Regulatory Authority?", "cypher": "match (:ENTITY{name:'The Central Market Authority'})<-[:Relationship{name:'Registration office'}]- (h) return h.name limit 5"}, {"query": "How many species of ants are there?", "cypher": "match (:ENTITY{name:'The genus]'})-[:Relationship{name:'species'}]->(n) return n.name as name union all match (:ENTITY{name:'The genus'})-[:Relationship{name:'The Department'}]->(m) return m.name as name"}, {"query": "Do you know what the name of the drug for the confidence pill is?", "cypher": "match(:ENTITY{name:'Self-confidence pills'})-[:Relationship{name:'Name of the drug'}]-> (q) return q.name"}, {"query": "Do you know the name of the area at an altitude of 1,397.00 meters?", "cypher": "match (:ENTITY{name:'1397.00The M'})<-[:Relationship{name:'Height'}]- (x) return x.name"}, {"query": "Did you know that the three types of relationships are contained within the Quanzhou ship?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Quanzhou Ship'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the shortest relationship path between the Arabian stingray and the elongated conch shark in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Arabian stingray'})-[:Relationship*..2]-(b:ENTITY{name:'The elongated, elongated shark'})) return count(p)"}, {"query": "Please let me know when the 11th edition of the 2011 Multi-Person Printing and Label Printing Exhibition will be held, I am preparing very early.", "cypher": "match(:ENTITY{name:'201111th Multi-Person Printing and Label Printing Exhibition'})-[:Relationship{name:'Show time'}]-> (q) return q.name"}, {"query": "Do you know what the research area of immunotoxicology is?", "cypher": "match (:ENTITY{name:'Immunotoxicology'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Research areas'}]->(n) return distinct n.name"}, {"query": "Have you been to the 2011 China National Electricity Expo in Shanghai, where is it being held in Shanghai?", "cypher": "match(:ENTITY{name:'2011China[Shanghai]The home appliance fair'})-[:Relationship{name:'Location'}]-> (q) return q.name"}, {"query": "Please tell me what kind of relationship is involved in the two levels of lung cancer?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The town of lung cancer'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me when Muhammad II [historical figure] died?", "cypher": "match(:ENTITY{name:'Muhammad II[Historical figures]'})-[:Relationship{name:'Date of death'}]-> (n) return n.name"}, {"query": "What are the most representative works of the author born in 1943? Name three?", "cypher": "match (h:ENTITY{name:'1943Year of birth'})<-[:Relationship{name:'Date of birth'}]-(q),(q)-[:Relationship{name:'Representative works'}]->(n) return distinct n.name limit 3"}, {"query": "I would like to ask you how many of the main departments of the Higher Technical School in Mecca are there?", "cypher": "match (:ENTITY{name:'The city of Mecca has a high technical school.'})-[:Relationship{name:'Main Faculty'}]-> (p) return p.name skip 1"}, {"query": "What books are priced at $8? Can you help me find three?", "cypher": "match (:ENTITY{name:'8Japanese yen'})<-[:Relationship{name:'Pricing'}]-(h),(h)-[:Relationship{name:'Title'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Do you know what types of relationships are contained in the three layers of the inner-mountain pineapple?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The mountain is lined with lotus trees'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Do you know what Baidu does for a living?", "cypher": "match (:ENTITY{name:'The Beige'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 1"}, {"query": "I want to purify phenylalanine, do you know where it boils?", "cypher": "match(:ENTITY{name:'Phenylene'})-[:Relationship{name:'Boiling point'}]-> (x) return x.name"}, {"query": "Can you tell me about the types of relationships in the two layers of the four-tiered banana?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Nile spinach'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "What is the shortest connection path between the closed stairway and the smoke-proof stairway on the 2nd floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Closed stairs'})-[*..2]-(b:ENTITY{name:'Smoke-proof stairs'})) return count(p)"}, {"query": "Do you have other aliases for brands like Odai, Haiba, Marun, Japan ASAHI?", "cypher": "match (:ENTITY{name:'The Japanese government has also been trying to stop the spread of the virus.ASAHIAnd so on and so forth.'})<-[:Relationship{name:'Brand name'}]-(n)-[:Relationship{name:'Other names'}]->(q) return distinct n.name"}, {"query": "What else did you do besides singing at a party?", "cypher": "match (:ENTITY{name:'Chiang and Kang'}) <-[:Relationship{name:'The song was originally sung'}]-(m) where m.name <>'Gathered [Chiang and Kang performing song]' return distinct m.name"}, {"query": "What is the shortest distance between the two levels of General Zhang Leiping and Zhang Chongwen?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Chang Lei Ping[General of the PLA]'})-[*..2]-(b:ENTITY{name:'Chang Chun-wen[People from Linhai City, Zhejiang Province]'})) return count(p)"}, {"query": "What is the 800 Questions for Infant and toddler intellectual development written by Zhang Zhen?", "cypher": "match (:ENTITY{name:'0~6Infant and toddler intellectual development800Asked'})--(x) with x order by x.name where x.name <> 'Zhang Zhen Co-authored' return x.name"}, {"query": "Can you list the top 10 books written by Capricorn writers?", "cypher": "match (:ENTITY{name:'Scorpio'})<-[:Relationship{name:'The constellations'}]-(h)-[:Relationship{name:'Major works'}]->(m) return distinct m.name limit 10"}, {"query": "Can you find me the address of the headquarters of three listed companies?", "cypher": "match (:ENTITY{name:'Listed companies'})<-[:Relationship{name:'The nature of the company'}]-(n)-[:Relationship{name:'Location'}]->(q) return distinct q.name limit 3"}, {"query": "What are the main achievements of graduates of the Chinese Military Police Command Academy?", "cypher": "match (:ENTITY{name:'Chinese police officers commanding academy'})<-[:Relationship{name:'Graduated'}]-(h)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name"}, {"query": "Can you tell me the types of relationships within the two layers of the Red Square?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Red City Temple'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "What is the shortest relationship path between the two layers of sugar and caramel?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Sugarcane'})-[:Relationship*..2]-(b:ENTITY{name:'The meatballs'})) return count(p)"}, {"query": "I want to buy something at 123 Easy Taobao, do you know any shopping tips?", "cypher": "match(:ENTITY{name:'123The Internet'})-[:Relationship{name:'Shopping tips'}]-> (n) return n.name"}, {"query": "The school is a great place to learn about the history of the country, and the school is a great place to learn about the history of the country.", "cypher": "match (:ENTITY{name:'Young people have ambitions and achieve their future.'})<-[:Relationship{name:'The teacher quotes'}]-(p),(p)-[:Relationship{name:'Famous alumni'}]->(x) return distinct x.name limit 1"}, {"query": "My classmates, this Visual C+++.NET university tutorial you have in your hands, does anyone know the original name of it?", "cypher": "match(:ENTITY{name:'Visual C++.NETCollege courses'})-[:Relationship{name:'Original name'}]-> (m) return m.name"}, {"query": "The film, Intellect and Emotion, cost him how much to make?", "cypher": "match (:ENTITY{name:'The Mind and the Emotions'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Production costs'}]->(n) return distinct n.name"}, {"query": "The molecular formula forcypher": "match(:ENTITY{name:'(S)-1-N-Oxytocin based-3-The Penguin'})-[:Relationship{name:'Molecular'}]-> (h) return h.name"}, {"query": "Please list a small and medium-sized profession for me.", "cypher": "match (:ENTITY{name:'Chihiro, the youngest'})-[:Relationship{name:'Professional life'}]-> (q) return  distinct q.name limit 1"}, {"query": "What is the shortest path between the two layers of integrated electronics design and practice and industrial communication technology principles and applications?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Integrated electronic design and practice'})-[*..2]-(b:ENTITY{name:'Principles and applications of industrial communication technology'})) return count(p)"}, {"query": "What are the main awards that 13+ rated movies have won?", "cypher": "match (:ENTITY{name:'??? ? 13+'})<-[:Relationship{name:'Classified'}]-(h),(h)-[:Relationship{name:'Main awards'}]->(q) return distinct q.name"}, {"query": "Who is the author of the book? Where did he come from?", "cypher": "match (:ENTITY{name:'The Geng'})-[:Relationship{name:'Origin of the work'}]->(n) return n.name as name union all match (:ENTITY{name:'The Geng'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "Where is the area of the village of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the", "cypher": "match (:ENTITY{name:'Port of Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, and other cities and towns'})-[:Relationship{name:'Area'}]->(n) return n.name as name union all match (:ENTITY{name:'Port of Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, and other cities and towns'})-[:Relationship{name:'Phone area code'}]->(m) return m.name as name union all match (:ENTITY{name:'Port of Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, Guangzhou, and other cities and towns'})-[:Relationship{name:'Postal area code'}]->(r) return r.name as name"}, {"query": "Recommend 5 other representative actors as witches", "cypher": "match (:ENTITY{name:'Actor'})<-[:Relationship{name:'Professional life'}]-(m)-[:Relationship{name:'Representative works'}]->(h) where h.name <> 'The witch rushed.' return distinct h.name limit 5"}, {"query": "Which tournament was held from September 18 to October 1, 1983?", "cypher": "match (:ENTITY{name:'1983Year of birth9The Moon18The Day of Judgment10The Moon1The Sun'})<-[:Relationship{name:'Time of the match'}]- (m) return distinct m.name"}, {"query": "The school, which was founded in 1984, won the main award for its work and told me one thing.", "cypher": "match (:ENTITY{name:'1984Year of birth'})<-[:Relationship{name:'When did it start?'}]-(m),(m)-[:Relationship{name:'Main awards'}]->(q) return q.name skip 3 limit 1"}, {"query": "What is the shortest distance between Beijing Kimwan Weng Technology Development Co. Ltd. and Sichuan Huayang Real Estate Development Co. Ltd. within the two levels?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Beijing Jinhua Technology and Development Co., Ltd.'})-[*..2]-(b:ENTITY{name:'Sichuan Huayang Real Estate Development Co., Ltd. is a wholly owned subsidiary of the Sichuan-based'})) return count(p)"}, {"query": "Please list the first 3 characters.", "cypher": "match (:ENTITY{name:'The film was released on DVD in Japan on December 15, 2010.'})<-[:Relationship{name:'Sound'}]- (p) return p.name order by p.name limit 3"}, {"query": "What is the content of the selection activity of Chan Si-sen: National Spine? Yang En-Zhen: Life is like a mirror? Sheng Yan-Shan: Is there a mirror? Zhong Tieng-Rong, Hu Xue-Li: Reng Rin-Li? Chen Xiaolan: Doctors?", "cypher": "match (:ENTITY{name:'Chang Shih-Soon: The backbone of the nation ? Deng Enze: Life is like a rose ? The message is clear: ? The film is based on the novel by the same name by the same author. ? Chen Xiaolan: The heart of the doctor'})<-[:Relationship{name:'The results'}]- (p) return distinct p.name"}, {"query": "What is the main ingredient of soap?", "cypher": "match (:ENTITY{name:'Good skin'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The main ingredients'}]->(n) return distinct n.name"}, {"query": "0551 is a real estate company, do you know who is the president of this company?", "cypher": "match(:ENTITY{name:'0551The business'})-[:Relationship{name:'The President'}]-> (x) return x.name"}, {"query": "Can you list the photography awards that were presented in October?", "cypher": "match (:ENTITY{name:'10The Moon'})<-[:Relationship{name:'The exhibition'}]- (q) return q.name"}, {"query": "What are the films directed by Huang Zhiyuan? Can you tell me about five?", "cypher": "match (:ENTITY{name:'Yellow pepper'})<-[:Relationship{name:'Director'}]-(p)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "What is the area code for the city with the postal code 675,000?", "cypher": "match (:ENTITY{name:'675000'})<-[:Relationship{name:'Postal code'}]- (q) return q.name"}, {"query": "The Chinese version of the online novel, \"The Battle of the Sheep\", was published on which platform?", "cypher": "match(:ENTITY{name:'War and herding[A web novel that was published in Chinese on the Internet]'})-[:Relationship{name:'Connecting platforms'}]-> (n) return n.name"}, {"query": "I learned that the rectangular leafy green belongs to the rat family Li, and is distributed in Guangdong, Anhui, Zhejiang and other places.", "cypher": "match (n:ENTITY{name:'The rectangular leaves are green.'})-->(h) with h order by h.name where h.name <> 'The report also highlighted the need for a new system of taxation for the Chinese economy.' and h.name <> 'The Rat Li Ko' return h.name limit 5"}, {"query": "Where is the county of Yangon located? What tourist attractions are there?", "cypher": "match (:ENTITY{name:'The county of Chiang Mai'})-[:Relationship{name:'Geographical location'}]->(n) return n.name as name union all match (:ENTITY{name:'The county of Chiang Mai'})-[:Relationship{name:'Famous places'}]->(m) return m.name as name"}, {"query": "Can you name five profiles of Australian head coach Corika Steve in no less than five levels of relationships?", "cypher": "match (n:ENTITY{name:'Corica Steve'})-[*1..5]->(x) where x.name<>'Corica Steve,The Australian head coach.' return distinct x.name limit 5"}, {"query": "He is a Yang Liang (now Henan Open) man, a Changyang (now Zhejiang Hangzhou) man, a painter of iterations, please describe his representation?", "cypher": "match (m:ENTITY{name:'The Sukhshan1094Year of birth\u20151172Year of birth\uff09\uff0c\u6c74\u6881\uff08\u4eca\u6cb3\u5357\u5f00\u5c01\uff09\u4eba\uff0c\u4e00\u8bf4\u4e3a\u94b1\u5858\uff08\u4eca\u6d59\u6c5f\u676d\u5dde\uff09\u4eba\uff0c\u5b8b\u4ee3\u753b\u5bb6\u3002'})<-[:Describe{name:'Describe'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(q) return distinct q.name"}, {"query": "Please provide two publications priced at 100 yuan", "cypher": "match (:ENTITY{name:'100Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "I'm not sure what kind of job Kong Min-jung does.", "cypher": "match (:ENTITY{name:'The first was the Korean War.'})<-[:Relationship{name:'Chinese name'}]-(m)-[:Relationship{name:'Professional life'}]->(p) return p.name order by p.name limit 3"}, {"query": "Which three major awards have been given to films and TV productions shot in Yunnan, China?", "cypher": "match (q:ENTITY{name:'China'})<-[:Relationship{name:'Location'}]-(h)-[:Relationship{name:'Main awards'}]->(m) return distinct m.name limit 3"}, {"query": "Can you find five songs that are inspired by the music of the original song?", "cypher": "match (:ENTITY{name:'Witch Enlightenment'})<-[:Relationship{name:'The song was originally sung'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Music works'}) return mn.name limit 5"}, {"query": "In which year was the Faculty of Mechanical and Electrical Engineering of Fujian Agricultural Forest University established?", "cypher": "match (:ENTITY{name:'School of Mechanical and Electrical Engineering at Fujian Agricultural Forestry University'})-[:Relationship{name:'The time of creation'}]-> (m) return distinct m.name"}, {"query": "Do you know what kind of relationships are involved in the three layers of good morning?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Good morning with a soft smile'}) UNWIND relationships(path) AS rel return rel.name limit 3"}, {"query": "What is the name of the 1987th album by mainland musician Liang Xiaosheng, written and sung by Liang Xiaosheng?", "cypher": "match(:ENTITY{name:'1987th'})-[:Relationship{name:'Album by'}]-> (q) return q.name"}, {"query": "Can you name a person known as Yuan Wen, one of his representative works?", "cypher": "match (p:ENTITY{name:'The Yuan Dynasty'})<-[:Relationship{name:'Other names'}]-(h),(h)-[:Relationship{name:'Representative works'}]->(n) return n.name order by n.name limit 1"}, {"query": "Where is the production area of the left bank of the river where Chen Changyu directed the TV series in 2014?", "cypher": "match(:ENTITY{name:'On the left bank of the river[2014Young Chen Chen directed the TV series]'})-[:Relationship{name:'Production areas'}]-> (n) return n.name"}, {"query": "Can you tell us about all the relationships that are contained in the six layers?", "cypher": "match path=(n)<-[:Relationship*6]-(p:ENTITY{name:'The rest of the world'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me everything you know about South Korean Prime Minister Park Geun-hye?", "cypher": "match (:ENTITY{name:'The Park of the Pillars'})-[:Relationship*1..3]-(p) return p.name limit 10"}, {"query": "Can you tell me who Sunny Red is?", "cypher": "match (:ENTITY{name:'Sunny Red'})--(q) return q.name skip 2"}, {"query": "What is the opposite of the near and far equivalent of peaches?", "cypher": "match (:ENTITY{name:'Peaches[Chinese pronunciation]'})-[:Relationship{name:'The synonym'}]->(n) return n.name as name union all match (:ENTITY{name:'Peaches[Chinese pronunciation]'})-[:Relationship{name:'The Antithesis'}]->(m) return m.name as name"}, {"query": "I love racing cars so much, do you know what the top speed of this 1968 Lamborghini Espada is?", "cypher": "match(:ENTITY{name:'1968The LamborghiniEspada'})-[:Relationship{name:'Highest speed'}]-> (h) return h.name"}, {"query": "What are the next five works by Liu Bei that will be presented in the four relationships related to the Far East?", "cypher": "match (n:ENTITY{name:'The Pavilion'})-[*1..4]->(x) where x.name<>'The Younger' return distinct x.name limit 5"}, {"query": "I would like to know the English name of the white-eye fungus, can you help me?", "cypher": "match(:ENTITY{name:'White-collared paralytic'})-[:Relationship{name:'English aliases'}]-> (n) return n.name"}, {"query": "I'm asking you, VIP Lover 2: Again, what is the first lady's novel genre?", "cypher": "match(:ENTITY{name:'VIPThe Lovers2See you again, first lady.'})-[:Relationship{name:'Novel genre'}]-> (n) return n.name"}, {"query": "The 2.5% of the total amount of the liquid is used in the suspension of the micro-capsule.", "cypher": "match(:ENTITY{name:'2.5%The net suspension of the microcapsule'})-[:Relationship{name:'Manufacturer'}]-> (q) return q.name"}, {"query": "Can you tell me about the author of this book, who is building and managing digital cities?", "cypher": "match (:ENTITY{name:'Building and managing digital cities'})<-[:Relationship{name:'Title'}]-(p)-[:Relationship{name:'Written by'}]->(n) return distinct n.name"}, {"query": "What is the history of the Maghreb culture and what are its main findings?", "cypher": "match (:ENTITY{name:'The culture of the Magnetic Mountains'})-[:Relationship{name:'The Age'}]->(n) return n.name as name union all match (:ENTITY{name:'The culture of the Magnetic Mountains'})-[:Relationship{name:'Major discoveries1'}]->(m) return m.name as name union all match (:ENTITY{name:'The culture of the Magnetic Mountains'})-[:Relationship{name:'Major discoveries2'}]->(r) return r.name as name"}, {"query": "What are the game labels for each game? Please sort by the number of labels from small to large.", "cypher": "match (n:ENTITY{name:'Artillery raids2The Unbeatable'})-[:Relationship{name:'Date of release'}]->(:ENTITY)<-[:Relationship{name:'Date of release'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you give me an example of five famous alumni of this school? This school is a historic key secondary school in Yao City, the famous secondary school in Yao City, Yang Han Yun Secondary School.", "cypher": "match (q:ENTITY{name:'The historic key secondary school in Yaound\u00e9, the famous secondary school in Yaound\u00e9\u2014\u2014The Chinese government has been trying to stop the spread of the virus.'})<-[:Describe{name:'Describe'}]-(n)-[:Relationship{name:'Famous alumni'}]->(m) return m.name order by m.name limit 5"}, {"query": "Can you tell me if Xinjiang is not the kind of relationship that guests are involved in in the four-tier dream?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'Dream Xinjiang is not a guest'}) UNWIND relationships(path) AS rel RETURN rel.name limit 1"}, {"query": "Can you tell me the names of five Chinese people?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(q) return distinct q.name limit 5"}, {"query": "I'm not sure what I'm going to do if I get a job that three British people would do.", "cypher": "match (:ENTITY{name:'The United Kingdom'})<-[:Relationship{name:'Nationality'}]-(m)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 3"}, {"query": "Can you get me five books for 10 bucks?", "cypher": "match (:ENTITY{name:'10Japanese yen'})<-[:Relationship{name:'Pricing'}]-(m), (m)-[:Relationship{name:'Category'}]->(n) where n.name='The news' return m.name limit 5"}, {"query": "How did I get to be successful and what is the shortest path to the three layers of book enlightenment?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'How I Succeeded'})-[*..3]-(b:ENTITY{name:'The Book of Revelation'})) return count(p)"}, {"query": "I'm not sure what you mean by \"stop\" but I'm not sure what you mean by \"stop\".", "cypher": "match (:ENTITY{name:'The mother stops'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Interpretation of words'}]->(q) return distinct q.name"}, {"query": "What is the name of the film written by Liu Xiaobo?", "cypher": "match (:ENTITY{name:'The Japanese'})<-[:Relationship{name:'Writer'}]- (n) return distinct n.name"}, {"query": "The 09MND cold-pressed steel pipe we developed is mainly used for what?", "cypher": "match(:ENTITY{name:'09MNDCold-pressure steel pipe'})-[:Relationship{name:'Useful'}]-> (n) return n.name"}, {"query": "Can you describe this person, what are his labels?", "cypher": "match (:ENTITY{name:'The Longshanks'})-[:Describe{name:'Describe'}]->(n) return n.name as name union all match (:ENTITY{name:'The Longshanks'})-[:Tag{name:'The label'}]->(m) return m.name as name union all match (:ENTITY{name:'The Longshanks'})-[:Tag{name:'The label'}]->(r) return r.name as name"}, {"query": "Do you know the Chinese Hong Kong film distributor for the film Generation Flowers?", "cypher": "match(:ENTITY{name:'The Flower of a Generation'})-[:Relationship{name:'Publishing company'}]-> (p) return p.name"}, {"query": "How many versions of the software can you tell me about? What is the size of the software? How many people have downloaded it?", "cypher": "match (:ENTITY{name:'The food is sold'})-[:Relationship{name:'Software version'}]->(n) return n.name as name union all match (:ENTITY{name:'The food is sold'})-[:Relationship{name:'Software size'}]->(m) return m.name as name union all match (:ENTITY{name:'The food is sold'})-[:Relationship{name:'Downloads'}]->(r) return r.name as name"}, {"query": "What is the name of the relationship involved in the 5th floor of the Guangzhou Samsung Decoration Company?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The company is a subsidiary of Samsung.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "What books are there in the history class? Can you help me find two?", "cypher": "match (:ENTITY{name:'History books'})<-[:Tag{name:'The label'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know what chemical has CAS number 313223-00-6?", "cypher": "match (q:ENTITY{name:'313223-00-6'})<-[:Relationship{name:'CASNo'}]- (m) return distinct m.name"}, {"query": "The name of a work is called Seven O'Clock Faces, and what is the name of the other one?", "cypher": "match (:ENTITY{name:'The seven-hour mystery'})<-[:Relationship{name:'Other names'}]- (x) return x.name"}, {"query": "Who was the first education minister of the National Government?", "cypher": "match (:ENTITY{name:'First Minister of Education of the National Government'})<-[:Relationship{name:'Major achievements'}]-(m), (m)-[:Relationship{name:'Where I was born'}]->(n) return m.name,n.name"}, {"query": "What was the NBA shutdown of 1964?", "cypher": "match(:ENTITY{name:'1964Year of birthNBAThe shutdown'})-[:Relationship{name:'The incident'}]-> (n) return n.name"}, {"query": "What is the Chinese name for a man named Ye-Ye-Ye-Ye-Ye?", "cypher": "match (:ENTITY{name:'The leafy coconut'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name"}, {"query": "What is the shortest distance between Nakin Village and Mantai Village on the second floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Nakin village'})-[*..2]-(b:ENTITY{name:'Mantai Village'})) return count(p)"}, {"query": "The following literary works are in the context of the two-tier relationship between Snow Revival and the events of the 18th and 19th of this month.", "cypher": "match (n:ENTITY{name:'The snowfall on the 18th and 29th of the month of November has caused more than a few deaths.'})-[:Relationship*1..2]->(x) where x.name<>'Literature and culture' return distinct x.name"}, {"query": "When is the date of publication of this new edition of the 2011 Shandong Provincial Civil Servants Recruitment Examination Special Materials Statement?", "cypher": "match(x:ENTITY{name:'2011New edition of Shandong Province Public Servants Recruitment Exam with Special Materials Statement'})-[:Relationship{name:'Date of publication'}]-> (m) return m.name"}, {"query": "The book was published in the United States by the publisher of The King's Glory.", "cypher": "match (:ENTITY{name:'The Glory of the King Co-authored'})<-[:Relationship{name:'Written by'}]-(n)-[:Relationship{name:'Publishing house'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know when Three Stone was founded?", "cypher": "match (p:ENTITY{name:'The Samsung Corporation'}) return p.time"}, {"query": "What is the theme of the 2012 Chinese Higher Education Design Art Competition?", "cypher": "match(:ENTITY{name:'2012The first Chinese university design art competition'})-[:Relationship{name:'The theme of the contest'}]-> (q) return q.name"}, {"query": "The following is a list of information about the relationship between the two sides of the Shining, who is a Chinese police officer.", "cypher": "match (n:ENTITY{name:'Snowfall'})-[:Relationship*1..2]->(x) where x.name<>'Chinese police' return distinct x.name"}, {"query": "Please list all the relationship information within the 2 layers related to the rental criteria.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Rental standards'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What is the profession of a cook?", "cypher": "match (h:ENTITY{name:'The art of cooking'})<--(m)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 1"}, {"query": "Can you tell me which authors weighing 66 kg have representative works?", "cypher": "match (:ENTITY{name:'66'})<-[:Relationship{name:'Weight'}]-(q),(q)-[:Relationship{name:'Representative works'}]->(p) return distinct p.name"}, {"query": "Can you recommend 8 books for $30?", "cypher": "match (:ENTITY{name:'30.00Japanese yen'})<-[:Relationship{name:'Pricing'}]- (q) return q.name limit 8"}, {"query": "What were the final results of the 1894 Hong Kong Plague reported in the newspapers?", "cypher": "match(:ENTITY{name:'1894The year of the plague in Hong Kong'})-[:Relationship{name:'The result'}]-> (x) return x.name"}, {"query": "Have you any information that I can give you?", "cypher": "match (q:ENTITY{name:'Liang Chen'})--(x) return  distinct x.name limit 1"}, {"query": "The price of a ticket to the Qianlong Wall [Beijing Palace Shadow Wall] is how much?", "cypher": "match(:ENTITY{name:'The Dragon Wall[The Shadow Wall of the Palace in Beijing]'})-[:Relationship{name:'The price of tickets'}]-> (n) return n.name"}, {"query": "Please tell me 10 of the main achievements of this celebrity, whose most representative work is the rap and theater art overview.", "cypher": "match (:ENTITY{name:'The art of rapping and theatre'})<-[:Relationship{name:'Representative works'}]-(q)-[:Relationship{name:'Major achievements'}]->(p) return p.name order by p.name limit 10"}, {"query": "What are the publications of the Economic Science Press? When are they published? Could you give me a list of five?", "cypher": "match (:ENTITY{name:'The publisher of Economic Science'})<-[:Relationship{name:'Publishing house'}]-(h),(h)-[:Relationship{name:'Published'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you tell us who is the author of the book, and what era and genre it was written in?", "cypher": "match (:ENTITY{name:'In the cold food lane'})-[:Relationship{name:'Written by'}]->(n) return n.name as name union all match (:ENTITY{name:'In the cold food lane'})-[:Relationship{name:'The year'}]->(m) return m.name as name union all match (:ENTITY{name:'In the cold food lane'})-[:Relationship{name:'Sports'}]->(r) return r.name as name"}, {"query": "To use the distillation method to purify the acetylsalicylic acid, first of all you need to ask what is the boiling point of the banana?", "cypher": "match(:ENTITY{name:'The banana is called a banana.'})-[:Relationship{name:'Boiling point'}]-> (q) return q.name"}, {"query": "What is the shortest path between the crazy cornfield and the officers and the boy on the third floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Mad Corn'})-[*..3]-(b:ENTITY{name:'Officers and boys'})) return count(p)"}, {"query": "Who looks as tall as Beck Mark, and what tags do these people each have?", "cypher": "match (n:ENTITY{name:'Beck Mark'})-[:Relationship{name:'Height'}]->(:ENTITY)<-[:Relationship{name:'Height'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What kind of work is the famous monk's rumor?", "cypher": "match (:ENTITY{name:'The rumours of the famous monk'})<-[:Relationship{name:'Works by'}]-(n)-[:Relationship{name:'Category'}]->(h) return distinct h.name limit 1"}, {"query": "What important events happened to the people of Leeds United?", "cypher": "match (:ENTITY{name:'Leeds United'})<-[:Relationship{name:'Sports team'}]-(h)-[:Relationship{name:'Important events'}]->(p) return distinct p.name"}, {"query": "What do you know about the relationship names that are involved in the Five Levels of Hebei Funing?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Funaning in Hebei'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Can you summarize the quarrelsome veil in three articles?", "cypher": "match (:ENTITY{name:'The Swans'})--(p) with p order by p.name return p.name limit 3"}, {"query": "The secret of the grave is the Book. He is the priceless.", "cypher": "match (:ENTITY{name:'The Secret of the Grave'})<-[:Relationship{name:'Title'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "I'm not sure if you're familiar with the story of the two young men who were in a relationship.", "cypher": "match (n:ENTITY{name:'Blue and blue'})-[:Relationship*1..2]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "Do you know of a suspect named Zhukhua?", "cypher": "match (:ENTITY{name:'The Zhukva'})<-[:Relationship{name:'Suspected of crime'}]- (q) return q.name"}, {"query": "I wonder who is the chief accountant of the Hellenic Institute of Economics?", "cypher": "match (x:ENTITY{name:'Accountant at the Hellenic Institute of Economics'})<-[:Relationship{name:'Professional life'}]-(p),(p)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name"}, {"query": "I just watched The Adventures of Ding Dong 3: The Blue Lotus and the Mysterious Snowman with my son a few days ago, did you check the time of the premiere?", "cypher": "match(:ENTITY{name:'The Diying Chronicle3Blue Lotus and the Mysterious Snowman'})-[:Relationship{name:'The show time'}]-> (m) return m.name"}, {"query": "Can you tell me when the social media labels are running? Name three?", "cypher": "match (:ENTITY{name:'The Society'})<-[:Tag{name:'The label'}]-(m)-[:Relationship{name:'Running time'}]->(x) return distinct x.name limit 3"}, {"query": "What is the shortest relationship path between the Boxer armored personnel carrier and the Grey Bear armored personnel carrier on the second floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Boxers in armored personnel carriers'})-[*..2]-(b:ENTITY{name:'The armored grizzly bear'})) return count(p)"}, {"query": "What do you know about the molecular formula for the title citrine?", "cypher": "match (:ENTITY{name:'Title Sidin'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Molecular'}]->(q) return distinct q.name"}, {"query": "Please do you know of any software that supports WinXp/vista/win7/win8/2000/2003 systems?", "cypher": "match (:ENTITY{name:'Winxp/vista/win7/win8/2000/2003'})<-[:Relationship{name:'Software platform'}]- (p) return p.name limit 4"}, {"query": "What are the different labels of the films that are available on the same company as the first love fighter? Please list them by the number of labels of each film, from small to large.", "cypher": "match (n:ENTITY{name:'The first-time fighter'})-[:Relationship{name:'Production company'}]->(:ENTITY)<-[:Relationship{name:'Production company'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Can you tell me where Happy Planet 1 was filmed?", "cypher": "match (:ENTITY{name:'The Happy Planet1'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Location'}]->(n) return distinct n.name"}, {"query": "The film is about a young boy who is forced to grow up in a house full of problems.", "cypher": "match (:ENTITY{name:'Growing Up in Trouble'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Starring'}]->(n) return distinct n.name"}, {"query": "Can you tell me the name of the relationship in the two layers of the red-leafed spider?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Red-leaved coneflower'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the molecular formula of the drug known as succubi-pure?", "cypher": "match (:ENTITY{name:'The following are the most common types of acne:'})<-[:Relationship{name:'Drug names'}]-(m),(m)-[:Relationship{name:'Molecular'}]->(n) return distinct m.name,n.name"}, {"query": "So I heard that 13X molecule silicon is very useful, what is its wear rate?", "cypher": "match(m:ENTITY{name:'13XMolecular hydrogen'})-[:Relationship{name:'Absorption rate'}]-> (n) return n.name"}, {"query": "What are the national unwillingnesses?", "cypher": "MATCH (:ENTITY{name:'The national level'})<-[:Relationship{name:'Non-hereditary'}]-(m) return m.name skip 0 limit 10"}, {"query": "Find 10 totally free mobile games.", "cypher": "match (:ENTITY{name:'Completely free'})<-[:Relationship{name:'Costs'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'Mobile games'}) return mn.name limit 10"}, {"query": "What are the prices for tickets to the 2013 FTISLAND Beijing concert reported online?", "cypher": "match(x:ENTITY{name:'2013FTISLANDThe concert in Beijing'})-[:Relationship{name:'The price of tickets'}]-> (p) return p.name"}, {"query": "There is an analog technology with the classification number O241.82-39, do you know the technical name?", "cypher": "match (:ENTITY{name:'O241.82-39'})<-[:Relationship{name:'Classified'}]- (x) return x.name"}, {"query": "Ask about the personal profile of the two-tiered relationship that Lonsaki Tulov, played by actor Yoshida Doudeng, has.", "cypher": "match (n:ENTITY{name:'The first was the Japanese.'})-[*1..2]->(x) where x.name<>'The actor is Zhou Yida.' return distinct x.name"}, {"query": "Do you know what the relationship is with the Anhui Forestry Vocational College on the 5th floor?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'Anhui Forestry School'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you get me three books for reading in Chinese literature?", "cypher": "match (:ENTITY{name:'Chinese literature'})<-[:Tag{name:'The label'}]-(n)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "I learned that the Alexander III egg, also known as the Alexander III egg, is only 9.5 cm tall, can you help me find three more information about it?", "cypher": "match (n:ENTITY{name:'Alexander, third century, read eggs'})-->(h) with h order by h.name where h.name <> '9.5In centimeters' and h.name <> 'The egg is a memorial to Alexander III.' return h.name limit 3"}, {"query": "Do you know what the two-layer relationship is about the painting? Can you name three?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Painting the distance'}) UNWIND relationships(path) AS rel RETURN rel.name limit 3"}, {"query": "Please help me to introduce you to the 10 places to visit in Jilin Province, in the city of Matsuhara, in the province of Jilin.", "cypher": "match (:ENTITY{name:'Ryu-shi County, Matsunaga City, Jilin Province'})<-[:Relationship{name:'Geographical location'}]-(h)-[:Relationship{name:'Famous places'}]->(n) where n.name <> 'The east wall, the west wall, the north wall, the south wall' return distinct n.name limit 10"}, {"query": "Ask Hegland if his name is Kim.", "cypher": "match (:ENTITY{name:'The Hegland'})<-[:Relationship{name:'Other names'}]- (x) return x.name"}, {"query": "What is the name of a novel by a man named He Weiwei?", "cypher": "match (:ENTITY{name:'The Heifing'})<-[:Relationship{name:'The man'}]- (n) return distinct n.name"}, {"query": "Which comedy action films has Martin Blaster been involved in producing?", "cypher": "match (p:ENTITY{name:'Comedy The Movement'})<--(x)-->(q:ENTITY{name:'Martin, what's going on?\u00b7The Brest'}) return x.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 91 (offset: 90))\n\"PROFILE match (p:ENTITY{name:'Comedy The Movement'})<--(x)-->(q:ENTITY{name:'Martin, what's going on?\u00b7The Brest'}) return x.name\"\n                                                                                           ^"}, {"query": "Where is the area of the natural village of Pingping Qingjiang? And what is the license plate code of this place? Tell me again about the main industry of this place.", "cypher": "match (:ENTITY{name:'The natural village of Plain Peak'})-[:Relationship{name:'Area'}]->(n) return n.name as name union all match (:ENTITY{name:'The natural village of Plain Peak'})-[:Relationship{name:'License number'}]->(m) return m.name as name union all match (:ENTITY{name:'The natural village of Plain Peak'})-[:Relationship{name:'Main industries'}]->(r) return r.name as name"}, {"query": "When was the founding of the Cantonment Camping Cable Company Limited? Where is the headquarters?", "cypher": "match (:ENTITY{name:'Cantonment Cable Co.'})-[:Relationship{name:'Location'}]->(n) return n.name as name union all match (:ENTITY{name:'Cantonment Cable Co.'})-[:Relationship{name:'Founded'}]->(m) return m.name as name"}, {"query": "Which study book is Xiaozhou coming from?", "cypher": "match (:ENTITY{name:'The Sun'})<-[:Relationship{name:'Written by'}]- (x) return x.name"}, {"query": "The main achievement of the author is the novel \"The Love of the Midnight\".", "cypher": "match (:ENTITY{name:'The middle novel is called \"The Love of the Afternoon\".'})<-[:Relationship{name:'Major achievements'}]- (n) return n.name order by n.name limit 3"}, {"query": "Do you know the types of relationships within the four layers of the renewable energy profession?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'New energy'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What do people born in Yueyang County do?", "cypher": "match (:ENTITY{name:'Yueyang County'})<-[:Relationship{name:'Where I was born'}]-(m)-[:Relationship{name:'Professional life'}]->(q) return distinct m.name"}, {"query": "Could you please tell me the name of the company registered under number 612700100027135?", "cypher": "match (:ENTITY{name:'612700100027135'})<-[:Relationship{name:'Registered number'}]- (m) return m.name"}, {"query": "The person who graduated from Guangzhou Central Medical School, what is his profession? Can you tell me 5 things?", "cypher": "match (:ENTITY{name:'Chinese Medical School in Guangzhou'})<-[:Relationship{name:'Graduated'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(x) return x.name skip 1 limit 5"}, {"query": "The Chinese Taiwanese and Malaysian citizens are all cooks.", "cypher": "match (:ENTITY{name:'Malaysia, China and Taiwan'})<-[:Relationship{name:'Nationality'}]-(m)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name"}, {"query": "I love hearing Chinese stories, can you tell me what kind of stories they are?", "cypher": "match(:ENTITY{name:'Chinese story'})-[:Relationship{name:'Type of'}]-> (p) return p.name"}, {"query": "I'm curious about this compound called 2-acetylheptyl (III) nitrate, what is its CAS NO?", "cypher": "match(:ENTITY{name:'2-Acetic acid(III)'})-[:Relationship{name:'CASNO'}]-> (n) return n.name"}, {"query": "Which of the major departments are included in the Shanghai area universities?", "cypher": "match (:ENTITY{name:'Shanghai'})<-[:Relationship{name:'Area'}]-(q),(q)-[:Relationship{name:'Main Faculty'}]->(x) return distinct x.name limit 5"}, {"query": "What is the shortest path between a family name and a family name in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Painted surname'})-[:Relationship*..2]-(b:ENTITY{name:'Eastern name'})) return count(p)"}, {"query": "Do you have a CAS registration number for 7-Cyan-4-Cyan on your profile?", "cypher": "match(:ENTITY{name:'7-Oh, my God.-4-Oh, my God.'})-[:Relationship{name:'CASThe number of the log'}]-> (q) return q.name"}, {"query": "Where is the address of the Royal Wealth Company?", "cypher": "match (p:ENTITY{name:'The Royal Wealth Company'}) return p.location"}, {"query": "Please provide 10 book titles in 310,000 words.", "cypher": "match (:ENTITY{name:'310000'})<-[:Relationship{name:'The word count'}]- (m) return m.name limit 10"}, {"query": "When was the Taipei Lake Bridge built and when did it open?", "cypher": "match (:ENTITY{name:'The Pacific Bridge'})-[:Relationship{name:'Construction time'}]->(n) return n.name as name union all match (:ENTITY{name:'The Pacific Bridge'})-[:Relationship{name:'Time to go'}]->(m) return m.name as name"}, {"query": "What is the profession of this person born in October 1963? Can you tell me one?", "cypher": "match (:ENTITY{name:'1963Year of birth10The Moon'})<-[:Relationship{name:'Date of birth'}]-(p),(p)-[:Relationship{name:'Professional life'}]->(x) return x.name skip 2 limit 1"}, {"query": "Can you name 15 words that come to mind when you think of America?", "cypher": "match (:ENTITY{name:'The United States'})<-[:Relationship{name:'State'}]- (x) return x.name limit 15"}, {"query": "Can you list a school that has a 3 jump label relationship with Yangzhou Normal University of Technology in Jiangsu?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The University of Technology of Guangzhou, Jiangsu Province'}) return distinct n.name limit 1"}, {"query": "How many people live in Changchun County?", "cypher": "match(:ENTITY{name:'Changchun County'})-[:Relationship{name:'Population'}]-> (n) return n.name"}, {"query": "Do you have an English name for the 2015 Copa Am\u00e9rica in Chile, what is it?", "cypher": "match(h:ENTITY{name:'2015Chilean Cup of the Americas'})-[:Relationship{name:'English name'}]-> (n) return n.name"}, {"query": "The book is based on the life of a young man who was killed in a car accident in the early 1990s.", "cypher": "match(:ENTITY{name:'1/7The game of recovery'})-[:Relationship{name:'Publishing house'}]-> (m) return m.name"}, {"query": "What is the shortest distance between Hunan Software Vocational College and Hunan Transportation Engineering College on the second level?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Hunan Software Vocational School'})-[:Relationship*..2]-(b:ENTITY{name:'Hunan School of Transportation Engineering'})) return count(p)"}, {"query": "Who are the soldiers in Huang An, Hubei?", "cypher": "match (:ENTITY{name:'Huang An, north of Hubei'})<-[:Relationship{name:'Where I was born'}]-(m), (m)-[:Relationship{name:'Professional life'}]->(n) where n.name='Military' return distinct m.name"}, {"query": "Find out the manufacturers of professional logos: Can you tell us about the 5 companies that are related to Shenzhen Shenzhen Shenmue Industrial Products Co., Ltd.?", "cypher": "match (n:ENTITY{name:'Shenzhen-based Shenmue Manufacturing Co., Ltd.'})-[*]->(x) where x.name<>'Liu Mei Industrial is a Chinese professional brand name manufacturer based in Shenzhen, Guangdong.' return distinct x.name limit 5"}, {"query": "What is the shortest relationship path between the two layers of the Great Barrier Reef and the Taiwanese Mountain Barrier Reef?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Cabbage'})-[:Relationship*..2]-(b:ENTITY{name:'Taiwanese Mountain Spinach'})) return count(p)"}, {"query": "Please tell me who is the historical celebrity of Scorpio? Name 11?", "cypher": "match (n:ENTITY{name:'The Dragon'})<-[:Relationship{name:'The constellations'}]- (m) return m.name limit 11"}, {"query": "I'm a Taiwanese born in China, can you tell me about the people in the three-tiered relationship between Taiwan and China?", "cypher": "match (n:ENTITY{name:'The Real State'})-[:Relationship*1..3]->(x) where x.name<>'The Real State' return distinct x.name"}, {"query": "Can you give me three examples of countries in Europe whose capitals are in the same country?", "cypher": "match (:ENTITY{name:'The European Union'})<-[:Relationship{name:'Countries'}]-(x),(x)-[:Relationship{name:'Capital city'}]->(q) return distinct q.name limit 3"}, {"query": "What is the main business of assisting in the sale of financial instruments issued by fundraisers?", "cypher": "match (:ENTITY{name:'Assist in the sale of financial instruments issued by funders'})<-[:Relationship{name:'Difference'}]-(x),(x)-[:Relationship{name:'Main business'}]->(n) return distinct n.name limit 1"}, {"query": "What is the area code of the Zhuzhou district in Fujian province?", "cypher": "match (:ENTITY{name:'The area of Fujian Province'})<-[:Relationship{name:'Area code'}]- (q) return q.name"}, {"query": "What is the shortest path between the two layers of aviation engine test vehicle technology and modern rural logistics finance research", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Testing of aircraft engines'})-[*..2]-(b:ENTITY{name:'Modern rural logistics finance research'})) return count(p)"}, {"query": "Problems, can you tell me what the 4th floor tag is with the city?", "cypher": "match (n)-[:Tag*4{name:'The label'}]->(p:ENTITY{name:'The city'}) RETURN distinct n.name"}, {"query": "Do you know when the company was founded?", "cypher": "match (p:ENTITY{name:'The Jump Company'}) return p.time"}, {"query": "Can you list 7 chemicals that are 98% pure?", "cypher": "match (:ENTITY{name:'98%'})<-[:Relationship{name:'Purity'}]- (n) return n.name limit 7"}, {"query": "I'm going to tell you about the five levels of relationships that are relevant to the mother of Lord Moon.", "cypher": "match (n:ENTITY{name:'Come on now.'})-[*1..5]->(x) where x.name<>'The Lord of the Moon' return distinct x.name limit 5"}, {"query": "I'm looking for a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new, a new book, a new book, a new, a new book, a new, a new, a new book, a new, a new, a new, a new book, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new, a new.", "cypher": "match (:ENTITY{name:'The last of the fairies, the noble wife'})--(m) with m order by m.name where m.name <> 'All day long' return distinct m.name limit 4"}, {"query": "What is the shortest contact path between the two layers of the 75-mm 130 mm multiple rocket gun and the 75-mm 155 mm self-propelled grenade?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'75The formula130mmMulti-barrel rocket gun'})-[*..2]-(b:ENTITY{name:'Japanese75The formula155mmSelf-propelled grenades'})) return count(p)"}, {"query": "I'm not sure how much you know about Jia Jiacom.", "cypher": "match (h:ENTITY{name:'The Jia Jia Commission'})--(p) return p.name skip 1"}, {"query": "What chemical is C26H45NO9?", "cypher": "match (:ENTITY{name:'C26H45NO9'})<-[:Relationship{name:'Chemical formula'}]- (h) return h.name"}, {"query": "I need to know the boiling point of cyclohexanedioxyethane, can you help me?", "cypher": "match(:ENTITY{name:'Cyclic trioxide ketone'})-[:Relationship{name:'Boiling point'}]-> (x) return x.name"}, {"query": "Do you know how many companies are operating in Shanghai?", "cypher": "match (p:ENTITY{location:'Shanghai'}) return count(p)"}, {"query": "Do you know which hotels have check-in hours from 15:00-18:00? Name 3?", "cypher": "match (:ENTITY{name:'15:00-18:00When'}) <- [:Relationship{name:'in the When space'}]- (q) return q.name limit 3"}, {"query": "You went to the bookstore and checked the publication date of this book on foreign fairy tales, thank you.", "cypher": "match(:ENTITY{name:'The history of foreign fairy tales'})-[:Relationship{name:'Date of publication'}]-> (h) return h.name"}, {"query": "The show is so amazing, do you know what year it's coming out?", "cypher": "match(:ENTITY{name:'10Point me in the direction of God.'})-[:Relationship{name:'The show time'}]-> (x) return x.name"}, {"query": "Please tell me what are the three types of relationships that are involved in the two layers of the flower?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Flat-leaved flowers'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "Which novel has reached a cumulative reading of 113,1871 times?", "cypher": "match (:ENTITY{name:'1131871'})<-[:Relationship{name:'Cumulative reading'}]- (h) return h.name"}, {"query": "What is the alias of the fighter?", "cypher": "match (:ENTITY{name:'The fight'})<-[:Relationship{name:'Other names'}]-(m) return distinct m.name"}, {"query": "What are the applications of products with muscle, drainage, feedback, protection, isolation functions?", "cypher": "match (:ENTITY{name:'Adding, draining, feedback, protecting, and isolating'})<-[:Relationship{name:'Product features'}]-(q),(q)-[:Relationship{name:'Application of technology'}]->(x) return distinct x.name limit 3"}, {"query": "I want to go to the Shanghai station for the May 2012 concert, can you check online for me how much the tickets cost?", "cypher": "match(:ENTITY{name:'2012May Day concert at Shanghai station'})-[:Relationship{name:'The price of tickets'}]-> (x) return x.name"}, {"query": "Which of the following people is represented by a straight line of the Broththa Strait?", "cypher": "match (:ENTITY{name:'The view from the Straits of Gibraltar'})<-[:Relationship{name:'Representative works'}]- (h) return  distinct h.name"}, {"query": "The three main departments of the school, which specialize in the three areas of the province of Guizhou, are not listed in the list of mechanical engineering and clothing.", "cypher": "match (n:ENTITY{name:'Vocational training in the province of Bagan'})-[:Relationship{name:'Main Faculty'}]->(h) where h.name <> 'Mechanical power' and h.name <> 'Clothing' return distinct h.name limit 3"}, {"query": "Do you know what the link is to H5N1 with tier 3 labeling?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Type AH5N1'}) RETURN distinct n.name"}, {"query": "The director of this exclusive documentary about the Hobbit, the Hobbit, has 10 things to say about the film:", "cypher": "match (:ENTITY{name:'The Hobbit is a documentary'})-[:Relationship{name:'Director'}]-> (n) with n order by n.name return n.name limit 10"}, {"query": "What is Amberpin's alias?", "cypher": "match (:ENTITY{name:'The city of Amberes'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Other names'}]->(n) return distinct n.name limit 1"}, {"query": "What is the active power of the 200-2 type of non-combustible cooker in our factory?", "cypher": "match(:ENTITY{name:'200-2Type of non-combustible steam engine'})-[:Relationship{name:'Host power'}]-> (q) return q.name"}, {"query": "Tell me about the three levels of relationships that the Red Army Victory Memorial in Pichinchao is involved in. Can you name three?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Red Army Victory Memorial in Pichinchao'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "What do people born in Vancouver, Canada do?", "cypher": "match (:ENTITY{name:'The city of Vancouver, Canada'})<-[:Relationship{name:'Where I was born'}]-(n)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name"}, {"query": "What should be the label of the sound card/network card with integrated chips?", "cypher": "match (:ENTITY{name:'The sound card/The Internet'})<-[:Relationship{name:'Integrated chips'}]-(q),(q)-[:Tag{name:'The label'}]->(x) return distinct x.name limit 5"}, {"query": "Do you know what the main ingredient is for making a banana cake?", "cypher": "match (:ENTITY{name:'Dried mushrooms'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Primary raw materials'}]->(n) return distinct n.name"}, {"query": "Can you list the three types of relationships involved in the 5th floor Neva Village?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The village of Wa-Jin-ho'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "I need to know the profile of the Italian athlete Rainieri Nanni in the 4th tier?", "cypher": "match (n:ENTITY{name:'Raineri Nanni'})-[*1..4]->(x) where x.name<>'Raineri Nanni,The Italian athlete.' return distinct x.name"}, {"query": "Do you know what the relationship is with the three-tiered Neptune nickname?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Dunham'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What are the songs that are as long as the song and the longer the sweeter the song, and are they labeled with the same number of tags? Show me the number of labels from more to less.", "cypher": "match (n:ENTITY{name:'The longer the sweeter'})-[:Relationship{name:'Song length'}]->(:ENTITY)<-[:Relationship{name:'Song length'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you list the most representative works of the Alpine Flying Eagle?", "cypher": "match (h:ENTITY{name:'Map of the Alpine Flying Squirrel'})<-[:Relationship{name:'Representative works'}]- (n) return n.name order by n.name"}, {"query": "Can you tell me about the types of relationships within the three layers of the Tomb of Juliet Museum?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Tomb of the Juliet Museum'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Can you tell me one line of information about the types of relationships that are involved in the 5 tier ECO?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The ecological advantage'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "If you want to attend the 2011 CCTV China Summit, check the date to plan ahead.", "cypher": "match(m:ENTITY{name:'2011Year of birthCCTVSummit of public companies in China'})-[:Relationship{name:'Date of the event'}]-> (n) return n.name"}, {"query": "I'm doing this song for you, who is the original singer?", "cypher": "match(:ENTITY{name:'I did what you wanted.'})-[:Relationship{name:'The song was originally sung'}]-> (p) return p.name"}, {"query": "The 10 professional departments of the Sichuan Wenchuan Vocational College were recommended, but the management engineering college was not included.", "cypher": "match (:ENTITY{name:'Sichuan Literary and Professional College is located in Changzhou, Sichuan Province, in the city of Daegu, Sichuan Province.2013The year of approval, the Ministry of Education filed a full-time private general higher education school.'})<-[:Describe{name:'Describe'}]-(m)-[:Relationship{name:'Main Faculty'}]->(n) where n.name <> 'School of Management Engineering' return distinct n.name limit 10"}, {"query": "Help me find three bamboo letters next to each other and the structure up and down.", "cypher": "match (:ENTITY{name:'Bamboo'}) <- [:Relationship{name:'Chief of Staff'}]-(m), (m) - [:Relationship{name:'Structure'}]->(n) where n.name='up and down Structure' return distinct m.name limit 3"}, {"query": "Can anyone tell me what Sarah Thompson's main accomplishments are?", "cypher": "match (:ENTITY{name:'Sarah Thompson is a writer.'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Major achievements'}]->(h) return distinct h.name limit 5"}, {"query": "Help me find out all the information about Wang Iron.", "cypher": "match (n:ENTITY{name:'King of Iron[Vice-chairman of the Standing Committee of the Henan Provincial People's Congress]'})--(x) return distinct x.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 115 (offset: 114))\n\"PROFILE match (n:ENTITY{name:'King of Iron[Vice-chairman of the Standing Committee of the Henan Provincial People's Congress]'})--(x) return distinct x.name\"\n                                                                                                                   ^"}, {"query": "Can you tell me when Happy Planet 1 will be released?", "cypher": "match (:ENTITY{name:'The Happy Planet1'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Delivery time'}]->(n) return distinct n.name"}, {"query": "He is Chinese, so do you know what other professions he has? Can you name the top 10?", "cypher": "match (:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnicity'}]-(x)-[:Relationship{name:'Professional life'}]->(m) return m.name skip 2 limit 10"}, {"query": "Can you help me find out the climate type of Katliyan?", "cypher": "match(:ENTITY{name:'The Cat Mountain'})-[:Relationship{name:'Types of climate'}]-> (n) return n.name"}, {"query": "What is the HDMI resolution of the 12 frame splitter used today?", "cypher": "match(:ENTITY{name:'12Screen divider'})-[:Relationship{name:'HDMIResolution'}]-> (q) return q.name"}, {"query": "What is the chemical formula for C20H22O6? Can you provide two?", "cypher": "match (:ENTITY{name:'C20H22O6'})<-[:Relationship{name:'Chemical formula'}]- (n) return n.name limit 2"}, {"query": "I'm not sure who the person who gave the cold voice to the moon is.", "cypher": "match (:ENTITY{name:'The cold of the moon'})<-[:Relationship{name:'Identity'}]-(x),(x)-[:Relationship{name:'Sound'}]->(q) return distinct q.name"}, {"query": "Please help me find books by Sun Yat-sen and tell me their publisher.", "cypher": "match (:ENTITY{name:'Sunny Co-authored'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Relationship{name:'Publishing house'}]->(q) return distinct h.name,q.name"}, {"query": "Can you name a place that has a second-tier label relationship with the Sand River Village?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'The village of Sand River'}) RETURN distinct n.name"}, {"query": "I wonder what jobs graduates from the Royal Military Academy do?", "cypher": "match (:ENTITY{name:'Royal Military School'})<-[:Relationship{name:'Graduated'}]-(q)-[:Relationship{name:'Professional life'}]->(n) return distinct q.name limit 5"}, {"query": "Do you know where the Neapolitan football club is located?", "cypher": "match(:ENTITY{name:'The Naples football club'})-[:Relationship{name:'Area'}]-> (n) return n.name"}, {"query": "What is the name of the current secretary of the Yuen Long? Can you give me one?", "cypher": "match (:ENTITY{name:'The Joyful Interlude'})<-[:Relationship{name:'Current secretary'}]-(q)-[:Relationship{name:'Briefly'}]->(n) return n.name order by n.name limit 1"}, {"query": "What is the shortest distance between the Ming Dynasty site and the North Dynasty site on the second floor?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The remains of the Ming Dynasty'})-[*..2]-(b:ENTITY{name:'The ruins of the Northern Palace'})) return count(p)"}, {"query": "What are some of Sun's most iconic works?", "cypher": "match (:ENTITY{name:'Sunny[SThe Winged Orchestra]'})-[:Relationship{name:'Representative works'}]->(m) return distinct m.name"}, {"query": "What job did the person born in 1942 give me five", "cypher": "match (:ENTITY{name:'1942Year of birth'})<-[:Relationship{name:'Date of birth'}]-(h)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name limit 5"}, {"query": "Apart from the Princess of the Two Worlds, which five films were directed by graduates of the Beijing Film Academy?", "cypher": "match (:ENTITY{name:'Beijing Film School'})<-[:Relationship{name:'Graduated'}]-(x),(x)-[:Relationship{name:'Representative works'}]->(h) where h.name <> 'The Queen of the Two Worlds' return distinct h.name limit 5"}, {"query": "Can you tell me what the chief accomplishment of the sun?", "cypher": "match (:ENTITY{name:'Zhao Qian, male, professor at Zhengzhou University, formerly head of the Department of Foreign Languages, director of the Department of Foreign Language Teaching at the university.'})<-[:Describe{name:'Describe'}]-(p)-[:Relationship{name:'Major achievements'}]->(x) return distinct p.name"}, {"query": "The Great Wall of China is a monument to the history of the city.", "cypher": "match (:ENTITY{name:'The Great Wall of China[The poetry of Yang Guang]'})-[:Relationship{name:'Date of creation'}]-> (m) return distinct m.name"}, {"query": "What is the name of the family of sea cucumbers?", "cypher": "match (:ENTITY{name:'The Sea Turtle'})-[:Relationship{name:'Classified'}]-> (m) return distinct m.name"}, {"query": "I want to hear about the relationship between the two tiers of the wholesale clothing market in the Yellow River.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The wholesale market for clothing in Huangmen, Yellow River'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What is the shortest path between the three layers of the Western gills and the spiny gills?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Western Wall'})-[*..3]-(b:ENTITY{name:'The thorny shark'})) return count(p)"}, {"query": "Do you know what the Chinese name of the novel by the author of the web series Seven Nights of the Devil is?", "cypher": "match (:ENTITY{name:'The Devil and the Seven Nights'})<-[:Relationship{name:'Written by'}]-(p)-[:Relationship{name:'Chinese name'}]->(h) return distinct h.name limit 4"}, {"query": "What is the name of the famous person who died in 1895?", "cypher": "match (:ENTITY{name:'1895Year of birth'})<-[:Relationship{name:'Time of death'}]-(m)-[:Relationship{name:'Title'}]->(n) return distinct m.name"}, {"query": "Please give me 10 tags for the Shandong University Sports Carnival.", "cypher": "match (:ENTITY{name:'Shandong University Sports Carnival is being held in Shandong.'})-[:Tag{name:'The label'}]-> (q) return  distinct q.name limit 10"}, {"query": "What are the sci-fi movies? Can you tell me five?", "cypher": "match (n:ENTITY{name:'The science fiction film'})<-[:Tag{name:'The label'}]- (mn) return mn.name  limit 5"}, {"query": "Which asteroids and asteroid 8216 have the same discoverer and what labels do they have? Tell me the order in order of the number of labels for each asteroid.", "cypher": "match (n:ENTITY{name:'The asteroid8216'})-[:Relationship{name:'The discoverer'}]->(:ENTITY)<-[:Relationship{name:'The discoverer'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "There is a school that requires TOEFL, SSAT and telephone interviews, and one of its famous alumni is Mitt Romney.", "cypher": "match (:ENTITY{name:'The following is a list of the top 10 places to visit in Turkey:SSATGrades, phone interviews and more'})<-[:Relationship{name:'Requirements'}]-(q),(q)-[:Relationship{name:'Famous alumni'}]->(m) where m.name <> 'Mitt Romney' return distinct m.name limit 5"}, {"query": "Where are the Chinese wrinkled guards mainly located?", "cypher": "match (:ENTITY{name:'Chinese wrinkled guardhouse'})-[:Relationship{name:'Distribution areas'}]-> (m) return distinct m.name"}, {"query": "Can you tell us about the relationship between the five Northern Witches and the five levels of the Immortal Doll?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The Witch of the North and the Immortal Doll'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Who is the same height as Hlatswayo Thulani and what are the labels of each of these people?", "cypher": "match (n:ENTITY{name:'Hlatswayo Thulani'})-[:Relationship{name:'Height'}]->(:ENTITY)<-[:Relationship{name:'Height'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Do you know what the main achievements of people born in Yangon are?", "cypher": "match (:ENTITY{name:'The city of Yangon'})<-[:Relationship{name:'Where I was born'}]-(n)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name limit 1"}, {"query": "I can't wait to hear about the '0-3 years old baby's intellectual development - Baby 0-3 years old series?", "cypher": "match (:ENTITY{name:'0-3The intellectual development of infants-Baby, please.0-3The year series'})--(q) with q order by q.name return q.name"}, {"query": "Please list three of the areas of application for the substance described in the article.", "cypher": "match (:ENTITY{name:'An antimatter is the anti-state of normal matter.'})<-[:Describe{name:'Describe'}]-(x)-[:Relationship{name:'Scope of application'}]->(p) return p.name order by p.name limit 3"}, {"query": "Can you spell the letter for me?", "cypher": "match(:ENTITY{name:'Letters'})-[:Relationship{name:'Spelling'}]-> (n) return n.name order by n.name"}, {"query": "Please help me find three of Yang's most iconic works.", "cypher": "match(:ENTITY{name:'The Ganges[Mainland Chinese actor]'})-[:Relationship{name:'Representative works'}]-> (n) return n.name limit 3"}, {"query": "I'm going to ask you a question about the project: Is there any information about the project in relation to the second floor of the building?", "cypher": "match (n:ENTITY{name:'The theme is Ever New Hye-Soo.'})-[:Relationship*1..2]->(x) where x.name<>'The world is full of it.' return distinct x.name"}, {"query": "What is the shortest relationship path between the two layers of the poem Man Jiang Red and the song?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'The Red River; The dining room and the Hun and the Janis Mahane chaplain'}) - [*..2]-(b:ENTITY{name:'The Slave; Double land and cabins'})) return count ((p))", "error": "Invalid input 'return': expected\n  \"(\"\n  \")\"\n  \"*\"\n  \"+\"\n  \"{\" (line 1, column 191 (offset: 190))\n\"PROFILE match p=allshortestpaths (((a:ENTITY{name:'The Red River; The dining room and the Hun and the Janis Mahane chaplain'}) - [*..2]-(b:ENTITY{name:'The Slave; Double land and cabins'})) return count ((p))\"\n                                                                                                                                                                                               ^"}, {"query": "What chemical is the cas number 6334-18-5?", "cypher": "match (:ENTITY{name:'6334-18-5'})<-[:Relationship{name:'CASThe number'}]- (x) return x.name"}, {"query": "What is the shortest relationship path between the hk11a1 7.62mm light machine gun and the French Hatch-Keeper M1922 8mm light machine gun?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'hk11a1The formula7.62mmLight machine gun'})-[*..2]-(b:ENTITY{name:'French HatcheriesM1922The formula8mmLight machine gun'})) return count(p)"}, {"query": "Do you know the profession of this man, born in Berlin on January 6, 1873 and graduated from Leipzig on April 27, 1950?", "cypher": "match (q:ENTITY{name:'1873Year of birth1The Moon6The film is based on the true story of the German soldier who was killed in the war.1950Year of birth4The Moon27The day was spent in Leipzig.'})<-[:Describe{name:'Describe'}]-(x)-[:Relationship{name:'Professional life'}]->(m) return m.name order by m.name limit 1"}, {"query": "Do you have any information about the two layers of the relationship involved in fruit science?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Nuclear science'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Do you know about another profession of Xu Xian, besides being an artist?", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Relationship{name:'Professional life'}]->(x) where x.name <> 'The artist' return distinct x.name limit 1"}, {"query": "What are the main departments of the universities that offer undergraduate and master's degrees?", "cypher": "match (:ENTITY{name:'Bachelor and Master'})<-[:Relationship{name:'Schooling levels'}]-(q),(q)-[:Relationship{name:'Main Faculty'}]->(m) return distinct m.name"}, {"query": "What is the magnitude of the recent quake in the 11-16 Rift Valley?", "cypher": "match(:ENTITY{name:'11?16The earthquake at the Yangtze River crossing'})-[:Relationship{name:'The earthquake'}]-> (p) return p.name"}, {"query": "What are the famous sights built between 1736 and 1795?", "cypher": "match (:ENTITY{name:'1736-1795'})<-[:Relationship{name:'Construction time'}]-(p)-[:Relationship{name:'Famous places'}]->(n) return distinct n.name"}, {"query": "Can you find me three people who were born in Nagoya, Japan?", "cypher": "match (:ENTITY{name:'Nagoya, Japan'})<-[:Relationship{name:'Where I was born'}]-(x),(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "What chemical is CAS No. 105-55-5?", "cypher": "match (:ENTITY{name:'105-55-5'})<-[:Relationship{name:'CASNo'}]- (m) return m.name"}, {"query": "The recipe for this delicacy was explained in detail in 5 articles. It requires ingredients like peanut butter, yellow bean paste, sugar, low-fat flour, whole eggs, milk, butter, and a little soda.", "cypher": "match (:ENTITY{name:'The ingredients are peanut butter, peanut butter, sugar, low-fat flour, whole eggs, milk, butter, and a little soda.'})<-[:Describe{name:'Describe'}]-(h),(h)-[:Relationship{name:'How to Act'}]->(m) return m.name order by m.name limit 5"}, {"query": "What are the main achievements of the editorial team of the series \"China Reform and Development\"?", "cypher": "match (:ENTITY{name:'1942Year of birth9Moon-soo, Shandong Bo-hing, university culture, CPC member, former manager of the Bo-hing County Economic Development Investment Company, Shandong Province, deputy secretary of the party group, senior political engineer (now retired), special editor of the series of books by Liu Xiaobo on China's reform and development.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(h) return distinct h.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 344 (offset: 343))\n\"PROFILE match (:ENTITY{name:'1942Year of birth9Moon-soo, Shandong Bo-hing, university culture, CPC member, former manager of the Bo-hing County Economic Development Investment Company, Shandong Province, deputy secretary of the party group, senior political engineer (now retired), special editor of the series of books by Liu Xiaobo on China's reform and development.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(h) return distinct h.name\"\n                                                                                                                                                                                                                                                                                                                                                        ^"}, {"query": "Which novels are in the same category as The Mirror's Night Journey? What are the labels for each? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'The film is a nighttime journey.'})-[:Relationship{name:'Type of'}]->(:ENTITY)<-[:Relationship{name:'Type of'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "The building of the temple in the Gothic style is a matter of great interest to the people of the region.", "cypher": "match (n:ENTITY{name:'The Temple of the Mountain of Milk'})-[:Relationship*]->(x) where x.name<>'Gothic' return distinct x.name"}, {"query": "Can you tell us about the two types of relationships that Chongqing Heart Technology Co. Ltd. is involved in?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Chongqing City Centered Technology Co., Ltd.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "Do you know this man, born in Yangzhou (now in the city of Lei) in Shandong Province, whose 10 works are representative?", "cypher": "match (:ENTITY{name:'Yang County (now the city of Lei)'})<-[:Relationship{name:'Where I was born'}]-(q)-[:Relationship{name:'Representative works'}]->(x) return x.name order by x.name limit 10"}, {"query": "What does it mean to eat a chicken?", "cypher": "match (:ENTITY{name:'The coat feeds'})-[:Relationship{name:'Interpretation'}]->(m) return distinct m.name"}, {"query": "Where is the middle school?", "cypher": "match (:ENTITY{name:'Dan Yang Middle School'})-[:Relationship{name:'Area'}]-> (m) return distinct m.name"}, {"query": "The song is sung by Zhang Yimou, \"Are you the one I want to love?\"", "cypher": "match(:ENTITY{name:'Are you the one I deserve to love?'})-[:Relationship{name:'Written by'}]-> (x) return x.name"}, {"query": "The author of the article, who is a member of the family of the accused, asked:", "cypher": "match (:ENTITY{name:'The family of the wrongdoer'})<-[:Relationship{name:'Representative works'}]- (p) return p.name"}, {"query": "Do you know what 32 books are selling for $15.8?", "cypher": "match (p:ENTITY{name:'15.8'})<--(x)-->(q:ENTITY{name:'32Open up'}) return x.name"}, {"query": "What is the Chinese name of Love in Christmas? When was the song released?", "cypher": "match (:ENTITY{name:'Love in Christmas'})-[:Relationship{name:'Chinese name'}]->(n) return n.name as name union all match (:ENTITY{name:'Love in Christmas'})-[:Relationship{name:'Time of release'}]->(m) return m.name as name union all match (:ENTITY{name:'Love in Christmas'})-[:Relationship{name:'Music style'}]->(r) return r.name as name"}, {"query": "Do you know what the names of the relationships within the two levels of the Ole Hotel are?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Olay Hotel'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you list all the relationships within the two tiers of Social Security income?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Social security income'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What is the shortest relationship path between the respiratory and the pyloric veins?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Breathing in the air'})-[:Relationship*..2]-(b:ENTITY{name:'The pillar of the cork'})) return count(p)"}, {"query": "I just finished watching 007: The Skybreaker, do you know when it was filmed?", "cypher": "match(:ENTITY{name:'007The Great Crusher: The Shutter Killer'})-[:Relationship{name:'Date of filming'}]-> (h) return h.name"}, {"query": "The Chinese website started with eight non-verbal works.", "cypher": "match (:ENTITY{name:'Starting with the Chinese Web'})<--(m), (m)-->(n) where n.name<>'The Word' return distinct m.name limit 8"}, {"query": "Can you tell me which celebrity's husband is Wen Shen?", "cypher": "match (:ENTITY{name:'The Winship'})<-[:Relationship{name:'The husband'}]-(x)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name"}, {"query": "Can you tell me about the three famous alumni of the school that was founded in 1960?", "cypher": "match (:ENTITY{name:'1960Year of birth'})<-[:Relationship{name:'When did it start?'}]-(p),(p)-[:Relationship{name:'Famous alumni'}]->(x) return x.name skip 1 limit 3"}, {"query": "Wang Bingfeng has three other achievements besides being the person responsible for the advanced land management in Huanggang City.", "cypher": "match (:ENTITY{name:'King Bingbing'})<-[:Relationship{name:'Chinese name'}]-(q)-[:Relationship{name:'Major achievements'}]->(n) where n.name <> 'Advanced land management in Huanggang City' return distinct n.name limit 3"}, {"query": "Can you name 10 of the famous sights of the Gossip Shrine?", "cypher": "match (:ENTITY{name:'The Temple of Gossip'})<-[:Relationship{name:'Types of shrines'}]-(p)-[:Relationship{name:'Famous places'}]->(n) return n.name order by n.name limit 10"}, {"query": "Which book has the barcode 9787564208752 on the top?", "cypher": "match (:ENTITY{name:'9787564208752'})<-[:Relationship{name:'Barcode'}]- (m) return m.name"}, {"query": "What are the advantages and disadvantages of distributed processing?", "cypher": "match (:ENTITY{name:'Distributed processing'})-[:Relationship{name:'The advantages'}]->(n) return n.name as name union all match (:ENTITY{name:'Distributed processing'})-[:Relationship{name:'The disadvantages'}]->(m) return m.name as name"}, {"query": "What is the name of the social event published by Deng Kwun Che?", "cypher": "match (:ENTITY{name:'The work is done.'})<-[:Relationship{name:'Publisher'}]- (x) return x.name"}, {"query": "I would like to know the name of this Chinese person and his last name, can you tell me five lines?", "cypher": "match (:ENTITY{name:'Han'})<-[:Relationship{name:'Ethnicity'}]-(x),(x)-[:Relationship{name:'Other names'}]->(q) return x.name,q.name skip 2 limit 5"}, {"query": "I would like to know the main achievements of this teacher and researcher.", "cypher": "match (:ENTITY{name:'Teaching and research workers'})<-[:Relationship{name:'Professional life'}]-(m)-[:Relationship{name:'Major achievements'}]->(x) return x.name skip 2 limit 5"}, {"query": "The following is a list of five personal information in the five levels of relationship of sports personality Midori Kimura.", "cypher": "match (n:ENTITY{name:'The Japanese'})-[*1..5]->(x) where x.name<>'Sports figures' return distinct x.name limit 5"}, {"query": "Who are the people who helped me find the tennis players in the USA?", "cypher": "match (p:ENTITY{name:'The United States'})<--(x)-->(q:ENTITY{name:'Tennis player'}) return x.name"}, {"query": "Looking for 10 people weighing 65 kg?", "cypher": "match (:ENTITY{name:'65Kilograms'})<-[:Relationship{name:'Weight'}]-(n) return distinct n.name limit 10"}, {"query": "Can you tell us about the kind of relationships involved in the 23rd International Film Festival of Logano in the two layers?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The first23The film was screened at the Locarno International Film Festival.'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "How to find all the product information for a 5.62MB application software that is easy to learn?", "cypher": "match (n:ENTITY{name:'Easy to teach'}) - [*1..5]->(x) where x.name<>'Easy to teach is 5.62MB The app is a free app that uses firmware toAndroid2.2And more .' return distinct x.name"}, {"query": "What is the role of moonflower oil and where is it distributed?", "cypher": "match (:ENTITY{name:'The Moon and the Grass[Vegetable oil]'})-[:Relationship{name:'The role'}]->(n) return n.name as name union all match (:ENTITY{name:'The Moon and the Grass[Vegetable oil]'})-[:Relationship{name:'Distribution'}]->(m) return m.name as name"}, {"query": "Do you have all the types of relationships involved in the urban market in the 4 levels?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'The city market'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What historical events took place in the first five years of the Qing Dynasty?", "cypher": "match (:ENTITY{name:'The first five years of the Qing Dynasty'})<-[:Relationship{name:'Period'}]-(x)-[:Relationship{name:'Historical records'}]->(n) return distinct n.name"}, {"query": "What is the Chinese name for the animal with the same wings?", "cypher": "match (:ENTITY{name:'Waiting for wings'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Relationship{name:'Chinese name'}]->(x) return distinct x.name"}, {"query": "The name of the famous mountain Tibetan is from which dynasty?", "cypher": "match (:ENTITY{name:'The mountain of Nam'})-[:Relationship{name:'The Tribe'}]->(n) return n.name as name union all match(:ENTITY{name:'The mountain of Nam'})-[:Relationship{name:'Written by'}]->(m) return m.name as name"}, {"query": "Zhu Boen was removed from the civil service, what other information?", "cypher": "match (:ENTITY{name:'Zhou is a Chinese.'})--(m) with m order by m.name where m.name <> 'Civil servants' return distinct m.name limit 1"}, {"query": "Do you know what chemical has a molecular weight of 400.38?", "cypher": "match (:ENTITY{name:'400.38'})<-[:Relationship{name:'Molecular weight'}]- (q) return distinct q.name"}, {"query": "Which princes are there in England?", "cypher": "match (p:ENTITY{name:'The United Kingdom'})<--(x)-->(q:ENTITY{name:'The Prince'}) return x.name"}, {"query": "Tell me, what is Li Zhengya's profession?", "cypher": "match (:ENTITY{name:'The Chinese government has also been trying to prevent the spread of the virus.1964Year of birth12The Moon is born, the Nung people of Heilongjiang,1986Year of birth8The monthly participation in the work,1991Year of birth 1Moon joined the party, has a university degree.'})<-[:Describe{name:'Describe'}]-(p)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 1"}, {"query": "In which publishing houses did Mujiwara's books appear?", "cypher": "match (:ENTITY{name:'The Mood for War'})<-[:Relationship{name:'Written by'}]-(n)-[:Relationship{name:'Publishing house'}]->(q) return distinct q.name limit 2"}, {"query": "The minimum pressure of a storm is 993 millimeter (Pa); 29.32 inHg?", "cypher": "match (:ENTITY{name:'993The first is the number of people who have been killed.29.32inHg'})<-[:Relationship{name:'The lowest pressure'}]- (p) return p.name"}, {"query": "Do you know what kind of novels Christina wrote?", "cypher": "match (:ENTITY{name:'The Meaning_Christina'})<-[:Relationship{name:'Written by'}]-(m),(m)-[:Relationship{name:'Chinese name'}]->(p) return distinct p.name limit 1"}, {"query": "He died on October 8, 1935 (Ethyl year). His name and occupation is?", "cypher": "match (:ENTITY{name:'1935year (s) 10 The Moon8 The Sun'}) <- [:Relationship{name:'death The Sun period'}]-(h) - [:Relationship{name:'Professional life'}]->(m) return distinct h.name, m.name"}, {"query": "I wonder what the Chinese name of Love You Seven Day is?", "cypher": "match (:ENTITY{name:'Love you seven day'})<-[:Relationship{name:'Foreign language name'}]-(q)-[:Relationship{name:'Chinese name'}]->(m) return distinct m.name"}, {"query": "Do you know what subfamily the spider belongs to?", "cypher": "match(:ENTITY{name:'The Forked Long-tailed Spider'})-[:Relationship{name:'Subfamily'}]-> (m) return m.name"}, {"query": "This 0-12 month visual stimulation card: black and white card books, which age group is targeted?", "cypher": "match(:ENTITY{name:'0-12The monthly visual stimulus card: black and white'})-[:Relationship{name:'Readers'}]-> (m) return m.name"}, {"query": "Do you know which game makes foxes, mages, angels and fairies the main characters?", "cypher": "match (:ENTITY{name:'And the fox, and the magician, and the angel, and the fairy,'})<-[:Relationship{name:'The main character'}]- (n) return distinct n.name"}, {"query": "Can you write about Kim Ji-young's three most representative works besides the great women are all in the line of duty and the golden years?", "cypher": "match (n:ENTITY{name:'Kim Ji-yeon'})-[:Relationship{name:'Major works'}]->(h) with h order by h.name where h.name <> 'and the strong women are submissive.' and h.name <> 'The Golden Age' return h.name limit 3"}, {"query": "What asteroids are associated with asteroid 4996 and what are their respective labels? Please list them in order of number of asteroid labels.", "cypher": "match (n:ENTITY{name:'The asteroid4996'})-[:Relationship{name:'The discoverer'}]->(:ENTITY)<-[:Relationship{name:'The discoverer'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you please provide the density of NH4 2 SO3?", "cypher": "match(:ENTITY{name:'(NH4)2SO3'})-[:Relationship{name:'Density'}]-> (m) return m.name"}, {"query": "What is the work of this person who is a citizen of the People's Republic of China? Can you name 10?", "cypher": "match (:ENTITY{name:'People's Republic of China'})<-[:Relationship{name:'Nationality'}]-(h)-[:Relationship{name:'Representative works'}]->(p) return h.name skip 1 limit 10", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 37 (offset: 36))\n\"PROFILE match (:ENTITY{name:'People's Republic of China'})<-[:Relationship{name:'Nationality'}]-(h)-[:Relationship{name:'Representative works'}]->(p) return h.name skip 1 limit 10\"\n                                     ^"}, {"query": "Can you list two books in simplified Chinese?", "cypher": "match (:ENTITY{name:'Simplified Chinese'})<-[:Relationship{name:'Language'}]- (x) return x.name limit 2"}, {"query": "What are the names of people born on the same day as Cavichioli Matheus, and what are the labels on each of them?", "cypher": "match (n:ENTITY{name:'Cavichioli Matheus'})-[:Relationship{name:'Date of birth'}]->(:ENTITY)<-[:Relationship{name:'Date of birth'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "I'm not sure what kind of job a Chinese person would do.", "cypher": "match (:ENTITY{name:'China'})<-[:Relationship{name:'Nationality'}]-(h)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 1"}, {"query": "The book is called The Pity Arrow.", "cypher": "match (:ENTITY{name:'The Arrow of Grief'})<-[:Relationship{name:'Title'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "What games and dramas are in the 18th ban category?", "cypher": "match (:ENTITY{name:'18Banned'})<-[:Relationship{name:'Classified'}]- (p) return p.name limit 10"}, {"query": "What chemical is the EINECS number 200-254-4?", "cypher": "match (n:ENTITY{name:'200-254-4'})<-[:Relationship{name:'EINECSThe number'}]- (x) return x.name"}, {"query": "What books are published by China Forestry Press? 2 recommendations?", "cypher": "match (:ENTITY{name:'China Forestry Publishing'})<-[:Relationship{name:'Publishing house'}]- (p) return p.name limit 2"}, {"query": "What is the shortest path between the airspace station and the spacecraft control system?", "cypher": "match p=shortestpath((a:ENTITY{name:'Airspace control station'})-[*..2]-(b:ENTITY{name:'Spacecraft control system'})) return p"}, {"query": "I wonder what Bridget Marquand's work is representative of?", "cypher": "match (:ENTITY{name:'Bridgette\u00b7The first is the death of a man.1973Year of birth9The Moon25Born in Tillamook, Oregon, he is an American actor, producer and filmmaker.'})<-[:Describe{name:'Describe'}]-(h),(h)-[:Relationship{name:'Representative works'}]->(x) return distinct x.name"}, {"query": "Do you know anyone who is a haematologist who graduated from the same university?", "cypher": "match (:ENTITY{name:'Blood pathologists'})<-[:Relationship{name:'Professional life'}]-(m), (m)-[:Relationship{name:'Graduated'}]->(n) where n.name='The University of Ji' return m.name"}, {"query": "Can you name a few of the most representative works of the Yantai language?", "cypher": "match (:ENTITY{name:'Oh, my God.'})<-[:Relationship{name:'The Tribe'}]-(m)-[:Relationship{name:'Representative works'}]->(h) return distinct h.name"}, {"query": "What did you say LTRO was?", "cypher": "match (:ENTITY{name:'LTRO'})<--(n) return n.name"}, {"query": "What is the shortest path of connection between the east and west layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The East Wing'})-[*..3]-(b:ENTITY{name:'The West Indies'})) return count(p)"}, {"query": "The restaurant recommends 0048 banana, what is the name of the restaurant?", "cypher": "match (:ENTITY{name:'Oh, my God.0048The banana is absolutely delicious.'})<-[:Relationship{name:'Recommended salad'}]- (q) return q.name"}, {"query": "Please find out if you have more than 14 years of experience in forex gold trading or a 1-4 level relationship with Liu Yue Hua, the best trainer in Forex and Asian Forex Network.", "cypher": "match (n:ENTITY{name:'The Chinese'})-[*1..4]->(x) where x.name<>'There are more14The report also highlights the importance of the exchange rate.2007~2009Three years in a rowCCTVSecurities news channel invites online traders 2007~2009Three years in a rowCCTVThe best trainers in the field of foreign exchange are the Securities News Channel, the Newsroom, the Financial Channel, the Forex Market Dispute, the Forex Exchange, the Asian Forex Network.' return distinct x.name limit 5"}, {"query": "I want 5 tips on how to play the game within the 2nd level of the Fantastic Four.", "cypher": "match (n:ENTITY{name:'The Knights of the Flaming Dragon'})-[:Relationship*1..22]->(x) where x.name<>'The game of wisdom' return distinct x.name limit 5"}, {"query": "What is the relationship between the second tier label and Mibenbo?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'The Mining'}) return distinct n.name"}, {"query": "The 1206 studios mentioned in the report belong to which company?", "cypher": "match(:ENTITY{name:'1206The studio'})-[:Relationship{name:'Belonging'}]-> (q) return q.name"}, {"query": "What is the number of words in 400,000 words of literature?", "cypher": "match (:ENTITY{name:'400000'})<-[:Relationship{name:'The word count'}]- (q) return distinct  q.name"}, {"query": "What is the shortest path between the middle and the old floors?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The village of Slop'})-[*..2]-(b:ENTITY{name:'Old Slough Village'})) return count(p)"}, {"query": "Can you find me two books on economics published by the Mechanical Industries Publishing House?", "cypher": "match (:ENTITY{name:'Publisher of the Machine Industry'})<-[:Relationship{name:'Publishing house'}]-(m), (m)-[:Relationship{name:'The dress'}]->(n) where n.name='Plain clothes(No dishes)' return m.name limit 3"}, {"query": "Can you tell me the statistics on the number of Chinese teachers?", "cypher": "match (:ENTITY{name:'Teacher'})<--(m), (m)-->(n) where n.name='China' return count(distinct m.name)"}, {"query": "The most advanced Type 053H frigate in the world today, which country built it?", "cypher": "match(:ENTITY{name:'053HType of frigate'})-[:Relationship{name:'Building the Nation'}]-> (p) return p.name"}, {"query": "Can you name a few players who have been suspended by the league?", "cypher": "match (:ENTITY{name:'The center'})<-[:Relationship{name:'Chief of Staff'}]-(h)-[:Relationship{name:'Other names'}]->(p) return distinct p.name"}, {"query": "Do you know which books are available in the social sciences? Can you name five?", "cypher": "match (:ENTITY{name:'Sociology books'})<-[:Tag{name:'The label'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 5"}, {"query": "Have you heard about the game, 09 Warren Servant Dress Up in New Dresses, in detail?", "cypher": "match (:ENTITY{name:'09Warren is wearing a new dress.'})--(m) with m order by m.name where m.name <> 'The game' return m.name"}, {"query": "How does the school that won the best entrepreneurial design award in Quanzhou set up its main department?", "cypher": "match (:ENTITY{name:'The award for best entrepreneurial design in Quanzhou'})<-[:Relationship{name:'Main awards'}]-(h)-[:Relationship{name:'Main Faculty'}]->(q) return distinct q.name"}, {"query": "I'm not sure if you can tell me the inside story of the three-tier relationship between Yuri and Yumi.", "cypher": "match (n:ENTITY{name:'The memory\u00b715 and 6'})-[*1..3]->(x) where x.name<>'The Irrational' return distinct x.name"}, {"query": "Can you find me two Hong Kimbo directed TV series and introduce them?", "cypher": "match (:ENTITY{name:'The Treasure of Hong Kong'})<-[:Relationship*]-(m),(m)-[:Describe{name:'Describe'}]->(n) return m.name,n.name limit 2"}, {"query": "What are the Chinese names of the new series?", "cypher": "match (:ENTITY{name:'The new book, \"Borrowing the Soul from the Dead\".'})-[:Relationship{name:'Chinese name'}]-> (p) with p order by p.name return p.name limit 5"}, {"query": "What are the different labels of people who are the same height as Streutker Jens Jurn?", "cypher": "match (n:ENTITY{name:'Streutker Jens Jurn'})-[:Relationship{name:'Height'}]->(:ENTITY)<-[:Relationship{name:'Height'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you recommend a hotel with 7 rooms?", "cypher": "match (:ENTITY{name:'The guest room'})<-[:Relationship{name:'Type of house'}]- (n) return n.name limit 7"}, {"query": "Can you analyze the causes of the Russo-Turkish War of 1568 that you learned from your world history lessons?", "cypher": "match(:ENTITY{name:'1568The Russo-Turkish War'})-[:Relationship{name:'The Cause'}]-> (m) return m.name"}, {"query": "Can you tell me the English name of the fox subject, \"Fox\"?", "cypher": "match (:ENTITY{name:'Foxes'})<-[:Relationship{name:'Family'}]-(q)-[:Relationship{name:'English name'}]->(p) return distinct p.name limit 1"}, {"query": "I have a problem finding three Lin Min-shui non-citizens with relevant information about China.", "cypher": "match (:ENTITY{name:'The spring of Linmun'})--(m) with m order by m.name where m.name <> 'China' return distinct m.name limit 3"}, {"query": "The administrative district of the town is 88.1 square kilometers, how much more can it be? I want to know 3 types.", "cypher": "match (:ENTITY{name:'Village'})<-[:Relationship{name:'Category of administrative district'}]-(x),(x)-[:Relationship{name:'Area'}]->(n) where n.name <> '88.1square kilometers' return distinct n.name limit 3"}, {"query": "Can you name three substances that are insoluble in water?", "cypher": "match (:ENTITY{name:'Not dissolved'})<-[:Relationship{name:'Solubility in water'}]- (x) return x.name limit 3"}, {"query": "Can you tell me about the type of relationship that is contained in the nine villages in the five levels?", "cypher": "match path=(n)<-[:Relationship*5]-(p:ENTITY{name:'The village of Nine-Kong'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you find me three Chinese literature publications published by the Chinese Union of Literary Publishers?", "cypher": "match (:ENTITY{name:'The Chinese Union of Audio-visual Publishers'})<-[:Relationship{name:'Publishing house'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "The following is a list of all the resources for Lake Okeechobee, a flat-topped mountain with a subtropical monsoon climate.", "cypher": "match (n:ENTITY{name:'Lake of the Plains'})-[:Relationship*]->(x) where x.name<>'Subtropical monsoon climate' return distinct x.name"}, {"query": "Do you know the types of relationships in Li Fang Village that are involved in the three levels?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The village of Lifang'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "I would like to know the other 4 information in the 2nd level of this game.", "cypher": "match (:ENTITY{name:'The Age of the Estate'})-[:Relationship*1..2]-(p) where p.name <> 'The game' return p.name limit 4"}, {"query": "He was the first student of the Shanghai Foreign Language University's Suzhou River Bay Experiment Middle School to win the 2016 8th grade district test in Mathematics. He also received five other awards.", "cypher": "match (:ENTITY{name:'Shanghai University of Foreign Languages and the Su River Bay Experimental Secondary School'})<-[:Relationship{name:'Chinese name'}]-(h),(h)-[:Relationship{name:'Main awards'}]->(p) where p.name <> '2016First place in the district-wide maths test for year eight' return distinct p.name limit 5"}, {"query": "Do you know where the Arctic Monkey is from?", "cypher": "match (:ENTITY{name:'The Arctic clouds'})<-[:Relationship{name:'Chinese name'}]-(n)-[:Relationship{name:'Place of origin'}]->(q) return distinct q.name"}, {"query": "What are the books of the Whangam-Ting-Mot Publishing House and what are the labels of each book?", "cypher": "match (n:ENTITY{name:'The End of the Han Dynasty'})-[:Relationship{name:'Publishing house'}]->(:ENTITY)<-[:Relationship{name:'Publishing house'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "I want to know what are the two categories of nutmeg black sugar toast apart from bread and toast?", "cypher": "match (n:ENTITY{name:'The first is the nutmeg toast.'})-[:Relationship{name:'Classified'}]->(h) where h.name <> 'Bread' and h.name <> 'The toast' return distinct h.name limit 2"}, {"query": "Can you tell me about one relationship that is a two-tier relationship between the factory and the store in Taipei?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The former Taizhou store'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Did you have trouble asking about the three-layer relationship in the Bloodlines novel written by the Godfather Wizard?", "cypher": "match (n:ENTITY{name:'The Blood Shrine'})-[:Relationship*1..3]->(x) where x.name<>'The God of the Witch and the Witch Man' return distinct x.name"}, {"query": "Who is the same height as Mihael Hertelendi, and who has a tattoo on each of them?", "cypher": "match (n:ENTITY{name:'Hertelendi Mihael'})-[:Relationship{name:'Height'}]->(:ENTITY)<-[:Relationship{name:'Height'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What are the major awards Kimberly Hill has won? Can you name five?", "cypher": "match (:ENTITY{name:'Kimberly\u00b7Hill is a great guy.(Born in1989Year of birth11The Moon30The Sun)She is an American volleyball player..US women's national volleyball team and Turkish clubVakifbankThe team members of the team.'})<-[:Describe{name:'Describe'}]-(p)-[:Relationship{name:'Main awards'}]->(m) return distinct m.name limit 5", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 151 (offset: 150))\n\"PROFILE match (:ENTITY{name:'Kimberly\u00b7Hill is a great guy.(Born in1989Year of birth11The Moon30The Sun)She is an American volleyball player..US women's national volleyball team and Turkish clubVakifbankThe team members of the team.'})<-[:Describe{name:'Describe'}]-(p)-[:Relationship{name:'Main awards'}]->(m) return distinct m.name limit 5\"\n                                                                                                                                                       ^"}, {"query": "Do you know this man Bert Van Tuyle?", "cypher": "match (q:ENTITY{name:'Bert Van Tuyle'})--(p) return p.name skip 3"}, {"query": "What chemical has a molecular weight of 192? Give me four.", "cypher": "match (:ENTITY{name:'192'})<-[:Relationship{name:'Molecular weight'}]- (p) return p.name limit 4"}, {"query": "Do you know what food and gold foil are in tier 3 labeling?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The golden scroll'}) return distinct n.name"}, {"query": "The game is the same size as the Monster Brothers games, and what are the labels for each game?", "cypher": "match (n:ENTITY{name:'The three monster brothers'})-[:Relationship{name:'The size of the game'}]->(:ENTITY)<-[:Relationship{name:'The size of the game'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Can you name three more names for this thing that was built in 1974?", "cypher": "match (m:ENTITY{name:'1974Year of birth'})<-[:Relationship{name:'Construction time'}]-(q)-[:Relationship{name:'Other names'}]->(x) return x.name order by x.name limit 3"}, {"query": "Please tell me about the hotel that has a label relationship with Marwa Hostel on the 2nd floor?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'Marwa stays at the hotel'}) RETURN distinct n.name"}, {"query": "What is the shortest path between the two layers of Doctor Who and Godzilla 920?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The sound'})-[*..2]-(b:ENTITY{name:'The Admiration'})) return count(p)"}, {"query": "What are the tags of these people? Please sort them out in order of number of tags.", "cypher": "match (n:ENTITY{name:'Qualter Daniel'})-[:Relationship{name:'Height'}]->(:ENTITY)<-[:Relationship{name:'Height'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Do you know the chemical formula for total foliar green protein?", "cypher": "match(:ENTITY{name:'Total leafy greens'})-[:Relationship{name:'Chemical formula'}]-> (x) return x.name"}, {"query": "What are the game labels? Can you tell me 3?", "cypher": "match (:ENTITY{name:'2013-08-10'})<-[:Relationship{name:'When to update'}]-(p)-[:Tag{name:'The label'}]->(h) return distinct h.name limit 3"}, {"query": "Can you list the five types of relationships that are involved in the two layers?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The former'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Which film won the Best Actor Award at the Venice Film Festival?", "cypher": "match (:ENTITY{name:'Park Baekje nominated for Best Actor in a Television Series at the Venice Film Awards'})<-[:Relationship{name:'Main awards'}]- (q) return q.name order by q.name"}, {"query": "What are the main achievements of Yuen Yanqing?", "cypher": "match (:ENTITY{name:'The Chinese government has also been trying to prevent the spread of the virus.1972Year of birth04The Moon28The Chinese are born in the Sun.'})<-[:Describe{name:'Describe'}]-(n),(n)-[:Relationship{name:'Major achievements'}]->(q) return distinct q.name limit 5"}, {"query": "The Princess of the Temple is a fantasy novel, do you know how many words it has in total?", "cypher": "match(:ENTITY{name:'The Princess of the Temple'})-[:Relationship{name:'Total number of words'}]-> (x) return x.name"}, {"query": "What chemical is 22224-41-5?", "cypher": "match (:ENTITY{name:'22224-41-5'})<-[:Relationship{name:'CASThe number'}]- (h) return h.name"}, {"query": "What is the original name of the 1972 Container Customs Convention that we follow?", "cypher": "match(:ENTITY{name:'1972Convention on container shipping'})-[:Relationship{name:'Original name'}]-> (n) return n.name"}, {"query": "Do you have any titles for the Tianjin-born writer?", "cypher": "match (p:ENTITY{name:'The city of Tianjin'})<-[:Relationship{name:'Where I was born'}]-(m)-[:Relationship{name:'Representative works'}]->(h) return distinct h.name limit 2"}, {"query": "Can you name a few earthquakes of magnitude 6.1?", "cypher": "The name of the game is \"Relationship\" (Relationship)", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The name of the game is \"Relationship\" (Relationship)\"\n         ^"}, {"query": "The people who were born in Shandong East Luizhou Province called you \"Mummy\", what are your main achievements?", "cypher": "match (:ENTITY{name:'Shandong Province (now Shandong Qingdao)'})<-[:Relationship{name:'Where I was born'}]-(p),(p)-[:Relationship{name:'Major achievements'}]->(m) return distinct p.name,m.name"}, {"query": "Can you tell me what kind of relationship the dolls are involved in in the three layers?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Doll of Confusion'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What games were released on 21-09-25? Can you list 7?", "cypher": "match (:ENTITY{name:'2015-09-21'})<-[:Relationship{name:'Date of release'}]- (q) return q.name limit 7"}, {"query": "The exclusion type is one of the four great seal stones of traditional Chinese pottery. What else do you know about the Yellow Scroll Stone?", "cypher": "match (:ENTITY{name:'The Yellow Manuscript'}) - [*1..2]-(p) where p.name <> 'Chinese Tradition  The Four Great Seals  One of them' return p.name limit 4"}, {"query": "Can you name two people who have a relationship with Sean Ray?", "cypher": "match (n)<-[:Tag*2{name:'The label'}]-(p:ENTITY{name:'The Sun Rays'}) RETURN distinct n.name limit 2"}, {"query": "The book is priced at what you know?", "cypher": "match (:ENTITY{name:'The internal audit of companies'})<-[:Relationship{name:'Title'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "The minimum number of pencils is 10, what is the minimum total?", "cypher": "match (:ENTITY{name:'10'})<-[:Relationship{name:'Painting outside the Ministry'}]-(n)-[:Relationship{name:'Total paintings'}]->(m) return  min(m.name)"}, {"query": "Can you tell me all the information about the relationship between the two layers of the relationship that is involved in the rape?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Addicted to Alcohol'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you find the sites created by the three generations?", "cypher": "match (:ENTITY{name:'The former generation'})<-[:Relationship*]-(m), (m)-[:Relationship{name:'Geographical location'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What are the three occupations of Liu?", "cypher": "match (:ENTITY{name:'The Chinese are the most popular ethnic groups in China.1970Year of birth3The Moon is Born, Liang Jinzhou,1993Year of birth7The monthly participation in the work,1997Year of birth6Moon joined the party, has a university degree.'})<-[:Describe{name:'Describe'}]-(q),(q)-[:Relationship{name:'Professional life'}]->(p) return distinct p.name limit 3"}, {"query": "I'm not sure if you're interested in the artwork, but I'm not sure if you're interested in the artwork.", "cypher": "match (:ENTITY{name:'The Blue Sand'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Representative works'}]->(q) return distinct q.name"}, {"query": "I'm not sure if you're familiar with the film, but I'm curious to know what other works the director has.", "cypher": "match (q:ENTITY{name:'The Yellow Dragon'})<-[:Relationship{name:'Director'}]- (x) return x.name"}, {"query": "What is the shortest path between the village of Wang Fu Bay and the village of Yangtai?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Village of King Fu Bay'})-[*..2]-(b:ENTITY{name:'The village of Tai Chi'})) return count(p)"}, {"query": "Please list three characters represented in Violet Noziere's work.", "cypher": "match (:ENTITY{name:'Violet The Nozier'}) <- [:Relationship{name:'Representative works'}]- (p) return distinct p.name limit 3"}, {"query": "Can you tell me about the types of relationships that exist in the two levels of Vente Square?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Vanderplein'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Please tell me whose representative work is better for the mother of Moses?", "cypher": "match (x:ENTITY{name:'The Mother of Moses'})<-[:Relationship{name:'Representative works'}]- (q) return q.name order by q.name"}, {"query": "What are the main achievements of students who graduated from Jiangxi Business School?", "cypher": "match (:ENTITY{name:'Jiangxi School of Economics'})<-[:Relationship{name:'Graduated'}]-(n)-[:Relationship{name:'Major achievements'}]->(p) return distinct p.name"}, {"query": "Who is the originator of the 12P theory in marketing theory?", "cypher": "match(:ENTITY{name:'12p'})-[:Relationship{name:'The Proponent'}]-> (p) return p.name"}, {"query": "There is a layer 6 of the network conversion protocol called representation layer, what is this gateway?", "cypher": "match (:ENTITY{name:'Indicating layer'})<-[:Relationship{name:'6'}]- (x) return x.name"}, {"query": "What do students who graduated from the photography department at Seoul National University of Arts do?", "cypher": "match (:ENTITY{name:'The photography department at the Seoul Institute of the Arts'})<-[:Relationship{name:'Graduated'}]-(n)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 1"}, {"query": "What is the Chinese name of Stanley Matthews?", "cypher": "match (n:ENTITY{name:'Stanley Matthews'})<-[:Relationship{name:'Foreign language name'}]- (mn) return mn.name "}, {"query": "Is there any trouble finding the next entertainment film directed by Wang Yuen?", "cypher": "match (:ENTITY{name:'King Yulen'})<-[:Relationship{name:'Director'}]- (mn) -[:Tag{name:'The label'}]->(n:ENTITY{name:'The entertainment'}) return mn.name"}, {"query": "Can you recommend a famous attraction that is open all day?", "cypher": "match (:ENTITY{name:'All day'})<-[:Relationship{name:'Opening hours'}]-(x),(x)-[:Relationship{name:'Famous places'}]->(n) return distinct n.name limit 1"}, {"query": "Do you know what kind of relationship exists between the two layers of security that are covered in this film?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The guard'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Please tell me how many times the car body category is 25b, 25g mixed and is currently in green?", "cypher": "match (:ENTITY{name:'25bThe first is the25gMixed is currently in green'})<-[:Relationship{name:'Vehicle category'}]- (n) return distinct n.name"}, {"query": "Can you help me check out this literary work, Dream Return to Liangsan, how many words is it?", "cypher": "match(:ENTITY{name:'The dream of going back to Liang Mountain'})-[:Relationship{name:'The word count'}]-> (q) return q.name"}, {"query": "The relationship that Giljadan is involved in is one of three levels of relationships.", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The first was the death of a man.'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you tell me about Zhang's profession?", "cypher": "match (:ENTITY{name:'Zhang is a good person.'})<--(q)-[:Relationship{name:'Professional life'}]->(m) return distinct q.name"}, {"query": "What is the profession of the writer of the story?", "cypher": "match (:ENTITY{name:'The author, researcher and media commentator'})<-[:Relationship{name:'Professional life'}]-(q) return distinct q.name limit 3"}, {"query": "I wondered if the time of the expedition: Martherin flew to another message line in the universe of the two-layer relationship?", "cypher": "match path=(n) <- [:Relationship*2]-(p:ENTITY{name:'The time of the expedition: Martherin flew into space; The mother-in-law'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "Can you name three athletes who are 178 cm tall?", "cypher": "match (x:ENTITY{name:'178cm'})<-[:Relationship{name:'Height'}]- (q) return q.name limit 3"}, {"query": "Do you know which family the red-flowered plant belongs to?", "cypher": "match(:ENTITY{name:'Red onions[The flowering plants]'})-[:Relationship{name:'The Department'}]-> (n) return n.name"}, {"query": "Can you list five famous alumni of pioneering, dedicated schools?", "cypher": "match (:ENTITY{name:'The pioneering, the dedicated'})<-[:Relationship{name:'Schooling'}]-(m),(m)-[:Relationship{name:'Famous alumni'}]->(p) return distinct p.name limit 5"}, {"query": "The giant crowned warbler belongs to what family and is mainly distributed in which regions?", "cypher": "match (:ENTITY{name:'The Giant Crowned Dragon'})-[:Relationship{name:'The Department'}]->(n) return n.name as name union all match (:ENTITY{name:'The Giant Crowned Dragon'})-[:Relationship{name:'Distribution areas'}]->(m) return m.name as name"}, {"query": "Show me two types of personal information in the three-tier relationship of this person Al-Alaan Rashid?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Al-Alaan Rashid'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "When was the Guangdong Foreign Language School affiliated to the Foreign Trade University founded? Who is the principal?", "cypher": "match (:ENTITY{name:'Foreign Language School affiliated to Guangdong Foreign Trade University'})-[:Relationship{name:'When did it start?'}]->(n) return n.name as name union all match (:ENTITY{name:'Foreign Language School affiliated to Guangdong Foreign Trade University'})-[:Relationship{name:'Current headmaster'}]->(m) return m.name as name"}, {"query": "Do you know of any websites that are affiliated with the third tier of the Lifesize Network?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'The Lifted School Network'}) return distinct n.name"}, {"query": "The message of the novel No More Wish Lost Paradise?", "cypher": "match (:ENTITY{name:'No More Wish Paradise Lost'})--(x) with x order by x.name where x.name <> 'Fantasy and science fiction' return x.name"}, {"query": "Do you know the top 10 jobs that Chinese people do?", "cypher": "match (h:ENTITY{name:'China'})<-[:Relationship{name:'Nationality'}]-(p)-[:Relationship{name:'Professional life'}]->(q) return distinct q.name limit 10"}, {"query": "Do you know which two primary schools in the city of Yamagata have won the most awards besides the provincial green school and the city's five-star school?", "cypher": "match (n:ENTITY{name:'Second Primary School in Machu Picchu'})-[:Relationship{name:'Main awards'}]->(h) where h.name <> 'Provincial Green Schools' and h.name <> 'City five-star school' return distinct h.name limit 3"}, {"query": "The project is a collaboration between the two companies, and is a collaboration between the two companies.", "cypher": "match (n:ENTITY{name:'A return to the mountain'})-[:Relationship*1..3]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "The book is priced at $2.99 per book.", "cypher": "match (:ENTITY{name:'Design and reconstruction'})<-[:Relationship{name:'Title'}]-(n)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name limit 3"}, {"query": "What chemical has the CAS number 64-17-5?", "cypher": "match (:ENTITY{name:'64-17-5'})<-[:Relationship{name:'CASThe number'}]- (h) return h.name"}, {"query": "Can you tell me who is the representative of Chen Chen? Can you tell me 10?", "cypher": "match (:ENTITY{name:'The Chancellor'})<-[:Relationship{name:'Chinese name'}]-(x)-[:Relationship{name:'Representative'}]->(h) return h.name order by h.name limit 10"}, {"query": "Where will the 2013 Rage Against the Machine Pop Awards be held?", "cypher": "match(:ENTITY{name:'2013The annual reprimand music video awards'})-[:Relationship{name:'Location'}]-> (h) return h.name"}, {"query": "What are the Tier 3 protected plants in Yunnan, Tibet and other places?", "cypher": "match (:ENTITY{name:'The following is a list of the top 10 most popular websites in China.'})<-[:Relationship{name:'Distribution areas'}]-(m), (m)-[:Relationship{name:'Protection level'}]->(n) where n.name='3Grade' return distinct m.name"}, {"query": "What is the shortest word for the method and the rules of poetry?", "cypher": "match (:ENTITY{name:'The method and rules of poetry creation.'})<-[:Relationship{name:'Interpretation'}]-(m) return  min(m.name)"}, {"query": "What chemical has a molecular mass of 140.57?", "cypher": "match (:ENTITY{name:'140.57'})<-[:Relationship{name:'Molecular weight'}]- (x) return x.name"}, {"query": "Cold-blooded President: Little wife, what is the name of the main character in the novel?", "cypher": "match(q:ENTITY{name:'The President in Cold Blood: Little Wife, come back'})-[:Relationship{name:'The main character'}]-> (x) return x.name"}, {"query": "I would like to know what works have the same price as the ones in the catalogue and what their respective labels are? Please show me in order of number of labels.", "cypher": "match (n:ENTITY{name:'The Dr. Jung is dying.'})-[:Relationship{name:'Pricing'}]->(:ENTITY)<-[:Relationship{name:'Pricing'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Ro lists the works of Chen Chilin, in the name of the title of the house, Five-Year-Old Four-Year-Old, can you introduce the works on the three-tier relationship?", "cypher": "match (n:ENTITY{name:'The following is a list of the topics covered by the project:'})-[*1..3]->(x) where x.name<>'Clearing it' return distinct x.name"}, {"query": "Do you know how many literary genres are in the inscription genre?", "cypher": "match (:ENTITY{name:'Inscription'})<-[:Relationship{name:'Literary genre'}]- (q) return q.name limit 10"}, {"query": "Do you know of any publications that have been published on 1/6/2002 and can you tell their publishers?", "cypher": "match (:ENTITY{name:'2002/6/1'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Publishing house'}]->(q) return distinct q.name"}, {"query": "What chemical has a molecular mass of 176.26? Can you say 12?", "cypher": "match (:ENTITY{name:'176.26'})<-[:Relationship{name:'Molecular weight'}]- (p) return p.name limit 12"}, {"query": "What are the names of the three levels of relationships involved in the Pingyang Province Shining Experimental School?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Pingjiang Province Sinchuan Experimental School'}) UNWIND relationships(path) AS rel RETURN rel.name limit 3"}, {"query": "Can you tell me about this person?", "cypher": "match (:ENTITY{name:'The Chicken and the Egg'})--(m) return  distinct m.name"}, {"query": "Which books have the same literary genre as the novel and have different labels? Show me how many of these books are in order of number of labels.", "cypher": "match (n:ENTITY{name:'Princess of the Common People'})-[:Relationship{name:'Literary genre'}]->(:ENTITY)<-[:Relationship{name:'Literary genre'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "I would like to know when Shanghai Wuling Trading Co. Ltd. was founded, what is the scope of the company and what is the nature of the company?", "cypher": "match (:ENTITY{name:'Shanghai Wuling Trading Co., Ltd.'})-[:Relationship{name:'Founded'}]->(n) return n.name as name union all match (:ENTITY{name:'Shanghai Wuling Trading Co., Ltd.'})-[:Relationship{name:'Scope of operations'}]->(m) return m.name as name union all match (:ENTITY{name:'Shanghai Wuling Trading Co., Ltd.'})-[:Relationship{name:'The nature of the company'}]->(r) return r.name as name"}, {"query": "Is there any information on the names of the relationships involved in the three secondary schools in Hai Men City, Jiangsu Province, in the 2nd level?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Three Factories Middle School in Haimen City, Jiangsu Province'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "I want to repeat the work topic All the materials of the work of Yomiuri Tenjudo.", "cypher": "match (n:ENTITY{name:'The mountain is not perfect; The Day of the Front'}) - [:Relationship*]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "Can you tell us about the types of relationships that Hu Liqin is involved in in the six levels?", "cypher": "match path=(n)<-[:Relationship*6]-(p:ENTITY{name:'The Housing'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "How many children are currently being left behind in the country?", "cypher": "match (:ENTITY{name:'Children left behind[Children who do not live with their parents]'})-[:Relationship{name:'Number of'}]->(r) return r.name"}, {"query": "Can you tell me how long the barrel of the 81 is?", "cypher": "match(:ENTITY{name:'81Machine gun'})-[:Relationship{name:'The gunner'}]-> (q) return q.name"}, {"query": "Find the first three tag features of .NET Web Services Solution application programming?", "cypher": "match (:ENTITY{name:'.NET WebApplication programming for service solutions'})-[:Tag{name:'The label'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "What medications are used to treat RLS? What is the composition of the drug?", "cypher": "match (:ENTITY{name:'The first is the fact that the sun is shining.'})<-[:Relationship{name:'The rule'}]-(m), (m)-[:Relationship{name:'The composition of the formula'}]->(n) return distinct m.name,n.name"}, {"query": "What is the rated frequency of the 1TL0002 variable frequency motor produced by your company?", "cypher": "match(:ENTITY{name:'1TL0002Variable speed motor'})-[:Relationship{name:'Rated frequency'}]-> (m) return m.name"}, {"query": "Tell me about the three positions of the Standing Committee of the Communist Party of China's Xi'an City Anhui District Commission.", "cypher": "match (:ENTITY{name:'Standing Committee of the Chiang Kai-shek District Commission'})--(x) return  distinct x.name limit 3"}, {"query": "Let's work out the molecular weight of Botzoomi together.", "cypher": "match(:ENTITY{name:'I'm not going to tell you.'})-[:Relationship{name:'Molecular weight'}]-> (h) return h.name", "error": "Invalid input 'm': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 31 (offset: 30))\n\"PROFILE match(:ENTITY{name:'I'm not going to tell you.'})-[:Relationship{name:'Molecular weight'}]-> (h) return h.name\"\n                               ^"}, {"query": "And what will make you know the location of the dwelling place of the King of the Twelve?", "cypher": "match (:ENTITY{name:'The King is well and peacefully at home.'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'Geographical location'}]->(n) return distinct n.name"}, {"query": "The author of the novel, who is the author of the song \"Kyu Kyung Sang-Shan\", is a Japanese writer who writes in Korean.", "cypher": "match(n:ENTITY{name:'The Good Witch[Humor17KThe theme song]'})-[:Relationship{name:'The word'}]-> (q) return q.name"}, {"query": "What are the main achievements of the three Han ethnicities?", "cypher": "match (:ENTITY{name:'Han'})<-[:Relationship{name:'Ethnicity'}]-(q),(q)-[:Relationship{name:'Major achievements'}]->(m) return distinct m.name limit 3"}, {"query": "Find five people born in 1886 who are not collectors.", "cypher": "match (:ENTITY{name:'1886Year of birth'})<-[:Relationship{name:'Date of birth'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(q) where q.name <> 'The collector' return distinct q.name limit 5"}, {"query": "The film is based on the novel of the same name by the writer and director of the film, Li Taebong.", "cypher": "match (n:ENTITY{name:'The gift of Uncle Li'})-[:Relationship*1..3]->(x) where x.name<>'The Way of the King' return distinct x.name"}, {"query": "Can you find me two novels that are being connected?", "cypher": "match (:ENTITY{name:'Connected'})<-[:Relationship{name:'The novel progresses'}]-(n)-[:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "What are the foreign names of military science publications?", "cypher": "match (:ENTITY{name:'Military science publishing house'})<-[:Relationship{name:'Publishing house'}]-(q),(q)-[:Relationship{name:'Foreign language name'}]->(n) return distinct n.name limit 5"}, {"query": "Where are you planning to host the 2012 China International OLED Expo?", "cypher": "match(:ENTITY{name:'2012China internationalOLEDThe exhibition'})-[:Relationship{name:'Location'}]-> (q) return q.name"}, {"query": "Do you know which ones have a double label on society? Can you name three?", "cypher": "match (n)-[:Tag*2{name:'The label'}]->(p:ENTITY{name:'The Society'}) RETURN distinct n.name limit 3"}, {"query": "Do you know how many people live in Yunnan?", "cypher": "match (:ENTITY{name:'The Yunnan'})<-[:Relationship{name:'Area'}]-(x),(x)-[:Relationship{name:'Population'}]->(q) return distinct q.name"}, {"query": "The 2011 Pingyu International Photography Exhibition is so beautiful, what is the theme this time?", "cypher": "match(:ENTITY{name:'2011The international exhibition of photography'})-[:Relationship{name:'The subject'}]-> (n) return n.name"}, {"query": "What is the shortest path between the two levels of relations during the French Revolutionary War and the American Revolutionary War?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'French Revolutionary Wars'})-[:Relationship*..2]-(b:ENTITY{name:'The Second American War of Independence'})) return count(p)"}, {"query": "Tell me how the earth was formed.", "cypher": "match (:ENTITY{name:'The mud'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The shape'}]->(n) return distinct n.name"}, {"query": "What computer works does Chen Tianzhou have?", "cypher": "match (p:ENTITY{name:'The Chinese'})<--(x)-->(q:ENTITY{name:'Computers'}) return x.name"}, {"query": "Do you know who is related to the 5th level label?", "cypher": "match (n)<-[:Tag*5{name:'The label'}]-(p:ENTITY{name:'Oh, my God.'}) RETURN distinct n.name"}, {"query": "I would like to know what representatives the brokerage company has for the Daze office?", "cypher": "match (:ENTITY{name:'The Daze office'})<-[:Relationship{name:'Brokerage company'}]-(h)-[:Relationship{name:'Representative works'}]->(m) return distinct h.name,m.name"}, {"query": "Where was Duncan born?", "cypher": "match(:ENTITY{name:'The Gang'})-[:Relationship{name:'Where I was born'}]-> (n) return n.name"}, {"query": "Can you tell me about the contemporary interpretation of a large printing press?", "cypher": "match (:ENTITY{name:'The Great French Door'})-[:Relationship{name:'Contemporary interpretation'}]-> (n) return  distinct n.name limit 1"}, {"query": "Can you list all the relationships that are covered in the two layers of the intrinsic waves?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Silk Road'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What are the occupations of people born in Fujian's Fujian Province?", "cypher": "match (:ENTITY{name:'Fujian and Mount Wui'})<-[:Relationship{name:'Where I was born'}]-(q)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 3"}, {"query": "Do you have any other aliases for this man, who is the father of Zen Buddhism, and can you give me two?", "cypher": "match (:ENTITY{name:'The Buddha, the founder of Zen Buddhism'})<-[:Relationship{name:'Major achievements'}]-(h)-[:Relationship{name:'Other names'}]->(m) return distinct m.name limit 2"}, {"query": "Can you tell me about the five things about the politician Pan Zhu Yue?", "cypher": "match (n:ENTITY{name:'Pan Zhuyu'})-[:Relationship*]->(x) where x.name<>'Political figures' return distinct x.name limit 5"}, {"query": "What is the shortest path between the two levels of the dam and the dam station?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The series of experiments on modern communication technology'})-[*..2]-(b:ENTITY{name:'Dams and dams'})) return count(p)"}, {"query": "Do you know what the major awards are for American films with a G rating?", "cypher": "match (:ENTITY{name:'G(US)'})<-[:Relationship{name:'Classified'}]-(h)-[:Relationship{name:'Main awards'}]->(x) return distinct x.name limit 5"}, {"query": "What is the shortest path between the two layers of the relationship between the film Tsufu Tsung and the wind and rain?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Dragon[1990The year-round star, Liu Zhong, is like a movie star]'})-[:Relationship*..2]-(b:ENTITY{name:'Wind and rain[1989The film stars Yayoi Kusama]'})) return count(p)"}, {"query": "Do you know what kind of relationships are involved in the two layers that Charles Beahan is talking about?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Charles Beahan'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me what kind of relationships are involved in the three layers of Risen 1983?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Reborn1983'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you ask for a specialist hospital with 100 beds?", "cypher": "match (:ENTITY{name:'100Chang'})<-[:Relationship{name:'Bed'}]- (mn) -[:Relationship{name:'Hospital category'}]->(n:ENTITY{name:'Speciality'}) return mn.name "}, {"query": "What is the name of the main award established in 1956?", "cypher": "match (:ENTITY{name:'1956Year of birth'})<-[:Relationship{name:'When did it start?'}]-(x)-[:Relationship{name:'Main awards'}]->(n) return distinct n.name limit 1"}, {"query": "How many public high schools have schooling?", "cypher": "match (:ENTITY{name:'Public high school'})<--(m), (m)-[:Relationship{name:'Schooling'}]->(n) where n is not null return count(distinct m.name)"}, {"query": "What competitions and events have been held in Chennai?", "cypher": "match (:ENTITY{name:'The capital'})<-[:Relationship{name:'Location'}]- (n) return n.name limit 10"}, {"query": "I would like to ask you who is Don Collier?", "cypher": "match (:ENTITY{name:'Don Collier'})--(n) return n.name skip 1"}, {"query": "Do you know what this sweet pumpkin soup tastes like?", "cypher": "match(:ENTITY{name:'The sweet pumpkin soup'})-[:Relationship{name:'The Taste'}]-> (n) return n.name"}, {"query": "Can you name two of Zhou Zhiyu's major achievements?", "cypher": "match (:ENTITY{name:'Zhou Zhiyu'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Major achievements'}]->(q) return distinct q.name limit 2"}, {"query": "How much is the 18k gold Independence pendant in your store?", "cypher": "match(:ENTITY{name:'18kGoldIndependenceThe hangar'})-[:Relationship{name:'The price'}]-> (m) return m.name"}, {"query": "What chemical is CAS number 1444-65-1?", "cypher": "match (:ENTITY{name:'1444-65-1'})<-[:Relationship{name:'CASThe number of the log'}]- (m) return m.name"}, {"query": "In the promotional video for the 2011 Honda 3.0 TDI V6 diesel luxury, how much time is it going to take to accelerate?", "cypher": "match(:ENTITY{name:'2011The Way 3.0TDI V6Diesel luxury cars'})-[:Relationship{name:'Accelerated time'}]-> (q) return q.name"}, {"query": "What are the types of relationships involved in the three levels of the Dongguan City Butler Movers Limited?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The company is based in Dongguan, China.'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Can you tell me what the monkey said about the content?", "cypher": "match (:ENTITY{name:'The monkey says, \"Oh, my God\".'})--(x) return x.name skip 3"}, {"query": "What is the highest salary shown in the 2011 average wage ranking?", "cypher": "match(:ENTITY{name:'2011Average annual salary rankings'})-[:Relationship{name:'The highest'}]-> (q) return q.name"}, {"query": "Can you tell me what kind of relationship is contained in the three-tiered luxury penthouse?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Luxury Bench'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "Can you provide the chemical formula for 1-methoxy- and 2-methylpropylene, please?", "cypher": "match(:ENTITY{name:'1-The base-Methyl dioprene'})-[:Relationship{name:'Chemical formula'}]-> (n) return n.name"}, {"query": "Find 32 books for children to enlighten: information about the work within the three-layer relationship of the fairy tale.", "cypher": "match (n:ENTITY{name:'Children's educational books: fairy tales of the living'})-[:Relationship*1..3]->(x) where x.name<>'32' return distinct x.name", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 40 (offset: 39))\n\"PROFILE match (n:ENTITY{name:'Children's educational books: fairy tales of the living'})-[:Relationship*1..3]->(x) where x.name<>'32' return distinct x.name\"\n                                        ^"}, {"query": "Find all the tags for the .NET web advanced programming?", "cypher": "match (:ENTITY{name:'.NETAdvanced programming for the web'})-[:Tag{name:'The label'}]-> (h) with h order by h.name return h.name"}, {"query": "The 115th Division, which we know as the Independent Brigade, do you know what its predecessor was?", "cypher": "match(:ENTITY{name:'115The Division of Independence'})-[:Relationship{name:'Former'}]-> (x) return x.name"}, {"query": "I would like to ask what is the relationship between the two levels of business subsidies?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Subsidies for business'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you recommend a planting machine with a seed capacity of 125-150 kg?", "cypher": "match (:ENTITY{name:'125--150kg'})<-[:Relationship{name:'The amount of emissions'}]- (q) return q.name"}, {"query": "Who's representative is Jackie and Peele's fourth season of the show?", "cypher": "match (:ENTITY{name:'Donkey and Peer The Fourth Season'})<-[:Relationship{name:'Representative works'}]- (n) return n.name order by n.name limit 10"}, {"query": "Please provide two publications priced at 70 USD", "cypher": "match (:ENTITY{name:'70Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 2"}, {"query": "The last book you read was a 2006 book on research in medicine, who wrote the book, did you see it?", "cypher": "match(:ENTITY{name:'2006The year of research medicine'})-[:Relationship{name:'Author of the book'}]-> (p) return p.name"}, {"query": "What profession did people born in June 1962 have?", "cypher": "match (:ENTITY{name:'1962Year of birth6The Moon'})<-[:Relationship{name:'Date of birth'}]-(h)-[:Relationship{name:'Professional life'}]->(m) return distinct m.name limit 10"}, {"query": "The central point of which national road is in East Taipei?", "cypher": "match (:ENTITY{name:'The East Wing'})<-[:Relationship{name:'The middle point'}]- (q) return q.name"}, {"query": "Do you have any information about the three levels of relationships that this person is involved in?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The eternal'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "You know Wang Zi6? I need 10 more information on the 2nd layer besides the water dragon character.", "cypher": "match (:ENTITY{name:'King of the Six'})-[*1..2]->(p) where p.name <> 'The waterfall is spreading' return  p.name limit 10"}, {"query": "Tell me one profession this man has.", "cypher": "match (:ENTITY{name:'The man'})<-[:Relationship{name:'Gender and race'}]-(n),(n)-[:Relationship{name:'Professional life'}]->(q) return q.name skip 2 limit 1"}, {"query": "Help me find the melting point and the water solubility of the acetaminophen.", "cypher": "match (:ENTITY{name:'The Amine'})-[:Relationship{name:'The point of no return'}]->(n) return n.name as name union all match (:ENTITY{name:'The Amine'})-[:Relationship{name:'Solubility in water'}]->(m) return m.name as name"}, {"query": "Do you know the first three words of the name of the production company and the full name of the production company of the TV series \"The Hunger Games\"?", "cypher": "MATCH (n:ENTITY{name:'The War of the Ring[2004Year of birthMBCTelevision series]'})-[:Relationship{name:'Publishing company'}]->(m) RETURN m.name,substring(m.name,0,3)"}, {"query": "The experiment requires a hydrogen, can you provide a reference point?", "cypher": "match(:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'The point of no return'}]-> (p) return p.name"}, {"query": "What are the books of Deng Xiaoping and what are they classified as?", "cypher": "match (:ENTITY{name:'The Chinese Co-authored'})<-[:Relationship{name:'Written by'}]-(h),(h)-[:Tag{name:'The label'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know what chemical has CAS number 312693-23-5?", "cypher": "match (:ENTITY{name:'312693-23-5'})<-[:Relationship{name:'CASNo'}]- (p) return distinct p.name"}, {"query": "How many schools have no schooling?", "cypher": "match (:ENTITY{name:'School'})<--(m), (m)-[:Relationship{name:'Schooling'}]->(n) where n is null return count(distinct m.name)"}, {"query": "Please tell me if you know of any high school in Deqing County, Zhejiang Province. Can you list the top 5?", "cypher": "match (:ENTITY{name:'The school is located in Deqing County, Zhejiang Province.'})--(m) return m.name order by m.name limit 5"}, {"query": "Do you know any professions in Shaanxi? Please tell me 5 of them.", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Chinese name'}]-(p),(p)-[:Relationship{name:'Professional life'}]->(x) return x.name order by x.name limit 5"}, {"query": "Let's see which brokerage is the famous singer Alex da Kid?", "cypher": "match(:ENTITY{name:'Alex da Kid'})-[:Relationship{name:'Brokerage company'}]-> (p) return p.name"}, {"query": "What is the name of the song sung by Lee Sung-seong, Chen E-jin, and Zhou Guo-yi?", "cypher": "match (:ENTITY{name:'Li Zhongsheng'})<-[:Relationship{name:'The song was originally sung'}]-(m), (m)-[:Relationship{name:'Composed'}]->(n) where n.name='The Chinese government has announced that it will release the new president.' return distinct m.name"}, {"query": "What are the single-edition publications? Name 10?", "cypher": "match (:ENTITY{name:'1'})<-[:Relationship{name:'Published'}]- (n) return n.name limit 10"}, {"query": "Can you get me three books for $200?", "cypher": "match (:ENTITY{name:'200Japanese yen'})<-[:Relationship{name:'Pricing'}]-(x),(x)-[:Relationship{name:'Title'}]->(q) return distinct q.name limit 3"}, {"query": "Do you know what the main achievements of the writer who wrote the book for the Chinese language, Liu He, are?", "cypher": "match (:ENTITY{name:'The warmth of spring and the clearness of the moon.'})<-[:Relationship{name:'Representative works'}]-(n)-[:Relationship{name:'Major achievements'}]->(x) return distinct x.name limit 10"}, {"query": "How many people are estimated to have died in the 2014 Norfolk helicopter crash?", "cypher": "match(p:ENTITY{name:'2014The year of the helicopter crash in Norfolk'})-[:Relationship{name:'The number of casualties'}]-> (q) return q.name"}, {"query": "Can you recommend 13 novels that fall into the heterosexual category?", "cypher": "match (:ENTITY{name:'The opposite of hysterectomy'})<-[:Relationship{name:'Novel genre'}]- (x) return x.name limit 13"}, {"query": "I need you to tell me about the five types of relationships involved in the second level of Nedal Lake, okay?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Lake Daly'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "And what will make you know what the main ingredients of the night-light stone are?", "cypher": "match (:ENTITY{name:'The Night Stone'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The main ingredients'}]->(n) return distinct n.name"}, {"query": "Can you tell us about Xu Zhizhen's ethnicity and profession?", "cypher": "match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Ethnicity'}]->(n) return n.name as name union all match (:ENTITY{name:'The Chinese'})-[:Relationship{name:'Professional life'}]->(m) return m.name as name"}, {"query": "Which three of the primary schools affiliated to the Shanghai Foreign Language Vocational College have received the most awards besides the District Civilization Unit and the Shanghai City Safe Civilization Campus?", "cypher": "match (n:ENTITY{name:'Shanghai Business School for Foreign Languages'})-[:Relationship{name:'Main awards'}]->(h) where h.name <> 'District civilization units' and h.name <> 'The Safe Civilization Campus in Shanghai' return distinct h.name limit 3"}, {"query": "Do you know what types of relationships are included in the 3rd level of Nedobar Middle School?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Doba Secondary School'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What are the main achievements of people born in 1857? Can you tell me two categories?", "cypher": "match (:ENTITY{name:'1857Year of birth'})<-[:Relationship{name:'Date of birth'}]-(m)-[:Relationship{name:'Major achievements'}]->(n) return distinct n.name limit 2"}, {"query": "Can you tell me the name of a novel that is still being published?", "cypher": "match (:ENTITY{name:'Connected'})<-[:Relationship{name:'The novel progresses'}]-(m)-[:Relationship{name:'Chinese name'}]->(x) return distinct x.name limit 1"}, {"query": "What is the shortest path of relationship between the dry plants and the tropical plants in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Dry plants'})-[:Relationship*..2]-(b:ENTITY{name:'Tropical plants'})) return count(p)"}, {"query": "Chinese male entertainers helped me find 20 of them.", "cypher": "match (:ENTITY{name:'China'})<-[:Relationship{name:'Nationality'}]- (mn) -[:Relationship{name:'Gender and race'}]->(n:ENTITY{name:'The man'}) return mn.name limit 20 "}, {"query": "Tell me how many companies were founded in 1992?", "cypher": "match (p:ENTITY{time:'1992'}) return count(p)"}, {"query": "The answer is that the polycystic group has a three-layer relationship to osteochondrosis of the elderly.", "cypher": "match (n:ENTITY{name:'Osteofibromatosis'})-[:Relationship*1..3]->(x) where x.name<>'The old man' return distinct x.name"}, {"query": "I need five messages from football player Jiang Sak-rin.", "cypher": "match (n:ENTITY{name:'The name of the place is Jiangsak'})-[*]->(x) where x.name<>'Soccer player' return distinct x.name limit 5"}, {"query": "I want to meet this person, you know?", "cypher": "match (:ENTITY{name:'The Tsujin'})--(x) return x.name order by x.name"}, {"query": "I'm not sure if I should be the only one who gets the news about the iWALKDBL800i.", "cypher": "match (n:ENTITY{name:'iWALKDBL800i'})--(x) return x.name"}, {"query": "What is the name of the vice-dean, professor, and master's student supervisor at the School of Financial Management at Shanghai University of Foreign Trade and Economics?", "cypher": "match (q:ENTITY{name:'Vice-Dean of the School of Financial Management, Professor, Master's student tutor at Shanghai University of Foreign Trade and Economics.'})<-[:Describe{name:'Describe'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name limit 1", "error": "Invalid input 's': expected\n  \"!=\"\n  \"%\"\n  \"*\"\n  \"+\"\n  \",\"\n  \"-\"\n  \"/\"\n  \"::\"\n  \"<\"\n  \"<=\"\n  \"<>\"\n  \"=\"\n  \"=~\"\n  \">\"\n  \">=\"\n  \"AND\"\n  \"CONTAINS\"\n  \"ENDS\"\n  \"IN\"\n  \"IS\"\n  \"OR\"\n  \"STARTS\"\n  \"XOR\"\n  \"^\"\n  \"}\" (line 1, column 98 (offset: 97))\n\"PROFILE match (q:ENTITY{name:'Vice-Dean of the School of Financial Management, Professor, Master's student tutor at Shanghai University of Foreign Trade and Economics.'})<-[:Describe{name:'Describe'}]-(x),(x)-[:Relationship{name:'Professional life'}]->(n) return distinct n.name limit 1\"\n                                                                                                  ^"}, {"query": "Tell me about the publication you know called 100 Yuan Crazy for China?", "cypher": "match (:ENTITY{name:'100The Chinese'})--(p) with p order by p.name where p.name <> 'Published' return p.name"}, {"query": "Who has the soul of jazz?", "cypher": "match (:ENTITY{name:'The soul of jazz'})<-[:Relationship{name:'Major achievements'}]-(m) return distinct m.name"}, {"query": "What are the acronyms of the universities founded in 1982? Can you tell me three?", "cypher": "match (:ENTITY{name:'1982Year of birth'})<-[:Relationship{name:'When did it start?'}]-(p),(p)-[:Relationship{name:'Briefly'}]->(x) return distinct x.name limit 3"}, {"query": "What is the shortest path between the light cheeks and the three layers of the iris?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The Light Face'})-[*..3]-(b:ENTITY{name:'The Lions'})) return count(p)"}, {"query": "Tell me about the relationship between the two layers of the Daisuke family.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Family name'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "I would like to ask, what is the third level of the label for the relationship with Princess Min?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Shepherding'}) return distinct n.name"}, {"query": "Can you tell us about the kind of relationships that are involved in the deep underground lab on the fourth floor?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'Deep underground lab'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you list the three levels of relationships involved in the two first-time migrants?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The first wave of migration'}) UNWIND relationships(path) AS rel return distinct rel.name limit 2"}, {"query": "The recipient of the Ministry of Agriculture, the Gansu Provincial Science and Technology Progress Award and the National Ministry's first and second-class award for seven consecutive years, has he achieved other achievements besides representing the cultivation of the Gansu apple tree?", "cypher": "match (:ENTITY{name:'He has won the Ministry of Agriculture, the Gansu Provincial Science and Technology Advancement Award several times and the provincial Ministry of State Award.7The next'})<-[:Relationship{name:'Major achievements'}]-(m),(m)-[:Relationship{name:'Representative works'}]->(x) where x.name <> 'The sugarcane apple trees grow mangoes' return distinct x.name limit 10"}, {"query": "The position on the pitch belongs to the defender, he has played in all the places you know?", "cypher": "match (:ENTITY{name:'The Defender'})<-[:Relationship{name:'Location'}]-(x),(x)-[:Relationship{name:'Played'}]->(h) return h.name skip 1 limit 10"}, {"query": "The article was written by a journalist from the South China Sea who was a member of the South China Sea delegation to the UN General Assembly.", "cypher": "match (n:ENTITY{name:'The court sentenced Huangzhou to death.'})-[:Relationship*]->(x) where x.name<>'The Su-an' return distinct x.name limit 5"}, {"query": "The unit that operates the Beijing subway system is?", "cypher": "match (:ENTITY{name:'The Beijing subway'})<-[:Relationship{name:'System name'}]-(x)-[:Relationship{name:'Operating units'}]->(h) return distinct h.name"}, {"query": "Can you list three relationships that win in the two layers of tensions?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Win by ten'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "I was wondering what are the famous places where tickets are free? Can you name three?", "cypher": "match (:ENTITY{name:'Free of charge'})<-[:Relationship{name:'The price of tickets'}]-(q),(q)-[:Relationship{name:'Famous places'}]->(m) return m.name order by m.name limit 3"}, {"query": "Do you know what types of relationships are involved in the three layers of cabinet?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The Van'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I know that Aevarsson \u00c1rmann Peter is an Icelandic footballer, can you tell me three more things about him?", "cypher": "match (n:ENTITY{name:'Aevarsson \u00c1rmann Peter'})-->(h) with h order by h.name where h.name <> 'Iceland' and h.name <> 'Soccer' return h.name limit 3"}, {"query": "Do you have any information on the location of the 5 second level relations with Beijing?", "cypher": "match (n)-[:Relationship*2{name:'Area'}]->(p:ENTITY{name:'The Chinese'}) RETURN distinct n.name limit 5"}, {"query": "A word about the era of the 212th Ward?", "cypher": "match (:ENTITY{name:'1District212The age of the joy rental'})--(n) with n order by n.name return n.name limit 1"}, {"query": "How long is the shortest relationship between Wang Jianhui and Sun Tzu in the two levels?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The King of Jin'})-[*..2]-(b:ENTITY{name:'Sun Zemp'})) return count(p)"}, {"query": "Do you know what accident happened on the highway near the village of Nine Ways in Jinzhou, Jining Province?", "cypher": "match (:ENTITY{name:'Highway near the village of Nine Road, Yi County, Jinzhou, Liaoning Province'})<-[:Relationship{name:'Location'}]- (h) return h.name"}, {"query": "Do you remember where the Harbin flood occurred in 1932?", "cypher": "match(:ENTITY{name:'1932Harbin flood'})-[:Relationship{name:'Location'}]-> (p) return p.name"}, {"query": "What are the main works of writers who have been awarded the status of Public Interest Ambassadors?", "cypher": "match (:ENTITY{name:'Ambassador of the image of public charity'})<-[:Relationship{name:'Major achievements'}]-(p),(p)-[:Relationship{name:'Major works'}]->(n) return distinct n.name"}, {"query": "What are the occupations of people born in Linhai City, Zhejiang Province?", "cypher": "match (:ENTITY{name:'Linhai City, Zhejiang Province'})<-[:Relationship{name:'Where I was born'}]-(p),(p)-[:Relationship{name:'Professional life'}]->(x) return distinct x.name limit 5"}, {"query": "What is the most famous place for subtropical monsoon climate?", "cypher": "match (:ENTITY{name:'Subtropical monsoon climate'})<-[:Relationship{name:'Types of climate'}]-(x),(x)-[:Relationship{name:'Famous places'}]->(n) return distinct n.name limit 1"}, {"query": "What labels are appropriate for Green's Fairy Tale 1?", "cypher": "match (:ENTITY{name:'(1CD)The Green Fairy Tale1[The Rain tells a story]'})-[:Tag{name:'The label'}]-> (p) with p order by p.name return p.name"}, {"query": "What does she do? Where did she graduate? What is her major?", "cypher": "match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Professional life'}]->(n) return n.name as name union all match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Graduated'}]->(m) return m.name as name union all match (:ENTITY{name:'Oh, my God.'})-[:Relationship{name:'Professional direction'}]->(r) return r.name as name"}, {"query": "What are the chemical substances with a molecular weight of 199.63? Can you name four?", "cypher": "match (:ENTITY{name:'199.63'})<-[:Relationship{name:'Molecular weight'}]- (p) return p.name limit 4"}, {"query": "What is the name of the company in Yangon?", "cypher": "match (p:ENTITY{location:'The Long Spring'}) return p.name"}, {"query": "The government's work department, the office of the city commissioner of Jindal, has five levels of relations.", "cypher": "match (n:ENTITY{name:'The office of the Xiangde Municipal Council'})-[*1..5]->(x) where x.name<>'Government work' return distinct x.name"}, {"query": "How many companies were created in 2002?", "cypher": "match (p:ENTITY{time:'2002'}) return count(p)"}, {"query": "Please tell me which works are from the same period as the Su Sheng, the water-cleaners and the wooden ones, and what labels are on each of them? Find them and list them for me in order of number of labels from most to least.", "cypher": "match (n:ENTITY{name:'The water source is clear, the wood is gold'})-[:Relationship{name:'The year'}]->(:ENTITY)<-[:Relationship{name:'The year'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "The book was published on 2001/1/1 and what is the price?", "cypher": "match (:ENTITY{name:'2001/1/1'})<-[:Relationship{name:'Published'}]-(x),(x)-[:Relationship{name:'Pricing'}]->(q) return distinct q.name"}, {"query": "What are the reported consequences of the 2004 North Korean Long River train station explosion?", "cypher": "match(:ENTITY{name:'2004The North Korean Long River train station explosion'})-[:Relationship{name:'The result'}]-> (p) return p.name"}, {"query": "Please describe the characteristics of the exhaust pipe bolt.", "cypher": "match (:ENTITY{name:'The exhaust pipe bolt'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Features'}]->(x) return distinct x.name"}, {"query": "Can you please translate the name of 2-dihydroxybutyric acid into English?", "cypher": "match(:ENTITY{name:'2-Diethyl methacrylate'})-[:Relationship{name:'English name'}]-> (m) return m.name"}, {"query": "Can you tell me the name of the relationship between the two layers of the school?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'Earthquake resistance wants primary school'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Do you know what chemical is CAS number 5122-82-7?", "cypher": "match (:ENTITY{name:'5122-82-7'})<-[:Relationship{name:'CASNo'}]- (h) return distinct h.name"}, {"query": "Help me find the synonyms and antonyms that are returned.", "cypher": "match (:ENTITY{name:'Turn around[Meaning of the word]'})-[:Relationship{name:'The synonym'}]->(n) return n.name as name union all match (:ENTITY{name:'Turn around[Meaning of the word]'})-[:Relationship{name:'The Antithesis'}]->(m) return m.name as name"}, {"query": "As far as I know, the book on esophageal imaging is written by Li Wenhua and Liu Yinjie, published by People's Health Publishing, and I would like to know six more things about this book, if you can help me find out.", "cypher": "match (n:ENTITY{name:'Imaging of the Esophagus'})-->(h) with h order by h.name where h.name <> 'The first is that of the The first is that of the new government.' and h.name <> 'Public health publishing' return h.name limit 6"}, {"query": "What are the four types of relationships that are associated with the Zhejiang campus of Taiyuan University?", "cypher": "match path=(n)<-[:Relationship*4]-(p:ENTITY{name:'Zhejiang campus of Taiyuan College'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Which schools are the same type of schools as the Taij\u014d Coal School, and what are the labels of each school?", "cypher": "match (n:ENTITY{name:'The Taihara Coal School'})-[:Relationship{name:'Type of school'}]->(:ENTITY)<-[:Relationship{name:'Type of school'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "What is the shortest relationship path between Jiang Yao and Zhao Qin in the two layers?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Jiang Yao-shing'})-[*..2]-(b:ENTITY{name:'The Chinese'})) return count(p)"}, {"query": "What is the shortest relationship path between the two films?", "cypher": "The film stars Yayoi Kusama and is directed by Yayoi Kusama.", "error": "Invalid input 'The': expected\n  \"ALTER\"\n  \"CALL\"\n  \"CREATE\"\n  \"DEALLOCATE\"\n  \"DELETE\"\n  \"DENY\"\n  \"DETACH\"\n  \"DROP\"\n  \"DRYRUN\"\n  \"ENABLE\"\n  \"FOREACH\"\n  \"GRANT\"\n  \"INSERT\"\n  \"LOAD\"\n  \"MATCH\"\n  \"MERGE\"\n  \"NODETACH\"\n  \"OPTIONAL\"\n  \"REALLOCATE\"\n  \"REMOVE\"\n  \"RENAME\"\n  \"RETURN\"\n  \"REVOKE\"\n  \"SET\"\n  \"SHOW\"\n  \"START\"\n  \"STOP\"\n  \"TERMINATE\"\n  \"UNWIND\"\n  \"USE\"\n  \"USING\"\n  \"WITH\" (line 1, column 9 (offset: 8))\n\"PROFILE The film stars Yayoi Kusama and is directed by Yayoi Kusama.\"\n         ^"}, {"query": "What important events happened to Deng Wei, a member of the Chinese delegation to the 2010 Asian Games for the Disabled in Guangzhou?", "cypher": "match (:ENTITY{name:'The man who was killed was a man who was killed by a man.2010She was a member of the Chinese delegation to the Asian Games in Guangzhou in the year 2008.'})<-[:Describe{name:'Describe'}]-(h)-[:Relationship{name:'Important events'}]->(n) return distinct n.name"}, {"query": "Search for her graduation and career paths, and what is her current job?", "cypher": "match (:ENTITY{name:'The Spring Seed'})-[:Relationship{name:'Graduated'}]->(n) return n.name as name union all match (:ENTITY{name:'The Spring Seed'})-[:Relationship{name:'Professional direction'}]->(m) return m.name as name union all match (:ENTITY{name:'The Spring Seed'})-[:Relationship{name:'Job title'}]->(r) return r.name as name"}, {"query": "What kind of mixing effects is used in 101 Spotted Dogs?", "cypher": "match(:ENTITY{name:'101The Spotted Dog'})-[:Relationship{name:'Mixed'}]-> (m) return m.name"}, {"query": "Shanghai Customs Inspection Technology Co., Ltd. has been established for a long time, do you know the exact timing of the issuance?", "cypher": "match(:ENTITY{name:'Shanghai DQT Technology Co., Ltd. is a Chinese company.'})-[:Relationship{name:'The time of the shooting'}]-> (x) return x.name"}, {"query": "Who has the same date of birth as Metge Nicolas, and who has a tag?", "cypher": "match (n:ENTITY{name:'Metge Nicolas'})-[:Relationship{name:'Date of birth'}]->(:ENTITY)<-[:Relationship{name:'Date of birth'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c DESC "}, {"query": "Do you know about Hong Valley Mountain? Find out about the other 10 information in the 2nd level, apart from the information about the location outside Linzhou.", "cypher": "match (:ENTITY{name:'The Hun Valley'})-[:Relationship*1..2]->(p) where p.name <> 'Southwest of Linzhou15Km' return  p.name limit 10"}, {"query": "What is the maximum power of the 13 wheeled assault vehicles in the army?", "cypher": "match(:ENTITY{name:'13Wheeled assault vehicle'})-[:Relationship{name:'Maximum power'}]-> (n) return n.name"}, {"query": "What is the shortest relationship between the 50mm and MP5 rifle?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'50The rifle'})-[*..2]-(b:ENTITY{name:'MP5The Shotgun Series'})) return count(p)"}, {"query": "What can you say about the relationship between the long-term deal and the third tier of the national debt label?", "cypher": "match (n)<-[:Tag*3{name:'The label'}]-(p:ENTITY{name:'Long-term trading of government bonds'}) RETURN distinct n.name limit 2"}, {"query": "Do you know which famous alumni of schools with the names Mind Chun-Tseol, Stop the Good, Boku-Ryu-Ryu, Self-Reliance?", "cypher": "match (:ENTITY{name:'The following is a list of the top 10 best places to visit in the city of Chennai.'})<-[:Relationship{name:'Schooling'}]-(h)-[:Relationship{name:'Famous alumni'}]->(n) return distinct n.name limit 10"}, {"query": "I'm looking for information on the relationship between Yue Da and Yong Uncle Satong Yue Zhen Mountain, who gave twelve questions to his eight-day-long Minshuang 2nd level.", "cypher": "match (n:ENTITY{name:'The first is the question of the origin of the name of the city.'})-[:Relationship*1..2]->(x) where x.name<>'Oh, my God.' return distinct x.name"}, {"query": "Can you name the five Chinese words that are used in Chinese?", "cypher": "match (x:ENTITY{name:'Chinese'})<-[:Relationship{name:'Ethnic groups'}]-(m)-[:Relationship{name:'Title'}]->(p) return distinct p.name limit 5"}, {"query": "Do you have a description of the drug within the 2-layer relationship of the medical drug MAPPAN?", "cypher": "match (n:ENTITY{name:'The Mapuan'})-[:Relationship*1..2]->(x) where x.name<>'Medical' return distinct x.name"}, {"query": "Can you tell me which relationships are covered in the three layers of the Natural Disaster Knowledge Guide?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'Natural disaster knowledge book'}) UNWIND relationships(path) AS rel return rel.name limit 6"}, {"query": "Can you tell me the author of this book for children who start reading in English?", "cypher": "match (:ENTITY{name:'Children start reading English'})<-[:Relationship{name:'Title'}]-(p)-[:Relationship{name:'Written by'}]->(n) return distinct n.name"}, {"query": "Help me find out the author of the book, Xu Yong, about the principles of industrial communication technology and the other 7 steps in applying them in the 3 layers of this book.", "cypher": "match (:ENTITY{name:'Principles and applications of industrial communication technology'})-[*1..3]-(p) where p.name <> 'The Chinese' return distinct p.name limit 7"}, {"query": "What is the shortest relationship path between the two layers of chicken and the chicken of the plant?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'The planting of the five-flowered plant'})-[*..2]-(b:ENTITY{name:'Kawasaki is back for chicken'})) return count(p)"}, {"query": "Help me find the five encyclopedic plants", "cypher": "match (:ENTITY{name:'The Encyclopaedia Liliaceae'})<-[:Relationship{name:'The Department'}]-(m) return distinct m.name limit 5"}, {"query": "Which of the five famous places that are open from 8:00 to 16:30 is good?", "cypher": "match (:ENTITY{name:'8The following:00The16The following:30'})<-[:Relationship{name:'Opening hours'}]-(q),(q)-[:Relationship{name:'Famous places'}]->(p) return distinct p.name limit 5"}, {"query": "Do you know the name of the Chinese marshal general awarded the full record you are looking at?", "cypher": "match(:ENTITY{name:'Chinese General awarded full record'})-[:Relationship{name:'Other names'}]-> (h) return h.name"}, {"query": "Do you remember when the 2011 Chinese Football Association Amateur League was held?", "cypher": "match(:ENTITY{name:'2011The annual Chinese Football Association Amateur League'})-[:Relationship{name:'When to hold'}]-> (h) return h.name"}, {"query": "The first round of the political exam in the A-Level in the state of Hubei in the autumn of 2015 was held in the city of Hubei.", "cypher": "match (:ENTITY{name:'05A political round of the AICTEA'})--(m) with m order by m.name return distinct m.name skip 1 limit 5"}, {"query": "I'm not sure what kind of Ethernet medium is fully dual-functional.", "cypher": "match (:ENTITY{name:'Full-time'})<-[:Relationship{name:'The pattern'}]- (x) return x.name"}, {"query": "The year in which the house of the Yuletide Monk was built?", "cypher": "match (:ENTITY{name:'The Yuletide is gone.'})<-[:Relationship{name:'Chinese name'}]-(x),(x)-[:Relationship{name:'Establishing Time'}]->(q) return distinct q.name"}, {"query": "Please tell me which unit is hosting the 4th Hebei Provincial Skin Science and Exchanges?", "cypher": "match (:ENTITY{name:'The fourth Hebei Provincial Skin Science and Education Forum'})<-[:Relationship{name:'Chinese name'}]-(h)-[:Relationship{name:'Hosted'}]->(x) return distinct x.name limit 1"}, {"query": "Do you know which earthquake hit Zhejiang Province in the Dehaong-guang Autonomous Region?", "cypher": "match (:ENTITY{name:'The Dehong people are from Zhejiang Province, Zhejiang Autonomous Region.'})<-[:Relationship{name:'Location of the quake'}]- (n) return n.name"}, {"query": "The book is published by the publisher of the magazine Electrical Principles.", "cypher": "match (:ENTITY{name:'Principles of electrical engineering (including the syllabus for the self-study exam) (shouting)'})<-[:Relationship{name:'Title'}]-(p)-[:Relationship{name:'Publishing house'}]->(n) return distinct n.name limit 3"}, {"query": "Can you tell me which schools have an international ministry?", "cypher": "match (:ENTITY{name:'Ministry of Foreign Affairs'})--(p) return p.name skip 2"}, {"query": "Do you know which tourist attractions are open all year round? Can you name five?", "cypher": "match (:ENTITY{name:'Open all year round'})<-[:Relationship{name:'Opening hours'}]-(p)-[:Relationship{name:'Famous places'}]->(n) return distinct n.name limit 5"}, {"query": "The 10th Millennium Cures are not included in the list of other achievements, including the Chinese Medical Experts Association.", "cypher": "match (:ENTITY{name:'The Thousand Circles'})<-[:Relationship{name:'Other names'}]-(h)-[:Relationship{name:'Major achievements'}]->(q) where q.name <> 'Chinese and Chinese Language Experts Association' return distinct q.name limit 10"}, {"query": "I wonder what the names of all the novels featured in the Files of Myrna are?", "cypher": "match (:ENTITY{name:'The Mayan in Fiji'})<-[:Relationship{name:'Written by'}]-(m)-[:Relationship{name:'Chinese name'}]->(n) return distinct n.name"}, {"query": "Do you know how much the total prize money is in a $200,000 contest? Can you name five?", "cypher": "match (:ENTITY{name:'20million dollars'})<-[:Relationship{name:'Total prize'}]- (m) return m.name limit 5"}, {"query": "The following is a list of the works that have been published by the following authors:", "cypher": "match (n:ENTITY{name:'The integration of literature in the field of semantic research: the current and contemporary volumes'})-[:Relationship*1..2]->(x) where x.name<>'Publisher' return distinct x.name"}, {"query": "What chemical is the EINECS number 210-921-1?", "cypher": "match (:ENTITY{name:'210-921-1'})<-[:Relationship{name:'EINECSThe number'}]- (h) return h.name"}, {"query": "Can you tell me what the relationship names are in the two layers involved? Can you tell me three?", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Twin Stars of the Sea'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "Ask the phone booth, which area code is 0943 and which area code is 0943?", "cypher": "match(:ENTITY{name:'0943'})-[:Relationship{name:'Belongs to'}]-> (n) return n.name"}, {"query": "The spelling of which national road is 101 guo dao?", "cypher": "match (:ENTITY{name:'101 guo dao'})<-[:Relationship{name:'Spelling'}]- (x) return x.name"}, {"query": "Please provide information on the type of business that Blue Light Technology Limited was originally registered under.", "cypher": "match(x:ENTITY{name:'Blue Light Technology Co., Ltd. of the city of Foshan'})-[:Relationship{name:'Type of business'}]-> (n) return n.name"}, {"query": "Do you know if the national is Han Chinese, the academic is a gentleman, or the CCP member and engineer is a nickname?", "cypher": "match (:ENTITY{name:'The Chinese government has been trying to get the Chinese to join the Chinese Communist Party.'})<-[:Describe{name:'Describe'}]-(p),(p) return distinct p.name limit 3"}, {"query": "Which organization is hosting the 2012 Industrial Design and User Experience Conference?", "cypher": "match(:ENTITY{name:'2012Industrial Design and User Experience Conference'})-[:Relationship{name:'Hosted'}]-> (p) return p.name"}, {"query": "What generation of poet was Chen Han?", "cypher": "match (:ENTITY{name:'Chen Han[Tang Dynasty poet]'})-[:Relationship{name:'The times in which'}]-> (m) return distinct m.name"}, {"query": "I want to see five romance novels, can I?", "cypher": "match (:ENTITY{name:'The Word'})<--(n) return n.name limit 5"}, {"query": "I'm going to have to ask you to give me a copy of your farewell poem.", "cypher": "match (:ENTITY{name:'The poetry of the good-bye'})-[:Relationship{name:'Representative works'}]-> (q) return q.name limit 1"}, {"query": "What is the shortest distance between the Great Wall and the Red Square?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'In the Red Cedar[Vice-Dean of the Central Academy of Music]'})-[*..2]-(b:ENTITY{name:'The Great Wall[Member of the Chinese Dramatists Association]'})) return count(p)"}, {"query": "Check to see what is the density of 3-hydroxy-5-hydroxyethylene?", "cypher": "match(:ENTITY{name:'3-The base-5-Ethyl methacrylate'})-[:Relationship{name:'Density'}]-> (x) return x.name"}, {"query": "What is the shortest relationship path between the tiger-lined short-spaced alveoli and the yellowish short-spaced alveoli in the 2nd layer?", "cypher": "match p=allshortestpaths((a:ENTITY{name:'Tiger-striped short-beaked tit'})-[*..2]-(b:ENTITY{name:'Yellow-billed short-beaked chub'})) return count(p)"}, {"query": "Can you help me understand who wrote the music for Zhang Xiaohua's song \"Taoxian\"?", "cypher": "match(:ENTITY{name:'The Tactics[Zhang Xiaohua performs the song]'})-[:Relationship{name:'Music'}]-> (x) return x.name"}, {"query": "Can you tell me which brands are in a relationship with Shamoni for Tier 5 labels?", "cypher": "match (n)<-[:Tag*5{name:'The label'}]-(p:ENTITY{name:'Harmony'}) RETURN distinct n.name"}, {"query": "I'm wondering which book has the barcode number 9787806904213?", "cypher": "match (:ENTITY{name:'9787806904213'})<-[:Relationship{name:'Barcode'}]- (m) return m.name"}, {"query": "And what do you know of the altitude of Managua?", "cypher": "match(:ENTITY{name:'Managua'})-[:Relationship{name:'Height'}]-> (n) return n.name"}, {"query": "Do you know the name of the exhibition hall at the 2012 European International Aluminium Expo in Italy?", "cypher": "match(:ENTITY{name:'2012The European Union[Italy]The International Aluminum Industry Fair'})-[:Relationship{name:'Name of the gallery'}]-> (x) return x.name"}, {"query": "Can you find two tasty sweet foods?", "cypher": "match (n:ENTITY{name:'Sweet'})<-[:Relationship{name:'The Taste'}]- (mn) return mn.name limit 2"}, {"query": "How many episodes of the TV series Pure Love?", "cypher": "match(:ENTITY{name:'The Purity of Love'})-[:Relationship{name:'The set'}]-> (n) return n.name"}, {"query": "I'm wondering if you can name the relationship between the two layers that are covered by the three super waves.", "cypher": "match path=(n)<-[:Relationship*2]-(p:ENTITY{name:'The Wave'}) UNWIND relationships(path) AS rel RETURN rel.name limit 3"}, {"query": "What is the name of the Chinese western shark?", "cypher": "match (:ENTITY{name:'The Chinese Western Shore.'})--(x) return distinct x.name"}, {"query": "What are the main areas of the newly launched 0701 Group Shopping Network?", "cypher": "match(:ENTITY{name:'0701The Shopping Network'})-[:Relationship{name:'Main business'}]-> (h) return h.name"}, {"query": "Do you have all the types of relationships that Jiangsu covers in the three levels?", "cypher": "match path=(n)<-[:Relationship*3]-(p:ENTITY{name:'The river is far away'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Which works are published by the same publisher with blue footprint? What are the labels for each? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'The blue footprints'})-[:Relationship{name:'Publishing house'}]->(:ENTITY)<-[:Relationship{name:'Publishing house'}]-(m:ENTITY),\n(r:ENTITY)<-[:Tag]-(m:ENTITY) \nreturn m.name, count(r) as c, collect(r.name) \nORDER BY c"}, {"query": "Give me a list of five men who have held the world record in the 400 metres.", "cypher": "match (:ENTITY{name:'The man400The American world record holder'})--(p) return  distinct p.name limit 5"}, {"query": "What is the size of the main screen of the HP iPAQ 910?", "cypher": "match (:ENTITY{name:'HP iPAQ 910It is an operating system forWindows Mobile 6.1The phone is not connected to the internet.'})<-[:Describe{name:'Describe'}]-(q)-[:Relationship{name:'Main screen size'}]->(m) return distinct m.name"}, {"query": "What does it mean to be crowned with a face like a jewel?", "cypher": "match (:ENTITY{name:'Their faces are like the crown of a pearl.'})-[:Describe{name:'The label'}]->(n) return n.name as name union all match (:ENTITY{name:'Their faces are like the crown of a pearl.'})-[:Relationship{name:'Get out of here.'}]->(m) return m.name as name"}, {"query": "The hotel is located in the middle of the jungle, and what is the scope of his business?", "cypher": "match(:ENTITY{name:'The hotel in the jungle'})-[:Relationship{name:'Scope of operations'}]-> (n) return n.name"}, {"query": "Help me find six of them.", "cypher": "match (:ENTITY{name:'The Chinese'})<-[:Relationship{name:'Classified'}]-(m) return m.name limit 6"}, {"query": "Who weighs 118 kg/260 pounds? What else does he have to say?", "cypher": "match (:ENTITY{name:'118Kilograms/260Pound'})<-[:Relationship{name:'Weight'}]-(q),(q)-[:Relationship{name:'Other names'}]->(n) return distinct q.name,n.name"}, {"query": "Can you find group events in Kunshan, China?", "cypher": "match (:ENTITY{name:'China Kunshan'})<-[:Relationship{name:'Location'}]- (mn) -[:Relationship{name:'Type of event'}]->(n:ENTITY{name:'Group competition'}) return mn.name"}, {"query": "Can you say three things that are the fifth layer of the label relationship of the plant?", "cypher": "match (n)-[:Tag*5{name:'The label'}]->(p:ENTITY{name:'Plants'}) RETURN distinct n.name limit 3"}, {"query": "What are the opening hours of the White Yucatan?", "cypher": "match(:ENTITY{name:'The White Yucatan[The scenic area of the tourist resort]'})-[:Relationship{name:'Opening hours'}]-> (n) return n.name"}, {"query": "What do you think I should do except tell my daughter to cry if she can't hold her baby?", "cypher": "match (:ENTITY{name:'What are you doing?'})-[:Relationship{name:'Other names'}]-> (h) with h order by h.name where h.name <> 'The child cannot hold his daughter' return h.name"}, {"query": "I remember there was a chemical called helium with a molecular weight of 243.", "cypher": "match (:ENTITY{name:'243'})<-[:Relationship{name:'Molecular weight'}]- (q) return q.name"}, {"query": "I would like to know if this is a different name for a mammal.", "cypher": "match (:ENTITY{name:'Breastfeeding'})<-[:Relationship{name:'The Outline'}]-(p)-[:Relationship{name:'Other names'}]->(x) return x.name skip 1 limit 1"}, {"query": "Can you tell me about the anatomy of the anterior superior temporal bone? Can you name three?", "cypher": "match (:ENTITY{name:'The anterior surface of the upper jaw'})<-[:Relationship{name:'Chinese name'}]-(p)-[:Relationship{name:'The shape'}]->(n) return n.name order by n.name limit 3"}, {"query": "The following is a list of some of the most popular works by the author of the book, \"The Little Garden of the Tang Dynasty: The Story of the Little Garden of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Time: The Time: The Time: The Time: The Time: The Time: The Time", "cypher": "match (n:ENTITY{name:'The peach blossoms in the garden, sometimes with a hangover'})-[:Relationship*1..2]->(x) where x.name<>'Don, please.' return distinct x.name"}, {"query": "Do you know what Dong Xiao Shu does for a living?", "cypher": "match (:ENTITY{name:'Dong Xishu'})<-[:Relationship{name:'Chinese name'}]-(m),(m)-[:Relationship{name:'Professional life'}]->(h) return distinct h.name limit 1"}]