[{"query": "What other work does Liu Xiaobo have besides representing the Hurricane Mouth?", "cypher": "match (n:ENTITY{name:'\u4f73\u6668'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'representing work'}]->(p) where p.name <> '\u98ce\u53e3' return distinct p.name limit 1"}, {"query": "Do you know what a 10.65 military weapon is?", "cypher": "match (:ENTITY{name:'10.65 m'}) <- [:Relationship{name:' full length'}]- (x) return distinct x.name"}, {"query": "What else do you know about Private Corner? Help me find the other 4 pieces of information in layer 2?", "cypher": "match (:ENTITY{name:'Private Corner'}) - [:Relationship*1..3]-(p) where p.name <> 'album' return p.name limit 4"}, {"query": "Which school is the national laboratory for advanced research in science and technology?", "cypher": "match (q:ENTITY{name:'National Institute of Advanced Research in Education'}) --(n) return n.name order by n.name limit 1"}, {"query": "Help me find the 10 species of snakes in the family of the rattlesnakes.", "cypher": "match (:ENTITY{name:'family of snakes'}) <- [:Relationship{name:'family'}]-(m) return distinct m.name limit 10"}, {"query": "I want to know about the next publication in the category of Physics/Northern Green Card in Grade 9 and not higher than 2 levels of relationship?", "cypher": "match (n:ENTITY{name:'Nine-year-old physics/Northern Green Card'}) - [:Relationship*1..2]->(x) where x.name <> 'publication' return distinct x.name"}, {"query": "Please help me find out where five Korean actors were born.", "cypher": "Match (:ENTITY{name:'Korean actor'}) <- [*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name, n.name limit 5"}, {"query": "What are the three professions occupied by leftists?", "cypher": "match (:ENTITY{name:' left'}) <- [:Relationship{name:' Chinese name'}]-(n),(n) - [:Relationship{name:' profession'}]->(m) return distinct m.name limit 3"}, {"query": "Can you tell me the spelling of the word \"spoiled\"?", "cypher": "Match (:ENTITY{name:' word for word'}) - [:Relationship{name:' spelling'}]->(n) return n.name"}, {"query": "I recommend five nicknames for people who are shooting, one of which is not to be called Becca.", "cypher": "match (:ENTITY{name:'Shooting'}) <- [:Relationship{name:'Stouring'}]-(q),(q) - [:Relationship{name:'othername'}]->(p) where p.name <> 'Becca' return distinct p.name limit 5"}, {"query": "Do you know 100 things every designer needs to know about people?", "cypher": "match (:ENTITY{name:'100 Things Every Designer Needs to Know About People'}) --(h) with h order by h.name return h.name"}, {"query": "What chemical has a relative molecular weight of 96.085?", "cypher": "match (x:ENTITY{name:'96.085'}) <- [:Relationship{name:'relative molecular mass'}]- (n) return distinct n.name"}, {"query": "Do you know what chemical is 99% pure?", "cypher": "match (:ENTITY{name:'99%'}) <- [:Relationship{name:'purity'}]- (x) return distinct x.name"}, {"query": "Please provide a profile of Agovic Elvis, a footballer with three levels of relationships.", "cypher": "match (n:ENTITY{name:'Agovic Elvis'}) - [:Relationship*1..3]->(x) where x.name<> 'football' return distinct x.name"}, {"query": "I'm going to start with a list of the most commonly used and the most commonly used types of content.", "cypher": "match (n:ENTITY{name:' late step less slightly'}) - [*1..2]->(x) where x.name <> '' return distinct x.name"}, {"query": "The following is a list of the top 10 best-selling games in the world, and the most popular games in the world.", "cypher": "match (n:ENTITY{name:'\u5927\u6728\u6653'}) - [*1..3]->(x) where x.name <> 'footballer' return distinct x.name"}, {"query": "In the case of the semiconductor data manual by Otfried Madelung, what is the relationship between the four layers?", "cypher": "match (n:ENTITY{name:' Semiconductor data manual'}) - [*1..4]->(x) where x.name <>'Otfried Madelung' return distinct x.name"}, {"query": "The following is a list of five personal information about American Corati Thomas.", "cypher": "match (n:ENTITY{name:'Corati Thomas'}) - [*]->(x) where x.name <>'United States' return distinct x.name limit 5"}, {"query": "Do you think that EXO can be introduced to others with just one message?", "cypher": "match (:ENTITY{name:'EXO fellow'}) --(x) with x order by x.name return x.name limit 1"}, {"query": "I'm not sure if I should write a list of 10 academic achievements.", "cypher": "match (:ENTITY{name:'scholar'}) <- [:Relationship{name:'profession'}]-(q) - [:Relationship{name:'main achievement'}]->(n) return n.name order by n.name limit 10"}, {"query": "I know that the Hunan Waterfall National Wetland Park is located in Hunan Province, in Hunan City, with 21266 hectares, if you don't know any other information, give me four.", "cypher": "match (n:ENTITY{name:'Hunan Waterfall National Wetland Park'}) -->(h) with h order by h.name where h.name <> 'Hunan Province Waterfall City' and h.name <> '21266 hectares' return h.name limit 4"}, {"query": "You know what the full name of Yun Yiwenhua is?", "cypher": "match (:ENTITY{name:'cloudspace'}) <-[:Relationship{name:' shortly '}]-(h) return h.name"}, {"query": "The first five major departments of the university with a PhD mobile station?", "cypher": "match (:ENTITY{name:'1'}) <- [:Relationship{name:'postdoctoral station'}]-(q) - [:Relationship{name:'main faculty'}]->(m) return m.name order by m.name limit 5"}, {"query": "Is there a plot in the game called 1945 Fighting Aircraft?", "cypher": "match (:ENTITY{name:'1945 hit plane'}) --(h) with h order by h.name where h.name <> 'shooting game' return h.name"}, {"query": "What are the main awards for students who graduated from AAA Christian College?", "cypher": "match (:ENTITY{name:'AAA Christian College'}) <- [:Relationship{name:'Graduate School'}]-(m),(m) - [:Relationship{name:'Main award'}]->(p) return distinct p.name limit 2"}, {"query": "I want to know if there are 5 levels of relationships in the profile of the footballer Starino Shin?", "cypher": "match (n:ENTITY{name:'Star\u91ce\u6709\u4eae'}) - [*1..5]->(x) where x.name <> 'footballer' return distinct x.name limit 5"}, {"query": "123 cards have a rubber label?", "cypher": "match (:ENTITY{name:'123card'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name"}, {"query": "I want a video of a food supplement that is in the 3rd layer of the relationship with the band-aid?", "cypher": "match (n:ENTITY{name:'complementary stop-band'}) - [:Relationship*1..3]->(x) where x.name<>'food' return distinct x.name"}, {"query": "What else do you know about Liu Yongzhi besides being the chairman of New Hope Group?", "cypher": "match (:ENTITY{name:'forevergood'}) - [:Relationship*1..2]-(p) where p.name <> 'New Hope Group chairman' return distinct p.name limit 10"}, {"query": "The following is a brief introduction to the two-layer relationship between the Seven Laws and the Common Law of Chastity.", "cypher": "match (n:ENTITY{name:' and usual serve to separate the remainder of the equation'}) - [:Relationship*1..2]->(x) where x.name <>'seven-line' return distinct x.name"}, {"query": "Can you find out about the five alumni of Guangdong Higher Teacher Training School and what they do?", "cypher": "match (:ENTITY{name:' Guangdong Higher Teacher Education School'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' profession'}]->(n) return distinct m.name,n.name limit 5"}, {"query": "Help me find the seven phrases of the ten most famous ancient poems.", "cypher": "match (:ENTITY{name:'lineage'}) <- [:Relationship{name:'creation year'}]- (mn) - [:Relationship{name:'literary genre'}]->(n:ENTITY{name:'seven-word phrase'}) return mn.name limit 10"}, {"query": "In which city in the North West of England is Albert Square a scenic area?", "cypher": "match (:ENTITY{name:'Albert Square, Lowry Centre, Chinatown, Catherfield City Heritage Park, etc'}) <- [:Relationship{name:'Famous attractions'}]-(m), (m) - [:Relationship{name:'Geographical location'}]->(n) where n.name='North West Plains of England' return distinct m.name"}, {"query": "I'm going to be a nurse for the next three years.", "cypher": "match (:ENTITY{name:'0~3 years old baby healthy feeding'}) --(x) with x order by x.name return x.name"}, {"query": "Can you sort out the first three Chinese names for the door you don't push?", "cypher": "match (:ENTITY{name:'do not push that door'}) - [:Relationship{name:'Chinese name'}]-> (x) with x order by x.name return x.name limit 3"}, {"query": "The problem is that the name of the liver hardness is not liver hardness, but liver hardness, but liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, but also liver hardness, and also liver hardness, but also liver hardness, but also liver hardness, and also liver hardness, but also liver hardness, but also liver hardness, and liver hardness, and also liver hardness, but also liver hardness, and kidney damage.", "cypher": "match (n:ENTITY{name:'Hepatitis C is a disease of the liver'}) - [:Relationship*1..3]->(x) where x.name<>'Hepatitis C is a disease of the liver' return distinct x.name"}, {"query": "Where did the world experience the worst natural disaster in late February/early March 1717?", "cypher": "match (:ENTITY{name:'February 1717 end of March'}) <- [:Relationship{name:'time of occurrence'}]- (x) return x.name"}, {"query": "Do you know where the conference was held on November 20-22, 2015?", "cypher": "match (:ENTITY{name:'20 November 2015 to 22 November'}) <- [:Relationship{name:'date'}]- (x) return distinct x.name"}, {"query": "What are the works of art from the Late Stone Age?", "cypher": "match (:ENTITY{name:'Late Stone Age'}) <- [:Relationship{name:'Background'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='artwork' return distinct m.name"}, {"query": "I'm not sure if you know about the Sichuan Provincial Business School.", "cypher": "match (:ENTITY{name:' Sichuan Provincial Business School'}) --(m) return m.name order by m.name limit 1"}, {"query": "Can you find me the singer and his three representatives?", "cypher": "match (:ENTITY{name:'singer'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'represents work'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "What is the name of the award given to the person who has made a difference in the electricity and energy industry?", "cypher": "match (p:ENTITY{name:'power supply'}) <- [:Relationship{name:'industry'}]- (n) return n.name"}, {"query": "What are the three main works of the Beijing-born artist?", "cypher": "match (:ENTITY{name:'Beijing'}) <- [:Relationship{name:'place of birth'}]-(n) - [:Relationship{name:'main work'}]->(x) return distinct x.name limit 3"}, {"query": "Can you think of a more fun Chinese first name in the future?", "cypher": "match (:ENTITY{name:' Future is better'}) - [:Relationship{name:' Chinese name'}]-> (q) with q order by q.name return distinct q.name limit 1"}, {"query": "Help me find 10 plants in the bean family.", "cypher": "match (:ENTITY{name:' family of beans and pulses'}) <- [:Relationship{name:' family'}]-(m) return distinct m.name limit 10"}, {"query": "What did all those who died on September 28, 1981 accomplish?", "cypher": "match (:ENTITY{name:'28 September 1981'}) <- [:Relationship{name:'date of death'}]-(p) - [:Relationship{name:'main achievements'}]->(x) return distinct x.name"}, {"query": "What is the main ingredient of fried chicken?", "cypher": "Match (:ENTITY{name:'frangipanion'}) - [:Relationship{name:'category'}]->(n) return n.name as name union all match (:ENTITY{name:'frangipanion'}) - [:Relationship{name:'main ingredient'}]->(m) return m.name as name"}, {"query": "Can you tell me about the five novels that are connected in Jinjiang Literary City?", "cypher": "match (:ENTITY{name:'Jingjiang Literary City'}) <- [:Relationship{name:'connected website'}]-(q),(q) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "In addition to one producer, which other professions were born on March 1, 1950? Give 5 of them.", "cypher": "match (:ENTITY{name:'March 1, 1950'}) <- [:Relationship{name:'date of birth'}]-(q) - [:Relationship{name:'profession'}]->(x) where x.name <> 'producer' return distinct x.name limit 5"}, {"query": "Do you know who the other name for sulfuric acid is?", "cypher": "match (:ENTITY{name:' sulfuric acid penicillin'}) <- [:Relationship{name:' alias'}]- (h) return distinct h.name"}, {"query": "What are your main works?", "cypher": "Match (:ENTITY{name:' [mainland Chinese actress]'}) - [:Relationship{name:'main work'}]->(m) return distinct m.name"}, {"query": "Can you list 10 shows that were filmed in the US?", "cypher": "match (:ENTITY{name:' United States'}) <- [:Relationship{name:' location'}]- (m) return m.name limit 10"}, {"query": "I'm wondering if you can tell me which one has 1570396 words?", "cypher": "match (p:ENTITY{name:'1570396'}) <- [:Relationship{name:' completed word count'}]- (n) return n.name"}, {"query": "Distinguished scholar in the field of business enterprise management who has published books such as the Mercury Market and the Mercury Forecast", "cypher": "match (:ENTITY{name:'distinguished scholar in the field of business enterprise management'}) <- [:Relationship{name:'main achievements'}]-(n),(n) - [:Relationship{name:'representative work'}]->(m) where m.name <> 'Relationship market and prediction of the market' return distinct m.name limit 10"}, {"query": "What other representative works by the actors of Kim Seok-ri are there?", "cypher": "match (:ENTITY{name:' actor'}) <- [:Relationship{name:' profession'}]-(p) - [:Relationship{name:' representing work'}]->(n) where n.name <> 'half-zet straight tree' return distinct n.name limit 10"}, {"query": "The name of the five Shandong people?", "cypher": "match (:ENTITY{name:'Santondo'}) <- [:Relationship{name:'birthplace'}]-(h) - [:Relationship{name:'representative work'}]->(p) return p.name order by p.name limit 5"}, {"query": "Can you tell me all about Kings, J.H.?", "cypher": "match (:ENTITY{name:' Kings, J.H.'}) --(m) return m.name order by m.name"}, {"query": "Do you know which companies are limited liability companies (investments or holdings by natural persons)? Name four?", "cypher": "match (:ENTITY{name:' limited liability company ((investment or holding by natural persons) '}) <- [:Relationship{name:' nature of company'}]- (m) return m.name limit 4"}, {"query": "Can you recommend 4 free games?", "cypher": "match (:ENTITY{name:' free'}) <- [:Relationship{name:' charge mode'}]- (m) return m.name limit 4"}, {"query": "Do you know who this is?", "cypher": "match (n:ENTITY{name:'sweet'}) --(x) return x.name"}, {"query": "Do you know what accident caused the collapse of a two-storey house?", "cypher": "match (:ENTITY{name:'a 2-story residential building partially collapsed'}) <- [:Relationship{name:'cause'}]- (m) return m.name"}, {"query": "Can you tell me about the other two categories of turmeric, apart from turmeric and watermelon?", "cypher": "match (n:ENTITY{name:'square'}) -[:Relationship{name:'category'}]->(h) where h.name <> 'square' and h.name <> 'square' return distinct h.name limit 2"}, {"query": "In which regions are Kyrgyz people mainly distributed?", "cypher": "match (:ENTITY{name:'Kyrgyz'}) - [:Relationship{name:' distribution'}]->(m) return distinct m.name"}, {"query": "Can you give me a list of agencies based in Germany?", "cypher": "match (:ENTITY{name:' Germany'}) <- [:Relationship{name:' Headquarters location'}]- (p) return p.name"}, {"query": "I would like to know about the situation of the Wenchuan Senior Secondary School in Jiaxing City, can I get 5 points?", "cypher": "match (:ENTITY{name:'Jubei City Shenzhen Senior Secondary School'}) --(p) return distinct p.name limit 5"}, {"query": "I would like to know about 5 cultural works inspired by the book of the five layers of poetry, which are sung in the book of the five layers of poetry.", "cypher": "match (n:ENTITY{name:'Enlightened to the Great Zizzy and the Ghostly Chapter'}) - [*1..5]->(x) where x.name <> 'culture' return distinct x.name limit 5"}, {"query": "Do you know the professional information of Sichuan Institute of Applied Technology? Please list one.", "cypher": "match (:ENTITY{name:' Sichuan College of Applied Technology'}) --(m) return distinct m.name limit 1"}, {"query": "I would like to know about the personal situation of Borovsky Vadim, who weighs 67 kg, in relation to the three-tier relationship?", "cypher": "match (n:ENTITY{name:'Borovsky Vadim'}) - [*1..3]->(x) where x.name <>'67 kg' return distinct x.name"}, {"query": "I would like to know what are the other two lessons in the primary and secondary school in Huangjia Camp Town, Yang County, apart from solidarity and struggle?", "cypher": "match (n:ENTITY{name:'Huan Guan Camp Town Primary Secondary School'}) -[:Relationship{name:'School Training'}]->(h) where h.name <> 'solidarity' and h.name <> 'effort' return distinct h.name limit 2"}, {"query": "The article is about the three layers of the relationship between the death of the Virgin and the literary work.", "cypher": "match (n:ENTITY{name:'Death of the Virgin'}) - [:Relationship*1..3]->(x) where x.name<>'Literary work' return distinct x.name"}, {"query": "Do you know of any publications published in 2003? Can you tell their publishers? Can you name five?", "cypher": "match (:ENTITY{name:'2003'}) <- [:Relationship{name:'published at the time'}]-(x),(x) - [:Relationship{name:'publisher'}]->(q) return distinct q.name limit 5"}, {"query": "I want to know what are the three categories of non-conceptual employees who behave outside of the corporate culture?", "cypher": "match (:ENTITY{name:'employee behaviour'}) --(m) with m order by m.name where m.name <> 'corporate culture' return distinct m.name limit 3"}, {"query": "What is the effect of strong magnetism when deformed by magnetic fields?", "cypher": "match (:ENTITY{name:' Strong magnet under the action of magnetic field'}) --(x) return distinct x.name"}, {"query": "The name of the book is \"Rukshakan\", which means \"The Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book of the Book", "cypher": "match (:ENTITY{name:'Rukshakan'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'history' return p.name limit 1"}, {"query": "The following are five professions that people in Zhejiang Province can do:", "cypher": "match (:ENTITY{name:'Zhejiang Wenzhou'}) <- [:Relationship{name:'place of birth'}]-(m),(m) - [:Relationship{name:'profession'}]->(p) where p.name <> 'singer' return distinct p.name limit 5"}, {"query": "I'm going to be a little bit more specific about this, but I'm going to be a little bit more specific about this.", "cypher": "match (n:ENTITY{name:' dress up for the future'}) - [:Relationship*1..3]->(x) where x.name<>'dress up for the future' return distinct x.name"}, {"query": "Tell me all the descriptions of 16 true colors?", "cypher": "match (:ENTITY{name:'16 true color'}) - [:Describe{name:'describe'}]-> (x) with x order by x.name return x.name"}, {"query": "Can you help me find the associate professor and his graduate school?", "cypher": "match (:ENTITY{name:'adjunct professor'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'graduate college'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "The question is, what size screen would be more comfortable for people to see?", "cypher": "match (:ENTITY{name:' more comfortable to give people with visual effects'}) <- [:Relationship{name:'1610'}]- (p) return p.name"}, {"query": "Can you name the 10 main departments of this school? This school belongs to the provincial undergraduate schools.", "cypher": "match (:ENTITY{name:'provincial undergraduate college'}) <-[:Relationship{name:'school attributes'}]-(m) -[:Relationship{name:'main college'}]->(h) return h.name skip 1 limit 10"}, {"query": "There are three novels in Chinese titled \"Yue Yao?\"", "cypher": "match (:ENTITY{name:'start point Chinese web'}) <- [:Relationship{name:'linked website'}]-(p) - [:Relationship{name:'Chinese name'}]->(h) return distinct h.name limit 3"}, {"query": "Any personal references regarding Pisani Duncan, who is not in any way related to the football player?", "cypher": "match (n:ENTITY{name:'Pisani Duncan'}) - [*1..3]->(x) where x.name<> 'football' return distinct x.name"}, {"query": "Can you tell me the information about the Hu Dong brothers, please?", "cypher": "match (:ENTITY{name:'Hua Dong Brothers'}) --(p) return p.name order by p.name"}, {"query": "Tell me about the public positions of Yasunori in Shandong province.", "cypher": "match (:ENTITY{name:'Shan County Iwasaki'}) - [:Relationship{name:'Public Office'}]-> (x) return distinct x.name"}, {"query": "Can you give an introduction to the 13 costly higher school materials, petrochemical equipment safety management and three-tier relationship?", "cypher": "match (n:ENTITY{name:' Higher school teaching materials; petrochemical equipment safety management'}) - [:Relationship*1..3]->(x) where x.name <>'13' return distinct x.name"}, {"query": "Find out what time they were published in six different history books.", "cypher": "match (:ENTITY{name:'history book'}) <- [*]-(m), (m) - [:Relationship{name:'published time'}]->(n) return m.name, n.name limit 6"}, {"query": "There is a website called 008IT World, can you find any information about it?", "cypher": "match (:ENTITY{name:'008IT world'}) --(p) with p order by p.name where p.name <> 'website' return p.name"}, {"query": "Tell me the three Chinese names of the crazy fairy queen.", "cypher": "Match (:ENTITY{name:'spooky'}) - [:Relationship{name:'spooky'}]-> (p) with p order by p.name return p.name limit 3"}, {"query": "What is the story behind the creation of the Puyu Culture Publishing House?", "cypher": "Match (:ENTITY{name:'Puryu Culture'}) <- [:Relationship{name:'Publishing Planning'}]- (h) return h.name"}, {"query": "Do you have any information about Alphonso Lowhing?", "cypher": "match (:ENTITY{name:'Alphonso Lowhing'}) --(q) return distinct q.name limit 10"}, {"query": "What is the name of the animation released by the video maker?", "cypher": "match (:ENTITY{name:'videomaker'}) <- [:Relationship{name:'release'}]- (m) return distinct m.name"}, {"query": "I'm looking for a list of 8 works by Yuji Yori and Fuyumi Fukuyama that are related to the festival, except for the word genre.", "cypher": "match (:ENTITY{name:'memories of the flowering years'}) --(m) with m order by m.name where m.name <> 'word' return distinct m.name limit 8"}, {"query": "Do you know which schools are private secondary schools and what their main awards are?", "cypher": "match (:ENTITY{name:'Private secondary school'}) <- [:Relationship{name:' category'}]-(n) - [:Relationship{name:' major award'}]->(q) return n.name,q.name skip 1 limit 10"}, {"query": "Can you find me the names of five doctors and their colleges?", "cypher": "match (:ENTITY{name:'doctor'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'graduate college'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "How about using the information in ten articles to explain the city of Banff?", "cypher": "match (:ENTITY{name:'Kings of the Jungle'}) --(x) with x order by x.name return x.name limit 10"}, {"query": "Can you name any of the lists that Liu Weiwei has published as a founder?", "cypher": "match (:ENTITY{name:'swing'}) <- [:Relationship{name:'swing'}]- (h) return h.name limit 5"}, {"query": "Can you list 5 personal information related to the 1.91m tall Rigi Alejandro in the 5 levels of relationships?", "cypher": "match (n:ENTITY{name:'Rigi Alejandro'}) - [*1..5]->(x) where x.name <>'1.91 m' return distinct x.name limit 5"}, {"query": "What projects are coming up in Ningbo, the mayor of Shanghai?", "cypher": "match (:ENTITY{name:'Shanghai Mayor Ning District'}) <- [:Relationship{name:'Reporting District'}]- (x) return x.name"}, {"query": "Who is the director of the Malayalam film?", "cypher": "Match (:ENTITY{name:'Malaysian [1998 American film]'}) - [:Relationship{name:'director'}]->(n) return n.name"}, {"query": "ADAMS is developed by which company and where is it used?", "cypher": "match (:ENTITY{name:'ADAMS'}) - [:Relationship{name:'Research and development company'}]->(n) return n.name as name union all match (:ENTITY{name:'ADAMS'}) - [:Relationship{name:'apply'}]->(m) return m.name as name"}, {"query": "In which publishing houses are the books of the first author of Ye-Yin published?", "cypher": "match (:ENTITY{name:'leafy'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'publisher'}]->(q) return distinct q.name"}, {"query": "I'm not sure if you can send me the representative work of the richest man in the world.", "cypher": "match (:ENTITY{name:'\u53f8\u540c\u5bcc'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'representative work'}]->(n) return distinct n.name"}, {"query": "The following is a list of three jobs besides general designer of system analysis on Thursday.", "cypher": "match (:ENTITY{name:'Thursday'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'profession'}]->(p) where p.name <> 'Systems analyst and general designer' return distinct p.name limit 3"}, {"query": "What is the name of Chen Iizong, and what are the five names?", "cypher": "match (:ENTITY{name:'Chen Iijisan'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'alias'}]->(x) return distinct x.name limit 5"}, {"query": "Can you list some exhibitions in the real estate industry?", "cypher": "match (:ENTITY{name:'real estate home'}) <- [:Relationship{name:'industry'}]- (q) return distinct q.name"}, {"query": "Do you know anything else about Pulerius besides that he is a politician? Help me find 5 pieces of information in 2 layers.", "cypher": "match (:ENTITY{name:'Plethrius'}) - [*1..2]-(p) where p.name <> 'political figure' return p.name limit 5"}, {"query": "What is the name of the structure that is the surface of the sandstone?", "cypher": "match (:ENTITY{name:'sandstone surface'}) <- [:Relationship{name:'belongs to'}]- (q) return q.name"}, {"query": "I would like to ask about the relationship between the twenty-nine levels of the 23 poems of Rubio.", "cypher": "match (n:ENTITY{name:' gift poem twenty nine'}) - [:Relationship*1..3]->(x) where x.name <>'Rupee' return distinct x.name"}, {"query": "The Chongqing Electricity College is a private institution that is part of the Chongqing Electricity University.", "cypher": "match (:ENTITY{name:'Changqing Electricity College'}) <- [:Relationship{name:'Chinese name'}]-(h) - [:Tag{name:'tag'}]->(p) return distinct p.name"}, {"query": "Find a school profile for private schools in Nanjing, with no less than three levels of relationships.", "cypher": "match (n:ENTITY{name:'Nanjing Transportation and Technology School City Iron College'}) - [*1..3]->(x) where x.name <>'Private Office' return distinct x.name"}, {"query": "What books were published on 2005/2/1? By which publisher?", "cypher": "match (:ENTITY{name:'2005/2/1'}) <- [:Relationship{name:' time of publication'}]-(h),(h) - [:Relationship{name:' publisher'}]->(q) return distinct h.name,q.name"}, {"query": "Does this thing belonging to the family of the nuts have a corresponding English name?", "cypher": "match (:ENTITY{name:'Bohemian'}) <- [:Relationship{name:'Category'}]-(h) - [:Relationship{name:'English name'}]->(m) return m.name order by m.name limit 5"}, {"query": "Can you list some of the books published in 2014-7?", "cypher": "match (:ENTITY{name:'2014-7'}) <- [:Relationship{name:' time of publication'}]- (p) return distinct p.name"}, {"query": "The album was re-released on November 12, 2012 for the 10th anniversary edition.", "cypher": "match (:ENTITY{name:'12 November 2012 (((10th Anniversary Edition) '}) <- [:Relationship{name:'Relationship time'}]- (p) return p.name"}, {"query": "Which companies have the same date of foundation as Shenzhen Bonn Mobile Information Technology Co., Ltd. and what are their respective labels? Please show these companies in order of their label number.", "cypher": "match (n:ENTITY{name:'Shenzhen Bonn Mobile Information Technology Co., Ltd'}) - [:Relationship{name:'time of establishment'}]->(:ENTITY) <- [:Relationship{name:'time of establishment'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Did you have trouble listing 5 books in simple Chinese?", "cypher": "match (:ENTITY{name:' simplified Chinese'}) <- [:Relationship{name:' language'}]- (p) return distinct p.name limit 5"}, {"query": "The answer to my run + software is the introduction of software within the 2 layer relationship.", "cypher": "match (n:ENTITY{name:'run+'}) -[:Relationship*1..2]->(x) where x.name <>'run+' return distinct x.name"}, {"query": "Can you tell me about some of the representative works of Hillsong Young And Free?", "cypher": "match (q:ENTITY{name:'Hillsong Young And Free'}) - [:Relationship{name:'represents work'}]-> (n) return n.name skip 1"}, {"query": "What is the name of the film in which Fernando Guill\u00e9n starred?", "cypher": "match (:ENTITY{name:'Fernando Guilln'}) <- [:Relationship{name:'leading actor'}]- (p) return distinct p.name"}, {"query": "When was the 5000 meter company founded?", "cypher": "match (p:ENTITY{name:'five-kilometer company'}) return p.time"}, {"query": "What is the name of the company in the Beijing beach area of Black Spring Road, Kangen Baoxing Square?", "cypher": "match (:ENTITY{name:'Beijing City Beach Area Black Spring Road Kangen Baoxing Square'}) <- [:Relationship{name:'company address'}]- (q) return distinct q.name"}, {"query": "What else can 1Tap Quick Bar do besides match software labels?", "cypher": "match (:ENTITY{name:'1Tap Quick Bar'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'software' return x.name"}, {"query": "Please list 5 of the most representative works of artists: Shut Your Eyes and Others.", "cypher": "match (:ENTITY{name:'with closed eyes and so forth\u3002'}) <- [:Relationship{name:'representing work'}]- (p) return distinct p.name limit 5"}, {"query": "What is the protection level of the white oak tree?", "cypher": "match (:ENTITY{name:' white oak'}) - [:Relationship{name:' protection level'}]->(n) return n.name as name union all match (:ENTITY{name:' white oak'}) - [:Relationship{name:' distribution'}]->(m) return m.name as name"}, {"query": "What are the main achievements of Zhong Yan? Can you name one?", "cypher": "match (:ENTITY{name:'extended to '}) - [:Relationship{name:'main achievement'}]-> (m) return distinct m.name limit 1"}, {"query": "0.5 miles with a rubber tag, tell me one way?", "cypher": "match (:ENTITY{name:'0.5 miles'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 1"}, {"query": "Do you know anything else about the 2008 Lianying Tech Yearbook?", "cypher": "match (:ENTITY{name:'2008 Leningrad yearbook of science and technology'}) --(h) with h order by h.name where h.name <> 'books' return h.name"}, {"query": "Do you know how many gaming platforms were founded in 2010?", "cypher": "match (:ENTITY{name:'2010'}) <- [:Relationship{name:'time of establishment'}]- (h) return h.name limit 5"}, {"query": "Do you know what kind of music this song is from?", "cypher": "match (:ENTITY{name:'We are Greater China'}) - [:Relationship{name:'Affiliated album'}]->(n) return n.name as name union all match (:ENTITY{name:'We are Greater China'}) - [:Relationship{name:'Musical style'}]->(m) return m.name as name"}, {"query": "The F9F was developed by the American Grumman Company between 1945 and 1947, so help me find eight of these aircraft.", "cypher": "match (n:ENTITY{name:'F9F fighter'}) -->(h) with h order by h.name where h.name <> '1945-1947' and h.name <> 'American Grumman Corporation' return h.name limit 8"}, {"query": "The first time I saw this work, it was like an angel descending from heaven to help her return to her homeland.", "cypher": "match (:ENTITY{name:'blood slave'}) --(x) with x order by x.name where x.name <> 'blood slave' return x.name"}, {"query": "Which furnace heating method is PID+SSR or PID+SCR?", "cypher": "match (:ENTITY{name:'PID+SSR or PID+SCR'}) <- [:Relationship{name:'heating mode'}]- (m) return m.name"}, {"query": "I know of a work called Victory Killer or Victory Killer, did you get the original name?", "cypher": "match (:ENTITY{name:' Victory Killer, Victory Killer'}) <--(n) return n.name"}, {"query": "Which hair sample has a 25mm hair size?", "cypher": "match (:ENTITY{name:'25(mm) '}) <- [:Relationship{name:'sample hair size'}]- (n) return n.name"}, {"query": "A feature that I can't miss on my 09MND cold steel pipe?", "cypher": "match (:ENTITY{name:'09MND cold-pressed steel pipe'}) - [:Tag{name:'label'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you find the five painters? What is their nationality?", "cypher": "match (:ENTITY{name:'painter'}) <- [*]-(m), (m) - [:Relationship{name:'nationality'}]->(n) return m.name, n.name limit 5"}, {"query": "Is there a game called \"Stop Christmas Gifts\" that is so popular?", "cypher": "match (m:ENTITY{name:'as many as possible to remove Christmas presents'}) <- [:Relationship{name:'game objective'}]- (p) return p.name"}, {"query": "I'm going to try to find out which online novels are suspended, please find me 10 of them.", "cypher": "match (:ENTITY{name:'suspend'}) <- [:Relationship{name:'novel progress'}]- (x) return x.name order by x.name limit 10"}, {"query": "I'm going to ask you to give me the information about the relationships between the five levels of Gasana Eric in Rwanda.", "cypher": "match (n:ENTITY{name:'Gasana Eric'}) - [*1..5]->(x) where x.name<>'Rwanda' return distinct x.name limit 5"}, {"query": "Find the full text of this book on computer networking and web programming for $44.5?", "cypher": "match (n:ENTITY{name:'Computer network and web program design'}) - [*]->(x) where x.name <>'44.5' return distinct x.name limit 5"}, {"query": "What's Vic Zhou's name?", "cypher": "match (q:ENTITY{name:'Vic Zhou'}) <- [:Relationship{name:'foreign name'}]-(x),(x) - [:Relationship{name:'alias'}]->(n) return distinct n.name limit 1"}, {"query": "What is the Chinese for HANXIAN?", "cypher": "match (:ENTITY{name:'HANXIAN'}) <- [:Relationship{name:' foreign language name'}]- (m) return m.name"}, {"query": "I'm curious to know which one of you is called Kim? Can you tell me the first one?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'alias'}]- (q) return q.name order by q.name limit 1"}, {"query": "Help me find three plants that belong to the seed-plant-gate-twin-leaf-plant family.", "cypher": "match (:ENTITY{name:'seed plant gate'}) <- [:Relationship{name:'gate'}]-(m), (m) - [:Relationship{name:'gram'}]->(n) where n.name='twin leaf plant gate' return m.name limit 3"}, {"query": "Help me find three Thai singers", "cypher": "match (:ENTITY{name:'Thailand'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='singer' return distinct m.name"}, {"query": "I need the first three messages from Abraham Cherem.", "cypher": "match (p:ENTITY{name:'Abraham Cherem'}) --(q) return distinct q.name limit 3"}, {"query": "Tell me about five representative works of this ancient man, who lived in the early Ming Dynasty.", "cypher": "match (:ENTITY{name:'Mingming'}) <- [:Relationship{name:'nationality'}]-(q),(q) - [:Relationship{name:'representing work'}]->(p) return p.name order by p.name limit 5"}, {"query": "Somewhere on the national road it calculates the speed of 80 km/h, do you know what it is called?", "cypher": "match (:ENTITY{name:'80km/h'}) <- [:Relationship{name:'calculated travel speed'}]- (q) return q.name"}, {"query": "Find out where the six private companies are headquartered.", "cypher": "match (:ENTITY{name:'private enterprise'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'headquarters location'}]->(n) return m.name,n.name limit 6"}, {"query": "What are the 32 books in the open booklet? Can you tell me who wrote them?", "cypher": "match (:ENTITY{name:'32 open'}) <- [:Relationship{name:'disguised'}]-(h),(h) - [:Relationship{name:'author'}]->(q) return distinct h.name,q.name"}, {"query": "Not more than five labels for 2-methylglycerol acetate?", "cypher": "match (:ENTITY{name:'2-methylbutadiene acetate'}) - [:Tag{name:'label'}]-> (n) with n order by n.name return n.name limit 5"}, {"query": "Help me find 10 species of plants in the genus Hydrangea.", "cypher": "match (:ENTITY{name:' water hyacinth'}) <- [:Relationship{name:' water hyacinth'}]-(m) return distinct m.name limit 10"}, {"query": "The book is a great example of how to make a book a great book.", "cypher": "match (n:ENTITY{name:'0-1 years old baby enlightenment game'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> ' publications' return m.name"}, {"query": "Tell me about the personal information of Verfaine Bangary, who has five French citizenships and no less than four levels of relationships.", "cypher": "match (n:ENTITY{name:'Farna Bengali'}) - [*1..4]->(x) where x.name <>'France' return distinct x.name limit 5"}, {"query": "I'm looking for a representative work of a graduate of Tianjin University.", "cypher": "match (:ENTITY{name:' Tianjin University'}) <- [:Relationship{name:' Graduate School'}]-(h) - [:Relationship{name:' Representative work'}]->(q) return h.name order by h.name limit 3"}, {"query": "I would like to know the details of the 5th level relationship of the company, which is registered with the State Administration of Commerce and Industry in the city of Zhejiang.", "cypher": "match (n:ENTITY{name:'Kei Snow Cold Chain Shares Limited'}) - [*1..5]->(x) where x.name<>'Kei Sheng City Business and Administration' return distinct x.name"}, {"query": "What are the three most representative works of American writers?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(m) - [:Relationship{name:'representative work'}]->(h) return distinct m.name limit 3"}, {"query": "I heard locals say that there are 80,000 tons of carrots grown in Yangon and 240,000 tons a year, and you can find me three more pieces of information about it.", "cypher": "match (n:ENTITY{name:'Canton of Orange Carrots'}) -->(h) with h order by h.name where h.name <> '80,000 tons' and h.name <> '240,000 tons' return h.name limit 3"}, {"query": "What music has a duration of 4 minutes 43 seconds? Can you recommend 3 songs?", "cypher": "match (:ENTITY{name:'4 min 43 seconds'}) <- [:Relationship{name:'music length'}]- (q) return q.name limit 3"}, {"query": "Can you tell me about Tasha Lawrence's work?", "cypher": "match (:ENTITY{name:'Tasha Lawrence'}) - [:Relationship{name:'representing work'}]-> (m) return m.name order by m.name"}, {"query": "What are five personal details about football player Havitti Noir?", "cypher": "match (n:ENTITY{name:'Harvey Noel'}) - [*]->(x) where x.name <> 'Milan' return distinct x.name limit 5"}, {"query": "Do you remember what events led to Mr. Du's divorce from his wife?", "cypher": "match (:ENTITY{name:'divorced from wife'}) <- [:Relationship{name:'Mr. Dre'}]- (q) return q.name"}, {"query": "How many classes are there in the secondary school in Piku River?", "cypher": "Match (:ENTITY{name:'Pike River Secondary School'}) - [:Relationship{name:'Teaching class'}]->(n) return n.name"}, {"query": "What is the best thing about Harbin Public University?", "cypher": "match (:ENTITY{name:'Harbin'}) <- [:Relationship{name:'the region'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='public university' return distinct m.name"}, {"query": "The game is based on the popular anime series of the same name, which is based on the manga series of the same name.", "cypher": "match (n:ENTITY{name:'3D game Empire; dinosaurs look for difference: triangle dragon out of the walk'}) - [:Relationship*]->(x) where x.name <> 'game' return distinct x.name"}, {"query": "Do you know how many Japanese games there are?", "cypher": "match (:ENTITY{name:' in Japanese'}) <- [:Relationship{name:' in Japanese'}] - (x) return x.name limit 2"}, {"query": "Can you help me find two politicians who have been awarded university medals?", "cypher": "match (:ENTITY{name:'college officer'}) <-[:Relationship{name:'main achievement'}]-(m), (m) -[:Tag{name:'tag'}]->(n) where n.name='political figure' return m.name limit 2"}, {"query": "Can you tell me about the story of Djalkar?", "cypher": "match (:ENTITY{name:'payca'}) --(q) return q.name skip 2"}, {"query": "What chemical is C11H20N2O5?", "cypher": "match (:ENTITY{name:'C11H20N2O5'}) <- [:Relationship{name:'molecular'}]- (m) return distinct m.name"}, {"query": "What is the name of the annual summer tournament organised by the member countries of UEFA?", "cypher": "match (:ENTITY{name:'member states of UEFA'}) <- [:Relationship{name:'location'}]-(m), (m) - [:Relationship{name:'time'}]->(n) where n.name='each summer' return distinct m.name"}, {"query": "I'm curious to know what else is the name of this place, the postal code is 467045? Can you give me five?", "cypher": "match (:ENTITY{name:'467045'}) <- [:Relationship{name:'postal area code'}]-(m),(m) - [:Relationship{name:'alias'}]->(p) return p.name order by p.name limit 5"}, {"query": "Please tell me the date of birth and the representative works of Tom Berry.", "cypher": "match (x:ENTITY{name:'Bobby'}),(x) - [:Relationship{name:'date of birth'}]-> (m), (x) - [:Relationship{name:'represents work'}]->(n) return m.name,n.name"}, {"query": "Do you know which seasons of the Chinese Poetry Festival have been broadcast?", "cypher": "match (p:ENTITY{name:'Chinese poetry conference'}) - [:Relationship{name:' has been broadcast'}]-> (x) return x.name order by x.name"}, {"query": "What songs did Odyan sing?", "cypher": "match (n:ENTITY{name:'Odeyan'}) <- [:Relationship{name:'singer'}]- (x) return x.name"}, {"query": "Can you find me five books published by Tsinghua University Press in 2005?", "cypher": "match (:ENTITY{name:'Chinghua University Press'}) <- [:Relationship{name:'Publishing House'}]-(m), (m) - [:Relationship{name:'Publishing time'}]->(n) where n.name='2005' return m.name limit 3"}, {"query": "I need to know about the company in the 3 tier relationship between Beijing and MedMed Technology Ltd. headquartered in Beijing, China?", "cypher": "match (n:ENTITY{name:'Beijing and the Medical Technology Co. Ltd'}) - [:Relationship*1..3]->(x) where x.name<>'China Beijing' return distinct x.name"}, {"query": "Have you heard of a game called 1112 Chapter 1?", "cypher": "match (:ENTITY{name:'1112 first chapter'}) --(m) with m order by m.name where m.name <> ' game work' return m.name"}, {"query": "Help me find people born in Moldova and their dates of birth", "cypher": "match (:ENTITY{name:'Moldova'}) <- [:Relationship{name:'place of birth'}]-(h),(h) - [:Relationship{name:'date of birth'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know how much Hook's book is worth?", "cypher": "match (:ENTITY{name:'hook'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'pricing'}]->(q) return distinct q.name"}, {"query": "The book is a collection of short stories, and the book is a collection of short stories, and the book is a collection of short stories.", "cypher": "match (:ENTITY{name:'1000 thought games [Ing. Robert Allen book]'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'publication' return n.name"}, {"query": "What is the chemical formula for 5-metha-3-methyl-1-metha-4-metha?", "cypher": "match (:ENTITY{name:'5-metha-3-methyl-1-alkyl-4-metha'}) - [:Relationship{name:'English name'}]->(n) return n.name as name union all match (:ENTITY{name:'5-metha-3-methyl-1-alkyl-4-metha'}) - [:Relationship{name:'chemical formula'}]->(m) return m.name as name"}, {"query": "What works have been published by the Chinese Science and Culture Audio-Imaging Publishing House?", "cypher": "match (:ENTITY{name:'China Scientific and Cultural Audio-Image Publishers'}) <- [:Relationship{name:' Publishing company'}]- (n) return n.name limit 4"}, {"query": "Tell me about the food in the three-tier relationship of canned beef and beef balls?", "cypher": "match (n:ENTITY{name:'container cow seven beef ball'}) - [:Relationship*1..3]->(x) where x.name <>'food' return distinct x.name"}, {"query": "Can you please list five professions that this Chinese person has?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(q),(q) - [:Relationship{name:'profession'}]->(m) return m.name order by m.name limit 5"}, {"query": "The book is a book about the relationship between the three sexes, and the book is not about the relationship between the three sexes.", "cypher": "match (n:ENTITY{name:'Triple education'}) - [:Relationship*1..3]->(x) where x.name<>'Triple education' return distinct x.name"}, {"query": "What is the story behind the publication of the Economic Daily?", "cypher": "match (:ENTITY{name:' Economic daily publisher'}) <- [:Relationship{name:' publisher'}]-(m),(m) - [:Tag{name:' tag'}]->(n) return distinct n.name limit 1"}, {"query": "The search for all six of the information about this man, except for the fact that he weighs 69 kg, is not possible.", "cypher": "match (:ENTITY{name:'Weddingho'}) --(m) with m order by m.name where m.name <> '69 kg' return distinct m.name limit 6"}, {"query": "Please tell me about the profession of this person born in Zhejiang Pingyang.", "cypher": "match (:ENTITY{name:'Zhejiang\u5e73\u9633'}) <- [:Relationship{name:'place of birth'}]-(x) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 1"}, {"query": "The list of top 10 tourist destinations in the country is as follows:", "cypher": "match (:ENTITY{name:'National AAAA-level tourist attraction'}) <- [:Relationship{name:'attraction level'}]- (mn) return mn.name limit 10"}, {"query": "The Cuban singer, what are the other 10 professions he has?", "cypher": "match (:ENTITY{name:'Cuba'}) <- [:Relationship{name:'nationality'}]-(m) - [:Relationship{name:'profession'}]->(h) where h.name <> 'singer' return distinct h.name limit 10"}, {"query": "What are the representative works of disabled people?", "cypher": "match (:ENTITY{name:'particle'}) - [:Relationship{name:'representative work'}]->(m) return distinct m.name"}, {"query": "I'm looking for a good food and I'm looking for a good food.", "cypher": "match (:ENTITY{name:'holiday food'}) <- [:Tag{name:'label'}]->(n) where n is not null return distinct n.name limit 10"}, {"query": "What are the ingredients for this dish? Can I have 10 please?", "cypher": "match (:ENTITY{name:' red burnt flower knob'}) <- [:Relationship{name:' Chinese name'}]-(m) - [:Relationship{name:' spice'}]->(n) return n.name order by n.name limit 10"}, {"query": "What are the works of Shanghai Voice like publishers and when are they published?", "cypher": "match (:ENTITY{name:' Shanghai sounding like a publisher'}) <- [:Relationship{name:' publisher'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name"}, {"query": "What are the types of tree burials?", "cypher": "Match (:ENTITY{name:'Tree burial [burial ritual]'}) - [:Relationship{name:'category'}]->(m) return distinct m.name"}, {"query": "Can you list the following information about the relationship between the three layers of magic teaching in the world of technology?", "cypher": "match (n:ENTITY{name:'hundred magic teachings'}) - [*1..3]->(x) where x.name <> 'technology product' return distinct x.name"}, {"query": "Do you know which of the main schools have multimedia rooms?", "cypher": "match (:ENTITY{name:'multimedia room'}) <- [:Relationship{name:'main faculty'}]- (x) return x.name order by x.name"}, {"query": "Can you find me the costume design and his five representative works?", "cypher": "match (:ENTITY{name:'clothing design'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'representative work'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "What is the name of the accident that happened at the Antarctic Mid-Mountain station?", "cypher": "match (:ENTITY{name:'Antarctic mountain station'}) <- [:Relationship{name:'place of occurrence'}]- (x) return x.name"}, {"query": "Can you list some of the weapons and armament facilities developed in 1937?", "cypher": "match (p:ENTITY{name:'1937'}) <- [:Relationship{name:'development time'}]- (m) return distinct m.name"}, {"query": "The five 08 security teams are tagged?", "cypher": "match (:ENTITY{name:'08 security team'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "Sun Liang, how much do you know?", "cypher": "match (:ENTITY{name:'Soon'}) --(n) return n.name order by n.name"}, {"query": "How do you understand the city of 05?", "cypher": "match (:ENTITY{name:'05 Phoenix'}) --(n) with n order by n.name return n.name"}, {"query": "What are the occupations of this Chinese person? Can you name five of them?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(h),(h) - [:Relationship{name:'profession'}]->(m) return m.name skip 1 limit 5"}, {"query": "What's the name of this person born in California? Can you give me a good one?", "cypher": "match (:ENTITY{name:'California'}) <- [:Relationship{name:'place of birth'}]-(n),(n) - [:Relationship{name:'alias'}]->(p) return p.name order by p.name limit 1"}, {"query": "What is the name of the Han Sword of Taurus?", "cypher": "match (:ENTITY{name:'Taurus'}) <- [:Relationship{name:'star'}]-(m), (m) - [:Relationship{name:'other name'}]->(n) where n.name='Korean sword' return distinct m.name"}, {"query": "Please take me to meet Zhang Xie .", "cypher": "match (:ENTITY{name:'Zhang Qianqing'}) --(m) return m.name order by m.name"}, {"query": "Can you provide me with 20 relevant information about the three layers of the armor, other than the armour?", "cypher": "match (:ENTITY{name:'shellfish'}) -[*1..3]-(p) where p.name <> 'shellfish' return p.name limit 20"}, {"query": "Can you help me find five public universities?", "cypher": "match (:ENTITY{name:'public university'}) <- [:Relationship{name:' category'}]-(h),(h) - [:Relationship{name:' Chinese name'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "What is the area of 33.3 square meters of the object/building?", "cypher": "match (:ENTITY{name:'33.3 square meters'}) <--(n) return n.name"}, {"query": "Can you tell me the name of the person who has the political tag?", "cypher": "match (:ENTITY{name:'political figure'}) <- [:Tag{name:'tag'}]-(n) - [:Relationship{name:'alias'}]->(h) return h.name order by h.name limit 1"}, {"query": "Is there another property label for the chemical 4-hydroxy-5-hydroxy-2-methacrylate?", "cypher": "match (:ENTITY{name:'4-methacrylate-5-methacrylate-2-methacrylate'}) - [:Tag{name:'label'}]-> (m) with m order by m.name where m.name <> 'chemical' return m.name"}, {"query": "Can you find me the three editions of the Guangxi National Press and the date of publication?", "cypher": "match (:ENTITY{name:'Kangxi National Publishing House'}) <- [:Relationship{name:'Publishing House'}]-(h),(h) - [:Relationship{name:'Publishing time'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "The following is a list of five information about the man Grobler Cobus, born in Pretoria.", "cypher": "match (n:ENTITY{name:'Grobler Cobus'}) - [*]->(x) where x.name<>'Pretoria' return distinct x.name limit 5"}, {"query": "Name two TV series directed by Duo Feng, and who are the main characters?", "cypher": "match (:ENTITY{name:'Du Duong'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'star'}]->(n) return m.name, n.name limit 2"}, {"query": "Can you tell me the names of the seven government work reports?", "cypher": "match (q:ENTITY{name:'work report'}) <-[:Relationship{name:'properties'}]- (x) return x.name limit 7"}, {"query": "The incident in which two people were trapped in the collapse of the Nanjing subway works, has been widely reported.", "cypher": "match (:ENTITY{name:'1.2 Nanjing subway construction collapse accident'}) --(m) with m order by m.name where m.name <> 'three people trapped' return m.name"}, {"query": "Do you know what accident caused three deaths and four injuries?", "cypher": "match (:ENTITY{name:'three dead four wounded'}) <- [:Relationship{name:'number of casualties'}]- (x) return distinct x.name"}, {"query": "Find out what gaming platforms are available at AXA.", "cypher": "match (:ENTITY{name:'Australian Technology Development Limited'}) <- [:Relationship{name:' company to which belongs'}]- (m) return m.name"}, {"query": "Do you know which equipment sets are used in the industrial sector? Can you tell me 16 of them?", "cypher": "match (:ENTITY{name:' industry'}) <- [:Relationship{name:' field of application'}]- (p) return p.name limit 16"}, {"query": "Help me find three species of sea snails.", "cypher": "match (:ENTITY{name:' family of sea snails'}) <- [:Relationship{name:' family of sea snails'}]-(m) return distinct m.name limit 3"}, {"query": "The organization 108 HR Bank has a yoga label?", "cypher": "match (p:ENTITY{name:'108 HR Bank'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'organization' return m.name"}, {"query": "What are the common symptoms of a communicable disorder?", "cypher": "match (:ENTITY{name:'conveying disorder'}) - [:Relationship{name:'symptoms'}]-> (m) return distinct m.name"}, {"query": "What is the name of the violent incident that took place on January 9, 2012?", "cypher": "match (:ENTITY{name:'January 9, 2012'}) <- [:Relationship{name:' time of occurrence'}]- (x) return x.name"}, {"query": "The first is that the public is not allowed to see the ads on the website.", "cypher": "match (:ENTITY{name:'001 advertising alliance'}) --(q) with q order by q.name where q.name <> ' Internet product' return q.name limit 1"}, {"query": "Product size 494x302 mm belongs to which label category?", "cypher": "match (:ENTITY{name:'494x302 mm'}) <- [:Relationship{name:'product size'}]-(n),(n) - [:Tag{name:'tag'}]->(h) return distinct n.name limit 1"}, {"query": "Can you tell me everything you know about Walter Reilly?", "cypher": "match (:ENTITY{name:'Walt Riley'}) - [:Relationship*1..3]-(p) return distinct p.name limit 10"}, {"query": "Can you give me the following 5 details about the English language selfie software?", "cypher": "match (n:ENTITY{name:'Selfy'}) - [*]->(x) where x.name <>'English' return distinct x.name limit 5"}, {"query": "Help me find three dishes made with tomatoes.", "cypher": "match (:ENTITY{name:' tomato'}) <- [:Relationship{name:' main ingredient'}]-(m) return distinct m.name limit 3"}, {"query": "Can you recommend 18 urban romance novels for me?", "cypher": "match (p:ENTITY{name:' urban idiom'}) <- [:Relationship{name:' novel type'}]- (m) return m.name limit 18"}, {"query": "Do you know the main achievements of people born in Hubei? Can you name three?", "cypher": "match (:ENTITY{name:'Hubei Tianmen'}) <- [:Relationship{name:'birthplace'}]-(m) - [:Relationship{name:'main achievements'}]->(n) return n.name order by n.name limit 3"}, {"query": "What are the three best works of art for people born on 13.8.2004?", "cypher": "match (:ENTITY{name:'2004.8.13'}) <- [:Relationship{name:'date of birth'}]-(m),(m) - [:Relationship{name:'representing work'}]->(x) return distinct x.name limit 3"}, {"query": "What are the AAA attractions that are open from 6am to 9pm?", "cypher": "match (:ENTITY{name:'National AAA tourist attraction'}) <- [:Relationship{name:'Location level'}]-(m), (m) - [:Relationship{name:'Opening hours'}]->(n) where n.name='early 6:30 - late 9:00' return m.name limit 2"}, {"query": "I'm wondering if you can list the cultural facilities in five lines?", "cypher": "match (:ENTITY{name:' cultural facility'}) <--(n) return n.name limit 5"}, {"query": "Can you tell me who is born in a country where you don't know their name? Can you name five?", "cypher": "match (:ENTITY{name:' not specified'}) <- [:Relationship{name:' time of birth'}]-(p) - [:Relationship{name:' name'}]->(m) return p.name, m.name skip 1 limit 5"}, {"query": "Can you tell me if you know of any hijacking of an Airbus A32O?", "cypher": "match (:ENTITY{name:'A320 aircraft'}) <- [:Relationship{name:'model'}]- (x) return distinct x.name"}, {"query": "The article lists personal information about Rogoli Kaga, who weighs 87 kg, in three levels of relationships.", "cypher": "match (n:ENTITY{name:'Roguli Kaga'}) - [*1..3]->(x) where x.name <>'87 kg' return distinct x.name"}, {"query": "Who or what is the filmmaker behind this film?", "cypher": "match (:ENTITY{name:'switch'}) --(p) return p.name limit 5"}, {"query": "Can you share a popular hip-hop singer for me?", "cypher": "match (:ENTITY{name:' very popular Hip-Hop singer'}) --(m) return distinct m.name limit 1"}, {"query": "Do you know Abu Ogogo? What information is there besides the usual right foot, please find the other 10 information in layer 2", "cypher": "match (:ENTITY{name:' Abu Ogogo'}) - [*1..2]->(p) where p.name <> 'usual right foot' return p.name limit 10"}, {"query": "What are the types of companies that are part of a limited liability company (HK&L)? Name 10?", "cypher": "match (:ENTITY{name:' limited liability company ((Taiwan HK and domestic joint venture) '}) <- [:Relationship{name:' company type'}]- (p) return p.name limit 10"}, {"query": "Please tell me about the three main achievements of Ezequiel Fern\u00e1ndez Juan, apart from his appointment as a Supreme Court judge and his appointment as Panama's ambassador to Costa Rica.", "cypher": "match (n:ENTITY{name:'Ezekiel Fernandez Juan'}) - [:Relationship{name:'main achievements'}]->(h) where h.name <> 'appointed as a Supreme Court judge' and h.name <> 'appointed as Ambassador of Panama to Costa Rica' return distinct h.name limit 3"}, {"query": "Can you please find me a representative of the Han Chinese?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(q),(q) - [:Relationship{name:'representative work'}]->(m) return m.name order by m.name limit 1"}, {"query": "Which songs are the same length as you want, and what are the labels? List them in order of how many labels they have.", "cypher": "match (n:ENTITY{name:'Do you want to'}) - [:Relationship{name:'Song length'}]->(:ENTITY) <-[:Relationship{name:'Song length'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC "}, {"query": "The case ended in a man being jailed and fined 500 yuan.", "cypher": "match (:ENTITY{name:'man detained, fined 500 yuan'}) <- [:Relationship{name:'result of incident'}]- (h) return distinct h.name"}, {"query": "You don't understand the message of this film about the price of freedom?", "cypher": "match (:ENTITY{name:'The price of freedom is the price of freedom'}) --(q) return distinct q.name"}, {"query": "I'm curious to know what the nickname for this is?", "cypher": "match (:ENTITY{name:'switched off'}) <- [:Relationship{name:'switched off'}]- (p) return p.name order by p.name"}, {"query": "Can you help me find out about the five places with a temperate continental climate?", "cypher": "match (:ENTITY{name:'temperate continental climate'}) <--(m),(m) - [:Describe{name:'describe'}]->(n) return m.name,n.name limit 5"}, {"query": "The name of the concert is also known as the 2015 Zhang Xiaofeng State Concert, which lists a number of other names besides the Goddess and the International Zhang.", "cypher": "match (n:ENTITY{name:'Chang Zhuofu State Concert 2015'}) - [:Relationship{name:' alias'}]->(h) where h.name <> 'Goddess' and h.name <> 'International Zhang' return distinct h.name limit 1"}, {"query": "Can you tell me the name of the three football games?", "cypher": "match (h:ENTITY{name:' football'}) <- [:Relationship{name:' event'}]- (x) return x.name limit 3"}, {"query": "Do you have a last name for this person who was born in Tianjin? Please tell me three.", "cypher": "match (:ENTITY{name:' Tianjin'}) <- [:Relationship{name:' place of birth'}]-(n),(n) - [:Relationship{name:' alias'}]->(h) return h.name order by h.name limit 3"}, {"query": "Who are the people who represent the work called nasopharyngeitis?", "cypher": "match (:ENTITY{name:'nasopharyngeal'}) <- [:Relationship{name:'representative work'}]- (h) return h.name skip 1"}, {"query": "Please list the three-layer relationship of music that you are playing on the guitar.", "cypher": "match (n:ENTITY{name:' that guitar version of you'}) - [*1..3]->(x) where x.name <>'music' return distinct x.name"}, {"query": "What is the hardness and weight ratio of titanium iron ore?", "cypher": "match (:ENTITY{name:'lattice iron ore'}) - [:Relationship{name:'hardness'}]->(n) return n.name as name union all match (:ENTITY{name:'lattice iron ore'}) - [:Relationship{name:'ratio'}]->(m) return m.name as name"}, {"query": "Can you list some of the projects and events you started in 2011?", "cypher": "match (:ENTITY{name:'2011'}) <- [:Relationship{name:'time of creation'}]- (m) return distinct m.name"}, {"query": "Can you list some of the software that is in the system security category?", "cypher": "match (:ENTITY{name:'system security class'}) <- [:Relationship{name:'software type'}]- (x) return distinct x.name"}, {"query": "I learned that Vejo Lu is a Portuguese born in Set\u00fabal, so tell me 8 more things about him.", "cypher": "match (n:ENTITY{name:'Vizo-Lu'}) -->(h) with h order by h.name where h.name <> 'Portugal' and h.name <> 'Setubal' return h.name limit 8"}, {"query": "The core code is Haswell, which is the tag of the network.", "cypher": "match (h:ENTITY{name:'Haswell'}) <- [:Relationship{name:'core code'}]-(m),(m) - [:Tag{name:'tag'}]->(n) return distinct n.name limit 1"}, {"query": "Do you know the first three Chinese names of the fairy-lily?", "cypher": "match (:ENTITY{name:'sweet'}) - [:Relationship{name:'sweet'}]-> (x) with x order by x.name return x.name limit 3"}, {"query": "Can you list some of the things you know about chemistry?", "cypher": "match (:ENTITY{name:'chemistry'}) <- [Relationship{name:'discipline'}]- (q) return distinct q.name"}, {"query": "What is Talia El Gill's profession? Can you tell me?", "cypher": "match (:ENTITY{name:'Talia Al-Gur'}) <- [:Relationship{name:'Chinese name'}]-(q) - [:Relationship{name:'profession'}]->(m) return distinct m.name"}, {"query": "Do you know how many female chainsports players are there?", "cypher": "match (p:ENTITY{name:'chainball player'}) <--(x) -->(q:ENTITY{name:'woman'}) return x.name"}, {"query": "How do you know about the publication that reads 1000 events in Chinese history?", "cypher": "match (:ENTITY{name:'1000 events to understand Chinese history'}) --(h) with h order by h.name where h.name <> 'publication' return h.name"}, {"query": "The following is a list of 5 things Andreini Matteo, a football prodigy, has to say about his personal life in the 5th level of relationships:", "cypher": "match (n:ENTITY{name:'Andreini Matteo'}) - [*1..5]->(x) where x.name <> 'football' return distinct x.name limit 5"}, {"query": "Who is this guy referring to?", "cypher": "match (:ENTITY{name:'switch'}) --(x) return distinct x.name"}, {"query": "Can you provide me with 5 video sites that support Baidu video players?", "cypher": "match (x:ENTITY{name:'Budavision'}) <- [:Relationship{name:'player'}]- (h) return h.name limit 5"}, {"query": "Could you tell me about Henri Letondal's representative work?", "cypher": "match (:ENTITY{name:'Henri Letondal'}) - [:Relationship{name:'represents work'}]-> (q) return q.name skip 1"}, {"query": "Where is the exhibition venue for the 2014 National Yearling Boutique Fair?", "cypher": "match (:ENTITY{name:'2014 National Year of Goods and Services'}) <- [:Relationship{name:'Chinese name'}]-(q),(q) - [:Relationship{name:'Exhibition location'}]->(n) return distinct n.name limit 1"}, {"query": "I'm wondering what gun has a barrel length of 850 mm?", "cypher": "match (q:ENTITY{name:'850 mm'}) <- [:Relationship{name:'gun pipe length'}]- (x) return x.name"}, {"query": "Can you tell me where the book by author Denzel Washington was published?", "cypher": "match (:ENTITY{name:'Danzel Washington'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Relationship{name:'publisher'}]->(q) return distinct h.name,q.name"}, {"query": "Help me find out where the publishers are for the six books.", "cypher": "match (:ENTITY{name:' books'}) <- [*]-(m), (m) - [:Relationship{name:' publishing house'}]->(n) return m.name, n.name limit 6"}, {"query": "The first label that describes a full 10 is 10?", "cypher": "match (:ENTITY{name:'10 full points'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 1"}, {"query": "I'm not sure what the name of the software is for system security.", "cypher": "match (:ENTITY{name:'system security class software'}) <- [:Relationship{name:'attribute'}]- (p) return distinct p.name"}, {"query": "Please tell me what tournaments are held in Mexico City and Itargo?", "cypher": "match (:ENTITY{name:'Mexico City and Idargo'}) <- [:Relationship{name:'Holding place'}]- (n) return distinct n.name"}, {"query": "I'm going to list three live shows, where are they all on TV?", "cypher": "match (:ENTITY{name:'life show'}) <--(m), (m) - [:Relationship{name:'TV show'}]->(n) return m.name, n.name limit 3"}, {"query": "What kind of competitions have been organized by Beijing Huaoshan Aerospace Technology Development Co., Ltd.?", "cypher": "match (:ENTITY{name:'Beijing Huaoshan Aerospace Technology Development Limited'}) <- [:Relationship{name:' the contractor'}]- (m) return distinct m.name"}, {"query": "What is the area code of Dongguan City, Guangdong Province?", "cypher": "match (:ENTITY{name:' District number of Dongguan City, Guangdong Province'}) <- [:Relationship{name:' belongs to'}]- (p) return distinct p.name"}, {"query": "Can you name a major award in the city of Changsha, Hunan Province?", "cypher": "match (:ENTITY{name:'Canton of Guangzhou'}) <- [:Relationship{name:'the region'}]-(m),(m) - [:Relationship{name:'the main award'}]->(n) return distinct n.name limit 1"}, {"query": "Please help me find 8 information in 3 layers, except for Yang's birthplace, Hunan Yueyang.", "cypher": "match (:ENTITY{name:' bright brother'}) - [*1..3]-(p) where p.name <> 'China' return p.name limit 8"}, {"query": "Can you name me 14 models of domestic cars?", "cypher": "match (:ENTITY{name:'national'}) <- [:Relationship{name:'attributes of origin'}]- (x) return x.name limit 14"}, {"query": "I want to know five personal details about the four levels of relationship of football player Tohver Toomas.", "cypher": "match (n:ENTITY{name:'Tohver Toomas'}) - [*1..4]->(x) where x.name <> 'football' return distinct x.name limit 5"}, {"query": "Can you help me find three music beat games and their developers?", "cypher": "match (:ENTITY{name:'musical rhythm game'}) <- [:Relationship{name:'game type'}]-(h),(h) - [:Relationship{name:'developer'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "What model is the square root law proposed by William Jack Baumhol called?", "cypher": "match (:ENTITY{name:'William Jack Dunmore'}) <- [:Relationship{name:'proponent'}]-(m), (m) - [:Relationship{name:'not named'}]->(n) where n.name='square root law' return m.name"}, {"query": "Can you help me find information on the relationship of Sabyrkhan S, a Kazakh citizen, with no more than 5 levels?", "cypher": "match (n:ENTITY{name:'Sabyrkhan S'}) - [*1..5]->(x) where x.name<>'Kazakhstan' return distinct x.name limit 5"}, {"query": "Help me find 10 Tang poets", "cypher": "match (:ENTITY{name:'Tang poet'}) <- [:Relationship{name:'profession'}]-(m) return distinct m.name limit 10"}, {"query": "In which list is there a North Dakota School of Management that is also ranked first?", "cypher": "match (:ENTITY{name:'Northeast Guangzhou University of Management'}) <- [:Relationship{name:' in first row'}]- (x) return x.name"}, {"query": "I'm not sure if there is another name for this movie, but I'm sure it's called Star Trek: The Next Generation.", "cypher": "match (:ENTITY{name:'Stars are dying'}) --(p) return p.name order by p.name"}, {"query": "I remember what was the name of the case where Zhang was accused of premeditated murder?", "cypher": "match (:ENTITY{name:'Zhang Zhen is charged with premeditated murder'}) <- [:Relationship{name:' result'}]- (n) return n.name"}, {"query": "How much do you know about the Casio ZR3500?", "cypher": "match (n:ENTITY{name:'Casio ZR3500'}) --(x) return x.name"}, {"query": "Can you find me a university that offers Russian language courses in Defarsi and introduce them?", "cypher": "match (:ENTITY{name:'French Russian'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 1"}, {"query": "I want to know the personal information of five Israelis, Roash Oshri?", "cypher": "match (n:ENTITY{name:'Roash Oshri'}) - [*]->(x) where x.name<>'Israel' return distinct x.name limit 5"}, {"query": "The three characteristics of the label attribute of the unknown parenting psychology of 0-3 year olds?", "cypher": "match (:ENTITY{name:'0-3 years old mother unknown child psychology'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 3"}, {"query": "Can you name the five main awards this person has won in athletics?", "cypher": "match (:ENTITY{name:'athletics'}) <- [:Relationship{name:'athletic project'}]-(x),(x) - [:Relationship{name:'main award'}]->(m) return m.name order by m.name limit 5"}, {"query": "What is the name of a code that is representative of the official censorship for legal reasons?", "cypher": "match (h:ENTITY{name:'officially censored for legal reasons'}) <- [:Relationship{name:'meaning'}]- (m) return m.name"}, {"query": "What is a 1500\u00b0C high temperature glass with a very low coefficient of thermal expansion?", "cypher": "match (:ENTITY{name:'1500\u00b0 high temperature glass'}) --(h) with h order by h.name where h.name <> ' very low coefficient of thermal expansion' return h.name"}, {"query": "I would like to ask what is the profession of Papi Cosigaro?", "cypher": "match (:ENTITY{name:'Papi Coscicato'}) - [:Relationship{name:'profession'}]-> (x) return x.name order by x.name"}, {"query": "Can you name three representative films that have been nominated for an Oscar?", "cypher": "match (q:ENTITY{name:'5 films nominated for an Oscar'}) <- [:Relationship{name:'main achievement'}]-(n),(n) - [:Relationship{name:'representative work'}]->(m) return distinct m.name limit 3"}, {"query": "Do you know the representative works of Liu Xiaobo? Can you tell me?", "cypher": "match (:ENTITY{name:'Bill'}) - [:Relationship{name:'representing work'}]-> (h) return h.name order by h.name"}, {"query": "Can you tell me five things about this guy Morketing?", "cypher": "match (n:ENTITY{name:'Morketing'}) - [*]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "Please tell me where the license plate code is F.", "cypher": "match (:ENTITY{name:' F'}) <- [:Relationship{name:'plate code'}]- (p) return distinct p.name"}, {"query": "What is a puppy fish?", "cypher": "match (n:ENTITY{name:' puppy fish'}) --(x) return distinct x.name"}, {"query": "Please tell me what is the most representative work of Ebru Ferrara?", "cypher": "match (:ENTITY{name:'Eber Ferrara'}) <- [:Relationship{name:'Chinese name'}]-(q) - [:Relationship{name:'representative work'}]->(h) return distinct h.name"}, {"query": "What is the representative work of the Kim Si-Ping except the birds flying before the birds and the monkeys that love the monkey?", "cypher": "match (:ENTITY{name:'Gold Peak'}) - [:Relationship{name:'representing works'}]->(m) where m.name<>'Miss is not because I am not soft enough to kiss old country roaches first flying really love once again' return distinct m.name"}, {"query": "Can you find me a costume designer and his three representative works?", "cypher": "match (:ENTITY{name:'clothing design'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'representative work'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "I want to know what are the villages in 0.80 square kilometers?", "cypher": "match (:ENTITY{name:'0.80 square kilometers'}) <- [:Relationship{name:'area'}]- (x) return distinct x.name"}, {"query": "How do you find all the attributes of CI45350?", "cypher": "match (:ENTITY{name:'CI45350'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you name 10 American artists?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(m),(m) - [:Relationship{name:'representative work'}]->(h) return distinct h.name limit 10"}, {"query": "The following is a list of foreign literary works in the context of the dream funerals and twelve foreign stories.", "cypher": "match (n:ENTITY{name:'The Funeral in a Dream and the Twelve Foreign Stories'}) - [:Relationship*1..2]->(x) where x.name <> 'Foreign literature' return distinct x.name"}, {"query": "The following is a list of 355 pages of Higher Education 12th Five-Year Planning Materials: Information on the work within the two-tier relationship related to architectural mechanics.", "cypher": "match (n:ENTITY{name:' Higher education twelfth-year planning curriculum: architectural mechanics'}) - [:Relationship*1..2]->(x) where x.name <>'355 pages' return distinct x.name"}, {"query": "The city of Akkuyu Square is located in which city?", "cypher": "match (:ENTITY{name:'Autumn Water Square'}) - [:Relationship{name:'the area to which it belongs'}]->(n) return n.name"}, {"query": "Can you recommend some software for wallpaper beautification?", "cypher": "match (:ENTITY{name:' wallpaper beautification class'}) <- [:Relationship{name:' software type'}]- (m) return distinct m.name"}, {"query": "What is the name of the star in English?", "cypher": "match (x:ENTITY{name:'starfire'}) <- [:Relationship{name:'original name'}]- (m) return m.name"}, {"query": "The following is a list of five things that football player Owen Mitchell has told me.", "cypher": "match (n:ENTITY{name:'Orin Mitchell'}) - [*]->(x) where x.name <> 'footballer' return distinct x.name limit 5"}, {"query": "Do you have a personal profile on the three-tier relationship with Tsotetsi Mokete in South Africa?", "cypher": "match (n:ENTITY{name:'Tsotetsi Mokete'}) - [*1..3]->(x) where x.name <> 'South Africa' return distinct x.name"}, {"query": "Please help me find three books for $69 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'69\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Please help me find three Level II-A hospitals, where are they located?", "cypher": "match (:ENTITY{name:' second level A and similar'}) <- [*]-(m), (m) - [:Relationship{name:' geographical location'}]->(n) return m.name, n.name limit 3"}, {"query": "Can you tell me about a well-known alumnus of the school where Zhang is now the principal?", "cypher": "match (:ENTITY{name:'Chamber of friends'}) <- [:Relationship{name:'current principal'}]-(x),(x) - [:Relationship{name:'known alumni'}]->(m) return m.name order by m.name limit 1"}, {"query": "Please tell me about the 10 representative works of this 47 kg man.", "cypher": "match (:ENTITY{name:'47kg'}) <- [:Relationship{name:'weight'}]-(h),(h) - [:Relationship{name:'represents work'}]->(x) return x.name order by x.name limit 10"}, {"query": "The following is a list of all the information about the legal representative of the company, Wang Deqiang Dajing An Lin, a member of the Biotechnology and Biotechnology Company of the Cold Zone Limited.", "cypher": "match (n:ENTITY{name:'Dahing Anping Lingbei Biotechnology and Technology Co. Ltd'}) - [:Relationship*]->(x) where x.name <>'Dahing' return distinct x.name"}, {"query": "I want to know what the name of this person with type A blood is? can you give me 5 names?", "cypher": "match (:ENTITY{name:'A'}) <- [:Relationship{name:'Blood type'}]-(m) - [:Relationship{name:'alias'}]->(h) return h.name order by h.name limit 5"}, {"query": "Find the software description of the 3.35MB private tutoring assistant in the 3 layer relationship.", "cypher": "match (n:ENTITY{name:'private teaching assistant'}) - [*1..3]->(x) where x.name <>'3.35MB' return distinct x.name"}, {"query": "Who is Wang Wen-Chi?", "cypher": "match (n:ENTITY{name:' Wang Xueqi'}) --(x) return distinct x.name"}, {"query": "Do you know which artists are shameless bastards?", "cypher": "match (:ENTITY{name:'scamless asshole'}) <- [:Relationship{name:'representative work'}]- (q) return q.name skip 1"}, {"query": "I wonder what the name of the Israeli delegation to the 2014 Winter Olympic Games is?", "cypher": "match (:ENTITY{name:'The Israeli delegation to the 2014 Winter Olympic Games'}) <- [:Relationship{name:'Foreign team name'}]- (q) return q.name"}, {"query": "What does it mean to be \"free\"?", "cypher": "Match (n:ENTITY{name:'sort of'}) - [:Relationship{name:'sort of'}]-> (h) return h.name"}, {"query": "Do you know how many domain names have renewal terms ranging from 1 to 10 years?", "cypher": "match (:ENTITY{name:'renewal period ranges from 1 to 10 years'}) <- [:Relationship{name:'renewal period'}]- (q) return q.name limit 3"}, {"query": "Can you please list some free software for me?", "cypher": "match (:ENTITY{name:' is '}) <- [:Relationship{name:' is free'}] - (m) return distinct m.name"}, {"query": "What is the information about this person who gambles? Can you describe 5 things to me?", "cypher": "match (n:ENTITY{name:'square'}) - [*]->(x) where x.name<>'person' return distinct x.name limit 5"}, {"query": "What other names do you have for the northern lily?", "cypher": "match (:ENTITY{name:'Northern Eagle'}) - [:Relationship{name:'do not call'}]->(m) return distinct m.name"}, {"query": "Can you give me five species of crustaceans and describe them?", "cypher": "match (:ENTITY{name:'subclass'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 5"}, {"query": "What shows have been held at the Tian Tai Stadium in Qingdao?", "cypher": "match (:ENTITY{name:'Qingming Tiantai Stadium'}) <- [:Relationship{name:'show venue'}]- (q) return q.name"}, {"query": "Can you list one work that represents men?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(x) - [:Relationship{name:'representing work'}]->(q) return distinct q.name limit 1"}, {"query": "Do you know which of these five are the most popular hospitals in the country?", "cypher": "match (p:ENTITY{name:' comprehensive hospital'}) <--(x) -->(q:ENTITY{name:'three-level A and so on'}) return x.name limit 5"}, {"query": "How much do you know about campus affairs?", "cypher": "match (n:ENTITY{name:' school affair'}) --(x) return x.name"}, {"query": "What are the concerts at the Sichuan Provincial Stadium?", "cypher": "match (h:ENTITY{name:'Chicago State Stadium'}) <- [:Relationship{name:'Show location'}]- (n) return n.name"}, {"query": "Can you tell me about the 5 relationships that are involved in the secondary school in Kosier County in the 5th floor?", "cypher": "match path=(n) <- [:Relationship*5]-(p:ENTITY{name:'Kazor County Secondary School'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Can you help me find 10 types of tea that belong to the subfamily of the Montsan Mountain tea?", "cypher": "match (:ENTITY{name:' by subplant branch'}) <- [:Relationship{name:' branch'}]-(m), (m) - [:Relationship{name:' branch'}]->(n) where n.name= 'branch' return m.name limit 10"}, {"query": "What are the novels that are linked on BlackRock? Can you name two?", "cypher": "match (x:ENTITY{name:'black rock network'}) <- [:Relationship{name:'contact platform'}]- (q) return q.name limit 2"}, {"query": "Can you find the three sub-provincial city TV stations?", "cypher": "match (:ENTITY{name:'subprovincial city television station'}) <- [*]-(m), (m) - [:Relationship{name:'time of establishment'}]->(n) return m.name, n.name limit 3"}, {"query": "Can you recommend me the number of words in about 13,000 books?", "cypher": "Match (:ENTITY{name:' about 13,000'}) <- [:Relationship{name:' number of words'}]- (n) return n.name"}, {"query": "What is the name of the movie about the fastest Indian in the world?", "cypher": "match (:ENTITY{name:'The fastest Indian in the world'}) --(n) return distinct n.name"}, {"query": "How much do you know about the tech product 1.6THP turbocharged straight-jet engine?", "cypher": "match (:ENTITY{name:'1.6THP turbocharged straight-jet engine'}) --(h) with h order by h.name where h.name <> 'technology product' return h.name"}, {"query": "The site lists five goals that should be achieved in addition to the goal of building eco-friendly villages.", "cypher": "match (n:ENTITY{name:'landscape attraction'}) <-[:Tag{name:'tag'}]-(m) -[:Relationship{name:'target'}]->(q) where q.name <> 'building eco-friendly village beauty' return distinct q.name limit 5"}, {"query": "I only know that Rusek Markus is an Austrian sportsman, can you tell me 7 more things about him?", "cypher": "match (n:ENTITY{name:'Rusek-Markus'}) -->(h) with h order by h.name where h.name <> 'Austria' and h.name <> 'sportsman' return h.name limit 7"}, {"query": "The number of people living in the community is 10,427 and the number of people moving is 846.", "cypher": "match (q:ENTITY{name:' total resident population 10,427 and total mobile population 846'}) <- [:Relationship{name:' population'}]- (n) return n.name"}, {"query": "What are the levels of protection of Xinjiang's beech trees?", "cypher": "match (:ENTITY{name:'Xinjiang Shuttle'}) - [:Relationship{name:'protection level'}]->(n) return n.name as name union all match (:ENTITY{name:'Xinjiang Shuttle'}) - [:Relationship{name:'distributed area'}]->(m) return m.name as name"}, {"query": "Do you know of any other labels besides web games and strategy games?", "cypher": "match (n:ENTITY{name:'tribe awakening'}) - [:Tag{name:'tag'}]->(h) with h order by h.name where h.name <> 'web game' and h.name <> 'strategy game' return h.name limit 2"}, {"query": "Can you find the 10 species of sharks? Where are they mainly distributed?", "cypher": "match (:ENTITY{name:'shark family'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' distribution area'}]->(n) return distinct m.name,n.name limit 10"}, {"query": "I wonder what the name of the teacher who has been nominated for the National Award for Best Guidance Teacher several times is?", "cypher": "match (:ENTITY{name:'Many times nominated for the national first class award for the best guidance teacher'}) <- [:Relationship{name:' major achievement'}]-(h),(h) - [:Relationship{name:' Chinese name'}]->(n) return distinct n.name"}, {"query": "I'm going to send you 10 representative works of people of ancestry in Harbin.", "cypher": "match (x:ENTITY{name:'Harbin City, Helonjiang Province'}) <- [:Relationship{name:'Relationship'}]-(n),(n) - [:Relationship{name:'Major work'}]->(q) return q.name order by q.name limit 10"}, {"query": "I'm not sure what you mean by that, but I'm not sure what you mean by that.", "cypher": "match (:ENTITY{name:' weapon equipment'}) <--(n) return n.name limit 5"}, {"query": "Help me find two David Dawkins films.", "cypher": "match (:ENTITY{name:' David Dawkins'}) <- [:Relationship{name:' director'}]-(m) return distinct m.name limit 2"}, {"query": "What is the name of the cucumber and what is its taste?", "cypher": "match (:ENTITY{name:'Pink'}) - [:Relationship{name:'Classification'}]->(n) return n.name as name union all match (:ENTITY{name:'Pink'}) - [:Relationship{name:'Taste'}]->(m) return m.name as name"}, {"query": "I would like to know what health activities are being organized in the city of Tobacco City?", "cypher": "match (:ENTITY{name:'Cigarette City'}) <- [:Relationship{name:'Holding Place'}]- (x) return x.name"}, {"query": "Help me find 10 dishes that can be made with yogurt.", "cypher": "match (:ENTITY{name:'Key'}) <- [:Relationship{name:'main ingredient'}]-(m) return m.name limit 10"}, {"query": "Do you know what the Gould's flying squid is?", "cypher": "match (:ENTITY{name:'Goulds flying squid'}) <- [:Relationship{name:'English name'}]- (p) return distinct p.name"}, {"query": "What books are published by the Shanghai branch of the Trinity Bookstore?", "cypher": "match (:ENTITY{name:'Shanghai branch of Three Union bookstore'}) <- [:Relationship{name:'publishing house'}]-(x),(x) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 1"}, {"query": "Can you find 10 medical instruments? Please help me introduce them.", "cypher": "match (:ENTITY{name:' medical device'}) <- [*]-(m), (m) - [:Describe{name:' description'}]->(n) return distinct m.name, n.name limit 10"}, {"query": "Can you tell me which country's national flower is the rose?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'browse'}]-(x),(x) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name"}, {"query": "We recommend 10 black memory bars with a storage capacity of less than 8 GB.", "cypher": "match (:ENTITY{name:' black'}) <- [:Relationship{name:' color'}]-(n) - [:Relationship{name:' storage capacity'}]->(p) where p.name <> '8GB' return distinct p.name limit 10"}, {"query": "What are the 10 most representative works of this male figure?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(h) - [:Relationship{name:'representing work'}]->(x) return x.name skip 1 limit 10"}, {"query": "Can you list three types of jobs that Chinese people have?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(h) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 3"}, {"query": "Can you find me five politicians who have been awarded university medals?", "cypher": "match (:ENTITY{name:'college officer'}) <-[:Relationship{name:'main achievement'}]-(m), (m) -[:Tag{name:'tag'}]->(n) where n.name='political figure' return m.name limit 5"}, {"query": "1+1=3 is this TV show also a branding?", "cypher": "match (:ENTITY{name:'1+1=3'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'TV series' return x.name"}, {"query": "Help me find the five words next to the syllable.", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'the head of the department'}]-(m) return distinct m.name limit 5"}, {"query": "Can you list 10 representative works of Korean national talent?", "cypher": "match (:ENTITY{name:'Korea'}) <- [:Relationship{name:'nationality'}]-(x),(x) - [:Relationship{name:'represents work'}]->(h) return distinct h.name limit 10"}, {"query": "Can you find me a book by author Katniss Eddy?", "cypher": "match (:ENTITY{name:'cuttlefish'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Relationship{name:'book name'}]->(q) return distinct h.name,q.name"}, {"query": "I'm not sure who is the voice of Etwarou, but I'm sure it's the voice of the people who are speaking.", "cypher": "match (:ENTITY{name:'Eitwaru, the most spiritual knight of the Rosicrucian Order, the little knight (Fans love to call him) '}) <-[:Relationship{name:' other name'}]-(p) -[:Relationship{name:' pronunciation'}]->(n) return distinct n.name limit 1"}, {"query": "Help me find a synonym for river-to-sea", "cypher": "match (:ENTITY{name:'relating to the river'}) <- [:Relationship{name:'near term'}]-(m) return distinct m.name limit 1"}, {"query": "The book is a great example of how to tell a thousand happy moments in a label that is not a publication.", "cypher": "match (:ENTITY{name:'1000 moments of happiness'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'publication' return x.name"}, {"query": "Can you help me find the 012Al label?", "cypher": "match (:ENTITY{name:'012Al'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "Which three-pot corn are you referring to?", "cypher": "match (:ENTITY{name:' three pints of corn'}) - [:Relationship{name:' main ingredient'}]-> (m) return distinct m.name"}, {"query": "What information do you know about Duvenez's two-tier relationship, apart from the obvious?", "cypher": "match (:ENTITY{name:'Duwenzer'}) - [*1..2]->(p) where p.name <> 'without gaps' return p.name limit 50"}, {"query": "I wonder what is the point of being a bookworm?", "cypher": "match (:ENTITY{name:'Like a book'}) <--(n) return n.name"}, {"query": "List the information within the two-layer relationship for blood type substance testing used for substance testing?", "cypher": "match (n:ENTITY{name:' blood type substance testing'}) - [:Relationship*1..2]->(x) where x.name <> 'substance testing' return distinct x.name"}, {"query": "Can you tell us about the most representative works of Frank Benson?", "cypher": "match (:ENTITY{name:'Frank Benson'}) - [:Relationship{name:'representing work'}]-> (n) return distinct n.name"}, {"query": "What are the occupations of this person of Capricorn? Do you know three of them?", "cypher": "match (:ENTITY{name:'Scorpio'}) <- [:Relationship{name:'Scorpio'}]-(x),(x) - [:Relationship{name:'Career'}]->(n) return n.name order by n.name limit 3"}, {"query": "The following is a list of five things that Mohsen Sarhang has to say about himself:", "cypher": "match (n:ENTITY{name:'Mohsen Sarhang'}) - [*]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "Read the novel online, do you have any books? recommend 3?", "cypher": "match (:ENTITY{name:'novel reading network'}) <-[:Relationship{name:'linked website'}]-(q) -[:Relationship{name:'Chinese name'}]->(x) return distinct x.name limit 3"}, {"query": "Help me find the five letters next to each letter.", "cypher": "match (:ENTITY{name:'stone'}) <- [:Relationship{name:'part'}]-(m) return distinct m.name limit 5"}, {"query": "There is a guy named Wang Brou in Jilin, can you find out her real name?", "cypher": "match (p:ENTITY{name:'surname'}) <--(x) -->(q:ENTITY{name:'surname'}) return x.name"}, {"query": "Can you list the five Chinese occupations?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(q),(q) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 5"}, {"query": "Which of the schools with schooling have received the National Advanced Education System Collective?", "cypher": "match (:ENTITY{name:'advanced collective'}) <--(m), (m) - [:Relationship{name:'curriculum'}]->(n) where n is not null return distinct m.name"}, {"query": "I'm wondering if you can tell me what kind of electronic device has a 640Kbps uplink?", "cypher": "match (n:ENTITY{name:'640Kbps'}) <- [:Relationship{name:'upstream transfer'}]- (x) return x.name"}, {"query": "Find out the six voices, what nationality are they?", "cypher": "match (:ENTITY{name:'\u58f0\u4f18'}) <- [*]-(m), (m) - [:Relationship{name:'\u56fd\u7c4d'}]->(n) return m.name, n.name limit 6"}, {"query": "What else do you know about Taichung Mountain besides that it is part of Nanchang City?", "cypher": "match (:ENTITY{name:'Taikyo'}) - [:Relationship*1..2]-(p) where p.name <> 'Nanjing marketin hshan county' return p.name limit 10"}, {"query": "Could you recommend a 22.04 MB early warning software?", "cypher": "match (:ENTITY{name:'22.04 MB'}) <- [:Relationship{name:' software size'}]- (x) return distinct x.name"}, {"query": "What is the Chinese translation of sea cliff?", "cypher": "match (:ENTITY{name:'sea cliff'}) <- [:Relationship{name:'foreign language name'}]- (n) return n.name"}, {"query": "Can you name 18 of them? Can you name 18 of them?", "cypher": "match (:ENTITY{name:' none'}) <- [:Relationship{name:' original name'}]- (m) return m.name limit 18"}, {"query": "Can you share three of Lee's works with me?", "cypher": "match (:ENTITY{name:' Li Shih'}) --(q) return distinct q.name limit 3"}, {"query": "Who are the hosts of Hunan Economic TV?", "cypher": "Match (:ENTITY{name:'Hunan Economic Television'}) - [:Relationship{name:'main presenter'}]-> (m) return m.name"}, {"query": "Tell me about the information about the 125kg Toetu Albert Patrick in the three-tier relationship?", "cypher": "match (n:ENTITY{name:'Toetu Albert Patrick'}) - [*1..3]->(x) where x.name <>'125 kg' return distinct x.name"}, {"query": "Can you tell me what Guo Jingming has to represent?", "cypher": "match (:ENTITY{name:'Guo Qimming'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'main achievement'}]->(q) return q.name order by q.name limit 3"}, {"query": "And what about the tech product 4-methyl-1-hydroxy-3-alcohol?", "cypher": "match (:ENTITY{name:'4-methyl-1-methan-3-ethyl'}) --(m) with m order by m.name where m.name <> 'technology product' return m.name"}, {"query": "Tell me about the five iterations of the Harmony Five-Factored 4 layer relationship?", "cypher": "match (n:ENTITY{name:' and \u6c38\u5144\u5f1f\u56f4\u68cb\u9752\u5b57\u56e0\u6210\u4e94\u7edd'}) - [*1..4]->(x) where x.name <> '' return distinct x.name limit 5"}, {"query": "Please help me find the six key universities in the country, which one is located in which city?", "cypher": "match (:ENTITY{name:'national key university'}) <- [*]-(m), (m) - [:Relationship{name:'area'}]->(n) return distinct m.name,n.name limit 6"}, {"query": "Can you recommend an album in Japanese?", "cypher": "match (:ENTITY{name:'Japanese'}) <- [:Relationship{name:'language of the album'}]- (n) return distinct n.name"}, {"query": "Who among us is a singer born in Taipei, Taiwan?", "cypher": "match (:ENTITY{name:'Taipei City, Taiwan'}) <- [:Relationship{name:'birthplace'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='singer' return m.name"}, {"query": "Can you name a class of the 2007 class of Yang Middle School?", "cypher": "match (:ENTITY{name:'Kang Secondary School Class of 2007'}) <- [:Relationship{name:' belongs to'}]- (q) return distinct q.name"}, {"query": "Is there a university teacher born in Jilin named Fan Spring Moon?", "cypher": "match (:ENTITY{name:'Jilin'}) <- [:Relationship{name:'birthplace'}]-(m), (m) -->(n) where n.name='university teacher' return m is not null"}, {"query": "What does it mean to be a good language?", "cypher": "match (:ENTITY{name:'funny'}) - [:Tag{name:'tag'}]-> (m) return distinct m.name"}, {"query": "Can you find me an actor and his two works?", "cypher": "match (:ENTITY{name:' actor'}) <- [:Relationship{name:' profession'}]-(h),(h) - [:Relationship{name:' representing work'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Please help me find two books for $29.00 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'29.00\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Can you help me find 5 cases of the fourth level of M\u00e9ndez Alberto's relationship, born in Nuremberg?", "cypher": "match (n:ENTITY{name:'M\u00e9ndez Alberto'}) - [*1..4]->(x) where x.name<>'Nuremberg' return distinct x.name limit 5"}, {"query": "What is the name of the skateboard?", "cypher": "match (:ENTITY{name:'disco'}) - [:Relationship{name:'alias'}]-> (m) return distinct m.name"}, {"query": "What other label is there for the Chinese version of Shooter Game 1942?", "cypher": "match (:ENTITY{name:'1942 Chinese version'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'shooting game' return n.name"}, {"query": "What languages does IcoolColor support?", "cypher": "match (q:ENTITY{name:'IcoolColor'}) <- [:Relationship{name:'foreign language name'}]-(x),(x) - [:Relationship{name:'language'}]->(h) return distinct h.name"}, {"query": "The following is a list of the most common types of metal coating in China.", "cypher": "match (n:ENTITY{name:' Metallic coating with lithium electrode layer'}) - [:Relationship*1..2]->(x) where x.name <> 'simplified Chinese' return distinct x.name"}, {"query": "For example, what are the occupations of three Chinese people?", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnic'}]-(h) - [:Relationship{name:'profession'}]->(q) return h.name order by q.name limit 3"}, {"query": "Can you find the label attributes of 119 engagement?", "cypher": "match (n:ENTITY{name:'119 engagement'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "Who are the representatives of the boom?", "cypher": "match (:ENTITY{name:'Tempest'}) - [:Relationship{name:'Representative of the People'}]-> (m) return distinct m.name"}, {"query": "Can you recommend some disc brakes?", "cypher": "match (:ENTITY{name:'disc'}) <- [:Relationship{name:'afterbrake type'}]- (m) return distinct m.name"}, {"query": "What happened at 3am on February 5, 2018?", "cypher": "match (:ENTITY{name:'February 5, 2018 at 3 am '}) <- [:Relationship{name:' time'}]- (n) return distinct n.name"}, {"query": "Which ship is number 116?", "cypher": "match (:ENTITY{name:'116'}) <- [:Relationship{name:'number'}]- (m) return distinct m.name"}, {"query": "Please tell me which hotels have 3 rooms in total?", "cypher": "match (:ENTITY{name:'3'}) <- [:Relationship{name:'total number of rooms'}]- (n) return distinct n.name"}, {"query": "I'm not sure what the last accident was that treated eight people and made a good conversation.", "cypher": "match (:ENTITY{name:'dealing with 8 people'}) <- [:Relationship{name:'to make a friendly conversation'}]- (m) return m.name"}, {"query": "The author of the book, who graduated from the High Vocational Technical School of the Guangzhou Railway, has a representative work, which gives the name of the book.", "cypher": "match (m:ENTITY{name:'High Vocational Technical School of the Yantai Railway'}) <- [:Relationship{name:' Graduate School'}]-(x) - [:Relationship{name:' Representative Works'}]->(n) where n.name <> 'Case of the design of the Yantai program teaching method of exploring Yantai' return distinct n.name limit 1"}, {"query": "Help me find a spinach made with honey palm.", "cypher": "match (:ENTITY{name:'honey palm, walnut meat, starch'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='peanut' return distinct m.name"}, {"query": "Help me find two public high schools in Zhejiang Province.", "cypher": "match (:ENTITY{name:'Zhejiang Province'}) <- [:Relationship{name:'area'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='public high school' return distinct m.name limit 2"}, {"query": "I'm not sure what you mean by this, but I'm not sure what you mean by this.", "cypher": "match (:ENTITY{name:'Bernardo Santos'}) --(h) return h.name order by h.name"}, {"query": "Can you give me 10 tags for the publication called 15 Minutes English Morning Filmology Lectures?", "cypher": "match (:ENTITY{name:'15 minutes English early listening filmology talk'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'publication' return p.name limit 10"}, {"query": "Can you tell me about the 2008 Blue Ball Car Championship?", "cypher": "match (:ENTITY{name:'08 car blue ball game'}) --(q) with q order by q.name return q.name"}, {"query": "What are the publications of the defense industry and what is his price range?", "cypher": "match (:ENTITY{name:'defense industry'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:' pricing'}]->(q) return distinct h.name,q.name"}, {"query": "What steel has a yield strength of 310 MIN?", "cypher": "match (:ENTITY{name:'310 MIN'}) <- [:Relationship{name:' yield strength Mpa'}]- (m) return m.name"}, {"query": "Can you tell me the name of the framework for the learning framework Essentially?", "cypher": "match (:ENTITY{name:' a learning framework'}) <- [:Relationship{name:' substance'}]- (x) return x.name"}, {"query": "What time of year is the peach blossom?", "cypher": "match (:ENTITY{name:' peach blossom'}) - [:Relationship{name:' time'}]->(m) return distinct m.name"}, {"query": "Tell us about the six artists, where were they born?", "cypher": "match (:ENTITY{name:' artist'}) <- [*]-(m), (m) - [:Relationship{name:' place of birth'}]->(n) return m.name, n.name limit 6"}, {"query": "Can you help me find out the three topographical features?", "cypher": "match (:ENTITY{name:'topography'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' geographical location'}]->(n) return m.name, n.name limit 3"}, {"query": "Ask St. Louis Charles Hardnett what happened to him in the third round of the draft.", "cypher": "match (:ENTITY{name:'St. Louis Charles Hardnett and others'}) <- [:Relationship{name:'third round'}]- (n) return distinct n.name"}, {"query": "I'm not sure if you're going to give me the job of three Buddhists.", "cypher": "match (:ENTITY{name:'Buddhism'}) <- [:Relationship{name:'faith'}]-(m),(m) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 3"}, {"query": "What about the Meagher PA308?", "cypher": "match (n:ENTITY{name:'Meagher PA308'}) --(x) return x.name"}, {"query": "I would like to know what the Iraqi Peace and Reconstruction Army is about, can you tell me about it?", "cypher": "match (:ENTITY{name:'Iraq Peace and Reconstruction'}) --(x) return x.name skip 3"}, {"query": "The song is sung by Aanysa, what is the name of the song in Snakehips?", "cypher": "match (:ENTITY{name:'Aanysa,Snakehips'}) <- [:Relationship{name:'song originally sung'}]- (q) return distinct q.name"}, {"query": "I wonder which of the works is representative of the more than 100 times it has been published in professional publications such as Chinese literary journals, the Chinese calligraphy magazine and others?", "cypher": "match (:ENTITY{name:'works published in over 100 professional publications such as Chinese literary journals, periodicals and so on'}) <-[:Relationship{name:'main achievements'}]-(n),(n) -[:Relationship{name:'representative works'}]->(x) return distinct x.name"}, {"query": "What is the Chinese name for the 30 days to perfect a woman?", "cypher": "match (:ENTITY{name:'30 days to make perfect woman'}) - [:Relationship{name:'Chinese name'}]-> (h) with h order by h.name return h.name"}, {"query": "The following is a list of the 5 levels of the relationship of the Hellenic State Zhejiang Ecological Agriculture Limited, registered with the Shanghai Market Supervision Authority.", "cypher": "match (n:ENTITY{name:'Khe Rongjiang Giang Xie Ecological Agriculture Limited'}) - [*1..5]->(x) where x.name <>'Market Supervision Administration of Shanxi City' return distinct x.name"}, {"query": "I want to know about Dongbo Electrical Equipment Co., Ltd. in five words.", "cypher": "match (:ENTITY{name:'Dongbo Mechanical and Electrical Equipment Co. Ltd'}) --(m) with m order by m.name return m.name limit 5"}, {"query": "Give me two plant growth regulators, what's the molecular formula?", "cypher": "match (:ENTITY{name:'plant growth regulator'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:'molecular'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Can you tell me more about the Swiss Yacht F14?", "cypher": "match (n:ENTITY{name:' Swiss Yacht F14'}) --(x) return x.name"}, {"query": "The following is a list of the topics that are currently being discussed in the 2011 Chinese National Examination:", "cypher": "match (:ENTITY{name:'2011 CEF; CEF Question Classification Selected: Chemistry'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "What do you call a computer, a cell phone, a camera?", "cypher": "match (:ENTITY{name:' computer, mobile, camera'}) <- [:Relationship{name:' example'}]- (p) return p.name"}, {"query": "Do you know which exhibition had its third edition?", "cypher": "match (:ENTITY{name:' third edition'}) <- [:Relationship{name:' exhibition edition'}]- (m) return m.name"}, {"query": "Please tell me what the list of candidates for December 7, 2015 is.", "cypher": "match (:ENTITY{name:'2015 December 7'}) <- [:Relationship{name:'time'}]- (m) return distinct m.name"}, {"query": "The Duke of the Night in Blue?", "cypher": "match (:ENTITY{name:'Duke of the Blue Night'}) --(p) with p order by p.name return p.name limit 1"}, {"query": "In addition to the old Rikk Lake and the Sakhon Wat, what other famous sights are there in the two long white Shandong scenic areas?", "cypher": "match (n:ENTITY{name:'Long Ba Shandong Scenic Area'}) - [:Relationship{name:'Famous Scenic Area'}]->(h) where h.name <> 'Old Rike Lakes' and h.name <> 'Cosunyan Mountain Water' return distinct h.name limit 2"}, {"query": "What was the name of the incident that happened in China Telecom?", "cypher": "match (:ENTITY{name:'China Telecom'}) <- [:Relationship{name:'place of occurrence'}]- (p) return distinct p.name"}, {"query": "Help me find a science fiction movie from Warner Bros.", "cypher": "match (:ENTITY{name:'Warner Bros. Company'}) <- [:Relationship{name:'Distributing company'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='science fiction film' return distinct m.name limit 1"}, {"query": "Do you want to know about the five sports personalities in the four-tiered relationship of Han Dong-young?", "cypher": "match (n:ENTITY{name:'Khan Dung'}) - [*1..4]->(x) where x.name <> 'sportsman' return distinct x.name limit 5"}, {"query": "Do you know what the State Department's speech is about?", "cypher": "match (:ENTITY{name:'Office of the State Department'}) <- [:Relationship{name:'Department of State'}]-(h) - [:Relationship{name:'Subject category'}]->(x) return distinct x.name limit 3"}, {"query": "I need to know who this person Chris Meredith Dandley is.", "cypher": "match (:ENTITY{name:'Chris Meredith'}) --(n) return distinct n.name"}, {"query": "What can the flour and the black sugar beet do?", "cypher": "match (:ENTITY{name:'Geh powder, black sugar syrup'}) --(x) return distinct x.name"}, {"query": "I asked the 6 foot 2 Frank Randall, what are five personal items?", "cypher": "match (n:ENTITY{name:'Falk Randall'}) - [*]->(x) where x.name <>'2.02 m' return distinct x.name limit 5"}, {"query": "What is the name of the chemical with the sequence number 1426129-50-1?", "cypher": "match (h:ENTITY{name:'1426129-50-1'}) <- [:Relationship{name:'upstream'}]- (m) return distinct m.name"}, {"query": "How about a description of a 105mm grenade with three knowledge points?", "cypher": "match (:ENTITY{name:'105mm grenade gun'}) --(h) with h order by h.name return h.name limit 3"}, {"query": "Playing five seasons for the 100 Suns?", "cypher": "match (:ENTITY{name:'100 Suns'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 5"}, {"query": "I'm not sure if you can tell me what this guy who graduated from South Central University does for a living.", "cypher": "match (:ENTITY{name:' University of the South'}) <- [:Relationship{name:' Graduate School'}]-(n) - [:Relationship{name:' Profession'}]->(m) return m.name order by m.name limit 3"}, {"query": "What is the occupation of a person who is 160 cm tall?", "cypher": "match (:ENTITY{name:'160cm'}) <- [:Relationship{name:'height'}]-(h),(h) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 2"}, {"query": "What are the other two professions of Zhou Anshin besides acting and being a student?", "cypher": "match (n:ENTITY{name:'Zhou Anshin'}) - [:Relationship{name:'profession'}]->(h) with h order by h.name where h.name <> 'actor' and h.name <> 'student' return h.name limit 2"}, {"query": "What is the name of the family of shellfish?", "cypher": "match (:ENTITY{name:'shell'}) - [:Relationship{name:'class'}]-> (m) return distinct m.name"}, {"query": "The game is a first-person shooter, and the game is a first-person shooter.", "cypher": "match (:ENTITY{name:'Robot War Unmatched'}) --(m) with m order by m.name where m.name <> 'shooting game' return distinct m.name limit 3"}, {"query": "What are the other names for the translucent flowers?", "cypher": "match (:ENTITY{name:'translated flower'}) <- [:Relationship{name:'alias'}]- (p) return distinct p.name"}, {"query": "What are the notable alumni of Wuhan City 1st Secondary School?", "cypher": "match (:ENTITY{name:'Wuhan City First Secondary School'}) - [:Relationship{name:'Known Alumni'}]->(m) return distinct m.name"}, {"query": "Do you know of any representative works in the collection?", "cypher": "match (:ENTITY{name:'in the can'}) - [:Relationship{name:'represents the work'}]-> (p) return p.name skip 1"}, {"query": "Tell me, what was the first job of a 45-pound man?", "cypher": "match (:ENTITY{name:'45kg'}) <- [:Relationship{name:'weight'}]-(n) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 1"}, {"query": "Can you name three historical figures born in 1893?", "cypher": "match (:ENTITY{name:'1893'}) <- [:Relationship{name:'time of birth'}]- (p) return p.name limit 3"}, {"query": "What online novels have you come across? Can you tell me five?", "cypher": "match (:ENTITY{name:'net novel'}) <--(n) return n.name limit 5"}, {"query": "What do you know about Dean Zhang Lingqiu? Help me find the other 6 information in the 3 levels.", "cypher": "match (:ENTITY{name:'Zhang Lingqi'}) - [:Relationship*1..3]-(p) where p.name <> 'Department of Design of Jiangnan University' return p.name limit 6"}, {"query": "The Chinese government has announced that it will be closing down the factory in Beijing.", "cypher": "match (:ENTITY{name:'Beijing veterinary drug manufacturing enterprise top ten'}) <- [:Relationship{name:'achievement'}]->(n) return distinct n.name limit 10"}, {"query": "Do you know what the industrial metal is used for?", "cypher": "match (n:ENTITY{name:' industrial plating'}) <- [:Relationship{name:' use'}]- (mn) return mn.name"}, {"query": "Who are the independent directors of public companies?", "cypher": "match (:ENTITY{name:' independent director of a listed company'}) --(p) return distinct p.name"}, {"query": "I found out that the German Center Primary School is a public elementary school founded in 1915, and you can check it out for more information.", "cypher": "match (n:ENTITY{name:'German Central Primary School'}) -->(h) with h order by h.name where h.name <> '1915' and h.name <> 'public primary school' return h.name limit 6"}, {"query": "Can you list the 10 most representative works of Luru, who was born in November 1922?", "cypher": "match (:ENTITY{name:'\u9646\u539f, formerly\u9646\u5360\u6625, born November 1922 in the village of \u5bb6\u5b50, Tongxi County, Hebei Province\u3002'}) <-[:Describe{name:'description'}]-(m),(m) -[:Relationship{name:'represents works'}]->(h) return distinct h.name limit 10"}, {"query": "What is the characteristic of thermal and power engineering? Do you know its employment direction?", "cypher": "match (:ENTITY{name:' thermal energy and power engineering'}) - [:Relationship{name:' characteristics'}]->(n) return n.name as name union all match (:ENTITY{name:' thermal energy and power engineering'}) - [:Relationship{name:' employment direction'}]->(m) return m.name as name"}, {"query": "Do you have 10 articles about this guy, Hando Tsengyi?", "cypher": "match (:ENTITY{name:'square'}) --(q) return distinct q.name limit 10"}, {"query": "One of the representations of the Buddha is the cutting of a mustard seed and the giving of three representations of the Buddha.", "cypher": "match (:ENTITY{name:'switched'}) <- [:Relationship{name:'switched'}]-(m) - [:Relationship{name:'switched'}]->(h) where h.name <> 'switched' return distinct h.name limit 3"}, {"query": "What are the occupations of this person? Tell me three.", "cypher": "match (:ENTITY{name:'Leo'}) <- [:Relationship{name:'constellation'}]-(m),(m) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 3"}, {"query": "Find out about the publication classic comic book English 007: Little Red Riding Hood related to the two-tier relationship.", "cypher": "match (n:ENTITY{name:'Classic comics English 007: Little Red Hat'}) - [:Relationship*1..2]->(x) where x.name <> 'publication' return distinct x.name"}, {"query": "I wonder what system theory is committed to continuous improvement?", "cypher": "match (:ENTITY{name:'commitment to continuous improvement'}) <-[:Relationship{name:'commitment 2'}]- (h) return h.name"}, {"query": "Can you tell me about the three types of jobs that Chinese citizens have?", "cypher": "match (q:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(p),(p) - [:Relationship{name:'profession'}]->(m) return distinct m.name limit 3"}, {"query": "Can you help me find 10 things about the three-tier relationship between the director and the director?", "cypher": "match (:ENTITY{name:'Norville'}) - [*1..3]->(p) where p.name <> 'director' return p.name limit 10"}, {"query": "Can you tell me what is the bi-salt head of the Pan-Asian?", "cypher": "match (:ENTITY{name:' dibasic titanium; Pan-Asian titanium'}) --(p) return p.name order by p.name"}, {"query": "Do you know what the main award was for the film taken on August 17, 2009?", "cypher": "match (x:ENTITY{name:'August 17, 2009'}) <- [:Relationship{name:' date of filming'}]-(p) - [:Relationship{name:' main award'}]->(h) return distinct h.name limit 1"}, {"query": "I'm also curious about who the thin tall brother is.", "cypher": "match (:ENTITY{name:'thin tall'}) - [:Relationship{name:'on the field'}]->(n) return n.name as name union all match (:ENTITY{name:'thin tall'}) - [:Relationship{name:'brother'}]->(m) return m.name as name"}, {"query": "Can you tell me about the three levels of relationships between the works of the Crown Prince and the four related works of the Diwan?", "cypher": "match (n:ENTITY{name:'square'}) - [*1..3]->(x) where x.name <>'crown' return distinct x.name"}, {"query": "And what do you know of the main achievements of Huang Liang?", "cypher": "match (:ENTITY{name:'\u9ec4\u8fce\u8fce'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'main achievement'}]->(m) return distinct h.name"}, {"query": "I'm not sure if you can tell me which internet companies were founded in 2009?", "cypher": "match (:ENTITY{name:' founded in 2009'}) <- [:Relationship{name:' time'}]- (q) return distinct q.name"}, {"query": "Help me find two colleges with art and design departments.", "cypher": "match (:ENTITY{name:' art and design department'}) <- [:Relationship{name:' major department'}]-(m), (m) - [:Tag{name:' label'}]->(n) where n.name=' specialized university' return distinct m.name limit 2"}, {"query": "I'm not sure what kind of cannon is being fired at the head of the government.", "cypher": "match (:ENTITY{name:'scrap for the head of government'}) <- [:Relationship{name:'scrap for the subject'}]- (x) return x.name"}, {"query": "In addition to one state technician, which other professions are also in the same place? List 10 of them.", "cypher": "match (:ENTITY{name:'Lining Yangyang'}) <- [:Relationship{name:'place of birth'}]-(p),(p) - [:Relationship{name:'profession'}]->(x) where x.name <> 'national technician' return distinct x.name limit 10"}, {"query": "Do you know the name of Mitchell Thompson, the number one pick in the draft?", "cypher": "Match (:ENTITY{name:'Michelle-Thompson'}) <- [:Relationship{name:'1 show'}]- (p) return distinct p.name"}, {"query": "The following is a list of the top 10 most popular websites in the world, which are listed in the following categories:", "cypher": "match (n:ENTITY{name:'Chinese City Hall'}) - [:Relationship*1..2]->(x) where x.name<>'Italy Milan' return distinct x.name"}, {"query": "What is the brand of the company founded on November 08, 2013?", "cypher": "match (:ENTITY{name:'08 November 2013'}) <- [:Relationship{name:'created time'}]- (p) return p.name"}, {"query": "Do you want to know the information within the two-tier relationship of the suspense novel Bloody Revenge?", "cypher": "match (n:ENTITY{name:'Vengeance of the Bloody Night'}) - [*1..2]->(x) where x.name <> 'suspense novel' return distinct x.name"}, {"query": "What books are published by Langley University Press?", "cypher": "match (:ENTITY{name:'University of Oregon Press'}) <- [:Relationship{name:'Publisher'}]-(x),(x) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 1"}, {"query": "And where are their publishers, let alone their four fantasy novels?", "cypher": "match (:ENTITY{name:' fantasy fiction'}) <- [*]-(m), (m) - [:Relationship{name:' publisher'}]->(n) return m.name, n.name limit 4"}, {"query": "Can you tell me about the ten things that happened to the defender?", "cypher": "match (:ENTITY{name:' defender'}) <- [:Relationship{name:' position on the field'}]-(p),(p) - [:Relationship{name:' important event'}]->(q) return q.name order by q.name limit 10"}, {"query": "What is the name of a state in the southwest of the Western Siberian Plain?", "cypher": "match (:ENTITY{name:'Southwest of the Siberian Plain'}) <- [:Relationship{name:'Geographical location'}]-(m), (m) - [:Relationship{name:'Population'}]->(n) return distinct m.name,n.name"}, {"query": "I asked you, which accident killed 4 people and injured 12?", "cypher": "match (:ENTITY{name:' has caused 4 deaths, 12 injuries'}) <- [:Relationship{name:' consequences'}]- (q) return q.name"}, {"query": "I want to know about the other 7 stories in the 3rd floor of the Chongdu Earth Art School in Sichuan.", "cypher": "match (:ENTITY{name:'Chengdu School of Arts'}) - [*1..3]-(p) where p.name <> 'Chihuahua' return distinct p.name limit 7"}, {"query": "I want two of them besides the three sisters and the Samsung e-advertisement.", "cypher": "match (n:ENTITY{name:'\u8f9b\u4fee'}) - [:Relationship{name:'representative work'}]->(h) where h.name <> 'sisters' and h.name <> 'samsung electronic ads' return distinct h.name limit 2"}, {"query": "Which chemical is called methionine glycoside enriched in methionine?", "cypher": "match (:ENTITY{name:' to methacrylate glycoside enriched methacrylate'}) <- [:Relationship{name:' Chinese alias'}]- (p) return p.name"}, {"query": "What is the name of the show that reflects the social contribution of big Chinese companies?", "cypher": "match (:ENTITY{name:'reflects the social contribution of large Chinese enterprises'}) <- [:Relationship{name:'purpose3'}]- (n) return n.name"}, {"query": "Is Huizhou University an undergraduate school or a specialized school?", "cypher": "match (:ENTITY{name:'Hui State College'}) - [:Relationship{name:'attribute'}]->(m) return distinct m.name"}, {"query": "Can you tell me the scope of application of the product quality characteristics?", "cypher": "match (:ENTITY{name:'quality characteristics'}) <-[:Relationship{name:'Chinese name'}]-(p),(p) -[:Relationship{name:'scale of application'}]->(n) return distinct p.name"}, {"query": "The economically related 0086 discount card has some pretty bad labels?", "cypher": "match (x:ENTITY{name:'0086 discount card'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'economy' return p.name"}, {"query": "Find out the six brands of mobile phones and their respective launch dates.", "cypher": "match (:ENTITY{name:' mobile'}) <- [*]-(m), (m) - [:Relationship{name:' listing date'}]->(n) return m.name, n.name limit 6"}, {"query": "What weapons are armoured with high-strength steel plates?", "cypher": "match (:ENTITY{name:'high strength armored steel plate'}) <- [:Relationship{name:'armored'}]- (h) return h.name"}, {"query": "Can you find me three books published in 2010?", "cypher": "match (:ENTITY{name:'2010'}) <- [:Relationship{name:'published at the time'}]-(n) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 3"}, {"query": "Do you know which military exercises General Bishwind participated in?", "cypher": "match (:ENTITY{name:'Bach, referring to Bachwind'}) <- [:Relationship{name:'General'}]- (m) return m.name"}, {"query": "Can you recommend five novels that are available on the Chinese website?", "cypher": "match (:ENTITY{name:'start point Chinese web'}) <- [:Relationship{name:'connecting platform'}]- (h) return distinct h.name limit 5"}, {"query": "Please tell me what is the connection between the third layer of labels and the special products?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'specials'}) return distinct n.name"}, {"query": "The following is a list of screen trackers for the WP 8.1 platform, with no more than three layers of relationships.", "cypher": "match (n:ENTITY{name:'screen tracker'}) - [*1..3]->(x) where x.name <>'WP8.1' return distinct x.name"}, {"query": "Is there another name for the sky-sword?", "cypher": "match (:ENTITY{name:'sword'}) <- [:Relationship{name:'sword'}]- (x) return x.name"}, {"query": "He is a member of the Zhuhai Municipal Council's Literary Gallery and has no other career to match.", "cypher": "match (:ENTITY{name:'Rotim City, Guangdong Province'}) <- [:Relationship{name:'Birthplace'}]-(p),(p) - [:Relationship{name:'Profession'}]->(m) where m.name <> 'Zhuhai Municipal Council Board of Directors' return distinct m.name limit 1"}, {"query": "What do you think of the book 100 Love Poems?", "cypher": "match (:ENTITY{name:'100 love poems selected'}) --(m) with m order by m.name where m.name <> 'books' return m.name"}, {"query": "I wonder which trade talks broke down last time?", "cypher": "match (:ENTITY{name:' Negotiations broke down'}) <- [:Relationship{name:' Negotiations outcome'}]- (m) return m.name"}, {"query": "I am a teacher and I have a lot of experience in teaching children from 0 to 3 years old.", "cypher": "match (:ENTITY{name:'0-3 years of early childhood education'}) --(h) with h order by h.name return h.name"}, {"query": "Can you find me two songs that are original to the song?", "cypher": "match (:ENTITY{name:'climb'}) <- [:Relationship{name:'original song'}]-(p) - [:Relationship{name:'single name'}]->(n) return distinct n.name limit 2"}, {"query": "What kind of style is the \"Values of the Milky Way\" book?", "cypher": "match (:ENTITY{name:'the door has ten thousand guests'}) - [:Relationship{name:'the size'}]->(n) return n.name as name union all match (:ENTITY{name:'the door has ten thousand guests'}) - [:Relationship{name:'the author'}]->(m) return m.name as name"}, {"query": "What weapons are there besides the 3MILICAN's ICBMs?", "cypher": "match (:ENTITY{name:' weapon equipment'}) <- [:Tag{name:' tag'}]-(m) where m.name <> 'military 3 intercontinental missile' return distinct m.name limit 3"}, {"query": "Tell me, does NURU have a nickname?", "cypher": "match (n:ENTITY{name:'NURU'}) - [:Relationship{name:'alias'}]-> (m) with m order by m.name where m.name is not null return m.name"}, {"query": "Is Chen Guohua's ex-girlfriend a singer?", "cypher": "match (:ENTITY{name:'Chen Guo Hua'}) <- [:Relationship{name:'Ex-boyfriend'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='singer' return m.name limit 2"}, {"query": "Can you give me five pieces of information about this person, Van Es Ronnie?", "cypher": "match (n:ENTITY{name:'van Es Ronnie'}) - [:Relationship*]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "The first is that the students are not only the best in their class, but also the best in their class.", "cypher": "Match (:ENTITY{name:'Lokasan First Secondary School'}) - [:Relationship{name:'Known Alumni'}]-> (x) return x.name skip 1"}, {"query": "I'm not sure if you're interested in my job description.", "cypher": "match (:ENTITY{name:'Bipasha'}) <--(p),(p) - [:Relationship{name:'Profession'}]->(q) return distinct q.name"}, {"query": "Do you know which Japanese movies are there? Please list 14?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'region'}]- (q) return q.name limit 14"}, {"query": "What kind of labels do the 1V5 network marketing agencies have?", "cypher": "match (:ENTITY{name:'1V5 cinema building network marketing planning agency'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "The other five CMOS-like optical sensors in the single-lens camera are described.", "cypher": "match (:ENTITY{name:' single reverse camera'}) <- [:Relationship{name:' camera type'}]-(p) - [:Relationship{name:' optical sensor'}]->(q) where q.name <> 'CMOS' return distinct q.name limit 5"}, {"query": "What is the relationship between the four layers of Visual FoxPro design training in the form of a flatbed box?", "cypher": "match (n:ENTITY{name:'Visual FoxPro Design Training Tutorial'}) - [*1..4]->(x) where x.name<>'flat' return distinct x.name"}, {"query": "Who are the female animators?", "cypher": "Match (:ENTITY{name:' female'}) <- [:Relationship{name:' gender'}]- (mn) - [:Relationship{name:' profession'}]->(n:ENTITY{name:' animation producer'}) return mn.name"}, {"query": "What is the name of the torture that occurs during the fifth generation?", "cypher": "match (:ENTITY{name:'five generations'}) <- [:Relationship{name:'appeared'}]-(m), (m) - [:Relationship{name:'nature'}]->(n) where n.name='torture' return distinct m.name"}, {"query": "The concert that Baldwin gave in Quanzhou is called \"The Greatest\".", "cypher": "Match (:ENTITY{name:'2011 Shenzhen Dechuanzhou Concert'}) <- [:Relationship{name:'name'}]- (h) return h.name"}, {"query": "What is the name of the procedure used to remove particulate matter to reduce its emission into the atmosphere?", "cypher": "match (:ENTITY{name:' remove particulate matter to reduce its emission to the atmosphere'}) --(x) return distinct x.name"}, {"query": "What do you know about the book nationwide computer grading exam on-boarding test book?", "cypher": "match (:ENTITY{name:'(2011) National Computer Ranking Exam onboarding exam question book'}) - [:Tag{name:'tags'}]-> (q) with q order by q.name where q.name <> 'books' return q.name"}, {"query": "Who has the stars of 2007? Can you name 15?", "cypher": "match (:ENTITY{name:'2007'}) <- [:Relationship{name:'time of exit'}]- (p) return p.name limit 15"}, {"query": "Can you list some of the intercontinental events organized by the AFCON?", "cypher": "match (:ENTITY{name:'Intercontinental event hosted by the AFC'}) <- [:Relationship{name:'event type'}]- (n) return distinct n.name"}, {"query": "The first one is a picture of a young woman who is a teacher, and the second one is a picture of a young man who is a teacher.", "cypher": "match (:ENTITY{name:'Jim Martin Eden'}) <- [:Relationship{name:'represents work'}]- (q) return q.name order by q.name limit 1"}, {"query": "Can you name the three main departments of Harbin Cambridge University?", "cypher": "match (:ENTITY{name:'Harbin Cambridge University'}) <- [:Relationship{name:' English name'}]-(x),(x) - [:Relationship{name:' major department'}]->(m) return distinct m.name limit 3"}, {"query": "I'm not sure if I should write a book about the five teachers.", "cypher": "match (:ENTITY{name:'teacher'}) <- [:Relationship{name:'profession'}]-(n),(n) - [:Relationship{name:'representing work'}]->(m) return m.name order by m.name limit 5"}, {"query": "Do you know what the seminar was on August 28, 2015?", "cypher": "match (:ENTITY{name:'August 28, 2015'}) <- [:Relationship{name:'meeting time'}]- (n) return distinct n.name"}, {"query": "Please help me find out the opening hours and tickets of the Henan Provincial Museum", "cypher": "match (:ENTITY{name:'Museum of Henan Province'}) - [:Relationship{name:'Opening hours'}]->(n) return n.name as name union all match (:ENTITY{name:'Museum of Henan Province'}) - [:Relationship{name:'Ticket price'}]->(m) return m.name as name"}, {"query": "What are the most representative works of this man born in 1960? Name 10 of them.", "cypher": "match (:ENTITY{name:'1960'}) <- [:Relationship{name:'date of birth'}]-(p),(p) - [:Relationship{name:'representative work'}]->(h) return h.name order by h.name limit 10"}, {"query": "How do you understand this string of numbers 0799?", "cypher": "match (:ENTITY{name:'0799'}) --(q) with q order by q.name return q.name"}, {"query": "The two-tier relationship provides a documentary on the implementation of the German technical rescue, which is of great importance to the king.", "cypher": "match (n:ENTITY{name:' Implementation of German technical rescue'}) - [:Relationship*1..2]->(x) where x.name <>'Wang Chong Ho' return distinct x.name"}, {"query": "Teach me how to play 10 Mahjong?", "cypher": "match (h:ENTITY{name:'10 hash'}) --(x) with x order by x.name return x.name"}, {"query": "The five facts about Vasek Pedre, who played football for me?", "cypher": "match (n:ENTITY{name:'Vasek Ped'}) - [*]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "Can you give me a little background on the three-tier relationship of Mintoff John, who plays football?", "cypher": "match (n:ENTITY{name:'Mintoff John'}) - [*1..3]->(x) where x.name<> 'football' return distinct x.name"}, {"query": "Where are the gardens and the famous sights?", "cypher": "match (:ENTITY{name:'school'}) - [:Relationship{name:'school'}] - >(n) return n.name as name union all match (:ENTITY{name:'school'}) - [:Relationship{name:'school'}] - >(m) return m.name as name"}, {"query": "Do you remember which village has the most abundant resources of marble, sea-foam, limestone, and limestone?", "cypher": "match (:ENTITY{name:'particle, sea foam, orange, orange'}) <- [:Relationship{name:' village resource'}]- (m) return m.name"}, {"query": "What is the English name of Mohammed II?", "cypher": "match (:ENTITY{name:'Muhammad II'}) <- [:Relationship{name:' Chinese name'}]-(p) - [:Relationship{name:' foreign name'}]->(n) return distinct n.name"}, {"query": "Fire-resistant cement is a phosphate class, do you know anything else about fire-resistant cement, help me find 8 information in 3 layers.", "cypher": "match (:ENTITY{name:'fireproof cement'}) - [*1..3]-(p) where p.name <> 'phosphates, crystals, etc.' return distinct p.name limit 8"}, {"query": "What do you know about the book? Help me find the other 4 pieces of information in the 2nd layer.", "cypher": "match (:ENTITY{name:'gold thread'}) - [:Relationship*1..2]-(p) where p.name <> 'novel' return p.name limit 4"}, {"query": "Can you list five films that were shot in Beijing?", "cypher": "match (:ENTITY{name:'Beijing'}) <- [:Relationship{name:'Place of filming'}]- (x) return distinct x.name limit 5"}, {"query": "Please tell me about the personal information of Miguel Carlos, who is 1.77m tall, and who is in a two-tier relationship.", "cypher": "match (n:ENTITY{name:'Miguel Carlos'}) - [*1..2]->(x) where x.name <>'1.77 m' return distinct x.name"}, {"query": "Can you find the two national advanced collectives for vocational education?", "cypher": "match (:ENTITY{name:'National Advanced Collective for Labour Education'}) <- [*]-(m), (m) - [:Relationship{name:' area to which belongs'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Is it possible to find personal information in the three-tier relationship related to the politician Wang Xiaoming?", "cypher": "match (n:ENTITY{name:'Wang Xuan'}) - [*1..3]->(x) where x.name <> 'political figure' return distinct x.name"}, {"query": "The Farm Land Water Ordinance is a document issued by the State Council, Decree No. 669, and you tell me 6 more things about the Ordinance.", "cypher": "match (n:ENTITY{name:'Regional regulations'}) -->(h) with h order by h.name where h.name <> 'Ministry of State' and h.name <> 'Deputy of State' return h.name limit 6"}, {"query": "What is the total area of the four buildings listed?", "cypher": "match (:ENTITY{name:' building'}) <- [*]-(m), (m) - [:Relationship{name:' building area'}]->(n) return m.name, n.name limit 4"}, {"query": "Do you know who Rainbow's daughter is? Can you name five?", "cypher": "match (:ENTITY{name:'Rainbow'}) <- [:Relationship{name:'foreign language name'}]-(h),(h) - [:Relationship{name:'daughter'}]->(x) return x.name order by x.name limit 5"}, {"query": "I'm wondering which company is located in Shenzhen, South Mountain, Shenzhen, in the 6th District of Shenzhen.", "cypher": "match (:ENTITY{name:' Shenzhen City South Mountain Beach Beach Park 6101'}) <- [:Relationship{name:'company address'}]- (p) return p.name"}, {"query": "What is the discovery right?", "cypher": "match (:ENTITY{name:'discovery right'}) - [:Tag{name:'tag'}]->(m) return distinct m.name"}, {"query": "I'm looking for a job that has no less than five layers of relationships, and I'm looking for a job that has no less than five layers of relationships, and I'm looking for a job that has no less than five layers of relationships.", "cypher": "match (n:ENTITY{name:'pleasure on the left pain on the right'}) - [*1..5]->(x) where x.name <>'chunky' return distinct x.name limit 5"}, {"query": "Please recommend me 5 famous attractions of the Golden Vegas Casino Hotel.", "cypher": "match (:ENTITY{name:' Hotel of the Golden Vegas Casino'}) - [:Relationship{name:' Famous attractions'}]-> (m) return distinct m.name limit 5"}, {"query": "What else do you know about the American journalist Liu Xiaobo besides the director, Blue Zhiwei?", "cypher": "match (:ENTITY{name:'Journal of Foreign Studies; US article'}) - [*1..3]-(p) where p.name <> 'Blue Zhiwei' return p.name limit 10"}, {"query": "Do you know what information is there besides the currency depreciation, please find the other 7 information in tier 2", "cypher": "match (:ENTITY{name:' currency threshold'}) - [:Relationship*1..2]->(p) where p.name <> 'currency threshold' return p.name limit 7"}, {"query": "What is the main department of the private non-academic high school?", "cypher": "match (:ENTITY{name:'Private non-academic high school'}) <- [:Relationship{name:'school attributes'}]-(x) - [:Relationship{name:'main faculty'}]->(n) return distinct n.name limit 3"}, {"query": "What are the other qualities of a fourth-grade math teacher besides books?", "cypher": "match (:ENTITY{name:'09 autumn help you learn math: 4th grade'}) --(p) with p order by p.name where p.name <> 'books' return p.name limit 5"}, {"query": "I wonder about the other 5 works of the actress who represented the butterfly-fly-fly-fly as a dancer.", "cypher": "match (:ENTITY{name:'industry figure'}) <- [:Tag{name:'tag'}]-(n) - [:Relationship{name:'representative work'}]->(p) where p.name <> ':dance play flower butterfly flower flower' return distinct p.name limit 5"}, {"query": "What explosion killed 17 people?", "cypher": "match (:ENTITY{name:'17 known dead'}) <- [:Relationship{name:'number of victims'}]- (x) return distinct x.name"}, {"query": "Do you know what the Chinese name for the celebration of the cultural festival is?", "cypher": "match (:ENTITY{name:'Cultural Festival'}) <- [:Tag{name:'tags'}]-(m),(m) - [:Relationship{name:'Chinese name'}]->(p) return p.name order by p.name limit 3"}, {"query": "Who are the mathematicians in Italy?", "cypher": "match (:ENTITY{name:' Italy'}) <- [:Relationship{name:' nationality'}]-(m),(m) - [:Relationship{name:' profession'}]->(n) where n.name='mathematician' return distinct m.name"}, {"query": "The three species in the subfamily are distributed in which regions?", "cypher": "match (:ENTITY{name:'Aia'}) <- [*]-(m), (m) - [:Relationship{name:'Distribution area'}]->(n) return m.name, n.name limit 3"}, {"query": "How about you write me the top 10 Chinese names to build a love foundation for after marriage?", "cypher": "match (:ENTITY{name:'pre-marriage love foundation established'}) - [:Relationship{name:'Chinese name'}]-> (x) with x order by x.name return x.name limit 10"}, {"query": "Do you know of a popular game platform in the country?", "cypher": "match (:ENTITY{name:'known game operating platforms'}) <- [:Relationship{name:' summary'}]- (n) return n.name"}, {"query": "Can you give me a list of the 2012 Expo?", "cypher": "match (:ENTITY{name:'exhibition'}) <- [:Relationship{name:' institution category'}]- (n) return n.name"}, {"query": "Can you describe the five representative works of this Chinese artist?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(p) - [:Relationship{name:'representative work'}]->(n) return n.name order by n.name limit 5"}, {"query": "Can you tell me who wrote the 16 books in the open booklet?", "cypher": "match (:ENTITY{name:'16 open'}) <- [:Relationship{name:'disguised'}]-(h),(h) - [:Relationship{name:'author'}]->(q) return distinct h.name,q.name"}, {"query": "I'm going to explain the 2012 legend.", "cypher": "match (:ENTITY{name:'2012 legend'}) --(x) with x order by x.name return x.name"}, {"query": "Do you know what chemical formula is C11H12N2O5?", "cypher": "match (:ENTITY{name:'C11H12N2O5'}) <- [:Relationship{name:'chemical formula'}]- (p) return distinct p.name"}, {"query": "What are the 10 professions other than teaching born in October 1949?", "cypher": "match (:ENTITY{name:'October 1949'}) <- [:Relationship{name:'date of birth'}]-(m),(m) - [:Relationship{name:'profession'}]->(x) where x.name <> 'faculty' return distinct x.name limit 10"}, {"query": "The song was released on the album Warner Records, which gave the song five other albums in addition to the album.", "cypher": "match (:ENTITY{name:'live in the story'}) <- [:Relationship{name:'Chinese name'}]-(n) - [:Relationship{name:'album'}]->(x) where x.name <> 'Wallpaper' return distinct x.name limit 5"}, {"query": "I want to know where the population was 1023 in 2005?", "cypher": "Match (:ENTITY{name:'1023 people ((2005 year) '}) <- [:Relationship{name:'population'}]- (m) return m.name"}, {"query": "Can you find me three novels that have been made into TV series and tell me about them?", "cypher": "match (:ENTITY{name:'TV series'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 3"}, {"query": "The following is a list of links to the three levels of Abu Dhabi football administration:", "cypher": "match (n:ENTITY{name:'Absolute'}) - [*1..3]->(x) where x.name <> 'football' return distinct x.name"}, {"query": "The following are five personal messages from Wang Zhenjiang:", "cypher": "match (n:ENTITY{name:'King of the Jungle'}) - [*]->(x) where x.name <>'Ming Dynasty' return distinct x.name limit 5"}, {"query": "I'm looking for information on the work of the Harmony Monkey and the Seeing Eye, who have two different relationships.", "cypher": "match (n:ENTITY{name:' and the monkey and the goose'}) - [:Relationship*1..2]->(x) where x.name <>'subject' return distinct x.name"}, {"query": "Please tell me about the product introduction in the two-tier relationship of the 12th Five-Year Planning Tutorial: Financial Law Overview, published by Chemical Industry Publishing.", "cypher": "match (n:ENTITY{name:' Senior columnist twelve-fifths planning material: financial law overview'}) - [:Relationship*1..2]->(x) where x.name <> 'chemical industry publisher' return distinct x.name"}, {"query": "What is the name of the word selection? Who is the compiler?", "cypher": "match (:ENTITY{name:'word selection'}) - [:Relationship{name:'also called '}]->(n) return n.name as name union all match (:ENTITY{name:'word selection'}) - [:Relationship{name:'word selector'}]->(m) return m.name as name"}, {"query": "What is the name of the forum that is part of the HUAWEI Consultancy Alliance?", "cypher": "match (:ENTITY{name:'Hawaiian Consortium'}) <- [:Relationship{name:' belongs to '}]- (p) return p.name"}, {"query": "Can you take me to see Zhu Qing?", "cypher": "match (:ENTITY{name:'Zhu Qingling'}) --(h) return h.name order by h.name"}, {"query": "Running Potatoes is a running game published by Imagine Time and I would like to know more about this game, please find me 9 .", "cypher": "match (n:ENTITY{name:'running away potatoes'}) -->(h) with h order by h.name where h.name <> 'coool game' and h.name <> 'fantasy space' return h.name limit 9"}, {"query": "Please tell me about this book of his. Can you name five?", "cypher": "match (:ENTITY{name:' his city'}) --(q) return distinct q.name limit 5"}, {"query": "Can you list the 2000 books published? and tell me which publisher I'm published by? can you list 5?", "cypher": "match (:ENTITY{name:'2000'}) <- [:Relationship{name:'published at the time'}]-(h),(h) - [:Relationship{name:'publisher'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Help me find a dish made with turtles.", "cypher": "match (:ENTITY{name:'turtle'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Tag{name:'label'}]->(n) where n.name='food' return distinct m.name"}, {"query": "Speaking of six sci-fi movies, who directed them?", "cypher": "match (:ENTITY{name:'science fiction film'}) <- [*]-(m), (m) - [:Relationship{name:'director'}]->(n) return m.name, n.name limit 6"}, {"query": "What is the name of the financial software produced by Gold Butterfly International Software Group Limited?", "cypher": "match (:ENTITY{name:'Gold Butterfly International Software Group Limited'}) <- [:Relationship{name:'software platform'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='financial software supplier' return distinct m.name"}, {"query": "Do you know which five films Grace Kelly has appeared in besides Country Girl?", "cypher": "match (n:ENTITY{name:'Grace Kelly'}) - [:Relationship{name:'main work'}]->(h) with h order by h.name where h.name <> 'country girl' return h.name limit 5"}, {"query": "What is the ISBN number for 9787302406730?", "cypher": "match (:ENTITY{name:'9787302406730'}) <- [:Relationship{name:'ISBN'}]- (h) return distinct h.name"}, {"query": "What are the characteristics of thin wood panels?", "cypher": "match (:ENTITY{name:' small wooden board'}) - [:Relationship{name:' characteristics'}]-> (m) return distinct m.name"}, {"query": "What is the name of the system that uses coded transmission as a mode of transmission?", "cypher": "match (:ENTITY{name:'coded transmission'}) <- [:Relationship{name:'transmission method'}]- (m) return distinct m.name"}, {"query": "Do you know of any works that have a 4-link link to literature?", "cypher": "Match (n) - [:Tag*4{name:'tag'}]->(p:ENTITY{name:'literary work'}) RETURN distinct n.name"}, {"query": "I would like to know the profile of Origi Arnold in Kenya in the third level of relationships?", "cypher": "match (n:ENTITY{name:'Origi Arnold'}) - [*1..3]->(x) where x.name<>'Kenya' return distinct x.name"}, {"query": "Where are the red-tailed hawks mainly found?", "cypher": "match (:ENTITY{name:' red-tailed shark'}) - [:Relationship{name:' distribution area'}]-> (m) return distinct m.name"}, {"query": "Let me know what the bottom of the waist is?", "cypher": "match (:ENTITY{name:' lower waist'}) --(m) return m.name order by m.name limit 10"}, {"query": "How much do you know about the 1982 Caspian Pearl brand?", "cypher": "match (:ENTITY{name:'1982 Caspian pearl'}) --(x) with x order by x.name where x.name <> 'brand' return x.name"}, {"query": "What kind of computer is characterized by a massive integrated circuit?", "cypher": "match (:ENTITY{name:'massive integrated circuit'}) <- [:Relationship{name:'feature'}]- (n) return distinct n.name"}, {"query": "Help me find the expression for the budget line.", "cypher": "match (:ENTITY{name:' budget line'}) - [:Relationship{name:' expression'}]-> (m) return distinct m.name"}, {"query": "Help me identify 20 species of arthropods that belong to the insect order.", "cypher": "match (:ENTITY{name:' insect outline'}) <- [:Relationship{name:' outline'}]- (mn) - [:Relationship{name:' door'}]->(n:ENTITY{name:' limb door'}) return mn.name limit 20"}, {"query": "The Chinese government has been trying to find 10 Chinese representatives and give the names of the authors.", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnic'}]-(x) - [:Relationship{name:'main work'}]->(h) return x.name order by x.name,h.name limit 10"}, {"query": "What is the name of the chickpea that is baked in a pan?", "cypher": "match (:ENTITY{name:'cranberry'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='channel' return distinct m.name"}, {"query": "What was the murder that took place on the afternoon of November 26, 1996?", "cypher": "match (:ENTITY{name:'November 26, 1996 afternoon'}) <- [:Relationship{name:'time of occurrence'}]- (p) return distinct p.name"}, {"query": "Can you find the material of the five beautiful and beautiful works of art left by the North Tower?", "cypher": "match (n:ENTITY{name:' and \u4f8d\u90ce\u7559\u9898\u5317\u697c'}) - [:Relationship*]->(x) where x.name <> '' return distinct x.name limit 5"}, {"query": "Can you help me find out about the relationship between the two characters in the story, Toyah Graham?", "cypher": "match (n:ENTITY{name:'Toa Graham'}) - [:Relationship*1..2]->(x) where x.name <> 'subject person' return distinct x.name"}, {"query": "Which markets have the same ticket prices as the Circle Flower Market? What are the different labels? Please sort by the number of labels in each market from small to large.", "cypher": "match (n:ENTITY{name:'flower market'}) - [:Relationship{name:'ticket price'}]->(:ENTITY) <-[:Relationship{name:'ticket price'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Do you know what kind of exhibitions are held in Hunan International Convention and Exhibition Center?", "cypher": "match (:ENTITY{name:'Hunan International Convention and Exhibition Centre'}) <- [:Relationship{name:'address'}]- (n) return distinct n.name"}, {"query": "Please tell me which city has three provincial universities of general specialization?", "cypher": "match (:ENTITY{name:'province belongs to general specialties'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:'area belongs to'}]->(n) return m.name,n.name limit 3"}, {"query": "What chemical is CAS number 58381-23-0?", "cypher": "match (:ENTITY{name:'58381-23-0'}) <- [:Relationship{name:'CAS number'}]- (x) return distinct x.name"}, {"query": "Please help me find three fantasy novels, who are the authors?", "cypher": "match (:ENTITY{name:'fiction'}) <- [*]-(m), (m) - [:Relationship{name:'author'}]->(n) return distinct m.name, n.name limit 3"}, {"query": "What do you know about the screenwriter Oliver Parker? Help me find the other 10 stories in the 3 layers.", "cypher": "match (:ENTITY{name:'Oliver Parker'}) - [*1..3]-(p) where p.name <> 'writer' return p.name limit 10"}, {"query": "The 2015 China International Badminton Challenge is a competition that will be held from January 27 to February 1 with a total prize pool of $50,000.", "cypher": "match (n:ENTITY{name:'2015 China International Badminton Challenge'}) -->(h) with h order by h.name where h.name <> 'January 27 to February 1' and h.name <> '$50,000' return h.name limit 7"}, {"query": "Do you know what other names insects have?", "cypher": "match (:ENTITY{name:' insect type'}) <- [:Relationship{name:' type'}]-(p),(p) - [:Relationship{name:' alias'}]->(m) return distinct m.name limit 1"}, {"query": "What are the names of the companies founded on the same day as Guangdong State Clean Equipment Co., Ltd. and what are their labels?", "cypher": "match (n:ENTITY{name:' Guangdong Guizhou Provincial Cleaning Equipment Limited'}) - [:Relationship{name:' founding time'}]->(:ENTITY) <- [:Relationship{name:' founding time'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Who is the vice president of the Hebei City Council?", "cypher": "match (p:ENTITY{name:'Vice Chairman'}) <--(x) -->(q:ENTITY{name:'Hofeda City Council'}) return x.name"}, {"query": "The following is a list of the most common causes of car accidents in the state of Hubei, China.", "cypher": "match (:ENTITY{name:'1.17 Fujifilm'}) --(x) with x order by x.name where x.name <> 'social event' return x.name"}, {"query": "I want to check out the 5 messages of Taearaa Tawfek who weighs 82 kg.", "cypher": "match (n:ENTITY{name:'Taearaa Tawfek'}) - [*]->(x) where x.name <>'82 kg' return distinct x.name limit 5"}, {"query": "How many countries and official members of the Star Alliance are there?", "cypher": "match (:ENTITY{name:'Star Alliance'}) - [:Relationship{name:'Commonwealth'}]->(n) return n.name as name union all match (:ENTITY{name:'Star Alliance'}) - [:Relationship{name:'official membership'}]->(m) return m.name as name"}, {"query": "Help me find five Japanese comics.", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'region'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='comic' return distinct m.name limit 5"}, {"query": "Do you know the name of the plane crash in Zhejiang?", "cypher": "match (:ENTITY{name:' plane crash'}) <- [:Relationship{name:' event'}]- (n) return n.name"}, {"query": "What schools have applications of mechanical and electrical technology?", "cypher": "match (:ENTITY{name:'Mechanical engineering application'}) --(h) return h.name order by h.name"}, {"query": "I'm going to be using this technology to make a bearing for the 23226CCK/W33 bearings.", "cypher": "match (:ENTITY{name:'23226CCK/W33 bearing'}) --(n) with n order by n.name where n.name <> 'technology product' return n.name"}, {"query": "I'm not sure if you know of any reports on environmental issues.", "cypher": "match (:ENTITY{name:'environmental'}) <- [:Relationship{name:'related area'}]- (p) return distinct p.name"}, {"query": "I want translators to be the ones to sell the dreamers, the ones who sell the dreamers, the ones who sell the dreamers.", "cypher": "match (:ENTITY{name:'sell the dream'}) - [*1..2]-(p) where p.name <> 'p.name' return p.name limit 7"}, {"query": "Tell me about 10 trains at 16:19?", "cypher": "match (h:ENTITY{name:'16:19 train'}) --(m) with m order by m.name return m.name limit 10"}, {"query": "The following is a list of details of the Ali Travel 2 relationship with Alibaba Group:", "cypher": "match (n:ENTITY{name:'Ali Travel'}) - [:Relationship*1..2]->(x) where x.name <>'Alibaba Group' return distinct x.name"}, {"query": "Do you have a major department at Chang An Automotive University?", "cypher": "match (:ENTITY{name:'Chang An Automotive University'}) <--(m),(m) - [:Relationship{name:'main faculty'}]->(h) return distinct h.name"}, {"query": "Can you tell me about the 10 main achievements of Jos\u00e9 Mar\u00eda Alfaro Zamora?", "cypher": "match (:ENTITY{name:'Jose Maria Alfaro Zamora'}) - [:Relationship{name:' major achievements'}]-> (q) return distinct q.name limit 10"}, {"query": "Do you know about director Liu Daqiu? What other information is there besides director Zhuang Yue, please find the other 10 information in layer 2", "cypher": "match (:ENTITY{name:'square'}) - [*1..2]->(p) where p.name <> 'square' return p.name limit 10"}, {"query": "What else do you know about the Accounting Department at the Business Schools, apart from the four auditing majors?", "cypher": "match (:ENTITY{name:'Accounting department of the College of Business and Professional Studies'}) - [*1..3]-(p) where p.name <> 'Audit 4 specialties' return p.name limit 10"}, {"query": "I would like to know the other 4 information about actor Zheng Lin in the 2nd level.", "cypher": "match (:ENTITY{name:'Zhiqinglin'}) -[:Relationship*1..2]-(p) where p.name <> 'actor' return p.name limit 4"}, {"query": "I wonder what the predecessor of 2S19 self-propelled grenade is?", "cypher": "match (:ENTITY{name:'2S19 self-propelled grenade gun'}) <- [:Relationship{name:'former type class'}]- (m) return m.name"}, {"query": "Besides the Brazilian man who is 1.89m tall, tell me 6 more things about Leonardo Navacchio.", "cypher": "match (n:ENTITY{name:'Navacchio Leonardo'}) -->(h) with h order by h.name where h.name <> 'Brazil' and h.name <> '1.89 m' return h.name limit 6"}, {"query": "Can you help me find the 10 labels of this 20 year old song?", "cypher": "match (:ENTITY{name:'20 years old [song]'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 10"}, {"query": "I would like to know what exhibitions are organized by Shanghai Crown Toon Exhibition Planning Ltd.", "cypher": "match (:ENTITY{name:' Shanghai Crown Town Exhibition Planning Ltd'}) <- [:Relationship{name:' undertaking'}]- (h) return distinct h.name"}, {"query": "The Preparatory Meeting for the DPRK-China Sea Delimitation Negotiations was a meeting on 29 January 2015 on territorial peace talks, and I need three more information about the meeting, please help me find it.", "cypher": "match (n:ENTITY{name:'Preparatory meeting for delimitation negotiations in the South China Sea'}) -->(h) with h order by h.name where h.name <> '2015/1/29' and h.name <> 'Territorial peace negotiations' return h.name limit 3"}, {"query": "Find out about the two-tiered relationship between sports personality Fusco and his inner circle.", "cypher": "match (n:ENTITY{name:'Fusco'}) - [:Relationship*1..2]->(x) where x.name<>'sportsman' return distinct x.name"}, {"query": "What other labels are there for the 12.7mm V-94 sniper rifle besides the social label?", "cypher": "match (:ENTITY{name:'12.7 mm V-94 large caliber sniper rifle'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'society' return m.name"}, {"query": "I want you to list the top 10 achievements of celebrities born in Shanghai.", "cypher": "match (:ENTITY{name:' Shanghai'}) <- [:Relationship{name:' place of birth'}]-(q) - [:Relationship{name:' major achievements'}]->(x) return x.name order by x.name limit 10"}, {"query": "I would like to know about the other four information about Kim Jong-un in the second tier.", "cypher": "match (:ENTITY{name:'Kim Chi-Sum'}) -[:Relationship*1..2]-(p) where p.name <> 'Korean actor' return p.name limit 4"}, {"query": "What is the group of people with polycystic ovary syndrome?", "cypher": "match (:ENTITY{name:'relating'}) - [:Relationship{name:'multiple hair group'}]->(m) return distinct m.name"}, {"query": "Can you name me some of the landmark buildings in Shanghai?", "cypher": "match (:ENTITY{name:' Shanghai'}) <- [:Relationship{name:' city'}]- (q) return distinct q.name"}, {"query": "Do you have any information on the 3 levels of labeling of religious people?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'religious figure'}) return distinct n.name limit 3"}, {"query": "The Internet product 0731 tourism network and what other tags?", "cypher": "match (:ENTITY{name:'0731 tourist network'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'Internet product' return q.name"}, {"query": "List three TV series directed by Yusuke Sato, who are the main characters?", "cypher": "match (:ENTITY{name:'show star'}) <- [*]-(m), (m) - [:Relationship{name:'star'}]->(n) return distinct m.name, n.name limit 3"}, {"query": "Do you know where to stay near New World Mall, Hanyang Mall?", "cypher": "match (:ENTITY{name:'New World Department Store, Hanyang Mall'}) <- [:Relationship{name:'Neighborhood business'}]- (h) return h.name"}, {"query": "Where is the North Shore Company?", "cypher": "match (p:ENTITY{name:'Northern Eagle Company'}) return p.location"}, {"query": "What is a K-string diagram? Can you tell me about 10 lines?", "cypher": "match (:ENTITY{name:'K string diagram'}) --(p) return distinct p.name limit 10"}, {"query": "What is a seven-line poem? Can you tell me?", "cypher": "match (:ENTITY{name:'seven lines'}) --(q) return distinct q.name"}, {"query": "The man, who was born in Seoul, South Korea, and whose works are representative, please tell me about one of them.", "cypher": "match (:ENTITY{name:'South Korea Seoul'}) <- [:Relationship{name:'place of birth'}]-(h) - [:Relationship{name:'representative work'}]->(p) return p.name order by p.name limit 1"}, {"query": "I would like to meet Haji Ahmadou Ahidjo.", "cypher": "match (:ENTITY{name:'Hajji Ahmadou Ahchijo'}) --(x) return distinct x.name"}, {"query": "Please tell me about one of the representative works of this Korean national.", "cypher": "match (:ENTITY{name:'Korean nation'}) <- [:Relationship{name:'Korean nation'}]-(n) - [:Relationship{name:'representative work'}]->(q) return n.name,q.name skip 4 limit 1"}, {"query": "Can you tell me about the five companies that were founded in 2012?", "cypher": "match (:ENTITY{name:'2012'}) <- [:Relationship{name:'time of establishment'}]-(n) - [:Relationship{name:'company name'}]->(q) return distinct q.name limit 5"}, {"query": "Can you explain to me the three achievements of Javier Marias, besides the Romulo Garag\u00f3s Prize in 1995 and the Femina Foreign Novel Award in 1996?", "cypher": "match (n:ENTITY{name:'Javie Marias'}) - [:Relationship{name:'main achievements'}]->(h) where h.name <> '1995 Romulo Gallagoz Prize' and h.name <> '1996 Femina Award for Foreign Fiction' return distinct h.name limit 3"}, {"query": "Help me find three places to visit in Nanjing.", "cypher": "match (:ENTITY{name:'Nanjing City'}) <- [:Relationship{name:'City'}]-(m), (m) - [:Tag{name:'Tag'}]->(n) where n.name='Landscape attractions' return distinct m.name limit 3"}, {"query": "I wonder what kind of novels are on 17k?", "cypher": "match (:ENTITY{name:'17k novel network'}) <- [:Relationship{name:'linked website'}]-(p),(p) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 1"}, {"query": "The book is a book about the importance of food and drink for children.", "cypher": "match (:ENTITY{name:'0 years old enlightenment book: fruit and vegetable book'}) --(x) with x order by x.name return x.name limit 3"}, {"query": "Please tell me the name and nickname of this thing that belongs to the ray-finned fishes.", "cypher": "match (:ENTITY{name:'radial fish'}) <- [:Relationship{name:'program'}]-(m),(m) - [:Relationship{name:'English name'}]->(p) return m.name,p.name skip 1 limit 1"}, {"query": "I'm not sure if you're talking about the 00:30 AM curfew.", "cypher": "match (:ENTITY{name:'00:30 in the morning secret message'}) --(m) with m order by m.name return m.name"}, {"query": "The raw material is non-corrosive and polyurethane, artificial marble, artificial marble seating in the second layer of the toilet and 7 other information.", "cypher": "match (:ENTITY{name:'artificial marble, artificial marble-sitting urinal'}) - [*1..2]-(p) where p.name <> 'non-metallic and polymers, titanium oxide etc' return distinct p.name limit 7"}, {"query": "Can you recommend a military website for me?", "cypher": "match (:ENTITY{name:'professional military site'}) <- [:Relationship{name:'website type'}]- (m) return m.name"}, {"query": "I'm going to be a student of the Chinese Academy of Sciences and Technology, and I'm going to be a student of the Chinese Academy of Sciences and Technology.", "cypher": "match (:ENTITY{name:'13 years old entrance secret of Chinese University of Technology'}) --(m) with m order by m.name return m.name limit 5"}, {"query": "A friend told me that the Royal Belize Football Club was founded by Liberman in Chengdu, but I wanted to know more information, you can give me five more.", "cypher": "match (n:ENTITY{name:'Royal Belize Football Club'}) -->(h) with h order by h.name where h.name <> 'Chengdu' and h.name <> 'Libercheng' return h.name limit 5"}, {"query": "How high is Mount Kinabalu?", "cypher": "match (:ENTITY{name:'Jina Barua'}) - [:Relationship{name:'Elevation'}]-> (m) return distinct m.name"}, {"query": "The first is that the person who is the author of the article is not a person who is in a relationship with someone other than his spouse.", "cypher": "match (n:ENTITY{name:'Guthleber Laurent'}) -[:Relationship*1..2]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "Please tell me what is the product code 10326228?", "cypher": "match (:ENTITY{name:'10326228'}) <- [:Relationship{name:' commodity coded'}]- (m) return m.name"}, {"query": "What are the tasks and goals of the oil industry?", "cypher": "match (:ENTITY{name:' petroleum engineering'}) - [:Relationship{name:' mission'}]->(n) return n.name as name union all match (:ENTITY{name:' petroleum engineering'}) - [:Relationship{name:' objective'}]->(m) return m.name as name"}, {"query": "The company is a private company, headquartered at 12 Road, Libeijing, Dongguan City, Dongguan City, and you can tell me 6 more things about this company.", "cypher": "match (n:ENTITY{name:'Tonghua City Lifan Clothing Limited'}) -->(h) with h order by h.name where h.name <> 'private' and h.name <> 'Tonghua City Long Town Libei Xing City One Road No. 12' return h.name limit 6"}, {"query": "What websites were launched in 2008? 10?", "cypher": "match (:ENTITY{name:'2008'}) <- [:Relationship{name:'online time'}]- (m) return m.name limit 10"}, {"query": "What kind of weapon is the Lee-Enfield rifle?", "cypher": "match (:ENTITY{name:' Lee-Enfield rifle'}) <- [:Relationship{name:' former type'}]- (p) return distinct p.name"}, {"query": "The book is a great example of how the world is changing, and how it can be changed.", "cypher": "match (h:ENTITY{name:'Prideful wife: President, please hold'}) - [:Relationship{name:'connected status'}]-> (q) return q.name skip 1"}, {"query": "Can you find an alumnus of the University of Basel and help me introduce them?", "cypher": "match (:ENTITY{name:'University of Basel'}) <- [:Relationship*]-(m), (m) - [:Describe{name:'description'}]->(n) return m.name, n.name limit 1"}, {"query": "Can you list five?", "cypher": "match (:ENTITY{name:' starting net'}) <--(n) return n.name limit 5"}, {"query": "Which Qing Dynasty building have you visited?", "cypher": "match (:ENTITY{name:'Chang Dynasty architecture'}) <--(n) return n.name"}, {"query": "What is the first love of Aquarius?", "cypher": "match (:ENTITY{name:' waterfall'}) <- [:Relationship{name:' star'}]-(m) - [:Relationship{name:' hobby'}]->(x) return x.name order by x.name limit 1"}, {"query": "What are the exhibitions in the 25,000 square meters of the venue?", "cypher": "match (:ENTITY{name:'25000 square meters'}) <- [:Relationship{name:'area of the venue'}]- (n) return n.name"}, {"query": "Help me find the book the author intended.", "cypher": "match (:ENTITY{name:'counted'}) <-[:Relationship{name:'author'}]-(m) return distinct m.name"}, {"query": "His name in Chinese is Ben Qiaoqi, do you know his signature work?", "cypher": "match (:ENTITY{name:'This is a great piece of work'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'Represents work'}]->(x) return distinct h.name"}, {"query": "Do you know which major departments are there in this school with the school code 10366? Can you tell me the first three?", "cypher": "match (:ENTITY{name:'10366'}) <- [:Relationship{name:'school code'}]-(x),(x) - [:Relationship{name:'main faculty'}]->(n) return n.name skip 1 limit 3"}, {"query": "What accident happened on the Jinhua Highway, Shandong Mountain?", "cypher": "match (:ENTITY{name:'Jinghua Highway, Shandong Mountain Range'}) <- [:Relationship{name:'accident location'}]- (q) return q.name"}, {"query": "Regondi Giulio is a cook?", "cypher": "match (:ENTITY{name:'Regondi Giulio'}) <- [:Relationship{name:'foreign language name'}]-(p) - [:Relationship{name:'profession'}]->(x) return distinct x.name"}, {"query": "In three words, what about 1+2 Hardware Products Limited?", "cypher": "match (n:ENTITY{name:'1+2 Hardware Products Limited'}) --(m) with m order by m.name return m.name limit 3"}, {"query": "Can you list the top 10 Chinese writers?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(m),(m) - [:Relationship{name:'representative work'}]->(q) return distinct q.name limit 10"}, {"query": "I want to know about this guy named Liu, his 5 career tips.", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'alias'}]-(x),(x) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 3"}, {"query": "Who are the people with the white faces and little thumbs in the play?", "cypher": "Match (:ENTITY{name:'whiteface'}) - [:Tag{name:'tag'}]->(n) return n.name"}, {"query": "The Chinese name for the final day of the duel is?", "cypher": "match (:ENTITY{name:'final day of the duel'}) - [:Relationship{name:'Chinese name'}]-> (m) with m order by m.name return m.name"}, {"query": "Tell me about the six lightning bolts outside of Marvel Comics that are part of Marvel Now?", "cypher": "match (:ENTITY{name:'Rey Shantel Marvel Now'}) --(m) with m order by m.name where m.name <> 'Marvel Comics' return distinct m.name limit 6"}, {"query": "I want to know more about Zhang's artistic process, and you tell me all the information about his involvement in the creation of the work.", "cypher": "match (n:ENTITY{name:'spanish'}) --(m) return m.name skip 2"}, {"query": "The first ship of the class, the AVL Light Carrier, was launched in November of the same year.", "cypher": "match (n:ENTITY{name:'AVL light aircraft carrier'}) <- [:Relationship{name:'pre-type class'}]- (q) return q.name"}, {"query": "What are the basic geometric transformations and what are their applications?", "cypher": "match (:ENTITY{name:' primary geometry transformation'}) - [:Relationship{name:' including '}]->(n) return n.name as name union all match (:ENTITY{name:' primary geometry transformation'}) - [:Relationship{name:' application'}]->(m) return m.name as name"}, {"query": "Do you know about the military-class frigate 053H1Q?", "cypher": "match (:ENTITY{name:'053H1Q type frigate'}) --(h) with h order by h.name where h.name <> 'military' return h.name"}, {"query": "Do you know anything about this Dopa guy?", "cypher": "match (:ENTITY{name:'Dopa'}) --(h) with h order by h.name return h.name"}, {"query": "What is the profession of the person born in 1939? In addition to the Shandong Military District Party Committee member, give one more.", "cypher": "match (:ENTITY{name:'1939'}) <- [:Relationship{name:'date of birth'}]-(h),(h) - [:Relationship{name:'profession'}]->(q) where q.name <> 'Shandong Province Military District Party Committee member' return distinct q.name limit 1"}, {"query": "What is the area code of Tai Hills?", "cypher": "Match (:ENTITY{name:'0538'}) <- [:Relationship{name:'Thai Mountain Area'}]- (n) return n.name"}, {"query": "The following is a list of the top three levels of relations between the organization and the company:", "cypher": "match (n:ENTITY{name:'Xiao Dongbao Qingjian Agricultural Products Limited'}) - [*1..3]->(x) where x.name <> 'organizing entity' return distinct x.name"}, {"query": "Which chemical is CAS number 106-38-7?", "cypher": "match (:ENTITY{name:'106-38-7'}) <- [:Relationship{name:'CAS login number'}]- (p) return distinct p.name"}, {"query": "Ask Diver: What are the four other aspects of the work of Salvation outside of Europe and America?", "cypher": "match (:ENTITY{name:'anonymous: redemption'}) --(m) with m order by m.name where m.name <> 'Europe and America' return distinct m.name limit 4"}, {"query": "The story of the three-layer relationship in the British novel Porthcawl?", "cypher": "match (n:ENTITY{name:'Pordak [British novel]'}) - [:Relationship*1..3]->(x) where x.name <>'UK' return distinct x.name"}, {"query": "Please tell me about the five levels of the relationship between the soccer player Loginovsky Vladimir and the five levels of the relationship between the two players.", "cypher": "match (n:ENTITY{name:'Loginovsky Vladimir'}) - [*1..5]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "Can you list 10 jobs that Chinese people in Hong Kong do?", "cypher": "match (:ENTITY{name:'China Hong Kong'}) <- [:Relationship{name:'place of birth'}]-(n),(n) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 10"}, {"query": "Can you find the five goalkeepers? Where are their shirt numbers?", "cypher": "match (:ENTITY{name:'keeper'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'shirt number'}]->(n) return m.name, n.name limit 5"}, {"query": "Give the 1212KTV bearings a related tag?", "cypher": "match (:ENTITY{name:'1212KTV bearing'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 1"}, {"query": "Can you name some of the dancers?", "cypher": "match (x:ENTITY{name:'dancer'}) <-[:Relationship{name:'profession'}]- (m) return m.name skip 3"}, {"query": "Can you name four places that have subtropical climates?", "cypher": "match (m:ENTITY{name:'subtropical climate'}) <- [:Relationship{name:'climate conditions'}]- (n) return n.name limit 4"}, {"query": "The three technical schools of the Central Petersburg Aviation Academy are named.", "cypher": "match (:ENTITY{name:'Skinnysk Technical College and the St. Petersburg Aviation Academy'}) --(m) return distinct m.name limit 3"}, {"query": "What are the 2011 cars? Name 18 of them?", "cypher": "match (n:ENTITY{name:'2011'}) <- [:Relationship{name:'year number'}]- (m) return m.name limit 18"}, {"query": "I would like to know about one of the major departments of scholarship management in the undergraduate school of Beijing Information Technology University, besides the School of Communications and the School of Photonics.", "cypher": "match (n:ENTITY{name:'Scholarship management method for undergraduate students at Beijing Information Technology University'}) - [:Relationship{name:'main faculty'}]->(h) where h.name <> 'communication faculty' and h.name <> 'photoelectric faculty' return distinct h.name limit 1"}, {"query": "What books are published by Shandong Science and Technology Publishing?", "cypher": "match (:ENTITY{name:'Sandong Science and Technology Publishing'}) <- [:Relationship{name:'Publishing'}]-(x),(x) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 3"}, {"query": "The following is a list of 214-page business school libraries: Macroeconomics homework analysis related to the three-tiered relationship.", "cypher": "match (n:ENTITY{name:' Business School Library: Macroeconomics lesson homework analysis'}) - [*1..3]->(x) where x.name <>'214 pages' return distinct x.name"}, {"query": "What are the main drawbacks of these websites that are dedicated to horse racing and horse racing industry?", "cypher": "match (:ENTITY{name:'Horse racing industry portal'}) <- [:Relationship{name:'website type'}]-(q),(q) - [:Relationship{name:'main link'}]->(h) return h.name order by h.name limit 10"}, {"query": "I'm not sure what kind of weapon is the full-bore 184mm?", "cypher": "match (:ENTITY{name:'184mm'}) <- [:Relationship{name:'full gun length'}]- (q) return distinct q.name"}, {"query": "Can you tell me who Chi Ye-Shang is?", "cypher": "match (:ENTITY{name:'Kili Yejiang also'}) --(p) return p.name order by p.name"}, {"query": "Would you make this dish with the old cook's white rice? I only know it's a family dish, please list 10 information in 2 layers", "cypher": "match (:ENTITY{name:'old cook white rice'}) - [*1..2]->(p) where p.name <> 'home common rice, private rice' return p.name limit 10"}, {"query": "What are some of the most representative works of Albert M. Shapiro that you have?", "cypher": "match (x:ENTITY{name:'Albert M. Shapiro'}) - [:Relationship{name:'represents work'}]-> (p) return p.name order by p.name limit 3"}, {"query": "The first five tags for the invisible street: 121 ways to keep things inside out", "cypher": "match (:ENTITY{name:'121 types of preservation from inside out: avenue invisible'}) - [:Tag{name:'label'}]-> (n) with n order by n.name return n.name limit 5"}, {"query": "The book is about the development of the whole brain of a 3-year-old baby.", "cypher": "match (:ENTITY{name:'0~3 years old baby full brain development'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'books' return q.name"}, {"query": "Help me find five species of fish that are hard-shelled and round.", "cypher": "match (:ENTITY{name:'hard-boned fish outline'}) <- [:Relationship{name:'hard-boned fish outline'}]-(m), (m) - [:Relationship{name:'eye'}]->(n) where n.name='eye' return m.name limit 10"}, {"query": "The people born in 1957 and their representatives have asked me to write no more than 10 articles.", "cypher": "match (:ENTITY{name:'October 1957'}) <- [:Relationship{name:'date of birth'}]-(q),(q) - [:Relationship{name:'representing work'}]->(n) return q.name order by q.name,n.name limit 10"}, {"query": "What are the original songs released in December 2013?", "cypher": "match (:ENTITY{name:'2013-12'}) <- [:Relationship{name:'release time'}]-(h),(h) - [:Relationship{name:'original song'}]->(p) return distinct p.name"}, {"query": "What developers have software that is 43.1 MB in size?", "cypher": "match (:ENTITY{name:'43.1 MB'}) <- [:Relationship{name:'size'}]-(p),(p) - [:Relationship{name:'developer'}]->(x) return distinct p.name"}, {"query": "Five tags to tell me what time is 10 seconds 360?", "cypher": "match (:ENTITY{name:'10sec360'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 5"}, {"query": "Do you know of any other information about the book besides the author, Lee Byung-ha? Help me find 10 information in 3 layers.", "cypher": "match (:ENTITY{name:'looking like [Lee Bian poetry]'}) - [*1..3]->(p) where p.name <> 'Lee Bian' return p.name limit 10"}, {"query": "What is the name of the game published by SomaSim?", "cypher": "match (h:ENTITY{name:'SomaSim'}) <- [:Relationship{name:'Issuer'}]- (m) return distinct m.name"}, {"query": "Can you write a label for asteroid 4690 other than science?", "cypher": "match (:ENTITY{name:' asteroid 4690'}) - [:Tag{name:' tag'}]-> (p) with p order by p.name where p.name <> 'science' return p.name limit 1"}, {"query": "I heard that the 2016 Munich International Electronics Show is organized by Munich International Exhibition Co., Ltd. and is held every two years, so please give me more information about it.", "cypher": "match (n:ENTITY{name:'2016 Munich International Electronics Show'}) -->(h) with h order by h.name where h.name <> 'Germany Munich International Exhibition Company Limited' and h.name <> 'two years once' return h.name limit 3"}, {"query": "The telephone area code for which areas of Hebei Province is 0312? Give five of them.", "cypher": "match (p:ENTITY{name:'0312'}) <- [:Relationship{name:'phone area code'}]-(m),(m) - [:Relationship{name:'area'}]->(h) where h.name <> 'Hebei Province of China' return distinct h.name limit 3"}, {"query": "Can you find me two teachers and tell me their Chinese names?", "cypher": "match (:ENTITY{name:'teacher'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'Chinese name'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Do you know the name of the singer of the song \"You Needed Me\"?", "cypher": "match (:ENTITY{name:' You Needed Me'}) --(n) return n.name skip 1"}, {"query": "The first book I read in the first year of my life was a book about the three levels of language knowledge that Zhou Xiaoming created.", "cypher": "match (n:ENTITY{name:'Language in primary school'}) - [:Relationship*1..3]->(x) where x.name <>'weekly school quiet' return distinct x.name"}, {"query": "Can you give me the five characters of the anime character Monster?", "cypher": "match (n:ENTITY{name:'Magic Beast'}) - [*]->(x) where x.name <> 'animated image' return distinct x.name limit 5"}, {"query": "What are the five words that describe the seafood you know?", "cypher": "match (:ENTITY{name:'(4) seafood'}) --(q) with q order by q.name return q.name limit 5"}, {"query": "Can you recommend 7 songs with a duration of 4 minutes and 25 seconds?", "cypher": "match (:ENTITY{name:'4 min 25 sec'}) <- [:Relationship{name:' song length'}]- (m) return m.name limit 7"}, {"query": "I would like to list the top 5 main achievements of Zhongdaing.", "cypher": "match (:ENTITY{name:'Zhong'}) - [:Relationship{name:'Main achievements'}]-> (q) return q.name order by q.name limit 5"}, {"query": "I want you to tell me who's the most important person to have been president of the American Chemical Society.", "cypher": "match (:ENTITY{name:'President of the American Chemical Society'}) <- [:Relationship{name:'major achievement'}]- (p) return p.name order by p.name limit 1"}, {"query": "Do you know anything else besides being a university professor? Help me find 5 information in 2 layers.", "cypher": "match (:ENTITY{name:'Wang Sichuan'}) - [*1..2]-(p) where p.name <> 'University teacher' return p.name limit 5"}, {"query": "What are the songs in Chinese? Find 50 songs in order of their names.", "cypher": "match (:ENTITY{name:'Chinese'}) <- [:Relationship{name:'Language of song'}]- (mn) return mn.name order by mn.name limit 50"}, {"query": "What is the status of the Gay Circle's work in Jinjiang Literature City?", "cypher": "match (:ENTITY{name:'Gay Circle'}) --(q) with q order by q.name where q.name <> 'Jingjiang Literature City' return q.name"}, {"query": "I would like to know 5 messages from Miklinevicius Tomas weighing 75 kg.", "cypher": "match (n:ENTITY{name:'Miklinevicius Tomas'}) - [*1..4]->(x) where x.name <>'75 kg' return distinct x.name limit 5"}, {"query": "Can you introduce me to two films directed by Li Yan?", "cypher": "Match (n:ENTITY{name:'Lian'}) <- [:Relationship{name:'director'}]- (mn) return mn.name limit 2"}, {"query": "Can you list the 10 jobs that men do?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(n),(n) - [:Relationship{name:'occupation'}]->(q) return distinct q.name limit 10"}, {"query": "Where is the headquarters of Shandong Electric Group?", "cypher": "match (:ENTITY{name:'Sandong Electric Group Co. Ltd'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'General company'}]->(q) return distinct q.name"}, {"query": "I recommend 3 CPUs with 1GB of memory DDRII, not the Intel Cyano M220.", "cypher": "match (:ENTITY{name:'1GB DDRII'}) <- [:Relationship{name:'memory capacity'}]-(m) - [:Relationship{name:'CPU type'}]->(h) where h.name <> 'Intel Cyann M 220' return distinct h.name limit 3"}, {"query": "What do students who graduate from the Paris Higher School of Teaching do?", "cypher": "match (:ENTITY{name:'Paris Higher Teacher School'}) <- [:Relationship{name:'Graduate School'}]-(n) - [:Relationship{name:'Profession'}]->(p) return distinct p.name limit 1"}, {"query": "Can you tell me what the name of the waterfall is in foreign language and what is its sound?", "cypher": "match (:ENTITY{name:'watershed'}) - [:Relationship{name:'foreign language name'}]->(n) return n.name as name union all match (:ENTITY{name:'watershed'}) - [:Relationship{name:'sounding'}]->(m) return m.name as name"}, {"query": "Do you know anything about Keena?", "cypher": "match (n:ENTITY{name:'Kenna'}) --(x) return x.name"}, {"query": "Can you give me 10 specific points about Mercy College?", "cypher": "match (:ENTITY{name:'Mercy College'}) --(p) return distinct p.name limit 10"}, {"query": "I'm curious to know what else you know about Sensei besides her characteristic nature of being simple?", "cypher": "match (:ENTITY{name:' natural, quiet, warm, loving life'}) - [*1..2]-(p) where p.name <> 'sunset' return p.name limit 6"}, {"query": "In addition to publications, list three types of outsourced international service materials:", "cypher": "match (:ENTITY{name:' International service outsourcing specialized teaching material: service outsourcing'}) --(m) with m order by m.name where m.name <> ' publication' return distinct m.name limit 3"}, {"query": "Can you name five exhibitions that are being held in Jinan as a showcase city?", "cypher": "match (:ENTITY{name:'Jinan'}) <- [:Relationship{name:'Exhibition city'}]- (p) return p.name limit 5"}, {"query": "What is the synonym of the word \"sweet tears\"?", "cypher": "match (:ENTITY{name:'sweet'}) - [:Relationship{name:'sweet'}]->(m) return distinct m.name"}, {"query": "What else do you know about the Avangard-class strategic nuclear submarine, aside from the fact that it was British-made?", "cypher": "match (:ENTITY{name:' forward-class strategic nuclear submarine'}) - [*1..2]->(p) where p.name <> 'UK' return p.name limit 20"}, {"query": "How do you build a description of the Battle of the Eight Crystals in ten words?", "cypher": "match (:ENTITY{name:' Battle of the Eight Crystals'}) --(h) with h order by h.name return h.name limit 10"}, {"query": "A knowledgeable person can introduce 100 famous elementary math problems.", "cypher": "match (h:ENTITY{name:'100 famous elementary math problems'}) --(q) with q order by q.name return q.name limit 1"}, {"query": "The 10 211 schools are known for their departments other than the Department of Brewing and Biotechnology.", "cypher": "match (:ENTITY{name:'211'}) <- [:Relationship{name:'attributes'}]-(p),(p) - [:Relationship{name:'main department'}]->(q) where q.name <> 'department of beer and bioengineering' return distinct q.name limit 10"}, {"query": "Can you please find me two digital medical devices? Please introduce them separately.", "cypher": "match (:ENTITY{name:'digital detector'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 2"}, {"query": "In 10 words, summarize what you know about the 100 best real estate and landscapes in the publication?", "cypher": "match (:ENTITY{name:'100 best properties and landscapes'}) --(x) with x order by x.name where x.name <> 'publications' return x.name limit 10"}, {"query": "Can you give me five professional names of cultural figures?", "cypher": "match (:ENTITY{name:'cultural person'}) <- [:Tag{name:'tag'}]-(x) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 5"}, {"query": "I would like to know what the names of the books that are in the same language as the books on scientific method and high school physics are. What are the labels on each book, and I would like you to sort them by the number of labels in each book, from small to large.", "cypher": "match (n:ENTITY{name:'scientific method and solving high school physics problems'}) - [:Relationship{name:'language'}]->(:ENTITY) <- [:Relationship{name:'language'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you help me find out the Chinese names of people who are going to work in the US?", "cypher": "match (:ENTITY{name:'go to work in the United States'}) - [:Relationship{name:'Chinese name'}]-> (p) with p order by p.name return p.name"}, {"query": "What is there to say about the awards hosted by China Central Television?", "cypher": "match (:ENTITY{name:'China Central Television'}) <- [:Relationship{name:'undertake'}]- (x) return distinct x.name"}, {"query": "Can you check out the five comedy movies? When are they coming out?", "cypher": "match (:ENTITY{name:'comedy film'}) <- [*]-(m), (m) - [:Relationship{name:'release time'}]->(n) return m.name, n.name limit 5"}, {"query": "What is the nitrogen dioxide content of the bedrock?", "cypher": "match (:ENTITY{name:'base rock'}) - [:Relationship{name:'nitrogen dioxide content'}]->(m) return distinct m.name"}, {"query": "Help me find five species of plants in the genus Yellow-bellied.", "cypher": "match (:ENTITY{name:'genus'}) <- [:Relationship{name:'genus'}]-(m) return distinct m.name limit 5"}, {"query": "Do you know which games have been released on 2015-03-28?", "cypher": "match (:ENTITY{name:'2015-03-28'}) <- [:Relationship{name:'release date'}]- (q) return distinct q.name"}, {"query": "I wonder how Zhou Zhou is, can you introduce me?", "cypher": "match (:ENTITY{name:'spoon'}) --(n) return n.name order by n.name"}, {"query": "Tell me about the characteristics of 10 $100 shopping-related labels.", "cypher": "match (p:ENTITY{name:'100 bucks shopping'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 10"}, {"query": "Can you provide me with 5 tips from Ambani Boniface, a Kenyan?", "cypher": "match (n:ENTITY{name:'Ambani Boniface'}) - [*]->(x) where x.name<>'Kenya' return distinct x.name limit 5"}, {"query": "Do you know which terrorist attack left 64 people seriously injured?", "cypher": "match (p:ENTITY{name:'64 people'}) <- [:Relationship{name:'heavy injury'}]- (x) return x.name"}, {"query": "In addition to being a producer, what other identity does Karen Shahnazaroff have?", "cypher": "match (:ENTITY{name:'Karen Shahnazaroff'}) <- [:Relationship{name:'Chinese name'}]-(q),(q) - [:Relationship{name:'profession'}]->(h) where h.name <> 'producer' return distinct h.name limit 1"}, {"query": "Can you recommend two other famous places in Fuwenpo besides the Qing Tibet Road and the Tea Ca Salt Lake?", "cypher": "match (n:ENTITY{name:'Tsowenpo'}) - [:Relationship{name:'Famous attractions'}]->(h) where h.name <> 'Qing Tibet Highway' and h.name <> 'Tea Ka Salt Lake' return distinct h.name limit 2"}, {"query": "I wonder who the 152 year old dwarf with the number \"French\" is?", "cypher": "match (p:ENTITY{name:' foreign numbered shadow dwarf shadow'}) <--(x) -->(q:ENTITY{name:'152cm'}) return x.name"}, {"query": "I want to know about the company in the 4 tier relationship of the organization, the company in the 4 tier relationship of the company, the company in the 4 tier relationship of the company, the company in the 4 tier relationship of the company.", "cypher": "match (n:ENTITY{name:'Nepal County Magdeburg Transmission Equipment Manufacturing Limited'}) - [*1..4]->(x) where x.name <> 'organizing entity' return distinct x.name"}, {"query": "Tell me about the three labels of the 101 Spotted Dogs puzzle.", "cypher": "match (:ENTITY{name:'101 spotted dog easy puzzle'}) --(x) with x order by x.name return x.name limit 3"}, {"query": "Do you know the 5 messages of cultural personality Yulin?", "cypher": "match (n:ENTITY{name:'Julian'}) - [*]->(x) where x.name <> 'cultural person' return distinct x.name limit 5"}, {"query": "Can you recommend 7 novels that are available on the Chinese website?", "cypher": "match (:ENTITY{name:' starting point Chinese web'}) <- [:Relationship{name:' connecting platform'}]- (p) return p.name limit 7"}, {"query": "Can you name three types of jobs that Chinese people do?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(m),(m) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 3"}, {"query": "Which planet was discovered in July 2014?", "cypher": "match (:ENTITY{name:'July 2014'}) <- [:Relationship{name:'Discovered date'}]- (x) return x.name"}, {"query": "I have four painters to give me, and tell me where they were born.", "cypher": "match (:ENTITY{name:'painter'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name, n.name limit 4"}, {"query": "What is the abbreviation for artificial life?", "cypher": "match (:ENTITY{name:'artificial life'}) - [:Relationship{name:'abbreviated'}]->(n) return n.name"}, {"query": "I want six more pieces of information on Jordan Hamilton in the US in Level 3 .", "cypher": "match (:ENTITY{name:' Jordan Hamilton [American basketball player]'}) - [*1..3]-(p) where p.name <> 'United States' return p.name limit 6"}, {"query": "The following is a list of personal profiles of Heil Yann in the two-tiered relationship:", "cypher": "match (n:ENTITY{name:'Heil Yann'}) - [:Relationship*1..2]->(x) where x.name<>'Heil Yann' return distinct x.name"}, {"query": "Have you heard of Hongma Middle School?", "cypher": "match (n:ENTITY{name:'Hong Ma Secondary School'}) --(x) return x.name"}, {"query": "How to find personal information about a foreigner named Sandri Lori in a three-tier relationship?", "cypher": "match (n:ENTITY{name:'Sandri Lori'}) - [*1..3]->(x) where x.name <> 'foreign name' return distinct x.name"}, {"query": "Please tell me about the two countries that have retired their weapons and when they will be retired.", "cypher": "match (:ENTITY{name:' has retired'}) <--(m), (m) - [:Relationship{name:' time in service'}]->(n) return m.name, n.name limit 2"}, {"query": "The author of the painting, Liu Chunmen, has five other works of the country's artist.", "cypher": "match (:ENTITY{name:'Country painter'}) <- [:Relationship{name:'profession'}]-(m) - [:Relationship{name:'representative work'}]->(p) where p.name <> 'Jingle Bells' return distinct p.name limit 5"}, {"query": "What are the categories and major departments of the Vocational Technology College in Bursa?", "cypher": "match (:ENTITY{name:'Bushaman Vocational Technical College'}) - [:Relationship{name:'category'}]->(n) return n.name as name union all match (:ENTITY{name:'Bushaman Vocational Technical College'}) - [:Relationship{name:'main faculty'}]->(m) return m.name as name"}, {"query": "Share the representative work of Kyra Kennedy.", "cypher": "match (:ENTITY{name:'Kara Kennedy'}) - [:Relationship{name:'represents work'}]-> (n) return n.name order by n.name"}, {"query": "I'm not sure if you can list the actors who played the role of the exotic chicken.", "cypher": "match (:ENTITY{name:'square'}) --(m) return m.name skip 2"}, {"query": "How can you express yourself in one sentence, when you are being insulted and wronged?", "cypher": "match (:ENTITY{name:'defended, wronged'}) --(x) return distinct x.name"}, {"query": "I'm not sure what weapons have a range of 5,000 meters.", "cypher": "match (:ENTITY{name:'5000 meters'}) <- [:Relationship{name:'range'}]- (x) return distinct x.name"}, {"query": "What is the BCD-225DC?", "cypher": "match (x:ENTITY{name:'BCD-225DC'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'product category'}]->(p) return distinct p.name"}, {"query": "The director of LoveLive! has also directed three animated films.", "cypher": "match (:ENTITY{name:'Aquarius'}) <- [:Relationship{name:'Astrology'}]-(q),(q) - [:Relationship{name:'Astrology'}]->(h) where h.name <> 'LoveLive!' return distinct h.name limit 3"}, {"query": "The main department of the Chemical Faculty is the Department of Chemical Engineering.", "cypher": "match (:ENTITY{name:'chemical school'}) - [:Relationship{name:'main school'}]-> (p) return p.name skip 4"}, {"query": "Find out who is in the six comedy films.", "cypher": "match (:ENTITY{name:'comedy film'}) <- [*]-(m), (m) - [:Relationship{name:'starring'}]->(n) return distinct m.name, n.name limit 6"}, {"query": "Can you give me an example of what is representative of the work of someone born on September 14, 1988?", "cypher": "match (:ENTITY{name:'14 September 1988'}) <- [:Relationship{name:'date of birth'}]-(h),(h) - [:Relationship{name:'represents work'}]->(p) return p.name order by p.name limit 1"}, {"query": "Is there a person named Liu Xiaobo?", "cypher": "match (n:ENTITY{name:'Liao Xiaofeng'}) where n is not null return 1"}, {"query": "Please tell me what kind of relationships are in the five levels of the novel High School Musical.", "cypher": "match path=(n) <- [:Relationship*5]-(p:ENTITY{name:'high school gigs'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I need you to tell me which two acts will be represented at the 2015 Strawberry Concert in Guangzhou, besides Baby Sorry and The Frontline of Unrequited Love.", "cypher": "match (n:ENTITY{name:'2015 Strawberry Cantonese Concert'}) - [:Relationship{name:'represents works'}]->(h) where h.name <> 'baby sorry' and h.name <> 'unrequited front league' return distinct h.name limit 2"}, {"query": "How much is the price of the ticket?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'Visitation level'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'Ticket price'}]->(m) return m.name as name"}, {"query": "What profession does a herder do besides being a scribe?", "cypher": "match (x:ENTITY{name:'crowd'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'profession'}]->(h) where h.name <> 'Book of Pharaohs' return distinct h.name limit 1"}, {"query": "I'm not sure if I'm forgetting or remembering to generalize the information in the two-tier relationship.", "cypher": "match (n:ENTITY{name:' is forgotten or remembered'}) - [:Relationship*1..2]->(x) where x.name<>'Great Africa' return distinct x.name"}, {"query": "Please help me find out which of the four counties in the north of the river are under the jurisdiction of the government.", "cypher": "match (:ENTITY{name:'Jiangbei four counties'}) - [:Relationship{name:'sub-district'}]->(n) return n.name"}, {"query": "Please provide me with the translated works of Ho Wen-ning from the Battle of Britain to the Battle of Crete.", "cypher": "match (n:ENTITY{name:'from the Battle of Britain to the Battle of Crete'}) - [:Relationship*1..3]->(x) where x.name<>'Ho Wenning' return distinct x.name"}, {"query": "I'm looking for two films from Universal Pictures, where is their distribution company?", "cypher": "match (:ENTITY{name:'Universal Cinema'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'Distributing company'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Can you tell me five things you know about this person, Walter Lippmann, other than being American, on the second level?", "cypher": "match (:ENTITY{name:'Walt Lippman'}) - [*1..2]->(p) where p.name <> 'United States' return distinct p.name limit 5"}, {"query": "The publication date is 2008 and the other 6 information in the 4 layers of the book are about the design and optimization of the passive ultra-high frequency RFID system.", "cypher": "match (:ENTITY{name:'Active design and optimization of ultra-high frequency RFID systems'}) - [*1..4]-(p) where p.name <> '2008/9/1' return distinct p.name limit 6"}, {"query": "I want to publish the 2008 series of experiments in modern communication technology, guiding the other seven pieces of information in the three layers of this book.", "cypher": "match (:ENTITY{name:' Modern communication technology series experimental guidance'}) - [*1..3]-(p) where p.name <> '2008/9/1' return distinct p.name limit 7"}, {"query": "You know the original song is the best thing Li Keqi said.", "cypher": "match (:ENTITY{name:' the best word'}) - [*1..2]-(p) where p.name <> 'Lee Min Ho' return p.name limit 4"}, {"query": "In addition to being a graduate tutor, what other professions are there that people call Anhui?", "cypher": "match (:ENTITY{name:'Anhui'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'profession'}]->(m) where m.name <> 'graduate tutor' return distinct m.name limit 3"}, {"query": "I have four weapons and a time limit for their service.", "cypher": "match (:ENTITY{name:' weapon equipment'}) <--(m), (m) - [:Relationship{name:' time of participation'}]->(n) return m.name, n.name limit 4"}, {"query": "Is there a technical school whose famous alumnus is Liu Wenhe, and does it have other famous alumni?", "cypher": "match (:ENTITY{name:'technology'}) <- [:Relationship{name:'school type'}]-(p) - [:Relationship{name:'known alumni'}]->(h) where h.name <> 'Relationship' return distinct h.name limit 3"}, {"query": "I see that Zhejiang Feraili Furniture Manufacturing Limited is a limited liability company and registered with the Market Supervision Authority of Kashan County, please give me three more information about this company.", "cypher": "match (n:ENTITY{name:'Zhejiang Flaherty Furniture Manufacturing Limited'}) -->(h) with h order by h.name where h.name <> 'Limited liability company' and h.name <> 'Kashian County Market Supervision Administration' return h.name limit 3"}, {"query": "What are the three nicknames of Tarlac or Tarlak?", "cypher": "match (:ENTITY{name:'Tarlac or Tarlak'}) <- [:Relationship{name:'foreign name'}]-(h),(h) - [:Relationship{name:'alias'}]->(n) return distinct n.name limit 3"}, {"query": "How do you read the Chinese?", "cypher": "match (:ENTITY{name:''}) - [:Relationship{name:'spelling'}]->(m) return distinct m.name"}, {"query": "Do you know what songs EQ MUSIC has released?", "cypher": "match (:ENTITY{name:'EQ MUSIC'}) <- [:Relationship{name:' record company'}]- (h) return distinct h.name"}, {"query": "How do you read the number 1470?", "cypher": "match (:ENTITY{name:'1470 person'}) --(m) with m order by m.name return m.name"}, {"query": "What are the characteristics of technology-intensive companies that Rowe lists?", "cypher": "match (q:ENTITY{name:'technology-intensive enterprise'}) <-[:Relationship{name:'Chinese name'}]-(n),(n) -[:Relationship{name:'characteristics'}]->(p) return distinct p.name limit 10"}, {"query": "Apart from Taeyeon 2: Heroes Rise, which five films were directed by graduates of Beijing Film Academy?", "cypher": "match (:ENTITY{name:'Beijing Film Academy'}) <- [:Relationship{name:'Graduate School'}]-(m),(m) - [:Relationship{name:'Major work'}]->(p) where p.name <> 'Taed2: Hero Rise' return distinct p.name limit 5"}, {"query": "What is the name of the crash that happened on December 7, 2016?", "cypher": "match (:ENTITY{name:'December 7, 2016'}) <- [:Relationship{name:'time of accident'}]- (x) return x.name"}, {"query": "Do you have any reservations about the Internet product 0517 Net?", "cypher": "match (:ENTITY{name:'0517net'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'Internet product' return p.name"}, {"query": "What are the types of people who have multiple cases of TB and where do they need to be seen?", "cypher": "match (:ENTITY{name:' intestinal TB'}) - [:Relationship{name:' multiple sclerosis'}]->(n) return n.name as name union all match (:ENTITY{name:' intestinal TB'}) - [:Relationship{name:' inpatient department'}]->(m) return m.name as name"}, {"query": "What are the names of the schools with the same school type as Ma'an Primary School in Tohai County and what are their labels? Please show me how many of them are in order of number of labels.", "cypher": "match (n:ENTITY{name:'Mao Nan Primary School'}) - [:Relationship{name:'school type'}]->(:ENTITY) <- [:Relationship{name:'school type'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC "}, {"query": "What are the names of the labels of the people who are studying in the same school as Yuri Ryo?", "cypher": "match (n:ENTITY{name:'true'}) - [:Relationship{name:'school'}]->(:ENTITY) <-[:Relationship{name:'school'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "I would like to know what are the reports of the same issuing unit as the Coal Mining Safety Quality Standardization Management System? What are the labels of these reports? Please sort by the number of labels of each report from small to large.", "cypher": "match (n:ENTITY{name:'Coal Mine Safety Quality Standardization Management System'}) - [:Relationship{name:' release unit'}]->(:ENTITY) <- [:Relationship{name:' release unit'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you name 10 important events related to football?", "cypher": "match (:ENTITY{name:' football'}) <- [:Relationship{name:' sporting project'}]-(n),(n) - [:Relationship{name:' important event'}]->(x) return distinct x.name limit 10"}, {"query": "What was the announcement made by the government of China on June 5, 2014?", "cypher": "match (:ENTITY{name:'June 5, 2014'}) <- [:Relationship{name:'release date'}]- (m) return m.name limit 4"}, {"query": "The people of which nation are the descendants of the August people?", "cypher": "match (:ENTITY{name:'June'}) - [:Relationship{name:'at the time'}]->(n) return n.name as name union all match (:ENTITY{name:'June'}) - [:Relationship{name:'ethnic group'}]->(m) return m.name as name"}, {"query": "Do you know the country of Slovenia? Can you help me find three people from this country and introduce them?", "cypher": "match (:ENTITY{name:'Slovenia'}) <- [*]-(m), (m) - [:Describe{name:'describe'}]->(n) return distinct m.name, n.name limit 3"}, {"query": "The address of the company in Shenyang is?", "cypher": "match (p:ENTITY{location:' Shenyang'}) return p.name"}, {"query": "The name is derived from the name of the person from Liang Garden in Handei Liang State. Do you know the name of this person?", "cypher": "match (:ENTITY{name:'Liang Garden of Han Dynasty'}) <-[:Relationship{name:'name is derived'}]-(n) -[:Relationship{name:'other name'}]->(m) return m.name order by m.name limit 10"}, {"query": "Who were born in Sichuan and graduated from the former Sichuan Medical School (in 1955)?", "cypher": "match (:ENTITY{name:'former Sichuan Medical College ((1955) '}) <-[:Relationship{name:'graduation college'}]-(m), (m) -[:Relationship{name:'place of birth'}]->(n) where n.name='Sichuan Chinto' return m.name"}, {"query": "Did you get a message from the 1968 crash of a B-52 at Tuolumne Air Force Base on January 21, 1968?", "cypher": "match (:ENTITY{name:'1968 Tuol Air Base B-52 crash'}) --(n) with n order by n.name where n.name <> '21 January 1968' return n.name limit 1"}, {"query": "Can you find me three books on yoga and their publisher?", "cypher": "match (:ENTITY{name:'series'}) <-[:Tag{name:'series'}]-(h),(h) -[:Relationship{name:'publisher'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "We're talking about the sky-higher ones in detail?", "cypher": "match (:ENTITY{name:'Template:Details'}) --(x) with x order by x.name return x.name"}, {"query": "I recommend another work by Sun An-woo that is not my anti-war work.", "cypher": "match (:ENTITY{name:'Sun Anhui'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'representative work'}]->(q) where q.name <> 'Fuck my anti-war chick' return distinct q.name limit 1"}, {"query": "Please help me find three tofu dishes with ingredients.", "cypher": "match (:ENTITY{name:'tofu'}) <--(m), (m) - [:Relationship{name:'tofu'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Give me two composers, where did they both graduate?", "cypher": "match (:ENTITY{name:'composer'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'graduate college'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Help me find a song from the Leslie album.", "cypher": "match (:ENTITY{name:'Leslie'}) <- [:Relationship{name:' belongs to album'}]-(m) return distinct m.name"}, {"query": "Can you tell me what are the categories of cabbage? Can you tell me five?", "cypher": "match (n:ENTITY{name:'soup'}) <-[:Relationship{name:'class'}]- (mn) return mn.name limit 5"}, {"query": "What do you know about the 100 most successful career plans?", "cypher": "match (m:ENTITY{name:'100 successful career plans'}) --(p) with p order by p.name return p.name"}, {"query": "What are five personal details about football legend Waheed Hussein Ali?", "cypher": "match (n:ENTITY{name:'Waheed Hussein Ali'}) - [*]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "Please tell me what the heavy rains were on May 19th and 24th, 2015?", "cypher": "match (:ENTITY{name:'May 19-24th, 2015'}) <- [:Relationship{name:'time of occurrence'}]- (p) return distinct p.name"}, {"query": "Help me find a plant in the orchid family that grows in Guangxi", "cypher": "match (:ENTITY{name:'Canton'}) <- [:Relationship{name:'distribution area'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='branch' return distinct m.name"}, {"query": "What are the three professions of Chen Wei?", "cypher": "match (:ENTITY{name:'Chen Wei'}) <- [:Relationship{name:'alias'}]-(h),(h) - [:Relationship{name:'profession'}]->(p) return distinct h.name limit 3"}, {"query": "What are the mainland gaming platforms? Can you list 5?", "cypher": "match (:ENTITY{name:'continent'}) <- [:Relationship{name:'region'}]-(q) - [:Relationship{name:'game platform'}]->(m) return m.name skip 2 limit 5"}, {"query": "Help me find five plants that make the genus Cucumber.", "cypher": "match (:ENTITY{name:'making the family'}) <- [:Relationship{name:'family'}]-(m) return distinct m.name limit 5"}, {"query": "Help me find 10 football players.", "cypher": "match (:ENTITY{name:'footballer'}) --(x) return distinct x.name limit 10"}, {"query": "Can you find all the information about Agent White?", "cypher": "match (n:ENTITY{name:'agent white'}) --(x) return x.name"}, {"query": "Please share with me the five tags related to the cross-country skiing competition at the 1924 Winter Olympics.", "cypher": "match (:ENTITY{name:'1924 Winter Olympics cross-country skiing competition'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 5"}, {"query": "Have you heard the story of the Torah?", "cypher": "match (n:ENTITY{name:'the legend of the sun god'}) where n is not null return 1"}, {"query": "I would like to know which accidents resulted in four injuries?", "cypher": "match (:ENTITY{name:'4 people injured'}) <- [:Relationship{name:'accidentally injured'}]- (m) return distinct m.name"}, {"query": "Give me two physicists, what are their main achievements?", "cypher": "match (:ENTITY{name:'physician'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:'main achievement'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "I'm not sure what the name of the club is, but I'm sure it's a good one.", "cypher": "match (:ENTITY{name:'EXO'}) <- [:Relationship{name:' team'}]- (q) return distinct q.name"}, {"query": "Do you have two tags for county playoffs, but not natural and historical?", "cypher": "match (n:ENTITY{name:'containing county elimination'}) - [:Tag{name:'tag'}]->(h) with h order by h.name where h.name <> 'natural' and h.name <> 'history' return h.name limit 2"}, {"query": "The Bangkok-educated director is also interested in his five representative films, in addition to the newest beauty pageant.", "cypher": "match (:ENTITY{name:'Bangkok University'}) <- [:Relationship{name:'Graduate School'}]-(x) - [:Relationship{name:'representative work'}]->(m) where m.name <> 'New Mexico census' return distinct m.name limit 5"}, {"query": "What is the name of the American Green Building Council?", "cypher": "match (n:ENTITY{name:'American Green Building Translation'}) <- [:Relationship{name:'green book name'}]- (q) return q.name"}, {"query": "I'm not sure if you're familiar with the work of James Hutter.", "cypher": "match (:ENTITY{name:' James Hoot'}) - [:Relationship{name:'represents work'}]-> (q) return q.name skip 1"}, {"query": "What plants have Latin names? Name 5 of them.", "cypher": "match (:ENTITY{name:'plant'}) <--(m), (m) - [:Relationship{name:'Latin name'}]->(n) where n is not null return distinct m.name limit 5"}, {"query": "Please help me see if there are any other Korean names, don't say too many, 10 is enough.", "cypher": "match (:ENTITY{name:'North Korean'}) <- [:Relationship{name:'ethnicity'}]-(p),(p) - [:Relationship{name:'alias'}]->(m) return distinct m.name limit 10"}, {"query": "Can you recommend 5 of the novels in the series?", "cypher": "match (:ENTITY{name:'connected'}) <- [:Relationship{name:'connected status'}]- (h) return distinct h.name limit 5"}, {"query": "Can you tell us about the BBC British History book?", "cypher": "match (:ENTITY{name:'(BBC) British History'}) --(p) with p order by p.name where p.name <> ' publication' return p.name"}, {"query": "What are the main ingredients of the 10 desserts?", "cypher": "match (:ENTITY{name:' dessert'}) <--(m), (m) - [:Relationship{name:' main ingredient'}]->(n) return m.name, n.name limit 10"}, {"query": "Can you name the games that are held at the Henan River Liang Stadium?", "cypher": "match (:ENTITY{name:'Henan River Stadium'}) <- [:Relationship{name:'Holding venue'}]- (m) return distinct m.name"}, {"query": "I'm not sure if you're familiar with this guy, but I'm not sure if you're familiar with this guy, but I'm not sure if you're familiar with this guy, but I'm not sure if you're familiar with this guy.", "cypher": "match (:ENTITY{name:' University of the South'}) <- [:Relationship{name:' Graduate School'}]-(q) - [:Relationship{name:' Profession'}]->(n) return n.name order by n.name limit 5"}, {"query": "Where is the West Tai Mountains?", "cypher": "match (:ENTITY{name:'West Thailand'}) - [:Relationship{name:'geographical location'}]->(m) return distinct m.name"}, {"query": "What is the chemical formula for quartz? Where is it from?", "cypher": "match (:ENTITY{name:'Quadstone'}) - [:Relationship{name:'chemical composition:'}]->(n) return n.name as name union all match (:ENTITY{name:'Quadstone'}) - [:Relationship{name:'origin'}]->(m) return m.name as name"}, {"query": "Who is the chairman of the board of directors of VFW Holding Group?", "cypher": "match (:ENTITY{name:'Chairman of the Board of Directors of the Van Foote Holding Group'}) <- [:Relationship{name:'Career'}]-(m) return distinct m.name"}, {"query": "Did you have trouble finding any information related to the Three Evil Servants of the Chocolate Comedy Opera, Non-Juvenile Fever?", "cypher": "match (:ENTITY{name:'the evil maid from the comedy opera'}) --(m) with m order by m.name where m.name <> 'younger fever' return distinct m.name limit 3"}, {"query": "Is there a problem with online lending platforms?", "cypher": "match (:ENTITY{name:' online lending platform'}) <--(n) return n.name"}, {"query": "What is the brand of the company headquartered in South Shields?", "cypher": "match (:ENTITY{name:'South Shields'}) <- [:Relationship{name:'Company headquarters'}]- (n) return distinct n.name"}, {"query": "Can you tell me about the profession of this Chinese person?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(x),(x) - [:Relationship{name:'profession'}]->(p) return p.name skip 1 limit 1"}, {"query": "Can you describe what is the relationship between a politician and a tier 3 label?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'political figure'}) RETURN distinct n.name limit 3"}, {"query": "In the meantime, I would like to ask you to introduce me to the five works in the three-layer relationship of the book Autumn and Night in the book of Yanda.", "cypher": "match (n:ENTITY{name:'Autumn night even into its three'}) - [*]->(x) where x.name <> '\u5143' return distinct x.name limit 5"}, {"query": "Do you know what Miranda Hart does for a living?", "cypher": "match (:ENTITY{name:'Miranda Hart'}) <- [:Relationship{name:'Chinese name'}]-(h) - [:Relationship{name:'profession'}]->(m) return distinct m.name limit 1"}, {"query": "Do you have any information about the movie The Woman Who Created Science Fiction?", "cypher": "match (:ENTITY{name:'Woman created by science geek'}) --(q) return q.name order by q.name limit 5"}, {"query": "What are the free places to visit in Yunnan Province?", "cypher": "match (:ENTITY{name:'Yunnan Province'}) <- [:Relationship{name:' city'}]-(m), (m) - [:Relationship{name:' ticket price'}]->(n) where n.name='free' return distinct m.name"}, {"query": "The first thing I did was to find out about Tang's work and send her a profile of the work within the three-tier relationship with Liu Wenzhou.", "cypher": "match (n:ENTITY{name:'submitted to you by Wenzhou'}) - [:Relationship*1..3]->(x) where x.name<>'\u5510' return distinct x.name"}, {"query": "What is the grey tricolor?", "cypher": "Match (:ENTITY{name:' grey [color]'}) - [:Relationship{name:' tricolor'}]->(n) return n.name"}, {"query": "Do you know Team Chaotix? Can you tell me about him?", "cypher": "match (:ENTITY{name:'Team Chaotix'}) --(q) return distinct q.name"}, {"query": "Can you tell me 10 messages from Hamid Torabpour please?", "cypher": "match (:ENTITY{name:'Hamid Torabpour'}) --(n) return distinct n.name limit 10"}, {"query": "What other awards have been given to films classified as drama, adventure, war, biography, besides the Oscar for Best Picture?", "cypher": "match (:ENTITY{name:'Story, adventure, war, biography'}) <-[:Relationship{name:'type'}]-(q),(q) -[:Relationship{name:'main award'}]->(h) where h.name <> 'Oscar for best picture' return distinct h.name limit 1"}, {"query": "The model who won the TNT 2012 Basketball Masters, graduated from Beijing Fashion Design Academy and has also achieved three things.", "cypher": "match (:ENTITY{name:'Beijing Costume Design Academy'}) <- [:Relationship{name:' Graduate School'}]-(m),(m) - [:Relationship{name:' Major achievements'}]->(p) where p.name <> 'TNT2012 Ballistic Masters' return distinct p.name limit 3"}, {"query": "Tell me, what are the 10 major departments in the public universities besides the department of information engineering?", "cypher": "match (:ENTITY{name:'public university'}) <- [:Relationship{name:'category'}]-(n) - [:Relationship{name:'main faculty'}]->(h) where h.name <> 'information engineering faculty' return distinct h.name limit 10"}, {"query": "Help me find 10 copies of Ming art.", "cypher": "match (:ENTITY{name:'min'}) <- [:Relationship{name:'period'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='artwork' return distinct m.name limit 3"}, {"query": "Can you recommend a top education and training comprehensive registration platform?", "cypher": "match (:ENTITY{name:' first class education training comprehensive registration platform'}) <- [:Relationship{name:' status'}]- (h) return h.name"}, {"query": "Can you tell me about the movie The Legend of Zelda: Breath of the Wild 42?", "cypher": "match (:ENTITY{name:'42 legendary'}) --(p) return p.name order by p.name"}, {"query": "I'm the devil/nightmare hut 2 level relationship inside the work brief?", "cypher": "match (n:ENTITY{name:' aliens are the devil/nightmare cottage'}) - [:Relationship*1..2]->(x) where x.name <> 'nightmare cottage chestnut series' return distinct x.name"}, {"query": "What is the profession of a party member?", "cypher": "match (:ENTITY{name:'CPC'}) <- [:Relationship{name:'party'}]-(m),(m) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 1"}, {"query": "The five sites are located where?", "cypher": "match (:ENTITY{name:' site'}) <- [*]-(m), (m) - [:Relationship{name:' city'}]->(n) return distinct m.name, n.name limit 5"}, {"query": "How do you define the New Thought writing paradigm in primary school?", "cypher": "match (:ENTITY{name:' secondary new thinking essay example'}) --(q) with q order by q.name return q.name"}, {"query": "The 38-degree box product with the language label is?", "cypher": "match (:ENTITY{name:'38 degree machine box'}) --(q) with q order by q.name where q.name <> 'language' return q.name"}, {"query": "What exhibition is open from May 27 to May 29, 2011?", "cypher": "match (:ENTITY{name:'2011.05.27 to 2011.05.29'}) <- [:Relationship{name:' exhibition time'}]- (h) return h.name"}, {"query": "Can you tell me something about the ammonia film?", "cypher": "match (:ENTITY{name:'aniline card'}) --(h) return distinct h.name limit 1"}, {"query": "What do you know about the social event of the gas explosion at the Bloomberg Hotel on October 14?", "cypher": "match (:ENTITY{name:'10.14 Bloomberg Hotel gas explosion accident'}) --(x) with x order by x.name where x.name <> 'social event' return x.name"}, {"query": "The incident was the last to rule out his murder, what name comes up?", "cypher": "match (:ENTITY{name:' excluding him'}) <- [:Relationship{name:' accident conclusion'}]- (q) return distinct q.name"}, {"query": "The explosion was at a radius of 50 meters, do you know what it was?", "cypher": "match (:ENTITY{name:'50m square'}) <- [:Relationship{name:'scale'}]- (q) return q.name"}, {"query": "Did you say you could come up with five 3-L-threonine-alanine-phosphate properties labels?", "cypher": "match (p:ENTITY{name:'3-methacrylate-L-aniline'}) - [:Tag{name:'label'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "I would like to know what else is there to know about Tianjin Sk Pharmaceuticals Limited in China, other than that it is based in Tianjin? Please help me find 10 information in 3 layers related to this company.", "cypher": "match (:ENTITY{name:' Tianjin Sk Pharmaceutical Co., Ltd. of China and the United States of America'}) - [*1..3]-(p) where p.name <> 'Chinese Tianjin' return p.name limit 10"}, {"query": "What other songs has the singer of the song \"Candy\" sung?", "cypher": "match (:ENTITY{name:'industry figure'}) <- [:Tag{name:'tag'}]-(m) - [:Relationship{name:'represented work'}]->(x) where x.name <> 'thousand paper bags' return distinct x.name limit 1"}, {"query": "Do you know what kind of programs are available for home improvement projects?", "cypher": "match (:ENTITY{name:' home decor'}) <- [:Relationship{name:' project'}]- (p) return distinct p.name"}, {"query": "I want 193 pages of industrial design for higher education: information within the two-tier relationship that design forms the basis of.", "cypher": "match (n:ENTITY{name:' Higher education institution industrial design planning teaching material: design forms the basis'}) - [:Relationship*2]->(x) where x.name <>'193 page' return distinct x.name"}, {"query": "I'm not sure what you mean by \"the one who is the most important person in the world to me\".", "cypher": "match (p:ENTITY{name:'DORA.K'}) <- [:Relationship{name:'foreign language name'}]-(x),(x) - [:Relationship{name:'represents work'}]->(n) return n.name order by n.name limit 5"}, {"query": "What are the public secondary schools in Beijing?", "cypher": "match (:ENTITY{name:'public secondary school'}) <- [:Relationship{name:'category'}]-(m), (m) - [:Relationship{name:'area'}]->(n) where n.name='China Beijing' return distinct m.name"}, {"query": "What is the name of the book number 2391347?", "cypher": "match (:ENTITY{name:'2391347'}) <- [:Relationship{name:'book number'}]- (n) return distinct n.name"}, {"query": "Can you please tell me the full name of a football match?", "cypher": "match (:ENTITY{name:' UEFA Euroleague'}) <- [:Relationship{name:' type of event'}]- (n) return distinct n.name"}, {"query": "What is the BE30 question?", "cypher": "match (:ENTITY{name:'BE30 problem'}) --(h) with h order by h.name return h.name"}, {"query": "Do you know what games were held in Guangzhou, China?", "cypher": "match (:ENTITY{name:'China Guangzhou'}) <- [:Relationship{name:'host city'}]- (p) return p.name"}, {"query": "The Chinese government has announced that the Chinese government will be closing the border between China and China.", "cypher": "match (n:ENTITY{name:'Zhanjiang Walkway'}) - [*1..4]->(x) where x.name <>'zhanjiang' return distinct x.name"}, {"query": "Please tell me if the following actress Ridge Alexander has a profile in the 3 levels relationship?", "cypher": "match (n:ENTITY{name:'Ritz Alexander'}) - [*1..3]->(x) where x.name <> 'actor' return distinct x.name"}, {"query": "The story of the York pig, ISBN 9787221222320, 7221222329.", "cypher": "match (n:ENTITY{name:'The story of the York pig: I want to eat honey'}) - [:Relationship*1..2]->(x) where x.name <>'9787221222320, 7221222329' return distinct x.name"}, {"query": "I wonder where the Madison area is now?", "cypher": "match (:ENTITY{name:'Madison area'}) --(q) return q.name order by q.name"}, {"query": "Did you have trouble recommending a BMW?", "cypher": "match (:ENTITY{name:'BMW'}) <- [:Relationship{name:' company'}]- (n) return n.name"}, {"query": "What is the term used by the Chinese for a friend from their teenage years?", "cypher": "match (:ENTITY{name:' used to refer to a friend from teenage years'}) <- [:Relationship{name:' interpretation'}]-(m), (m) - [:Relationship{name:' origin'}]->(n) where n.name='Relationship' return distinct m.name"}, {"query": "The following is a detailed description of the four-layer relationship between the medical field of bronchoscopy and extractive surgery.", "cypher": "match (n:ENTITY{name:'Bio-tube examination and foreign object removal'}) - [*1..4]->(x) where x.name <> 'medicine' return distinct x.name"}, {"query": "How many people live in Karenz? Where are they distributed?", "cypher": "match (:ENTITY{name:'Karenzin'}) - [:Relationship{name:'number'}]->(n) return n.name as name union all match (:ENTITY{name:'Karenzin'}) - [:Relationship{name:'address'}]->(m) return m.name as name"}, {"query": "What is the Chinese name of the author of the novel?", "cypher": "match (:ENTITY{name:' late-born'}) <- [:Relationship{name:' author'}]-(m) - [:Relationship{name:' Chinese name'}]->(q) return distinct q.name limit 1"}, {"query": "I recommend another career besides being a famous Chinese musician.", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(p) - [:Relationship{name:'profession'}]->(n) where n.name <> 'known musician' return distinct n.name limit 1"}, {"query": "I'm wondering if the chemical description of HN-300 acrylic resin has this double-sided structure?", "cypher": "match (x:ENTITY{name:'HN-300 Acrylic Aluminium Structure is double-sided'}) <- [:Relationship{name:' bio'}]- (n) return n.name"}, {"query": "What happened to the 1.28 Guangzhou subway construction collapse at 16:40 on January 28, 2013?", "cypher": "match (:ENTITY{name:'1.28 Guangzhou underground construction collapse accident'}) --(p) with p order by p.name where p.name <> '28 January 2013 at 16:40' return p.name"}, {"query": "What are the organizers of the Pudong Branch of the China International Trade Promotion Association in Shanghai? Can you name the top three?", "cypher": "match (:ENTITY{name:'China International Trade Promotion Association Shanghai Pudong Branch'}) <- [:Relationship{name:'hosting entity'}]- (x) return x.name order by x.name limit 3"}, {"query": "What events have been held in Philadelphia, USA?", "cypher": "match (:ENTITY{name:'Philippines'}) <- [:Relationship{name:'Holding place'}]- (p) return p.name"}, {"query": "Tell me who are the two-string international champions?", "cypher": "match (:ENTITY{name:' International champion in the double sculls'}) <--(n) return n.name"}, {"query": "Can you name five Chinese occupations?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(h) - [:Relationship{name:'profession'}]->(m) return distinct m.name limit 5"}, {"query": "Is there really a Yun Fungura?", "cypher": "match (n:ENTITY{name:'Nun Fujimura'}) where n is not null return 1"}, {"query": "Tell me, what is the main ingredient of the egg whites besides the egg whites and the cream?", "cypher": "match (n:ENTITY{name:'sweet milk egg cream'}) - [:Relationship{name:'sweet milk egg cream'}]->(h) where h.name <> 'sweet milk egg cream' and h.name <> 'sweet cream' return distinct h.name limit 2"}, {"query": "I want to know what is the 024 marriage network?", "cypher": "match (:ENTITY{name:'024 married net'}) --(h) with h order by h.name return h.name"}, {"query": "Can you find all the tags for 118321?", "cypher": "match (q:ENTITY{name:'118321'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "What was the name of the incident that occurred on 21 December 2017?", "cypher": "match (q:ENTITY{name:'December 21, 2017'}) <- [:Relationship{name:'event'}]- (m) return distinct m.name"}, {"query": "There is a novel called: Without this novel I found Without this novel This term is a misnomer Please delete this entry, this entry does not exist...", "cypher": "match (:ENTITY{name:' without this novel I found without this novel This term is a misnomer Please delete this entry, this entry does not exist...'}) <- [:Describe{name:' description'}]-(h) - [:Relationship{name:' Chinese name'}]->(m) return distinct m.name limit 1"}, {"query": "Help me find the five fish words next to each other.", "cypher": "match (:ENTITY{name:'fish'}) <- [:Relationship{name:'part'}]-(m) return distinct m.name limit 5"}, {"query": "Where is the headquarters of Good Day?", "cypher": "match (p:ENTITY{name:'good day company'}) return p.location"}, {"query": "What are the entertainment works of Sakebun Shin?", "cypher": "Match (:ENTITY{name:'\u5742\u672c\u6e05'}) <- [:Relationship{name:' author'}]-(m), (m) - [:Tag{name:' tag'}]->(n:ENTITY{name:' entertainment work'}) return m.name, n.name"}, {"query": "What is it, Officer Pupil?", "cypher": "match (:ENTITY{name:'spectre'}) --(q) with q order by q.name return q.name"}, {"query": "I'm curious to know which website is owned by the Hong Kong Purple Screen Media Group?", "cypher": "match (m:ENTITY{name:'Hong Kong Purple Shield Group'}) <- [:Relationship{name:'Group'}]- (n) return n.name"}, {"query": "The 2012 edition of the research English reading the real language annotations and difficult sentence breakdowns find the top five tags for me?", "cypher": "match (:ENTITY{name:'(2012) research English reading problem language annotation with difficult sentence breakdown'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 5"}, {"query": "Please help me find 20 singers and what are their representative works?", "cypher": "match (:ENTITY{name:' singer'}) <- [*]-(m), (m) - [:Relationship{name:' major work'}]->(n) return m.name, n.name limit 20"}, {"query": "What are the books in the same genre as Coldface General's Wife, and what are their labels? Please list them in order of how many labels they have.", "cypher": "match (n:ENTITY{name:'the wife of the cold-faced general'}) - [:Relationship{name:'literary genre'}]->(:ENTITY) <- [:Relationship{name:'literary genre'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "What are the works of Canadian writers that are representative? Can you name three?", "cypher": "match (:ENTITY{name:'Canada'}) <- [:Relationship{name:'nationality'}]-(h) - [:Relationship{name:'representative work'}]->(m) return distinct m.name limit 3"}, {"query": "I would like to know what kind of chemicals are produced by Taiwan Taipei Plastics Limited?", "cypher": "match (:ENTITY{name:' Taiwan Taiwanese Plastic Co. Ltd'}) <- [:Relationship{name:' production'}]- (h) return distinct h.name"}, {"query": "Tell me about the five levels of relationship of a man named Khaled Alazemi in foreign languages?", "cypher": "match (n:ENTITY{name:'Khaled Alazemi'}) - [*1..5]->(x) where x.name<>'Khaled Alazemi' return distinct x.name limit 5"}, {"query": "I would like to know about the organization of the 101st Park?", "cypher": "match (:ENTITY{name:'101 public building'}) --(x) with x order by x.name where x.name <> 'organization' return x.name"}, {"query": "The article also highlighted the importance of the two-tier relationship between the two states.", "cypher": "match (n:ENTITY{name:'send a message to the state'}) - [:Relationship*1..2]->(x) where x.name <> 'send' return distinct x.name"}, {"query": "The top five Chinese names in the Academy of Martial Arts are?", "cypher": "match (:ENTITY{name:'Skenkweed Academy'}) - [:Relationship{name:'Chinese name'}]-> (x) with x order by x.name return distinct x.name limit 5"}, {"query": "What else can oral history be called?", "cypher": "match (:ENTITY{name:'oral history'}) <-[:Relationship{name:'also known as '}]-(m) return distinct m.name"}, {"query": "The list of six writers, where are they all?", "cypher": "match (:ENTITY{name:'literary man'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'script'}]->(n) return m.name, n.name limit 6"}, {"query": "What is the name of the dish and what is its taste?", "cypher": "match (:ENTITY{name:'sweet'}) - [:Relationship{name:'category'}]->(n) return n.name as name union all match (:ENTITY{name:'sweet'}) - [:Relationship{name:'sweet'}]->(m) return m.name as name"}, {"query": "Do you know which electronics have a 5.9-inch home screen?", "cypher": "match (x:ENTITY{name:'5.9 inches'}) <- [:Relationship{name:'main screen size'}]- (n) return distinct n.name"}, {"query": "The first is that the baby is not breastfed.", "cypher": "match (:ENTITY{name:'0-1 baby weaned'}) --(p) with p order by p.name return p.name"}, {"query": "Can you list the books published in 2009 and tell me which publisher I'm from?", "cypher": "match (:ENTITY{name:'2009'}) <- [:Relationship{name:'publication time'}]-(h),(h) - [:Relationship{name:'publisher'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "What is the definition of .cc?", "cypher": "match (:ENTITY{name:'.cc'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Tell me about the other five professions of costume designer Julie Taymo.", "cypher": "match (m:ENTITY{name:'Julie Taimo'}) <- [:Relationship{name:'Chinese name'}]-(q),(q) - [:Relationship{name:'profession'}]->(n) where n.name <> 'clothing design' return distinct n.name limit 5"}, {"query": "What chemical has a molecular weight of 325?", "cypher": "match (m:ENTITY{name:'325'}) <- [:Relationship{name:'molecular mass'}]- (h) return h.name"}, {"query": "I'm going to be a little bit more specific about this.", "cypher": "match (x:ENTITY{name:'July dumping'}) - [:Relationship{name:'Chinese name'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "I'm not sure what the name of the novel is, but I'm not sure what the name of the novel is.", "cypher": "match (:ENTITY{name:'no nightmare assigned'}) <- [:Relationship{name:'work alias'}]- (n) return n.name"}, {"query": "The following is a list of details of Colin Faith's second-level relationship with the British citizen.", "cypher": "match (n:ENTITY{name:'Colin Feis'}) - [:Relationship*1..2]->(x) where x.name<>'UK' return distinct x.name"}, {"query": "What is free software?", "cypher": "match (n:ENTITY{name:' free'}) <- [:Relationship{name:' price'}]- (mn) return mn.name limit 2"}, {"query": "What are the films Shakuntala has acted in?", "cypher": "match (:ENTITY{name:'Shakuntala'}) --(m) return distinct m.name"}, {"query": "What is the thickness of the plate and the wavelength of the pressurized steel plate?", "cypher": "match (:ENTITY{name:'pressure steel plate'}) - [:Relationship{name:'pressure steel plate'}]->(n) return n.name as name union all match (:ENTITY{name:'pressure steel plate'}) - [:Relationship{name:'wave height'}]->(m) return m.name as name"}, {"query": "Can you list three other meanings of 2008 besides the definition of software?", "cypher": "match (:ENTITY{name:'2008[a historical moment]'}) --(p) with p order by p.name where p.name <> 'software' return p.name limit 3"}, {"query": "I know that the high-tech park in Zhangjiang County is 1349000 square meters, the San Quan Temple, the Royal Tibetan Garden, the Longshan Park are its most famous attractions, and if you want to know more, help me find 8 other information.", "cypher": "match (n:ENTITY{name:'Zhangjiang County High-tech Park'}) -->(h) with h order by h.name where h.name <> '13.490.000 square metres' and h.name <> 'Sanctuary Temple, Royal Tibetan Garden, Longshan Park' return h.name limit 8"}, {"query": "(2001-2010) reading the word for the English language in the fourth level of English vocabulary - New channel English learning guidebook", "cypher": "match (:ENTITY{name:'(2001-2010) reading the word for the problem English Professional Level Four vocabulary - New channel English learning guide'}) --(n) with n order by n.name return n.name"}, {"query": "Can you help me find 20 relevant information about Dalian University of Technology's City College in the three-tier relationship, other than private universities?", "cypher": "match (:ENTITY{name:'Dalian University of Technology City College'}) - [*1..3]->(p) where p.name <> 'Private college' return p.name limit 20"}, {"query": "Do you know which of the following people are represented by the Hurricane River Masterpiece?", "cypher": "match (:ENTITY{name:'Hurricane flow master'}) <- [:Relationship{name:'representative work'}]- (h) return h.name order by h.name"}, {"query": "List the athletes who use the same foot as Florin Anthony and what are their individual tags?", "cypher": "match (n:ENTITY{name:'Florin Anthony'}) - [:Relationship{name:'regular foot'}]->(:ENTITY) <- [:Relationship{name:'regular foot'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "I want to hear what you say about 10 footballers.", "cypher": "match (n:ENTITY{name:'footballer'}) --(x) return distinct x.name limit 10"}, {"query": "What about the profile of the 1.83m Gault Michael in the four levels of relationships?", "cypher": "match (n:ENTITY{name:'Gault Michael'}) - [*1..4]->(x) where x.name <>'1.83 m' return distinct x.name"}, {"query": "Can the joint venture find me 10?", "cypher": "match (:ENTITY{name:'joint venture'}) <- [:Relationship{name:'company nature'}]-(p) - [:Relationship{name:'company name'}]->(n) return distinct n.name limit 10"}, {"query": "Find out how to get to the five-tier relationship in the geographical area of Saint-Clair?", "cypher": "match (n:ENTITY{name:' Saint-Creac'}) - [*1..5]->(x) where x.name <> 'geography' return distinct x.name"}, {"query": "Can you recommend five Mandarin music albums?", "cypher": "match (:ENTITY{name:'Mandarin'}) <- [:Relationship{name:'album language'}]- (n) return distinct n.name limit 5"}, {"query": "I want to know 5 things about how to teach a 0-3 year old smart baby.", "cypher": "match (:ENTITY{name:'0-3 years old smart baby how to teach'}) --(h) with h order by h.name return h.name limit 5"}, {"query": "What does it mean to not go to the cow?", "cypher": "match (:ENTITY{name:' cow and sheep not to use'}) - [:Tag{name:'tag'}]-> (m) return distinct m.name"}, {"query": "In which year was the East Village Experimental Middle School founded?", "cypher": "match (:ENTITY{name:'Tong countryside experimental secondary school'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'creation time'}]->(n) return distinct n.name"}, {"query": "What are the advantages and characteristics of pre-born high-grade chamomile?", "cypher": "match (:ENTITY{name:' early-born advanced mushroom'}) - [:Relationship{name:' advantages'}]->(n) return n.name as name union all match (:ENTITY{name:' early-born advanced mushroom'}) - [:Relationship{name:' characteristics'}]->(m) return m.name as name"}, {"query": "What is the English name of the University of Nankai's Fuhai College?", "cypher": "match (:ENTITY{name:'Nanking University Fuhai College'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'English name'}]->(n) return distinct n.name"}, {"query": "I'm not sure if you're familiar with .hr domain names, but I'm curious.", "cypher": "match (:ENTITY{name:'.hr  domain name'}) --(p) with p order by p.name return distinct p.name skip 1 limit 3"}, {"query": "Please tell me what game is available on 2011-12-21 14:39:05?", "cypher": "match (:ENTITY{name:'2011-12-21 14:39:05'}) <- [:Relationship{name:' updated date'}]- (m) return m.name"}, {"query": "Do you know which earthquake hit on 2010/12/23 05:49:41?", "cypher": "match (:ENTITY{name:'2010/12/23 05:49:41'}) <- [:Relationship{name:'moment of the earthquake'}]- (m) return m.name"}, {"query": "What is the name of the hydrogen oxide? What is its molecular formula?", "cypher": "match (:ENTITY{name:'oxygenated titanium'}) - [:Relationship{name:'other name'}]->(n) return n.name as name union all match (:ENTITY{name:'oxygenated titanium'}) - [:Relationship{name:'chemical formula'}]->(m) return m.name as name"}, {"query": "The Chinese name of the novelist who is not a fluent writer is Ai?", "cypher": "match (:ENTITY{name:'not available to streamers'}) <- [:Relationship{name:'author'}]-(m),(m) - [:Relationship{name:'Chinese name'}]->(h) return distinct h.name limit 1"}, {"query": "Did you have trouble giving me the information about the two-tier relationship in the romantic red dust that Lee Chao-ping filled in?", "cypher": "match (n:ENTITY{name:' in the romantic red dust'}) - [:Relationship*1..2]->(x) where x.name <>'Lee Chao-ping' return distinct x.name"}, {"query": "Please tell me what kind of exhibition will be held from 20/05/20 to 22/05/2012.", "cypher": "match (:ENTITY{name:'2012/05/20 to 2012/05/22'}) <- [:Relationship{name:' time of holding'}]- (m) return m.name"}, {"query": "Can you name the three different parts of a member?", "cypher": "match (:ENTITY{name:'partmember'}) <- [:Relationship{name:' foreign language name'}]-(n) - [:Relationship{name:' alias'}]->(x) return distinct x.name limit 3"}, {"query": "1000 MW thermal power plant training material: What are the labels for electrical equipment systems and operation?", "cypher": "match (:ENTITY{name:'1000MW thermal power plant training material: electrical equipment system and operation'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 8"}, {"query": "The library was founded in 1984 and is open to the public free of charge.", "cypher": "match (n:ENTITY{name:'Library of the county of Aolongjiang'}) -->(h) with h order by h.name where h.name <> '1984' and h.name <> 'free' return h.name limit 3"}, {"query": "Can you tell me about four other people besides the person in question?", "cypher": "match (:ENTITY{name:'what along'}) --(m) with m order by m.name where m.name <> 'topical person' return distinct m.name limit 4"}, {"query": "Is there any other tag features outside of 123 Office?", "cypher": "match (:ENTITY{name:'123 office'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'website' return p.name"}, {"query": "Can you tell me a little bit about the 007 shoot?", "cypher": "match (m:ENTITY{name:'007 shot'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "Who is the founder of Jump Shopping? Does anyone know?", "cypher": "match (:ENTITY{name:'Jump Shop is a B2C e-commerce site for the sale of toys\u3002'}) <- [:Describe{name:'description'}]-(p),(p) - [:Relationship{name:'founder'}]->(m) return distinct m.name"}, {"query": "Please help me find the other 5 information on Engineer Sun Weiwei in Level 2 .", "cypher": "match (:ENTITY{name:'Sun Weiyu'}) -[:Relationship*1..2]-(p) where p.name <> 'engineer' return p.name limit 5"}, {"query": "Please collect all the information about the book called 0-year-old Larraca?", "cypher": "match (:ENTITY{name:'0 years old Laraca'}) --(n) with n order by n.name where n.name <> 'books' return n.name"}, {"query": "What is the name of the accident where 16 people were rescued and two are still missing?", "cypher": "match (:ENTITY{name:'16 rescued, 2 still missing'}) <- [:Relationship{name:'results'}]- (x) return x.name"}, {"query": "Can you tell me 10 things you know about the three layers of Lake Snow Mountain, except that it is located in the Lhasa province of North Korea?", "cypher": "match (:ENTITY{name:'Shyasan Lake'}) - [*1..3]->(p) where p.name <> 'within the township of Yijiang in Antu County, Jilin Province' return p.name limit 10"}, {"query": "Can you name the top five major departments at B.C. Tech?", "cypher": "match (x:ENTITY{name:'BC Polytechnic'}) - [:Relationship{name:'main faculty'}]-> (q) return q.name order by q.name limit 5"}, {"query": "Can you tell me five things you know about the three floors of North Sea School in the Upper Shenzhen district?", "cypher": "match (:ENTITY{name:'Northeast High School in Kaohsiung District'}) - [*1..3]-(p) return p.name limit 5"}, {"query": "Three words to explain the game of parents and children aged 0-3 years?", "cypher": "match (:ENTITY{name:'0~3 years old parent-child game'}) --(m) with m order by m.name return m.name limit 3"}, {"query": "Do you know any economists who can help me find out which country the three are from?", "cypher": "match (:ENTITY{name:'economist'}) <- [*]-(m), (m) - [:Relationship{name:'nationality'}]->(n) return distinct m.name, n.name limit 2"}, {"query": "Do you know what the main faculties of Semmelweis University have?", "cypher": "Match (:ENTITY{name:'Somewhere in the World'}) - [:Relationship{name:'Major Faculty'}]-> (n) return n.name skip 1"}, {"query": "Can you recommend five Chinese-language book magazines?", "cypher": "match (:ENTITY{name:' in Chinese'}) <- [:Relationship{name:' language'}]- (h) return distinct h.name limit 5"}, {"query": "Industrial product 11-62 centrifugal fan is labeled with filtering?", "cypher": "match (:ENTITY{name:'11-62 centrifuge'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'industrial product' return h.name"}, {"query": "I would like to know what are the main works of people born on July 10, 1994?", "cypher": "match (n:ENTITY{name:'10 July 1994'}) <- [:Relationship{name:'date of birth'}]-(p),(p) - [:Relationship{name:'main work'}]->(h) return distinct h.name"}, {"query": "I want to know about C9H12N2O5, also known as 4-hydroxy-D-alanine?", "cypher": "match (:ENTITY{name:'4-hydroxy-D-alanine [an aqueous substance]'}) --(q) with q order by q.name where q.name <> 'C9H12N2O5' return q.name"}, {"query": "What are the 10 types of dogs in Finland?", "cypher": "match (:ENTITY{name:'Finland'}) <- [:Relationship{name:'distribution area'}]- (mn) - [:Relationship{name:'category'}]->(n:ENTITY{name:'dog category'}) return mn.name limit 10"}, {"query": "Can you explain the three main departments of the China-ASEAN International Schools besides the technical and economic?", "cypher": "match (n:ENTITY{name:'China-ASEAN International College'}) - [:Relationship{name:'main faculty'}]->(h) where h.name <> 'technology' and h.name <> 'economics' return distinct h.name limit 3"}, {"query": "Can you name two people who have a secondary professional relationship with a doctor?", "cypher": "match (n) - [:Relationship*2{name:' profession'}]->(p:ENTITY{name:' doctor'}) RETURN distinct n.name limit 2"}, {"query": "Can you give me 10 tips on the 1010 Awards?", "cypher": "match (:ENTITY{name:'1010 award ceremony'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 10"}, {"query": "What schools are the Zhejiang Province's Experimental Schools of Modern Education Technology?", "cypher": "match (:ENTITY{name:'Zhejiang Provincial Experimental School of Modern Education and Technology'}) --(n) return n.name skip 3"}, {"query": "Can you tell me who is a member of Vasasha's family?", "cypher": "match (:ENTITY{name:'Vanessa'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'family member'}]->(m) return distinct m.name limit 1"}, {"query": "Do you know what the road is that is 2.16 miles long?", "cypher": "match (:ENTITY{name:'2.16 miles'}) <- [:Relationship{name:' full length'}]- (q) return distinct q.name"}, {"query": "How many Japanese corporate brands do you know? Name four?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'location'}]- (n) return n.name limit 4"}, {"query": "See the five articles on the chemical 2-methylphenidate.", "cypher": "match (n:ENTITY{name:'2-methylphenidate'}) - [*]->(x) where x.name<>'2-methylphenidate is a chemical compound with the chemical formula C5H6O2S2\u3002' return distinct x.name limit 5"}, {"query": "What news is there about the 2012 Shanghai Autumn American Study Abroad Education Fair?", "cypher": "match (h:ENTITY{name:'2012 Shanghai Autumn American Study Abroad Education Fair'}) --(n) with n order by n.name where n.name <> '2012/10/27 14:00-18:00' return n.name"}, {"query": "Can you tell me everything you know about old Lucas Cranach?", "cypher": "match (:ENTITY{name:' old Lucas Cranach'}) - [:Relationship*1..2]-(p) return distinct p.name limit 10"}, {"query": "Is Qingdao 58th Secondary School a public secondary school?", "cypher": "match (:ENTITY{name:'Qing Island City Middle School No. 58'}) - [:Relationship{name:' category'}]-> (m) return distinct m.name"}, {"query": "Can a 14-year-old be labeled as being beaten by three people?", "cypher": "match (:ENTITY{name:'14-year-old boy was beaten by 3 people'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name"}, {"query": "Give me a personal introduction to the three-tier relationship related to Ouma Francis in Kenya.", "cypher": "match (n:ENTITY{name:'Ouma Francis'}) - [*1..3]->(x) where x.name<>'Kenya' return distinct x.name"}, {"query": "Help me find 10 species of lizards.", "cypher": "match (:ENTITY{name:'subclass'}) <-[:Relationship{name:'subclass'}]-(m) return distinct m.name limit 10"}, {"query": "Can you tell me what the nickname of the region with a production of 365,229,95 billion yuan (in 2017) is?", "cypher": "match (:ENTITY{name:'36522.95 billion (((2017 year) '}) <- [:Relationship{name:'Regional GDP'}]-(m),(m) - [:Relationship{name:'other name'}]->(x) return x.name order by x.name limit 3"}, {"query": "Can I get two copies of the book published by the Chinese State Press?", "cypher": "match (:ENTITY{name:'China side publishing'}) <- [:Relationship{name:'publishing'}]-(x),(x) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 2"}, {"query": "Tell me about the five levels of the Shandong Provincial Public Service Platform's work-building and promotion plan.", "cypher": "match (n:ENTITY{name:'Shandong Provincial Government Service Platform Construction Work Promotion Program'}) - [*1..5]->(x) where x.name <>'publications' return distinct x.name limit 5"}, {"query": "I want to know about the 16 episodes of the big documentary I Love You in China, the publication with the three labels?", "cypher": "match (:ENTITY{name:'16 episodes big documentary film I love you Chinese'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'publication' return m.name limit 3"}, {"query": "Please help me find three films directed by Li Shi Ming, who are the main actors?", "cypher": "match (:ENTITY{name:'Lee Hsing Min'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'starring'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Tell me, how many items can be in the book \"Raising a Baby 0-3 Years Old\"?", "cypher": "match (x:ENTITY{name:'0-3 years old baby-rearing complete book'}) --(p) with p order by p.name where p.name <> 'books' return p.name limit 10"}, {"query": "Who in their family has a father, mother, brother and sister whose main work they help me find?", "cypher": "match (:ENTITY{name:'dad, mom, brother, sister'}) <- [:Relationship{name:'more members'}]-(p),(p) - [:Relationship{name:'main works'}]->(x) return distinct p.name,x.name"}, {"query": "There is a book from the bestselling computer cybersecurity series, what is it?", "cypher": "match (p:ENTITY{name:' computer network security series reference book'}) <- [:Relationship{name:' reference book'}]- (h) return h.name"}, {"query": "Can you name five main achievements of Chinese people?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(x),(x) - [:Relationship{name:'main achievements'}]->(n) return distinct n.name limit 5"}, {"query": "What are the common causes of GERD and which clinic should I visit?", "cypher": "match (:ENTITY{name:' intestinal dysfunction'}) - [:Relationship{name:' common cause'}]->(n) return n.name as name union all match (:ENTITY{name:' intestinal dysfunction'}) - [:Relationship{name:' inpatient'}]->(m) return m.name as name"}, {"query": "What is the name of an exhibition held at the Guizhou International Convention and Exhibition Center?", "cypher": "match (x:ENTITY{name:'Guangzhou International Convention and Exhibition Centre'}) <- [:Relationship{name:'Exhibition venue'}]- (h) return h.name"}, {"query": "The bombing in Hanoi, Vietnam, on 10/6 was a coincidence?", "cypher": "match (:ENTITY{name:'10\u00b76 Hanoi bombing'}) --(q) with q order by q.name return q.name"}, {"query": "I'm not sure if you can summarize all the information about the red goldfish.", "cypher": "match (n:ENTITY{name:' red gold ring'}) --(x) return x.name"}, {"query": "Please tell me what the earthquake was on January 19, 2013 at 13:40?", "cypher": "match (:ENTITY{name:'19 January 2013 at 13:40'}) <- [:Relationship{name:'key'}]- (h) return h.name"}, {"query": "What are the competitive programs organized by the National Sports Authority?", "cypher": "match (:ENTITY{name:'National Sports Directorate'}) <- [:Relationship{name:'host'}]- (p) return p.name"}, {"query": "Do you know anything about industrial products like S-2-acetaminophen-4-alanine, say ten?", "cypher": "match (:ENTITY{name:'(S)-2-acetaminophen-4-alanine'}) --(x) with x order by x.name where x.name <> 'industrial product' return x.name limit 10"}, {"query": "The following is a brief description of the three-tier relationship between the two artists who wrote the cultural work.", "cypher": "match (n:ENTITY{name:' the last two terms of the sequence are in the order of the first two terms'}) - [:Relationship*1..3]->(x) where x.name <> 'culture' return distinct x.name"}, {"query": "You're not done writing a 10,000-word novel yet?", "cypher": "match (:ENTITY{name:'10,000 (in the link) '}) <--(n) return n.name"}, {"query": "I'm going to tell you about the attractions in Shandong Jinnan. How much do they cost? Help me find 10 of them.", "cypher": "match (:ENTITY{name:'Santong Jinan'}) <- [*]-(m), (m) - [:Relationship{name:'Ticket price'}]->(n) return m.name, n.name limit 10"}, {"query": "Help me find a species of mollusk in the family of the barbels.", "cypher": "match (:ENTITY{name:'Mollusca'}) <- [:Relationship{name:'Mollusca'}]-(m), (m) - [:Relationship{name:'genus'}]->(n) where n.name='Mollusca' return m.name limit 1"}, {"query": "Do you know the scope of the company Odifin?", "cypher": "match (:ENTITY{name:'Odifin'}) - [:Relationship{name:'scale of operation'}]->(n) return n.name"}, {"query": "Can you name three male occupations?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(q) - [:Relationship{name:'occupation'}]->(h) return distinct h.name limit 3"}, {"query": "Can you tell me the basic five-level relationship of this man named Haavistu Kert?", "cypher": "match (n:ENTITY{name:'Haavistu Kert'}) - [*1..5]->(x) where x.name <> 'foreign name' return distinct x.name limit 5"}, {"query": "What other people did Chen describe besides the vice secretary and the mayor?", "cypher": "match (n:ENTITY{name:'Chen Pyin Ti'}) - [:Describe{name:'description'}]->(h) with h order by h.name where h.name <> 'deputy secretary' and h.name <> 'town chief' return h.name limit 2"}, {"query": "Can you name 10 players of Argentine nationality?", "cypher": "match (:ENTITY{name:'Argentina'}) <- [:Relationship{name:'nationality'}]- (mn) - [:Relationship{name:'profession'}]->(n:ENTITY{name:'athlete football'}) return mn.name limit 10"}, {"query": "I am very happy to see that the main achievements of Chen are listed here.", "cypher": "match (:ENTITY{name:' Chen Liyang'}) - [:Relationship{name:' Major achievements'}]-> (q) return distinct q.name"}, {"query": "Do you know of any exhibitions that have a floor area of 30,000 square meters?", "cypher": "match (:ENTITY{name:'30000 square metres'}) <- [:Relationship{name:'exhibition area'}]- (p) return p.name limit 5"}, {"query": "Count down the time of the second confession and the time of the same release of which works, and what kind of label information each of these works has. Please list the number of labels for each work in order from large to small.", "cypher": "match (n:ENTITY{name:' countdown to the second confession'}) - [:Relationship{name:' showtime'}]->(:ENTITY) <- [:Relationship{name:' showtime'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you tell me the name of this man who died in 1645? Can you say 10 words?", "cypher": "match (:ENTITY{name:'1645'}) <- [:Relationship{name:' time of death'}]-(x),(x) - [:Relationship{name:' word number'}]->(q) return q.name order by q.name limit 10"}, {"query": "Please tell me about Kim Jong-un: actors from the cast of \"Bohemian Rhapsody\"; the first five are good?", "cypher": "match (:ENTITY{name:'Kinshasa: Kinsasa'}) --(m) return m.name order by m.name limit 5"}, {"query": "The latest chapter is 2616 and I'm a fan of the novel \"The Great End\".", "cypher": "match (:ENTITY{name:'2616 I for the supreme ((Big End) '}) <- [:Relationship{name:' latest chapter'}]- (q) return q.name"}, {"query": "Do you know what occupation a 6'4\" man chooses to do?", "cypher": "match (m:ENTITY{name:'6 feet 4 inches ((194cm) '}) <- [:Relationship{name:'height'}]-(n),(n) - [:Relationship{name:'occupation'}]->(q) return distinct q.name limit 3"}, {"query": "Tell me about some of the author's most representative works.", "cypher": "match (:ENTITY{name:'writer'}) <- [:Relationship{name:'profession'}]-(m) - [:Relationship{name:'representative work'}]->(p) return p.name order by p.name limit 3"}, {"query": "What are the names of the retired players who played for Inter Milan?", "cypher": "match (:ENTITY{name:'International Milan, Juventus, Rovaniemi'}) <- [:Relationship{name:'former team'}]-(m), (m) - [:Relationship{name:'former team'}]->(n) where n.name='retired' return m.name"}, {"query": "The first five topics listed below are the main awards received by the Higher Secondary Schools of the University of Havana.", "cypher": "match (:ENTITY{name:' upper and lower validated experimental high school'}) - [:Relationship{name:' major award'}]-> (h) return h.name order by h.name limit 5"}, {"query": "Find out about the famous alumni of Utah Valley University, and can you find three other alumni besides AJ Cook and Richie Orman?", "cypher": "match (n:ENTITY{name:'Utah Valley University'}) - [:Relationship{name:'known alumni'}]->(h) where h.name <> 'AJ Cook' and h.name <> 'Richie Orman' return distinct h.name limit 3"}, {"query": "Where is Zhu Junji's workplace?", "cypher": "match (:ENTITY{name:'Jung Ji'}) - [:Relationship{name:'working unit'}]->(m) return distinct m.name"}, {"query": "What is the name of the explosion that happened in Mexico?", "cypher": "match (:ENTITY{name:'Mexico'}) <- [:Relationship{name:' occurred at address'}] - (x) return x.name"}, {"query": "What do you know about the entertainment show \"Freak Apartments\"?", "cypher": "match (:ENTITY{name:' weird apartment'}) --(m) with m order by m.name where m.name <> ' entertainment work' return m.name"}, {"query": "What is the magnetocaloric effect?", "cypher": "match (:ENTITY{name:'magnetocaloric effect'}) --(x) return distinct x.name"}, {"query": "I want to find five university professors, what is ethnicity?", "cypher": "match (:ENTITY{name:' university teacher'}) <- [*]-(m), (m) - [:Relationship{name:' ethnicity'}]->(n) return m.name, n.name limit 5"}, {"query": "Help me find two of Cao Cao's five-word poems.", "cypher": "match (:ENTITY{name:' Cao Cao'}) <- [:Relationship{name:' author'}]-(m), (m) - [:Relationship{name:' literary genre'}]->(n) where n.name='five-word classic' return distinct m.name limit 2"}, {"query": "Can you tell me about Fred Johanson?", "cypher": "match (:ENTITY{name:'Fred Johanson'}) --(p) return distinct p.name"}, {"query": "Do you know about the smog incident in London in 1952?", "cypher": "match (:ENTITY{name:'1952 London smoke incident'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 10"}, {"query": "What are the basic properties of chemicals, including boiling point, melting point, etc.?", "cypher": "match (:ENTITY{name:'point of foaming, boiling point, etc'}) <- [:Relationship{name:'basic properties'}]- (p) return p.name"}, {"query": "What are the types of companies that are limited liability companies (legal entities)? Name 10?", "cypher": "match (:ENTITY{name:' limited liability company ((legal entity sole proprietorship) '}) <- [:Relationship{name:' type of company'}]- (p) return p.name limit 10"}, {"query": "Which exhibition ended on 23-09-22?", "cypher": "match (:ENTITY{name:'2012-09-23'}) <- [:Relationship{name:' end time'}]- (q) return q.name"}, {"query": "What is the Chinese name of the online novel that won't cry in front of you?", "cypher": "match (m:ENTITY{name:'will not cry in front of you[net novel]'}) - [:Relationship{name:'Chinese name'}]-> (p) with p order by p.name return distinct p.name"}, {"query": "Is there a plan to defeat the Allies' whistle blowing?", "cypher": "match (:ENTITY{name:'this is how to defeat the allies'}) <- [:Relationship{name:'target'}]- (h) return h.name"}, {"query": "Can you tell me what this Chinese person does for a living?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(n) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 1"}, {"query": "In the article, Roo lists three types of information about Guangzhou City Craft Co., Ltd. other than when it was founded in 2012.", "cypher": "match (:ENTITY{name:' Guangzhou City Know My Craft Co. Ltd'}) --(m) with m order by m.name where m.name <> '2012' return distinct m.name limit 3"}, {"query": "What is the model of the warship with the code number 965?", "cypher": "match (q:ENTITY{name:'nickname 965'}) <- [:Relationship{name:'coded'}]- (p) return p.name"}, {"query": "The following is a list of the top 10 most popular shopping malls in the world.", "cypher": "match (:ENTITY{name:'17 shopping cart'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 3"}, {"query": "How to introduce 1-methyl-2-methacrylate to no more than 10 items of information?", "cypher": "match (:ENTITY{name:'1-methyl-2-methacrylate methyl'}) --(h) with h order by h.name return h.name limit 10"}, {"query": "The main character is 20 years old, do you know what happened?", "cypher": "match (:ENTITY{name:'20 years'}) <- [:Relationship{name:'age of the main character'}]- (h) return distinct h.name"}, {"query": "What books are written by the authors of the Tang Dynasty?", "cypher": "match (:ENTITY{name:'Changming'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Relationship{name:'publisher'}]->(q) return distinct h.name,q.name"}, {"query": "What other information is there about the South Sri Lanka Railway at 127 km?", "cypher": "match (:ENTITY{name:'Southern Railway of Sri Lanka'}) --(m) with m order by m.name where m.name <> '127 km' return distinct m.name limit 2"}, {"query": "What is the other name of Shenyang?", "cypher": "match (n:ENTITY{name:'by the way'}) - [:Relationship{name:'by the way'}]->(h) with h order by h.name where h.name <> 'by the way' return h.name"}, {"query": "The following is a list of the artistic works published by the Helanggang Art Publishing House in the Yellow and Orange Color still life teaching paradigm of no less than three-tier relationships.", "cypher": "match (n:ENTITY{name:'Physical teaching example'}) - [:Relationship*1..3]->(x) where x.name <> 'Helanggang Fine Arts Publishing' return distinct x.name"}, {"query": "The following is a list of the top 5 people who have been asked to answer the questions about the four levels of relationship of this person:", "cypher": "match (n:ENTITY{name:'Kuwaishi Yuyu'}) - [*1..4]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "There is a list of companies that have selected the world's 10 youngest billionaires.", "cypher": "match (:ENTITY{name:' selected the ten youngest billionaires in the world'}) <- [:Relationship{name:' content'}]- (q) return q.name"}, {"query": "What is the snack with chicken breast and chicken in the main ingredient?", "cypher": "Match (:ENTITY{name:'Pumpkin, chicken breast'}) <- [:Relationship{name:'main ingredient'}]- (x) return x.name"}, {"query": "Tell me about the 3A Principle, other than science?", "cypher": "match (:ENTITY{name:'3A principle'}) --(h) with h order by h.name where h.name <> 'science' return h.name limit 3"}, {"query": "Do you know the last terrorist attack that killed eight people and captured one?", "cypher": "match (x:ENTITY{name:'Killing 8 and catching 1'}) <- [:Relationship{name:'results'}]- (h) return h.name"}, {"query": "What is the name of Saint Sherry?", "cypher": "match (:ENTITY{name:'Sherry'}) --(x) return distinct x.name"}, {"query": "What kind of dishes can you make with bananas and chicken?", "cypher": "match (:ENTITY{name:' bananas, onions'}) <- [:Relationship{name:' materials'}]-(m) return distinct m.name limit 2"}, {"query": "I'm going to ask you to help me find 10 of his tags.", "cypher": "match (:ENTITY{name:'11456 logistics information network'}) --(q) with q order by q.name where q.name <> 'Internet' return q.name limit 10"}, {"query": "What are the works of the China Construction Industry Publishing House? When are they published? Can you explain five?", "cypher": "match (:ENTITY{name:'China Construction Industry Publishing'}) <- [:Relationship{name:'China Construction Industry Publishing'}]-(h),(h) - [:Relationship{name:'time of publication'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "I would like to know about 304 stainless steel tube standard?", "cypher": "match (:ENTITY{name:'304 stainless steel tube standard'}) --(q) with q order by q.name where q.name <> '304 stainless steel tube standard' return q.name"}, {"query": "I'm not sure if you've heard of the movie \"The Australian Gangster\".", "cypher": "match (n:ENTITY{name:'square'}) where n is not null return 1"}, {"query": "Can you give me a list of 10 things that Chinese people do?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(h),(h) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 10"}, {"query": "Do you understand what a four-taste poison is? I want to know the information about this thing.", "cypher": "match (:ENTITY{name:' four-taste poison uncle'}) --(m) return m.name skip 1"}, {"query": "Please collect information about the publication titled .Net Desktop Application Development Tutorials.", "cypher": "match (:ENTITY{name: '.Net desktop application development tutorial'}) --(n) with n order by n.name where n.name <> 'publication' return n.name"}, {"query": "Do you have any doctors with PhDs? Can you find me five?", "cypher": "match (:ENTITY{name:'doctor'}) <- [:Relationship{name:'degree'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='doctor' return m.name limit 5"}, {"query": "The song was written by Diane Karen, what is the name of the song by Robin Lundback?", "cypher": "Match (:ENTITY{name:'Karen, Robin Lundback'}) <- [:Relationship{name:'The song was originally sung'}]- (x) return distinct x.name"}, {"query": "Please describe what is the name of the Sergeant-at-Arms? Name three for me.", "cypher": "match (:ENTITY{name:'Original'}) <--(q) - [:Relationship{name:'word'}]->(p) return p.name order by p.name limit 3"}, {"query": "Can you tell me the occupation of this party member? Name the top five.", "cypher": "match (:ENTITY{name:'party member'}) <- [:Relationship{name:'political appearance'}]-(x),(x) - [:Relationship{name:'profession'}]->(q) return q.name skip 1 limit 5"}, {"query": "I want to know about the Twenty-One.", "cypher": "match (:ENTITY{name:'send-in'}) --(m) with m order by m.name return m.name"}, {"query": "Which planet has a rotation period of about 248 years?", "cypher": "match (x:ENTITY{name:'about 248 years'}) <- [:Relationship{name:'circulation cycle'}]- (m) return m.name"}, {"query": "Specifies a chemical content \u226598.5%", "cypher": "match (:ENTITY{name:'\u226598.5%'}) <- [:Relationship{name:'content'}]- (n) return distinct n.name"}, {"query": "The local code of practice published by Anhui Province helped me find five items.", "cypher": "match (:ENTITY{name:'Anhui Province'}) <- [:Relationship{name:'release unit'}]- (mn) - [:Relationship{name:'belongs to category'}]->(n:ENTITY{name:'local methodology'}) return mn.name limit 5"}, {"query": "What is the nationality and representation of the Chinese?", "cypher": "match (:ENTITY{name:'swing'}) - [:Relationship{name:'swing'}]->(n) return n.name as name union all match (:ENTITY{name:'swing'}) - [:Relationship{name:'swing'}]->(m) return m.name as name"}, {"query": "What are the names of the credit cards in the US?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'place of origin'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='credit card' return distinct m.name limit 1"}, {"query": "I'm not sure if you have any information on the situation.", "cypher": "match (:ENTITY{name:'sandwich'}) --(x) return x.name order by x.name"}, {"query": "The following is a list of all the different ways The Enlightenment Training for 6 Year Olds is credited in the database:", "cypher": "match (:ENTITY{name:'0 6 years old enlightenment training practical encyclopedia'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "Can you help me find out 10 things about the movie Bloodsucker Lane in the 3rd relationship, other than the American production?", "cypher": "match (:ENTITY{name:' bloodsucking lane'}) - [*1..3]->(p) where p.name <> 'United States, Germany' return distinct p.name limit 10"}, {"query": "I want to know if the song released in 2015 is something I want to be in a three-tier relationship with?", "cypher": "match (n:ENTITY{name:'want to be yourself'}) - [*1..3]->(x) where x.name<>'2015' return distinct x.name"}, {"query": "What is the Chinese name of the novel Great Evil?", "cypher": "match (:ENTITY{name:'Great evil'}) <- [:Relationship{name:'foreign name'}]- (p) return p.name"}, {"query": "In addition to being a calligrapher and cultural figure, tell us about his ten professions.", "cypher": "match (:ENTITY{name:'cultural person'}) <-[:Tag{name:'tag'}]-(h),(h) -[:Relationship{name:'profession'}]->(n) where n.name <> 'scribe' return distinct n.name limit 10"}, {"query": "Find out where two alumni of Northeastern Imperial University in Sendai were born.", "cypher": "match (:ENTITY{name:'Sendai Northeast Imperial University'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name,n.name limit 2"}, {"query": "What is the nickname of the five-star hotel?", "cypher": "match (:ENTITY{name:'the alias of the five letters'}) <-[:Relationship{name:'the meaning'}]-(m) return distinct m.name"}, {"query": "I wonder what the scientific labeling of the 120 first aid scheduling command system is?", "cypher": "match (:ENTITY{name:'120 emergency dispatch command system'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'science' return p.name"}, {"query": "Apart from the technical college, what else do you know about Jiangxi University of Technology? List 20 information in 2 layers", "cypher": "match (:ENTITY{name:' Jiangxi Faculty of Science and Technology'}) - [*1..2]->(p) where p.name <> 'technology' return p.name limit 20"}, {"query": "What is the name of the incident that happened on the beach in the city of Zhengzhou?", "cypher": "match (:ENTITY{name:'Path of the Sea'}) <- [:Relationship{name:'Place of occurrence'}]- (h) return h.name"}, {"query": "I want you to tell me about Han Bo-young's main achievements.", "cypher": "match (:ENTITY{name:'Hang Bo-yeon'}) - [:Relationship{name:'main achievement'}]-> (x) return x.name skip 1"}, {"query": "Can you help me find out who are the three representatives of the two graduates of the Central Academy of Drama?", "cypher": "match (:ENTITY{name:'Central Academy of Drama'}) <- [:Relationship{name:'Graduate School'}]-(x),(x) - [:Relationship{name:'Represents work'}]->(q) return distinct q.name limit 3"}, {"query": "I want to find 6 hotels, where are their addresses?", "cypher": "match (:ENTITY{name:' hotel'}) <- [*]-(m), (m) - [:Relationship{name:' address'}]->(n) return m.name, n.name limit 6"}, {"query": "What is the principle of high-temperature rock-fill power plants?", "cypher": "match (:ENTITY{name:' high temperature rock body power plant'}) - [:Relationship{name:' explanation'}]->(n) return n.name as name union all match (:ENTITY{name:' high temperature rock body power plant'}) - [:Relationship{name:' temperature'}]->(m) return m.name as name"}, {"query": "What else do you know about conspiracies other than the New World Press?", "cypher": "match (:ENTITY{name:'conspiracy'}) - [*1..3]-(p) where p.name <> 'New World Publishing' return p.name limit 6"}, {"query": "Can you tell me about Alan Shearman?", "cypher": "match (:ENTITY{name:'Alan Shearman'}) --(h) return h.name order by h.name"}, {"query": "What are the famous tourist attractions in Sichuan?", "cypher": "match (:ENTITY{name:' six-unit'}) - [:Relationship{name:' famous attractions'}]-> (m) return distinct m.name"}, {"query": "Can you find three high definition channels to show me about?", "cypher": "match (:ENTITY{name:'highly-defined concurrent'}) <- [:Relationship*]-(m), (m) - [:Describe{name:'describe'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Do you know what the earthquake of October 19, 2015 was?", "cypher": "match (:ENTITY{name:'October 19, 2015'}) <- [:Relationship{name:' time of occurrence'}]- (n) return distinct n.name"}, {"query": "The four brands of perfume are mentioned, and who are their spokespersons?", "cypher": "match (:ENTITY{name:'perfume'}) <--(m), (m) - [:Relationship{name:'spokesperson'}]->(n) return m.name, n.name limit 4"}, {"query": "In one aspect, what is the R-concept of methyl-1-glycerin?", "cypher": "match (:ENTITY{name:'(R) - for formaldehyde-1-glycerol'}) --(x) with x order by x.name return x.name skip 1 limit 1"}, {"query": "Can you write 10 labels for 17Vee based U2000?", "cypher": "match (n:ENTITY{name:'17Vee  U2000'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 10"}, {"query": "Please describe the 32 costly projects in the two-tier relationship of clean production in beautiful China.", "cypher": "match (n:ENTITY{name:'Clean production of beautiful China'}) - [:Relationship*1..2]->(x) where x.name <>'32' return distinct x.name"}, {"query": "I would like to know what are the main achievements of people born on October 8, 1912?", "cypher": "match (:ENTITY{name:'8 October 1912'}) <- [:Relationship{name:'date of birth'}]-(h) - [:Relationship{name:'main achievements'}]->(q) return distinct q.name limit 3"}, {"query": "I'm not sure what James Barthes was doing, but I'm not sure what he was doing.", "cypher": "match (:ENTITY{name:' James Busby'}) <--(m) - [:Relationship{name:' profession'}]->(x) return distinct x.name limit 3"}, {"query": "Can you tell me the name of a piece by someone who is 164?", "cypher": "match (:ENTITY{name:'164cm'}) <- [:Relationship{name:'height'}]-(x),(x) - [:Relationship{name:'main work'}]->(h) return distinct h.name limit 1"}, {"query": "Do you know what happened that led to the seizure of five Chinese fishing boats?", "cypher": "match (:ENTITY{name:'5 ships'}) <- [:Relationship{name:'number of seizures'}]- (m) return distinct m.name"}, {"query": "I want to hear about the 2012 China Football Association Cup.", "cypher": "match (:ENTITY{name:'2012 Chinese Football Association Cup'}) --(h) with h order by h.name return h.name"}, {"query": "Can you tell me the name of a campaign to elect members of the Singapore Legislative Assembly?", "cypher": "match (:ENTITY{name:'elected Member of the Legislative Assembly of Singapore'}) <- [:Relationship{name:'target'}]- (n) return n.name"}, {"query": "Can you recommend three completed novels?", "cypher": "match (:ENTITY{name:' completed'}) <- [:Relationship{name:' connected state'}]- (x) return x.name limit 3"}, {"query": "Is there a history of the relationship between the uncles? Can you name one?", "cypher": "match (:ENTITY{name:' uncle'}) --(h) return distinct h.name limit 1"}, {"query": "What is the name of the school of meat rolling?", "cypher": "match (:ENTITY{name:' rolling knife meat'}) --(x) return distinct x.name"}, {"query": "Help me find one plant in the genus of the herb that is distributed in Guangdong.", "cypher": "match (:ENTITY{name:' Guangdong'}) <- [:Relationship{name:' distribution area'}]-(m), (m) - [:Relationship{name:' category'}]->(n) where n.name='grasshopper' return distinct m.name limit 1"}, {"query": "Help me find five plants in the family.", "cypher": "match (:ENTITY{name:'beautiful'}) <- [:Relationship{name:'beautiful'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='plant' return distinct m.name limit 5"}, {"query": "Twinkle shi/Twinkle See is the most successful model in the world, and also the most successful model in the world.", "cypher": "match (:ENTITY{name:'Twinkle shi/Twinkle See'}) <- [:Relationship{name:'foreign language name'}]-(x) - [:Relationship{name:'main achievement'}]->(h) where h.name <> 'Then Xue is rated as the most photographed model' return distinct h.name limit 1"}, {"query": "Can you recommend three platforms with a flying shooter theme?", "cypher": "match (:ENTITY{name:'flying shot'}) <- [:Relationship{name:'content subject'}]-(m),(m) - [:Relationship{name:'game platform'}]->(n) return distinct n.name limit 3"}, {"query": "How do you describe 100% mastery of After Effects CS5 in 3 words?", "cypher": "match (:ENTITY{name:'100% mastered After Effects CS5'}) --(n) with n order by n.name return n.name limit 3"}, {"query": "Where is the Chinese Medical University in Guangzhou?", "cypher": "match (:ENTITY{name:' Guangzhou Chinese Medical University'}) - [:Relationship{name:' School address'}]->(n) return n.name"}, {"query": "What are the surnames of people born in Huamen Township, Dongcheng City, Guangdong Province?", "cypher": "match (m:ENTITY{name:'Thorm township villagehead village'}) <-[:Relationship{name:'birthplace'}]-(n),(n) -[:Relationship{name:'alias'}]->(q) return distinct q.name limit 3"}, {"query": "Do you know when the 2nd Marine Fleet was formed?", "cypher": "match (:ENTITY{name:'Second Fleet'}) <- [:Relationship{name:' agency'}]- (p) return p.name"}, {"query": "The three-tiered relationship of a 180cm tall three-legged martial artist who gave me personal information?", "cypher": "match (n:ENTITY{name:'three-legged'}) - [*1..3]->(x) where x.name<>'180cm' return distinct x.name"}, {"query": "Can you find out about the five British colour films?", "cypher": "match (:ENTITY{name:'UK'}) <- [:Relationship{name:'show area'}]- (mn) - [:Relationship{name:'picture color'}]->(n:ENTITY{name:'color'}) return mn.name limit 5"}, {"query": "Do you know what other personal information about Lily is besides the material? Help me find 10 information in 3 layers.", "cypher": "match (:ENTITY{name:'deleteJellyfish'}) - [*1..3]->(p) where p.name <> 'reference material 2' return p.name limit 10"}, {"query": "Can you find the 10 varieties of cabbage?", "cypher": "match (:ENTITY{name:'spice'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'main ingredient'}]->(n) return distinct m.name,n.name limit 10"}, {"query": "The three-tiered relationship between Tang's gift and Yu's work is needed?", "cypher": "match (n:ENTITY{name:'gifted'}) - [:Relationship*1..3]->(x) where x.name <>'Tang Dynasty' return distinct x.name"}, {"query": "The following is a list of five news stories about sports personality Yasunori Nakano:", "cypher": "match (n:ENTITY{name:'Sakura Yatsune'}) - [*]->(x) where x.name <> 'sportsman' return distinct x.name limit 5"}, {"query": "The film is about the life of a young man who is trying to make a film that is not about carbon footprinting.", "cypher": "match (n:ENTITY{name:'stepping carbon'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'film' and h.name <> 'film work' return distinct h.name limit 2"}, {"query": "Now, can you tell me one of the first things about the Longhai Sambo Temple in Zhejiang?", "cypher": "match (:ENTITY{name:'Langhai Sanba Temple'}) --(p) return p.name order by p.name limit 1"}, {"query": "I want to know what school is the school that is the key school in the province of Chongqing?", "cypher": "match (:ENTITY{name:'Kosciuszko County Key Schools'}) <- [:Relationship{name:'School attributes'}]- (n) return n.name order by n.name"}, {"query": "I want to know the threshold for overload protection sockets?", "cypher": "match (:ENTITY{name:' overloaded protection socket'}) <--(m),(m) - [:Relationship{name:' overloaded threshold'}]->(q) return distinct q.name"}, {"query": "I would like to know if there is any personal information about Boada Pedro, a Venezuelan, in his two-tier relationship?", "cypher": "match (n:ENTITY{name:'Boada Pedro'}) - [*1..2]->(x) where x.name<>'Venezuela' return distinct x.name"}, {"query": "What does the letter G mean in thermodynamics?", "cypher": "match (:ENTITY{name:'thermodynamics'}) <- [:Relationship{name:'related field'}]-(m), (m) - [:Relationship{name:'representing letter'}]->(n) where n.name='G' return distinct m.name"}, {"query": "Please tell me what exhibition will be held on November 17th and 20th, 2015?", "cypher": "match (:ENTITY{name:'17 November 2015 20th'}) <- [:Relationship{name:'exhibition date'}]- (h) return h.name"}, {"query": "Can you tell me what the 1984 corporate tax reform was?", "cypher": "match (:ENTITY{name:'1984 Business and Corporate Tax Reform'}) --(p) with p order by p.name return p.name"}, {"query": "The book is a book about the four levels of relationships that are involved in the book.", "cypher": "match (n:ENTITY{name:'silent breath'}) - [*1..4]->(x) where x.name <>'silent breath' return distinct x.name"}, {"query": "Do the videos on the Japanese TV station have their genre?", "cypher": "match (:ENTITY{name:'Japanese TV station'}) <- [:Relationship{name:'online streaming platform'}]-(h),(h) - [:Relationship{name:'type'}]->(q) return distinct h.name,q.name"}, {"query": "What does phplib mean?", "cypher": "match (:ENTITY{name:'phplib'}) - [:Describe{name:'describe'}]->(m) return distinct m.name"}, {"query": "Do you know how many front wheels are in a 1490 mm car?", "cypher": "match (:ENTITY{name:'1490(mm) '}) <- [:Relationship{name:' front wheelbase'}]- (p) return p.name"}, {"query": "The culture of the Khalaf is from what era?", "cypher": "match (:ENTITY{name:'Khalaf culture'}) - [:Relationship{name:'Years'}]->(m) return distinct m.name"}, {"query": "10 tags that tell me about 1.4 Guangxi All-Spring High Speed Trailer Accidents?", "cypher": "match (:ENTITY{name:'1.4 Guangxi All-Shang high-speed vehicle chase accident'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 10"}, {"query": "Please tell me which tournament the teams in the group of 32 reached?", "cypher": "match (:ENTITY{name:'32 (group) '}) <- [:Relationship{name:'team'}]- (m) return m.name"}, {"query": "What is the name of the organization that stands for OA?", "cypher": "match (:ENTITY{name:'OA'}) <- [:Relationship{name:'abbreviation'}]- (x) return distinct x.name"}, {"query": "I need a youth excerpt from China Youth Press, Time Drawing: Betraying the Love Song 2 in Relationships?", "cypher": "match (n:ENTITY{name:'Youth Summary Time Drawing: Betrayal Love Song'}) - [:Relationship*1..2]->(x) where x.name <> 'China Youth Press' return distinct x.name"}, {"query": "What are the books of the King and when were they published?", "cypher": "match (:ENTITY{name:'\u738b\u6bbf\u537f'}) <- [:Relationship{name:' author'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name"}, {"query": "The book is a collection of short stories and essays, which show the work of the publisher of Anhui Master Teacher University Press on the way to a successful bestseller: The 3 layers of relationships that miracles can create.", "cypher": "match (n:ENTITY{name:'Towards success: Miracles can be created'}) - [:Relationship*1..3]->(x) where x.name <>'Anhui Teachers University Press' return distinct x.name"}, {"query": "What do you call a triangle, a polygon, a plane, a triangle, a cross?", "cypher": "match (:ENTITY{name:'trinity, polynomial, plane, triangle cross, etc'}) <- [:Relationship{name:'classification'}]- (m) return m.name"}, {"query": "I remember a vicious incident that left three dead and six injured, called \"The Name of the Game\".", "cypher": "match (:ENTITY{name:'3 dead 6 wounded'}) <--(n) return n.name"}, {"query": "Can you name four Dutch celebrities?", "cypher": "match (:ENTITY{name:' Netherlands'}) <- [:Relationship{name:' nationality'}]- (m) return m.name limit 4"}, {"query": "Tell me, what is the length of the road in 149 km?", "cypher": "match (:ENTITY{name:'149 km'}) <- [:Relationship{name:'route length'}]- (x) return distinct x.name"}, {"query": "Please help me find three alumni of the Chinese University of Science and Technology who have achieved the most important achievements.", "cypher": "match (:ENTITY{name:'University of Science and Technology of China'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' major achievements'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What is the name of the artist born on June 14, 1951 that has a brilliant work?", "cypher": "match (:ENTITY{name:'June 14, 1951'}) <- [:Relationship{name:'date of birth'}]-(h) - [:Relationship{name:'represents work'}]->(x) return distinct h.name,x.name"}, {"query": "Can you find the names of the six stations?", "cypher": "match (:ENTITY{name:'station'}) <--(m), (m) - [:Relationship{name:'number of stations'}]->(n) return m.name,n.name limit 6"}, {"query": "The following is a list of five entertainment personalities.", "cypher": "match (:ENTITY{name:'entertainment character'}) --(q) return distinct q.name limit 5"}, {"query": "Give me five game facts in the five layers of the relationship of Pocket Miner 2?", "cypher": "match (n:ENTITY{name:'pocket miner 2'}) - [*1..5]->(x) where x.name <>'game' return distinct x.name limit 5"}, {"query": "Do you know what Yuan Dujuan does for a living?", "cypher": "match (:ENTITY{name:'Yuan Dujuan'}) <- [:Relationship{name:'foreign language name'}]-(x),(x) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 1"}, {"query": "Tell me about 5 pieces of information about art that are taught in early childhood?", "cypher": "match (n:ENTITY{name:' early childhood teaching machine'}) - [*]->(x) where x.name <> 'artwork' return distinct x.name limit 5"}, {"query": "Can you tell me about the theory and practice of hydrogenated liquid reaction and which of these is the most representative work of the person?", "cypher": "match (:ENTITY{name:'Theory and practice of hydrogenated liquid reaction'}) <- [:Relationship{name:'representative work'}]- (m) return distinct m.name"}, {"query": "The material of the glass steel toilet is glass steel, do you know anything else about it? Please help me find 6 information in 3 layers.", "cypher": "match (:ENTITY{name:' glass steel seat'}) - [*1..3]-(p) where p.name <> 'glass steel' return distinct p.name limit 6"}, {"query": "Do you know what the 2015 Strawberry Concert in Guangzhou is?", "cypher": "match (:ENTITY{name:'2015 Canton Fair'}) - [:Relationship{name:'representative work'}]-> (m) return distinct m.name"}, {"query": "I want to know the four levels of relationship of Mohamed Tamer Haj, the football player?", "cypher": "match (n:ENTITY{name:'Mohamd Tamer Haj'}) - [*1..4]->(x) where x.name <> 'football' return distinct x.name limit 5"}, {"query": "The first book of the series, titled \"The Book of the Dead\", was written in the year of the great poet, the poet of the time, and the author of the book is the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the poet, the, the poet, the poet, the poet, the poet, the poet, the poet,", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'Creation date'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'author'}]->(m) return m.name as name"}, {"query": "What was the name of the first annual meeting on September 9, 2007?", "cypher": "match (:ENTITY{name:'September 9, 2007'}) <- [:Relationship{name:' first time'}]- (p) return p.name"}, {"query": "The School of Education is the main school of the department.", "cypher": "match (q:ENTITY{name:'Education College'}) <- [:Relationship{name:'Main Faculty'}]- (h) return h.name order by h.name"}, {"query": "Do you know how much the book written by Fan Ji-hwan is worth?", "cypher": "match (:ENTITY{name:'fanrights'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'pricing'}]->(q) return distinct q.name"}, {"query": "What are the levels of protection for long-horned beetles?", "cypher": "match (:ENTITY{name:' long sequence array'}) - [:Relationship{name:' protection level'}]->(n) return n.name as name union all match (:ENTITY{name:' long sequence array'}) - [:Relationship{name:' distribution area'}]->(m) return m.name as name"}, {"query": "Who is a mathematician who graduated from the University of Michigan?", "cypher": "match (:ENTITY{name:'Michigan University, MIT'}) <- [:Relationship{name:'Graduate School'}]-(m), (m) - [:Relationship{name:'Profession'}]->(n) where n.name='mathematician' return m.name"}, {"query": "Among the people who died in 1949, what other professions other than a novelist died in the same year?", "cypher": "match (:ENTITY{name:'1949'}) <- [:Relationship{name:'date of death'}]-(q) - [:Relationship{name:'profession'}]->(n) where n.name <> 'novelist' return distinct n.name limit 5"}, {"query": "Can you tell me about the three types of relationships in the five layers of this beautiful song of your life?", "cypher": "match path=(n) <- [:Relationship*5]-(p:ENTITY{name:'Have a beautiful life'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Do you know which foods have a cooking time of 10-30 minutes?", "cypher": "match (:ENTITY{name:'10-30 minutes'}) <- [:Relationship{name:'time'}]- (x) return distinct x.name limit 5"}, {"query": "Can you tell me about the two-tier relationship between the Chinese rhinos and the Chinese rhinos?", "cypher": "match (n:ENTITY{name:'Sii Jiang Moon\u00b7\u6728\u7280'}) - [:Relationship*1..2]->(x) where x.name <>'show more' return distinct x.name"}, {"query": "Is there a label name for 3 Shanghai Massive Health Management Consulting Co., Ltd. but not the brand name and the company name?", "cypher": "match (n:ENTITY{name:'Shanghai Masuli Health Management Consulting Co. Ltd'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'brand' and h.name <> 'company' return distinct h.name limit 3"}, {"query": "I need to find out about the relationship between the two layers of the flower body, the river goddess and the female guardian angel.", "cypher": "match (n:ENTITY{name:'River goddess; female interacting floral body'}) - [:Relationship*1..2]->(x) where x.name <> 'repeated' return distinct x.name"}, {"query": "The maximum range of a weapon is 550 kilometers.", "cypher": "match (:ENTITY{name:'550 km'}) <- [:Relationship{name:'maximum distance'}]- (h) return distinct h.name"}, {"query": "The Hong Kong Airport Core Project was founded in which year?", "cypher": "match (:ENTITY{name:'Hong Kong Airport Core Program'}) - [:Relationship{name:'time'}]->(n) return n.name as name union all match (:ENTITY{name:'Hong Kong Airport Core Program'}) - [:Relationship{name:'location'}]->(m) return m.name as name"}, {"query": "I would like to ask you about the 10 main works of this man born on July 10, 1996.", "cypher": "match (x:ENTITY{name:'July 10, 1996'}) <- [:Relationship{name:'date of birth'}]-(n),(n) - [:Relationship{name:'main work'}]->(q) return q.name order by q.name limit 10"}, {"query": "What else do you know about the city of Murcia, apart from the fact that it is located in the city of Turin?", "cypher": "match (:ENTITY{name:'Mekoshura'}) - [*1..2]-(p) where p.name <> 'Tudu City' return distinct p.name limit 6"}, {"query": "Find out what the event was on November 8, 2016 on the 11th of May.", "cypher": "match (:ENTITY{name:'8 November 201611'}) <- [:Relationship{name:'exhibition time'}]- (m) return m.name"}, {"query": "Which schools have established a Mechanical Engineering College?", "cypher": "match (:ENTITY{name:'Mechanical Engineering College'}) --(m) return m.name order by m.name"}, {"query": "Can you give me an example of what Aditya Roy Kapoor has to represent?", "cypher": "match (:ENTITY{name:'Aditya Roy Kapoor'}) - [:Relationship{name:'represents work'}]-> (h) return h.name order by h.name limit 3"}, {"query": "Can you find me a school in the Dafu-Jin Industrial Park in the East Village?", "cypher": "match (:ENTITY{name:' educational institution'}) <- [:Relationship{name:' nature'}]-(m), (m) - [:Relationship{name:' location'}]->(n) where n.name='Dawunsu County' return m.name limit 2"}, {"query": "Can you name some exhibitions in the food and beverage industry?", "cypher": "match (:ENTITY{name:'food and drink'}) <- [:Relationship{name:'industry'}]- (m) return distinct m.name"}, {"query": "What books are there for literature? Can you help me find two?", "cypher": "match (:ENTITY{name:' literature'}) <- [:Relationship{name:' category'}]-(x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name limit 2"}, {"query": "Let me know about the 2CD 2011 sadness capsule?", "cypher": "match (:ENTITY{name:'(2CD)2011 sadness capsule'}) --(q) with q order by q.name return q.name"}, {"query": "I know that self-control and self-control therapy are psychology books written by Junji, and besides these, you can find me four more books on this subject.", "cypher": "match (n:ENTITY{name:'self-control and self-control'}) -->(h) with h order by h.name where h.name <> 'Jujunming' and h.name <> 'psychology' return h.name limit 4"}, {"query": "What else do you know about Lu Xun besides being a senior in T\u014dhoku? Find 10 information in 2 layers.", "cypher": "match (:ENTITY{name:'Luansheng[Dohyang-Late Namesake]'}) - [*1..2]-(p) where p.name <> 'Dohyang' return p.name limit 10"}]