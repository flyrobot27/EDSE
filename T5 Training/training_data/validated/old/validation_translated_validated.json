[{"query": "What are the attributes of the 100 most popular mind games?", "cypher": "match (:ENTITY{name:'100 unprecedented favorites'}) - [:Tag{name:'tags'}]-> (h) with h order by h.name where h.name <> 'wisdom game' return h.name"}, {"query": "Help me find five artists.", "cypher": "match (:ENTITY{name:' artist'}) <- [:Tag{name:' tag'}]-(m) return distinct m.name limit 5"}, {"query": "What about the English language films and games in the White language?", "cypher": "match (:ENTITY{name:': English'}) <- [:Relationship{name:' for white language'}]- (q) return distinct q.name"}, {"query": "Do you know which companies have a net worth of 10 million yuan? Can you name three?", "cypher": "match (:ENTITY{name:'10 million RMB'}) <- [:Relationship{name:'actual capital'}]- (m) return m.name limit 3"}, {"query": "Please provide information about the relationship between the two layers of the English synchronized text post / new starting point written side by side.", "cypher": "match (n:ENTITY{name:' Primary English synchronous post/new starting point side-by-side'}) - [:Relationship*1..2]->(x) where x.name<>'Qingqing double' return distinct x.name"}, {"query": "I want to meet a Fujifilm P701.", "cypher": "match (n:ENTITY{name:' Fujifilm P701'}) --(x) return x.name"}, {"query": "What are the five main departments of the Sundar VET?", "cypher": "match (:ENTITY{name:'Sundt Vocational Technical College'}) - [:Relationship{name:'Major Faculty'}]->(n) return n.name limit 5"}, {"query": "The following 13 Youth Hotlines: Information on getting involved in the workplace and the relationship between the two layers?", "cypher": "match (n:ENTITY{name:'Youth hotline: workplace caught and confused'}) - [:Relationship*1..2]->(x) where x.name <>'13' return distinct x.name"}, {"query": "Where is the address of the first secondary school in Zhejiang?", "cypher": "Match (:ENTITY{name:'First Secondary School in Yangzhou City'}) - [:Relationship{name:'School address'}]->(n) return n.name"}, {"query": "I'm wondering if I can get five?", "cypher": "match (:ENTITY{name:'entertainment work'}) <--(n) return n.name limit 5"}, {"query": "Can you tell me what the Chinese Railway Press has published?", "cypher": "match (:ENTITY{name:'China Railway Publishing'}) <- [:Relationship{name:'publisher'}]- (n) return distinct n.name"}, {"query": "You guess the 1220K+H220 bearings have aluminum labels?", "cypher": "match (:ENTITY{name:'1220K+H220 bearing'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "Which hotels and bathhouses have room voltages at 110? Can you list 10?", "cypher": "match (q:ENTITY{name:'110'}) <- [:Relationship{name:'room voltage'}]- (m) return m.name limit 10"}, {"query": "Which are the main departments of the list of technical schools?", "cypher": "match (q:ENTITY{name:'technology'}) <- [:Relationship{name:'school type'}]-(p),(p) - [:Relationship{name:'main faculty'}]->(h) return distinct h.name limit 1"}, {"query": "Do you know which novels have been published by Merak Poem Dream?", "cypher": "match (:ENTITY{name:'spoiler'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'spoiler'}]->(h) return distinct h.name limit 3"}, {"query": "Please provide me with information on 20 articles of the three-tiered maritime regulations, other than the country of issue being the UK?", "cypher": "match (:ENTITY{name:' Navigation Regulations'}) - [*1..3]-(p) where p.name <> 'UK' return distinct p.name limit 20"}, {"query": "Please help me find three works by Zhang Xiaogang", "cypher": "match (:ENTITY{name:' Zhang Xiaojun'}) <- [:Relationship{name:' Director'}]-(m) return distinct m.name limit 3"}, {"query": "Please help me find the other 6 pieces of information in the second level of Desire Mountain.", "cypher": "match (:ENTITY{name:' Desire Mountain'}) - [:Relationship*1..2]-(p) where p.name <> 'novel' return p.name limit 6"}, {"query": "Can you tell me who the person with the comic book tag is and what his profession is? Please list me 5 of them.", "cypher": "match (:ENTITY{name:'comic'}) <- [:Tag{name:'tag'}]-(p),(p) - [:Relationship{name:'profession'}]->(h) return p.name,h.name skip 2 limit 5"}, {"query": "Who are the actors in Qing Dynasty Beijing Theater in Anhui?", "cypher": "match (:ENTITY{name:'Tsingde Jinjiang theatre actor'}) <- [:Relationship{name:'profession'}]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) where n.name='Anhui' return distinct m.name"}, {"query": "The book is a collection of short stories, which are written by the author himself.", "cypher": "match (n:ENTITY{name:'search for Lee'}) - [:Relationship*1..2]->(x) where x.name <>'literary work' return distinct x.name"}, {"query": "Do you know which Chinese children's songs are recommended?", "cypher": "match (:ENTITY{name:' in Chinese'}) <- [:Relationship{name:' language'}]- (p) return p.name limit 11"}, {"query": "Three words to explain to me what a 1216C3 bearing is?", "cypher": "match (:ENTITY{name:'1216C3 bearing'}) --(x) with x order by x.name return x.name limit 3"}, {"query": "I know that Liu Wenqiang is the general of the country, can you provide me with 6 other information within 3 levels related to him?", "cypher": "match (:ENTITY{name:'sweets'}) -[*1..3]-(p) where p.name <> 'China' return p.name limit 6"}, {"query": "Is it possible to provide information about the relationship between the two layers of the subgroup of winged finches?", "cypher": "match (n:ENTITY{name:'footworm'}) - [:Relationship*1..2]->(x) where x.name <>' has a winged sub-frame' return distinct x.name"}, {"query": "What are some of the novels that belong to the fairy tale genre?", "cypher": "match (:ENTITY{name:'Fairy tale'}) <- [:Relationship{name:' novel type'}]- (m) return m.name limit 6"}, {"query": "Do you know what the main prize is for a person weighing 75.0 kg?", "cypher": "match (:ENTITY{name:'75.0kg'}) <- [:Relationship{name:'weight'}]-(h),(h) - [:Relationship{name:'main prize'}]->(n) return distinct n.name limit 1"}, {"query": "The phrase \"like an arrow in a string\" comes from what verse?", "cypher": "match (:ENTITY{name:'like arrows on a string'}) - [:Relationship{name:'from where'}]-> (m) return distinct m.name"}, {"query": "What is the name of the Malaysian hijacking case?", "cypher": "match (:ENTITY{name:'Malaysia Airlines hijacking case'}) <- [:Relationship{name:'event'}]- (m) return m.name"}, {"query": "The 45kg actor was given a second representation, one of which was removed from the boxing hall.", "cypher": "match (:ENTITY{name:'45KG'}) <- [:Relationship{name:'weight'}]-(x),(x) - [:Relationship{name:'represents work'}]->(q) where q.name <> 'boxing hall' return distinct q.name limit 1"}, {"query": "Tell me what is the third level of your relationship with the industry?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'industry figure'}) RETURN distinct n.name limit 5"}, {"query": "What is the name of the Buddhist cave statue created during the Tang Dynasty?", "cypher": "match (:ENTITY{name:'begins with Liang Tang ,Yen and Mingqing'}) <- [:Relationship{name:'time of construction'}]-(m), (m) - [:Relationship{name:'famous sights'}]->(n) where n.name='Buddhist rock-cut statue' return distinct m.name"}, {"query": "What did the students from Zhejiang University and the Chinese Academy of Arts do together?", "cypher": "match (:ENTITY{name:'Zhejiang University, Chinese Academy of Arts'}) <- [:Relationship{name:'Graduate School'}]-(m),(m) - [:Relationship{name:'Profession'}]->(p) return distinct p.name limit 1"}, {"query": "Please help me find three university professors, what nationality are they?", "cypher": "match (:ENTITY{name:' university teacher'}) <- [*]-(m), (m) - [:Relationship{name:' nationality'}]->(n) return m.name, n.name limit 3"}, {"query": "09 Trend can add more tags to the game?", "cypher": "match (:ENTITY{name:'09flutter'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'game' return h.name"}, {"query": "Give me five sports figures, what are their signs?", "cypher": "match (:ENTITY{name:'sportsman'}) <- [*]-(m), (m) - [:Relationship{name:'constellation'}]->(n) return m.name, n.name limit 5"}, {"query": "What do you know about ordinary women?", "cypher": "match (:ENTITY{name:'normal woman'}) --(n) return n.name skip 3"}, {"query": "Please list me 10 major departments of schools in Liaoning Province that are under the jurisdiction of the Ministry of Education.", "cypher": "match (:ENTITY{name:'Lenin Province'}) <- [:Relationship{name:'competent department'}]-(m),(m) - [:Relationship{name:'main department'}]->(q) return q.name order by q.name limit 10"}, {"query": "I wonder what other label characteristics this European entertainment from 1951 has?", "cypher": "match (:ENTITY{name:'Europe in 1951'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'entertainment work' return m.name"}, {"query": "What are the attributes of the 101\u00b0C theory in the education category?", "cypher": "match (:ENTITY{name:'101\u00b0C theory'}) - [:Tag{name:'label'}]-> (q) with q order by q.name where q.name <> 'education' return q.name"}, {"query": "What is the acronym for 5S Field Management?", "cypher": "match (p:ENTITY{name:'5S field management'}) <- [:Relationship{name:'full name'}]- (x) return distinct x.name"}, {"query": "Do you know which tournament was held from March 1, 2014 to December 8, 2014?", "cypher": "match (:ENTITY{name:'March 1, 2014 to December 8, 2014'}) <- [:Relationship{name:'time held'}]- (x) return distinct x.name"}, {"query": "What is the most representative work of Georgia Engel? Can you name the first one?", "cypher": "match (:ENTITY{name:'Georgia Engel'}) - [:Relationship{name:'represents work'}]-> (x) return x.name order by x.name limit 1"}, {"query": "Can you find the three city-level TV stations?", "cypher": "match (:ENTITY{name:'citywide television station'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'headquarters location'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Can you get me three books on political and military books to read?", "cypher": "match (:ENTITY{name:'political and military books'}) <- [:Tag{name:'tags'}]-(n) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 3"}, {"query": "Can you tell me about the 5 articles related to Meilak Stephen?", "cypher": "match (n:ENTITY{name:'Meilak Stephen'}) - [*]->(x) where x.name<>'Meilak Stephen' return distinct x.name limit 5"}, {"query": "The first thing I did was to collect information about the water and field doll world.", "cypher": "match (:ENTITY{name:'Doll World'}) --(p) with p order by p.name where p.name <> 'water and fields' return p.name"}, {"query": "Can you list what the original title of A Treatise of Human Nature was called?", "cypher": "Match (:ENTITY{name:'A Treatise of Human Nature'}) <- [:Relationship{name:'Original name'}]- (h) return h.name"}, {"query": "Can you please tell me which professions are in the 2015 Chen Chen Guangzhou Concert?", "cypher": "match (:ENTITY{name:'2015 Chen Zhen Guangzhou Concert'}) - [:Relationship{name:'profession'}]-> (q) return q.name order by q.name limit 5"}, {"query": "Who is considered a person in the industry? Give 5 examples.", "cypher": "match (:ENTITY{name:'person in the industry'}) <--(n) return n.name limit 5"}, {"query": "Can you find me the publication of three defense industry publications and their publication dates?", "cypher": "match (:ENTITY{name:'Defense Industry Publishing'}) <- [:Relationship{name:'Defense Industry Publishing'}]-(h),(h) - [:Relationship{name:'Publishing time'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Please help me find out the five personal profiles of footballer Figueras Fabio in the 5 levels of his relationship.", "cypher": "match (n:ENTITY{name:'Figurillas Fabio'}) - [*1..5]->(x) where x.name<> 'footballer' return distinct x.name limit 5"}, {"query": "I want information about the three-layer relationship between the logic circuits created by Hu Jintao and the single-chip machine base.", "cypher": "match (n:ENTITY{name:'Logic circuit and single-chip base'}) - [:Relationship*1..3]->(x) where x.name<>'Hu Jintao' return distinct x.name"}, {"query": "The writer, who is the executive director of the Jinjiang Treasure Gallery, talks about his three different achievements.", "cypher": "match (:ENTITY{name:' calligrapher'}) <- [:Relationship{name:' profession'}]-(q) - [:Relationship{name:' major achievements'}]->(m) where m.name <> 'Executive Director of the Beijing Junto Gallery' return distinct m.name limit 3"}, {"query": "Are you looking for Chinese-language TV series that are airing in Hong Kong, China?", "cypher": "match (:ENTITY{name:'China Hong Kong'}) <- [:Relationship{name:'show area'}]- (mn) - [:Relationship{name:'language version'}]->(n:ENTITY{name:'national language'}) return mn.name"}, {"query": "The city of earth is the representative work of which?", "cypher": "match (:ENTITY{name:'The city that once stood tall'}) <- [:Relationship{name:'The city that once stood tall'}]- (h) return h.name order by h.name"}, {"query": "Do you know what events Lhasa has hosted?", "cypher": "match (:ENTITY{name:'Lasa'}) <- [:Relationship{name:'place of hosting'}]- (n) return n.name"}, {"query": "I saw a word with a social label called China Bedroom Culture Festival 2011, did he have any other tags?", "cypher": "match (:ENTITY{name:'2011 China Bedroom Culture Festival'}) --(p) with p order by p.name where p.name <> 'social' return p.name limit 10"}, {"query": "What are the components and constituent elements of the ejected nebula?", "cypher": "match (:ENTITY{name:'launched star cloud'}) - [:Relationship{name:'component'}]->(n) return n.name as name union all match (:ENTITY{name:'launched star cloud'}) - [:Relationship{name:'component'}]->(m) return m.name as name"}, {"query": "What are the main achievements of the Chinese Academy of Engineering? 10 lines please?", "cypher": "match (:ENTITY{name:'Academician of the Chinese Academy of Engineering'}) <- [:Relationship{name:'profession'}]-(h) - [:Relationship{name:'main achievements'}]->(x) return x.name order by x.name limit 10"}, {"query": "What are the names of the companies that were founded at the same time as Zhejiang Ferraris Furniture Manufacturing Co., Ltd. and what are their labels? Please list them in order of number of labels, from large to small.", "cypher": "match (n:ENTITY{name:'Zhejiang Flaherty Furniture Manufacturing Limited'}) - [:Relationship{name:'founded'}]->(:ENTITY) <- [:Relationship{name:'founded'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC "}, {"query": "What are the species of wood-boring beetles? Can you name 6?", "cypher": "match (:ENTITY{name:'wood white shark'}) <- [:Relationship{name:'class'}]- (m) return m.name limit 6"}, {"query": "How much do you know about the 1000 Mystery Labels?", "cypher": "match (:ENTITY{name:'1000 historical puzzles'}) - [:Tag{name:'tags'}]-> (m) with m order by m.name return m.name"}, {"query": "Do you know how many anime movies have men sign names?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(q),(q) - [:Relationship{name:'hands down'}]->(h) return distinct h.name limit 3"}, {"query": "Do you know the name of the first secondary school in Changsha, Hunan province?", "cypher": "match (:ENTITY{name:'First secondary school in Changsha City, Hunan Province'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'abbreviated'}]->(n) return distinct n.name"}, {"query": "What is the phenomenon of fog in winter?", "cypher": "match (:ENTITY{name:'the mist of winter'}) <- [:Relationship{name:'the typical glare'}]-(m) return distinct m.name"}, {"query": "Try to find out which labels can be found for Type 1 Hexagon Nuts.", "cypher": "match (:ENTITY{name:'1 type hexagonal nut'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name"}, {"query": "I want to know about the three other witches in SEED Hidary besides the entertainment?", "cypher": "match (:ENTITY{name:'Magical Girl SEED Hidary'}) --(m) with m order by m.name where m.name <> 'entertainment work' return distinct m.name limit 3"}, {"query": "Do you know what the label on the Nanjing City License for the Marketing of Clenbuterol [Retail Declaration No. 20090047] is?", "cypher": "match (:ENTITY{name:' Nanjing City Pharmaceutical License for the manufacture of acupuncture [Retail declaration No. 20090047]'}) - [:Tag{name:'label'}]-> (n) return n.name skip 1"}, {"query": "I am Cao Aung from the Three Kingdoms, do you know anything else besides the novel? Help me find 5 information in 2 layers.", "cypher": "match (:ENTITY{name:'I am Cao Aung from the Three Kingdoms'}) - [*1..2]-(p) where p.name <> 'crossing novel' return p.name limit 5"}, {"query": "What is primary school, please tell me in an orderly way?", "cypher": "match (h:ENTITY{name:'-[primary]'}) --(p) with p order by p.name return p.name"}, {"query": "The incident was reported to be a fight in which at least 10 people were injured.", "cypher": "match (:ENTITY{name:'at least 10 people injured'}) <- [:Relationship{name:'injured'}]- (q) return distinct q.name"}, {"query": "What are the lakes in the Canadian provinces?", "cypher": "match (:ENTITY{name:'Canada'}) <- [:Relationship{name:'administrative district category'}]->(n) where n is not null return distinct n.name"}, {"query": "What are the other novels in the series? 11 books to recommend?", "cypher": "match (:ENTITY{name:'in the connection'}) <- [:Relationship{name:'in the connection'}]- (n) return n.name limit 11"}, {"query": "The book is called Secondary Medical Supplementary Materials: An Introduction to the Secondary Relationship in Natural Medicine Chemistry.", "cypher": "match (n:ENTITY{name:'Semi-annual medical supporting material: natural medicine chemistry textbook'}) - [:Relationship*1..2]->(x) where x.name<>'Semi-annual medical supporting material: natural medicine chemistry textbook' return distinct x.name"}, {"query": "Can you tell me about the two films directed by director Kim Yong-ki?", "cypher": "Match (n:ENTITY{name:'Kin Yong-kyu'}) <- [:Relationship{name:'director'}]- (mn) return mn.name limit 2"}, {"query": "Do you know how many reports of the list of local regulations for the level of efficiency?", "cypher": "match (:ENTITY{name:'Local regulations'}) <- [:Relationship{name:'level of effectiveness'}]- (p) return p.name limit 4"}, {"query": "I understand that the Yangzhou e-commerce creative industrial park is a foreign name for Yangzhou e-commerce creative park, which was established in May 2014.", "cypher": "match (n:ENTITY{name:'Yanzhou West District New City e-commerce creative industrial park'}) -->(h) with h order by h.name where h.name <> 'Yangzhou e-commerce Creative Park' and h.name <> 'May 2014' return h.name limit 3"}, {"query": "Tell me about 214 degrees of the evil dragon prince and what other characteristic labels are there besides the novel labels? (not more than ten)", "cypher": "match (:ENTITY{name:'214 degree evil dragon prince'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'novel' return h.name limit 10"}, {"query": "In addition to winning the Best Director award at the 63rd Academy Awards, can you tell me 6 things you know about Kevin Costner in Level 2?", "cypher": "match (:ENTITY{name:'Kevin Costner'}) - [:Relationship*1..2]->(p) where p.name <> 'Best Director at the 63rd Academy Awards' return p.name limit 6"}, {"query": "The novel progress is complete, which ones? Do you know five?", "cypher": "match (:ENTITY{name:' completed'}) <- [:Relationship{name:' novel progress'}]- (x) return x.name order by x.name limit 5"}, {"query": "I want you to tell me about the Golden Temple.", "cypher": "match (:ENTITY{name:'gold repair'}) --(m) return m.name order by m.name"}, {"query": "What is the meaning of the ozone hole? What is its distribution?", "cypher": "match (:ENTITY{name:' ozone layer gap'}) - [:Relationship{name:' meaning'}]->(n) return n.name as name union all match (:ENTITY{name:' ozone layer gap'}) - [:Relationship{name:' distribution range'}]->(m) return m.name as name"}, {"query": "Do you want to know the details of the three-tier relationship in the Kim River Gorge Watershed Scenic Area in Yongcheng County, Kimyang City, Gansu Province?", "cypher": "match (n:ENTITY{name:'Kinchuan Gorge Watershed Scenic Area'}) - [*1..3]->(x) where x.name <>'Kinchuan City Yongxin County, Gansu Province' return distinct x.name"}, {"query": "What is the su-30MKK?", "cypher": "match (:ENTITY{name:'su-30MKK'}) --(x) return distinct x.name"}, {"query": "I'm not sure if you can name a few famous people's representative works, say three?", "cypher": "match (x:ENTITY{name:'person'}) <- [:Tag{name:'tag'}]-(m),(m) - [:Relationship{name:'represents work'}]->(p) return distinct p.name limit 3"}, {"query": "Please provide me with personal information about Buhagiar Angus, a Maltese citizen with no more than 6 levels of relationship?", "cypher": "match (n:ENTITY{name:'Buhagiar Angus'}) - [*1..6]->(x) where x.name<>'Malta' return distinct x.name limit 5"}, {"query": "How do you explain the low-key mindset?", "cypher": "match (:ENTITY{name:' low-down'}) - [:Relationship{name:' meaning'}]-> (m) return m.name"}, {"query": "I don't know where this guy who weighs 70kg played? can you tell me one?", "cypher": "match (:ENTITY{name:'70.0 KG'}) <- [:Relationship{name:'weight'}]-(p) - [:Relationship{name:'has played'}]->(x) return x.name order by x.name limit 1"}, {"query": "Can you tell me about the football player Badur Valentin, who has no less than two levels of relationships?", "cypher": "match (n:ENTITY{name:'Badul Valentine'}) - [*1..2]->(x) where x.name <> 'footballer' return distinct x.name"}, {"query": "What are the main achievements of the people of the White Aries sign?", "cypher": "match (:ENTITY{name:'Aries'}) <- [:Relationship{name:'Aries'}]-(h),(h) - [:Relationship{name:'Major achievement'}]->(q) return distinct h.name limit 3"}, {"query": "Is there a game where you have to go to the appropriate location to open the exit and it's a game of chicken?", "cypher": "match (:ENTITY{name:'Open the export to the corresponding location as requested'}) <-[:Relationship{name:'game target'}]-(p) -[:Tag{name:'tag'}]->(h) return distinct h.name limit 1"}, {"query": "Who proposed the magnetic bias?", "cypher": "match (:ENTITY{name:'magnetic bias'}) - [:Relationship{name:'proponent'}]->(m) return distinct m.name"}, {"query": "Can you find me three of the publications of Guangdong Audio Image Publishing?", "cypher": "match (:ENTITY{name:' Guangdong sounding like'}) <- [:Relationship{name:' publishing house'}]-(h),(h) - [:Relationship{name:' book name'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "The trouble is that I have three ordinary everyday stories that suddenly unfold in a way that is impossible to tell apart from the comic book labels.", "cypher": "match (:ENTITY{name:'It is impossible for ordinary everyday to suddenly blur'}) --(m) with m order by m.name where m.name <> 'comic book work' return distinct m.name limit 3"}, {"query": "What is the representation of Zhang?", "cypher": "match (x:ENTITY{name:'Zhang Zhenmei'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'represents work'}]->(m) return distinct m.name"}, {"query": "Can you give me five or more links to this person, Sinzelle J\u00e9r\u00e9my, with no less than four levels of connection?", "cypher": "match (n:ENTITY{name:'Sinzelle J\u00e9r\u00e9my'}) - [*1..4]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "I'm looking for a book called \"A Bit of Italy Again\" about the relationship between two people.", "cypher": "match (n:ENTITY{name:'more bites of Italian'}) - [:Relationship*1..2]->(x) where x.name <>'simply' return distinct x.name"}, {"query": "Please let me know what is going on in the song and TV series about the remaining sins.", "cypher": "match (:ENTITY{name:'residual offence'}) --(m) return distinct m.name"}, {"query": "What do you know about people who steal time?", "cypher": "match (n:ENTITY{name:'the people who steal time'}) --(x) return x.name"}, {"query": "Can you name three English names for the abdominal animals?", "cypher": "match (:ENTITY{name:'blank'}) <- [:Relationship{name:'blank'}]-(m),(m) - [:Relationship{name:'English name'}]->(q) return distinct q.name limit 3"}, {"query": "What does this represent for everyone?", "cypher": "match (:ENTITY{name:'Cold'}) - [:Relationship{name:'Representing work'}]-> (n) return n.name order by n.name"}, {"query": "What is the name of the coal field in the Krasnoyarsk border region of Russia?", "cypher": "match (:ENTITY{name:'Krasnoyarsk border region of Russia'}) <- [:Relationship{name:' geographical location'}]-(m) return distinct m.name"}, {"query": "When did the company start?", "cypher": "match (p:ENTITY{name:'curve company'}) return p.time"}, {"query": "I heard that broad water bean skin, also known as bean paste, is made mainly from rice, peas, and you can give me two more details about it.", "cypher": "match (n:ENTITY{name:'sweet potatoes'}) -->(h) with h order by h.name where h.name <> 'sweet potatoes' and h.name <> 'sweet potatoes' return h.name limit 2"}, {"query": "I'm going to get 10 salads, what are the main ingredients?", "cypher": "match (:ENTITY{name:'spice'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:'main ingredient'}]->(n) return distinct m.name,n.name limit 10"}, {"query": "Do you have any medical doctors in Canada?", "cypher": "match (:ENTITY{name:'Canada'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='medical doctor' return distinct m.name"}, {"query": "Can you recommend a textbook for teaching CAD/CAM/CAE videos?", "cypher": "match (:ENTITY{name:'CAD/CAM/CAE self-learning video tutorial'}) <- [:Relationship{name:'Chamber name'}]- (x) return distinct x.name"}, {"query": "Where did the meeting of a woman in a traditional French chivalric costume come from?", "cypher": "match (:ENTITY{name:'a woman in a traditional French knightly costume'}) <- [:Relationship{name:'subject'}]- (h) return h.name"}, {"query": "What is the name of the currency used in Haiti?", "cypher": "match (:ENTITY{name:'Haitian circulating coin'}) --(x) return distinct x.name"}, {"query": "The other 8 information provided to me are the following: Shipin County, Red River State, Yunnan Province, Wangjiao Village [subdistrict of Shipin County, Red River State, Yunnan Province]", "cypher": "match (:ENTITY{name:'Wang Family\u51b2\u6751[Yunnan Province Red River State, Shichuan County under the jurisdiction of]'}) - [*1..3]-(p) where p.name <> 'Yunnan Province Red River State, Shichuan County' return distinct p.name limit 8"}, {"query": "Can you recommend 5 songs in Yoruba?", "cypher": "match (:ENTITY{name:'slang'}) <- [:Relationship{name:'slang'}]- (p) return distinct p.name limit 5"}, {"query": "Which academic conference opened on June 27, 2008?", "cypher": "match (:ENTITY{name:'June 27, 2008'}) <- [:Relationship{name:'Opening date'}]- (p) return p.name"}, {"query": "What information do you know about the two-layer relationship of foliar growth, other than non-communicable diseases?", "cypher": "match (:ENTITY{name:' small leaf growth'}) - [*1..2]->(p) where p.name <> 'not contagious' return p.name limit 10"}, {"query": "What is the full name of CAE?", "cypher": "match (:ENTITY{name:'CAE'}) - [:Relationship{name:'foreign language name'}]->(m) return distinct m.name"}, {"query": "Do you remember the murder on the street, what was it called?", "cypher": "match (:ENTITY{name:'When the Street Murder'}) <- [:Relationship{name:'the incident'}]- (m) return m.name"}, {"query": "Tell me what the main awards were for the founding of the institution in 1870?", "cypher": "match (:ENTITY{name:'1870'}) <- [:Relationship{name:'time of creation'}]-(h),(h) - [:Relationship{name:'main award'}]->(n) return distinct n.name limit 5"}, {"query": "In addition to being a member of the Zhejiang Provincial Tax Department, what other professions are called Fan Guofeng?", "cypher": "match (:ENTITY{name:'Fan Guo'}) <- [:Relationship{name:'Chinese name'}]-(m) - [:Relationship{name:'profession'}]->(p) where p.name <> 'Member of the Party of the Zhejiang Provincial Tax Administration' return distinct p.name limit 5"}, {"query": "Do you know the name of the plane crash that happened in North Carolina?", "cypher": "match (:ENTITY{name:'North Carolina'}) <- [:Relationship{name:'place of occurrence'}]- (q) return distinct q.name"}, {"query": "Do you know what chemical has a molecular mass of 100.12?", "cypher": "match (q:ENTITY{name:'100.12'}) <- [:Relationship{name:'molecular mass'}]- (m) return distinct m.name"}, {"query": "The Chinese government has announced that it will be closing three jobs for Han Chinese who are not military personnel.", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(x),(x) - [:Relationship{name:'profession'}]->(p) where p.name <> 'military' return distinct p.name limit 3"}, {"query": "Find three dialogues, who directed them all.", "cypher": "match (:ENTITY{name:'talk drama'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'director'}]->(n) return m.name, n.name limit 3"}, {"query": "Do you have any content that is about the honeymoon?", "cypher": "match (h:ENTITY{name:'love-moon'}) --(m) return distinct m.name"}, {"query": "Can you tell me about the profile of Ndori Jean-Claude, the fifth best footballer of the world, and his fourth relationship?", "cypher": "match (n:ENTITY{name:'Ndori Jean-Claude'}) - [*1..4]->(x) where x.name <> 'football' return distinct x.name limit 5"}, {"query": "Could you please tell me about his five major achievements after graduating from Peking University?", "cypher": "match (:ENTITY{name:'Beijing University'}) <- [:Relationship{name:'Graduate School'}]-(n),(n) - [:Relationship{name:'Main achievement'}]->(h) return h.name order by h.name limit 5"}, {"query": "I wonder what the name of the crash that happened on November 15, 2017 is?", "cypher": "match (:ENTITY{name:'15 November 2017'}) <- [:Relationship{name:'time of occurrence'}]- (p) return distinct p.name"}, {"query": "Can you name three novels in the genre of urban romance?", "cypher": "match (:ENTITY{name:'city language'}) <- [:Relationship{name:'type'}]- (m) return m.name limit 3"}, {"query": "What kind of work do Chinese people do?", "cypher": "match (n:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(h),(h) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 5"}, {"query": "We are a Greater China owned label, what else is there that isn't music and singles?", "cypher": "match (n:ENTITY{name:'We are Greater China'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'music' and h.name <> 'single' return distinct h.name limit 2"}, {"query": "Can you recommend 10 strategy games for me?", "cypher": "match (:ENTITY{name:'strategy'}) <- [:Relationship{name:'game type'}]- (h) return h.name limit 10"}, {"query": "Did you know that people who are 158 can live with themselves?", "cypher": "match (:ENTITY{name:'158cm'}) <- [:Relationship{name:'height'}]-(n),(n) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 5"}, {"query": "Can you find Tom Rusling?", "cypher": "match (n:ENTITY{name:'Tom Rusling'}) where n is not null return 1"}, {"query": "The information provided to me is applicable to public toilets and so on, and seven steps inside the three-level foot washing facilities.", "cypher": "match (:ENTITY{name:' foot-scrubbing tub'}) - [*1..3]-(p) where p.name <> ' public toilets and other places' return distinct p.name limit 7"}, {"query": "Can you list some of the government's work reports for 2012?", "cypher": "match (:ENTITY{name:'2012'}) <- [:Relationship{name:'yearly'}]- (q) return distinct q.name"}, {"query": "Do you know of any other relevant information about the battle of the Trench besides the fact that it was a foreign historical event? Help me find 50 information in 3 layers.", "cypher": "match (:ENTITY{name:'Battle of the Trench'}) - [*1..3]->(p) where p.name <> 'Foreign historical event' return p.name limit 50"}, {"query": "Let me see what kind of books are in the Landscape World 3?", "cypher": "match (:ENTITY{name:'* landscaping world3'}) --(x) with x order by x.name where x.name <> 'books' return x.name"}, {"query": "Please help me find the other 7 information in the third level of the official Li Shijie.", "cypher": "match (:ENTITY{name:' Lee Hsuch'}) - [:Relationship*1..3]-(p) where p.name <> 'official' return p.name limit 7"}, {"query": "Can you now provide all the information about the Central Radio Television University of Wushu teaching site?", "cypher": "match (:ENTITY{name:' Central Broadcasting Television University of Wuchang teaching point'}) --(x) return distinct x.name"}, {"query": "The monument was built in honor of five countrymen, including Zhiwei, Xu Zhi, and Lin, in Nanchang, Jiangsu Province, in the eastern province of Jiangsu.", "cypher": "match (n:ENTITY{name:'Five-Dimensional Monument'}) -->(h) with h order by h.name where h.name <> 'Jigvi Liu, Xu Xiao, Five countrymen in Lin' and h.name <> 'Nancheng City, Jiangsu Province, Dong County' return h.name limit 3"}, {"query": "Please provide three information about the nutrition program for infants 0-3 years old.", "cypher": "match (:ENTITY{name:'0-3 years old infant and toddler nutrition program'}) --(n) with n order by n.name return n.name limit 3"}, {"query": "Please describe 10 representative works of this Uyghur figure.", "cypher": "match (:ENTITY{name:'Uyghur people'}) <- [:Relationship{name:'ethnicity'}]-(m),(m) - [:Relationship{name:'representative work'}]->(x) return x.name skip 3 limit 10"}, {"query": "What is the chemical formula for iron oxide?", "cypher": "match (:ENTITY{name:'iron oxide red'}) - [:Relationship{name:'other name'}]->(n) return n.name as name union all match (:ENTITY{name:'iron oxide red'}) - [:Relationship{name:'chemical formula'}]->(m) return m.name as name"}, {"query": "In addition to the public secondary schools, I was given 6 information about the secondary school in Son Zhong, Hai An County.", "cypher": "match (:ENTITY{name:'Soon Chow Secondary School'}) - [*1..2]-(p) where p.name <> 'Public school' return distinct p.name limit 6"}, {"query": "What are the official statements made by the People's Republic of China and the Ministry of Health?", "cypher": "match (:ENTITY{name:'MH'}) <- [:Relationship{name:'development unit'}]- (mn) - [:Tag{name:'tag'}]->(n:ENTITY{name:'publications'}) return mn.name"}, {"query": "I'm wondering if you can tell me which landmarks and companies are located in Fujian?", "cypher": "match (m:ENTITY{name:'Fujiwang'}) <- [:Relationship{name:'location'}]- (n) return distinct n.name"}, {"query": "Can you help me find some recipes for spring onions and peas?", "cypher": "match (:ENTITY{name:'sweet potatoes'}) <--(n) return n.name"}, {"query": "The website is owned by the founder of the company, who is known as Tante & Tante.", "cypher": "match (:ENTITY{name:'Miss and Daddy'}) <- [:Relationship{name:'\u5802\u5740'}]-(p) - [:Relationship{name:'founder'}]->(m) return m.name order by m.name limit 1"}, {"query": "Help me find the scenic spots in the summer mountain of Zand in Hebei.", "cypher": "match (:ENTITY{name:'Summer hill in Hebei'}) <- [:Relationship{name:' located in '}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='landscape attraction' return distinct m.name"}, {"query": "How many people live in Arizona? What are the famous attractions?", "cypher": "match (:ENTITY{name:'Arizona'}) - [:Relationship{name:'population'}]->(n) return n.name as name union all match (:ENTITY{name:'Arizona'}) - [:Relationship{name:'famous attractions'}]->(m) return m.name as name"}, {"query": "I would like to know about the literary works in the context of the two-tier relationship between the theme of the park and the theme of the park.", "cypher": "match (n:ENTITY{name:'residence park complex; no-word-box'}) - [*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "The first is the story of a young girl who is forced to marry a man who is not her husband.", "cypher": "match (:ENTITY{name:'substitute for queen'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "Can you find 5 types of my lucky goddess other than love?", "cypher": "match (:ENTITY{name:'Yummy my lucky god'}) --(m) with m order by m.name where m.name <> 'love' return distinct m.name limit 5"}, {"query": "I'm looking for a desert island, where?", "cypher": "match (:ENTITY{name:'unbuilt island'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:' geographical location'}]->(n) return m.name,n.name limit 1"}, {"query": "Can you talk to me about Ren Shanping?", "cypher": "match (n:ENTITY{name:'rng'}) --(x) return x.name"}, {"query": "I know that the Riverrun family is from the Riverrun Peninsula, can you give me 7 other information in 3 levels?", "cypher": "match (:ENTITY{name:' family of river source guests'}) - [*1..3]-(p) where p.name <> ' river source slang' return p.name limit 7"}, {"query": "What is the relationship between the writing and visual narrative/visual culture and art history under the three levels of the novel?", "cypher": "match (n:ENTITY{name:'Writing and visual narrative/Visual culture and art history'}) - [:Relationship*1..3]->(x) where x.name<>'Rumin Army' return distinct x.name"}, {"query": "What is the nature of the station? When was it established?", "cypher": "match (:ENTITY{name:'Puning Bus Station'}) - [:Relationship{name:'abbreviated'}]->(n) return n.name as name union all match (:ENTITY{name:'Puning Bus Station'}) - [:Relationship{name:'Station characteristics'}]->(m) return m.name as name union all match (:ENTITY{name:'Puning Bus Station'}) - [:Relationship{name:'Time of establishment'}]->(r) return r.name as name"}, {"query": "Can you list the works of the three Capricorns?", "cypher": "match (:ENTITY{name:'Scorpio'}) <- [:Relationship{name:'Scorpio'}]-(h) - [:Relationship{name:'main work'}]->(m) return m.name order by m.name limit 3"}, {"query": "What is the name of the accident that happened on the 330 National Road in Wuyi County's Tanguay Township, Chiang Kai-shek Village?", "cypher": "match (:ENTITY{name:'Wuy County Tunnel Township, Wujian Village, 330 National Road'}) <- [:Relationship{name:'place of occurrence'}]- (h) return distinct h.name"}, {"query": "Do you know the name of the event organized by the West Bay Academy?", "cypher": "match (:ENTITY{name:'Syan Pepa University'}) <- [:Relationship{name:'host unit'}]- (m) return distinct m.name"}, {"query": "The book by the author edited by Marginal can you tell me which publisher published it?", "cypher": "match (:ENTITY{name:' marginal'}) <- [:Relationship{name:' author'}]-(h),(h) - [:Relationship{name:' publisher'}]->(q) return distinct h.name,q.name"}, {"query": "Can you name the three main achievements of Liu Guanxin?", "cypher": "match (:ENTITY{name:'Chang'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'main achievement'}]->(m) return distinct m.name limit 3"}, {"query": "What are the jobs of the students who graduated from the Baoding Music School?", "cypher": "match (:ENTITY{name:'Bohol Music School'}) <- [:Relationship{name:'Graduate School'}]-(h),(h) - [:Relationship{name:'Profession'}]->(q) return distinct q.name"}, {"query": "What are the three professions of graduates of the Beijing Film Academy?", "cypher": "match (:ENTITY{name:'Beijing Film Academy'}) <- [:Relationship{name:'Graduate School'}]-(n) - [:Relationship{name:'Profession'}]->(q) return distinct q.name limit 3"}, {"query": "The most familiar stranger is from which album?", "cypher": "match (:ENTITY{name:' most familiar stranger'}) <- [:Relationship{name:' Chinese name'}]-(p) - [:Relationship{name:' belongs to album'}]->(n) return distinct n.name"}, {"query": "Do you know which software is licensed by an unknown software?", "cypher": "match (:ENTITY{name:' unknown'}) <- [:Relationship{name:' software licensed'}]- (n) return n.name limit 10"}, {"query": "Do you know what other information is out there besides the encyclopedia, please find the other 5 information in the 3 layers", "cypher": "match (:ENTITY{name:'snowdrops'}) - [*1..3]->(p) where p.name <> 'Encyclopedia Liliaceae' return p.name limit 5"}, {"query": "Can you find me a book by author Zhang Guoyu?", "cypher": "match (:ENTITY{name:'\u5f20\u5e7f\u5b87 \u7f16'}) <- [:Relationship{name:' author'}]-(h),(h) - [:Relationship{name:' book name'}]->(q) return distinct h.name,q.name"}, {"query": "How much capacity does the yogurt machine have?", "cypher": "match (:ENTITY{name:' yogurt machine'}) - [:Relationship{name:' capacity'}]->(m) return distinct m.name"}, {"query": "Name the six books published by higher education publishers, and the year of publication?", "cypher": "match (:ENTITY{name:' Higher Education Publishing'}) <- [*]-(m), (m) - [:Relationship{name:' Date of publication'}]->(n) return distinct m.name, n.name limit 6"}, {"query": "What are the public universities in Shandong Province?", "cypher": "match (:ENTITY{name:'Shandong Province of China'}) <- [:Relationship{name:'area'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='public university' return distinct m.name"}, {"query": "Please let me know about the secondary vocational school in Xinjiang city.", "cypher": "match (:ENTITY{name:'Hingyi City Secondary Vocational School'}) --(h) return h.name skip 3"}, {"query": "What chemical has a molecular weight of 145.56?", "cypher": "match (:ENTITY{name:'145.56'}) <- [:Relationship{name:'molecular mass'}]- (p) return distinct p.name"}, {"query": "What is the name of the game between Real Madrid and Sevilla?", "cypher": "match (q:ENTITY{name:' Real Madrid VS Sevilla'}) <- [:Relationship{name:' opposing '}]- (m) return m.name"}, {"query": "Can you tell me about the five levels of the relationship between Shields Solomon and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the five levels of the relationship between him and the two levels?", "cypher": "match (n:ENTITY{name:'Shields Solomon'}) - [*1..5]->(x) where x.name<> 'person' return distinct x.name limit 5"}, {"query": "The Chinese government has also been trying to find a way to stop the spread of the virus.", "cypher": "match (p:ENTITY{name:'Yunnan Dairi'}) <--(x) -->(q:ENTITY{name:'Namesite Monument'}) return x.name"}, {"query": "Do you know what kind of jobs Ralph Watt has?", "cypher": "match (:ENTITY{name:' Ralph Waite'}) - [:Relationship{name:' profession'}]-> (x) return x.name order by x.name"}, {"query": "I wonder what events Beijing Tencent Internet Technology Co. has organized?", "cypher": "match (:ENTITY{name:'Beijing Tenchan Road Network Technology Limited'}) <- [:Relationship{name:'host unit'}]- (m) return distinct m.name"}, {"query": "Can you find me two video and image software and describe them?", "cypher": "match (:ENTITY{name:'software of the video image class'}) <-[:Relationship*]-(m), (m) -[:Describe{name:'description'}]->(n) return m.name,n.name limit 2"}, {"query": "What else do you know about the East African Community other than that it is the second most populous country in Africa?", "cypher": "match (:ENTITY{name:'East African Union'}) - [:Relationship*1..3]-(p) where p.name <> 'second most populous country in Africa' return p.name limit 6"}, {"query": "What equipment is a laser alarm device used for?", "cypher": "match (:ENTITY{name:' laser alarm'}) - [:Relationship{name:' setting location'}]->(m) return distinct m.name"}, {"query": "Can you name one of the most representative works of the people of the Ishikawa border?", "cypher": "match (:ENTITY{name:'Kashinobe'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'representing work'}]->(m) return distinct m.name"}, {"query": "The award ceremony is held in the city of Gujarat, India.", "cypher": "match (:ENTITY{name:'8 awards'}) <- [:Relationship{name:'awards setting'}]- (p) return distinct p.name"}, {"query": "What are the names of the three famous attractions in the Shanghai Seagull Park in Zhejiang China Green Expo Park besides the deer and the tower?", "cypher": "match (n:ENTITY{name:'Beijing City; China Green Exhibition Park'}) - [:Relationship{name:'Famous attractions'}]->(h) where h.name <> 'Gangster' and h.name <> 'Fan Tower' return distinct h.name limit 3"}, {"query": "What is the name of the Islamic holy woman?", "cypher": "match (:ENTITY{name:'Islam'}) <- [:Relationship{name:'faith'}]-(m), (m) - [:Relationship{name:'alias'}]->(n) where n.name='holy woman' return distinct m.name"}, {"query": "Please tell me about the combined forces of the TAKM.", "cypher": "match (:ENTITY{name:'TAKM combined forces'}) --(p) return p.name order by p.name"}, {"query": "Do you know what are the most representative works of this Chinese person? Can you name three?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(x),(x) - [:Relationship{name:'representative work'}]->(q) return q.name order by q.name limit 3"}, {"query": "I'm not sure what the label is on the 180 Macaron network.", "cypher": "match (:ENTITY{name:'180 Maxi shopping cart'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "The following is an introduction to the three-layer relationship between real-time monitoring and analysis of the roller compaction quality control system.", "cypher": "match (n:ENTITY{name:'Relance quality monitoring and analysis system'}) - [:Relationship*1..3]->(x) where x.name <>'Roller compaction quality control' return distinct x.name"}, {"query": "Can you recommend 15 Chinese albums on 2 CDs?", "cypher": "match (:ENTITY{name:'national language album 2CD'}) <- [:Relationship{name:'language'}]- (x) return x.name limit 15"}, {"query": "Tell me who has the best civil servants and what is the main achievement?", "cypher": "match (:ENTITY{name:'Excellent civil servant'}) <- [:Relationship{name:'Main achievement'}]- (q) return q.name order by q.name limit 3"}, {"query": "What is the name of the book written by the main character in Brazil?", "cypher": "match (:ENTITY{name:'Brazilian, Shayda'}) <- [:Relationship{name:'main character'}]-(m), (m) - [:Relationship{name:'author'}]->(n) where n.name='three-haired' return m.name"}, {"query": "I wonder if you can tell me the top 5 representative works of this artist?", "cypher": "match (:ENTITY{name:' artist'}) <- [:Relationship{name:' profession'}]-(p),(p) - [:Relationship{name:' representing work'}]->(m) return m.name skip 2 limit 5"}, {"query": "What is the subject of Lee's film?", "cypher": "match (:ENTITY{name:'Lee Chul-lung'}) <- [:Relationship{name:'Pioneer'}]-(p) - [:Relationship{name:'Subject'}]->(n) return distinct n.name limit 1"}, {"query": "What is the name of the character?", "cypher": "match (:ENTITY{name:''}) - [:Relationship{name:'at the time'}]-> (m) return distinct m.name"}, {"query": "Can you name a profession that men do?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(p) - [:Relationship{name:'occupation'}]->(n) return distinct n.name limit 1"}, {"query": "What programs have been broadcast on SPIKE in the US?", "cypher": "match (:ENTITY{name:'US SPIKE radio station'}) <- [:Relationship{name:' issuing company'}]- (h) return h.name"}, {"query": "Can you list the personal circumstances of Varley Damien in the five-tier relationship?", "cypher": "match (n:ENTITY{name:'Varley Damien'}) - [*1..5]->(x) where x.name <> 'foreign name' return distinct x.name limit 5"}, {"query": "Speaking of who is an artist, what about musicians? Can you name the first three?", "cypher": "match (:ENTITY{name:' art  musician'}) --(p) return p.name order by p.name limit 3"}, {"query": "The author, born in 1935, has three other works to his credit, in addition to the one representing the forward's footsteps.", "cypher": "match (x:ENTITY{name:'1935'}) <- [:Relationship{name:'date of birth'}]-(p),(p) - [:Relationship{name:'represents work'}]->(n) where n.name <> 'step forward' return distinct n.name limit 3"}, {"query": "Help me find Chewan's books and tell me their publisher.", "cypher": "match (:ENTITY{name:'Shyuan'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Relationship{name:'publisher'}]->(q) return distinct h.name,q.name"}, {"query": "In addition to the organization and society, what are the other two labels of Shanghai TCM Space Design Engineering Limited?", "cypher": "match (n:ENTITY{name:'Shanghai Sheng Space Design Engineering Co. Ltd'}) - [:Tag{name:'tag'}]->(h) with h order by h.name where h.name <> 'organization' and h.name <> 'society' return h.name limit 2"}, {"query": "The following is a list of the most important things that I have learned about the creation of Quang Lin.", "cypher": "match (:ENTITY{name:'not to be overlooked details'}) --(p) with p order by p.name where p.name <> 'spring' return p.name"}, {"query": "Tell me about five things about David Odikadze, a Georgian, in the five-tier relationship?", "cypher": "match (n:ENTITY{name:'Odikadze David'}) - [*1..5]->(x) where x.name<>'Georgia' return distinct x.name limit 5"}, {"query": "What kind of substance has a density less than 0.730?", "cypher": "match (:ENTITY{name:' not greater than 0.730'}) <- [:Relationship{name:' density'}]- (n) return distinct n.name"}, {"query": "Can you recommend some literary works from Zhejiang publishing house?", "cypher": "match (:ENTITY{name:'Zhejiang Publishing'}) <- [:Relationship{name:'brand'}]- (x) return distinct x.name"}, {"query": "The Chinese government has been trying to get a job for a single Chinese person.", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(h) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 3"}, {"query": "The following is a list of software that is not more than 6 levels high in relation to the cultural application.", "cypher": "match (n:ENTITY{name:'same as in hand'}) - [*1..3]->(x) where x.name <> 'organization' return distinct x.name"}, {"query": "Please help me find 7 information in 3 layers other than that Craig Gordon is a football player.", "cypher": "match (:ENTITY{name:' Craig Gordon'}) - [*1..3]-(p) where p.name <> 'football' return p.name limit 7"}, {"query": "Do you know what anti-pollution 1 is?", "cypher": "match (:ENTITY{name:'Cromo-resistant 1'}) --(n) return n.name order by n.name"}, {"query": "Which of the five other core architectures does the Arrandale 32nm dual core not include?", "cypher": "match (:ENTITY{name:'laptop'}) <- [:Tag{name:'tag'}]-(p),(p) - [:Relationship{name:'core architecture'}]->(q) where q.name <> 'Arrandale 32nm binary' return distinct q.name limit 5"}, {"query": "What is Chen Siyu's profession?", "cypher": "match (:ENTITY{name:'\u9648\u53d9\u4e00'}) <- [:Relationship{name:' Chinese name'}]-(n),(n) - [:Relationship{name:' profession'}]->(m) return distinct m.name limit 1"}, {"query": "Ask if the five profiles in the fourth level of relationship of French national Radosavljevic Ludovic are okay?", "cypher": "match (n:ENTITY{name:'Radosavljevic Ludovic'}) - [*1..4]->(x) where x.name<>'Radosavljevic Ludovic, French athlete\u3002' return distinct x.name limit 5"}, {"query": "Mongolian folk song, please give me three labels.", "cypher": "match (:ENTITY{name:'(2CD) Mongolian folk song'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 3"}, {"query": "Please help me find the start and time of the World Indoor Soccer Championship.", "cypher": "match (:ENTITY{name:'World Indoor Soccer Championship'}) - [:Relationship{name:'Opening time'}]->(n) return n.name as name union all match (:ENTITY{name:'World Indoor Soccer Championship'}) - [:Relationship{name:'Opening venue'}]->(m) return m.name as name"}, {"query": "Can you recommend the three novels that are still in the series?", "cypher": "match (:ENTITY{name:'connected'}) <- [:Relationship{name:'novel progress'}]-(m),(m) - [:Relationship{name:'Chinese name'}]->(h) return distinct h.name limit 3"}, {"query": "Please help me find the three bamboo letters next to the nine in the pencil.", "cypher": "match (:ENTITY{name:'bamboo'}) <- [:Relationship{name:'part'}]-(m), (m) - [:Relationship{name:'total pencil'}]->(n) where n.name='9' return distinct m.name limit 3"}, {"query": "Can you list five things related to the 1949 moonlight?", "cypher": "match (:ENTITY{name:'1949th of July'}) --(q) with q order by q.name return q.name limit 5"}, {"query": "What would you label the 2011 average wage rankings?", "cypher": "match (:ENTITY{name:'2011 average salary ranking'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "Can you find out which of the three universities in the management department have won the major awards?", "cypher": "match (:ENTITY{name:' School of Management'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' major award'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "I want to know the names of five people born in February 1963?", "cypher": "match (:ENTITY{name:'February 1963'}) <- [:Relationship{name:'date of birth'}]-(h) return distinct h.name limit 5"}, {"query": "But can you find a 10 year old from 0 to 100 years old who can open their eyes and see the label of God and tell me?", "cypher": "match (:ENTITY{name:'0~100 years from opening your eyes to seeing God'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 10"}, {"query": "What specific information is there about Tanaka Rina, besides the voice acting?", "cypher": "match (:ENTITY{name:'Tana'}) --(m) with m order by m.name where m.name <> 'solo' return distinct m.name limit 3"}, {"query": "Who was the main commander of the Battle of Trafalgar?", "cypher": "match (:ENTITY{name:'Battle of Trafalgar'}) - [:Relationship{name:'Principal Commander'}]->(m) return distinct m.name"}, {"query": "What is the species of the parrot and where is it mainly distributed?", "cypher": "match (:ENTITY{name:'square'}) - [:Relationship{name:'class'}]->(n) return n.name as name union all match (:ENTITY{name:'square'}) - [:Relationship{name:'distribution area'}]->(m) return m.name as name"}, {"query": "Which hotels and bathhouses have room voltages of 220? Can you name 10?", "cypher": "match (:ENTITY{name:'220'}) <- [:Relationship{name:'room voltage'}]- (q) return q.name limit 10"}, {"query": "I'm going to give you three funny shows, what channel they're on.", "cypher": "match (:ENTITY{name:'funny show'}) <- [*]-(m), (m) - [:Relationship{name:'broadcast channel'}]->(n) return m.name, n.name limit 3"}, {"query": "What are the public universities in Jiangsu?", "cypher": "match (:ENTITY{name:'Jiangsu Wurzy'}) <- [:Relationship{name:'the region'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='public college' return distinct m.name"}, {"query": "What is the tagline for 008 Campaign?", "cypher": "match (:ENTITY{name:'008 campaign campaign campaign'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "What do you know about the situation of FC U-90 in Wuling?", "cypher": "match (:ENTITY{name:'Veneto County 90 United Football Club'}) --(x) return distinct x.name"}, {"query": "What are the labels for the number 0734?", "cypher": "match (p:ENTITY{name:'0374'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "Tell me about the five personal details of the 101kg Thompstone Adam.", "cypher": "match (n:ENTITY{name:'Thompstone Adam'}) - [*]->(x) where x.name<>'101 kg' return distinct x.name limit 5"}, {"query": "What is the difference between the near and the far words that are heard in the ears of thunder?", "cypher": "match (:ENTITY{name:'like a lightning strike'}) - [:Relationship{name:'like a lightning strike'}]->(n) return n.name as name union all match (:ENTITY{name:'like a lightning strike'}) - [:Relationship{name:'like a lightning strike'}]->(m) return m.name as name"}, {"query": "Can you tell me about the four-tiered relationship profile of Slovakian citizen Borbeli Barasz?", "cypher": "match (n:ENTITY{name:'Borbeli Barast'}) - [*1..4]->(x) where x.name<>'Slovakia' return distinct x.name limit 5"}, {"query": "What is the nutritional value of Haitian watermelon?", "cypher": "Match (:ENTITY{name:'Haitian pumpkin'}) - [:Relationship{name:'nutritional value'}]->(n) return n.name"}, {"query": "What medications can be used to treat acute chronic amoebic dysentery and hepatitis?", "cypher": "match (n:ENTITY{name:'Acute chronic amoebic dysentery and cirrhosis of the liver'}) <- [:Relationship{name:'main use case'}]- (h) return h.name"}, {"query": "Can you find the five films directed by Wang Jing and who produced them?", "cypher": "match (:ENTITY{name:'Wang Jing'}) <--(m), (m) - [:Relationship{name:'producer'}]->(n) return distinct m.name,n.name limit 5"}, {"query": "Can you tell me the name of Camila Cabello?", "cypher": "match (:ENTITY{name:'Camila Cabello'}) <- [:Relationship{name:'foreign name'}]-(h) - [:Relationship{name:'alias'}]->(x) return distinct x.name limit 1"}, {"query": "I wonder what games 37 Games has released?", "cypher": "match (:ENTITY{name:'37 game network'}) <- [:Relationship{name:' publisher'}]- (h) return h.name"}, {"query": "I'm going to be writing a book about the history of the Chinese people, and I'm going to write about the history of the Chinese people.", "cypher": "match (n:ENTITY{name:'Template:Citation needed to send a message to the post office'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "Did you have trouble recommending some BBC shows?", "cypher": "match (:ENTITY{name:'BBC'}) <- [Relationship{name:'production company'}]- (n) return distinct n.name"}, {"query": "The song was named one of the top ten songs of 2013 by China's Internet News and Influence.", "cypher": "match (:ENTITY{name:'Chinese'}) <- [:Relationship{name:'Song language'}]-(m),(m) - [:Relationship{name:'honor'}]->(x) where x.name <> 'China Internet affairs;move2013 ten people' return distinct x.name limit 10"}, {"query": "Who are the rich Chinese in Sichuan?", "cypher": "match (p:ENTITY{name:'Sichuan Fuchun'}) <--(x) -->(q:ENTITY{name:'Han Chinese'}) return x.name"}, {"query": "Do you know what kind of albums Universal Records has released?", "cypher": "match (:ENTITY{name:'Universal Records'}) <- [:Relationship{name:'brokerage company'}]- (x) return distinct x.name"}, {"query": "The following is a list of the top 5 things about the Master's House in the world of Buddhism.", "cypher": "match (n:ENTITY{name:'Two-way house'}) - [*]->(x) where x.name <>'Meng Chen' return distinct x.name limit 5"}, {"query": "The year is 17th of Ming Dynasty in which calendar year?", "cypher": "match (:ENTITY{name:'min yong kal seventeen year'}) <- [:Relationship{name:'year'}]- (m) return m.name"}, {"query": "I'm trying to find 10 roleplaying games for mobile phones.", "cypher": "match (:ENTITY{name:' role-playing game'}) <- [:Relationship{name:' game type'}]- (mn) - [:Relationship{name:' game platform'}]->(n:ENTITY{name:' mobile game'}) return mn.name limit 10"}, {"query": "When is the Minsk carrier in service?", "cypher": "match (:ENTITY{name:'Minsk aircraft carrier'}) - [:Relationship{name:'service time'}]->(n) return n.name"}, {"query": "I want to know the profiles of five Croatian Petkovic Milanes with no less than four levels of relationships.", "cypher": "match (n:ENTITY{name:'Petrovic Milan'}) - [*1..4]->(x) where x.name <>'Croatia' return distinct x.name limit 5"}, {"query": "Can you tell me five things you know about Chetan II besides the Ming Dynasty?", "cypher": "match (:ENTITY{name:'Chetan'}) - [*1..2]->(p) where p.name <> 'Dynasty of the Tang' return distinct p.name limit 5"}, {"query": "Do you want to talk to me about the doctors at the Chinese Civil Aviation General Hospital?", "cypher": "match (:ENTITY{name:' Doctor of the General Hospital of Civil Aviation of China'}) <--(n) return n.name"}, {"query": "I'm curious to know which books have the R174 number in the middle of the picture.", "cypher": "match (:ENTITY{name:'R174'}) <- [:Relationship{name:'Categorized in the chart'}]- (m) return distinct m.name"}, {"query": "What else do you know about researcher Sun Hong-wang? Help me find the other four pieces of information in the second layer.", "cypher": "match (:ENTITY{name:'Soon Hong Hoang'}) -[:Relationship*1..3]-(p) where p.name <> 'researcher' return p.name limit 4"}, {"query": "Tell me the name of the 17 discs.", "cypher": "match (:ENTITY{name:'seventy-seven'}) - [:Relationship{name:' alias'}]-> (n) return n.name order by n.name"}, {"query": "Who was born in 1919 in the small town of North Ossetia in the Amur region of the USSR?", "cypher": "match (:ENTITY{name:'City of North Ossetia'}) <- [:Relationship{name:'place of birth'}]-(m), (m) - [:Relationship{name:'time of birth'}]->(n) where n.name='1919' return m.name"}, {"query": "I wonder what the book A Way in the World is called?", "cypher": "match (:ENTITY{name:'A Way in the World'}) <- [:Relationship{name:'Foreign language name'}]- (h) return h.name"}, {"query": "Find out which of the following jobs people born in March 1972 can do besides being a government office manager.", "cypher": "match (:ENTITY{name:'March 1972'}) <- [:Relationship{name:'date of birth'}]-(x) - [:Relationship{name:'profession'}]->(p) where p.name <> 'Director of government office' return distinct p.name limit 1"}, {"query": "I would like to know about the personal information of the person who played in DxD at Demon University in the fourth level of Abe's relationship?", "cypher": "match (n:ENTITY{name:'Abinob\u6e05\u82bd'}) - [*1..4]->(x) where x.name <>'Demon college D\u00d7D' return distinct x.name"}, {"query": "The lake is a beautiful place, and the lake is a beautiful place.", "cypher": "match (:ENTITY{name:'smile at the lake'}) --(p) with p order by p.name return p.name limit 1"}, {"query": "What are the three categories of chocolate tiramisu cakes besides dessert and Western?", "cypher": "match (n:ENTITY{name:' chocolate tiramisu cake'}) - [:Relationship{name:' classified'}]->(h) where h.name <> 'dessert' and h.name <> 'western' return distinct h.name limit 3"}, {"query": "I'm not sure if you're interested in the story of the two-tiered relationship between Jiang Zemin and Lee Nanping, but I'm interested in the story of the two-tiered relationship between Jiang Zemin and Lee Nanping.", "cypher": "match (n:ENTITY{name:'Jiang Khonzo; and Lee Na-beong presents Xiao-jin Sheng'}) - [:Relationship*1..2]->(x) where x.name <> 'Shin-dao' return distinct x.name"}, {"query": "Tell me which songs are sung by Zhou Zhen, Alzahn Shemo's filling?", "cypher": "match (:ENTITY{name:'Zhou Wen, Alzahn Shemo'}) <- [:Relationship{name:'filler'}]- (q) return distinct q.name"}, {"query": "Can you tell us about the five-tier relationship of Chinese language software OneStart?", "cypher": "match (n:ENTITY{name:'OneStart'}) - [*1..5]->(x) where x.name <> 'Chinese' return distinct x.name"}, {"query": "The book is about a million words long and is written in the genre of \"The Greatest American Novel\".", "cypher": "match (:ENTITY{name:'about one million words'}) <- [:Relationship{name:'number of words'}]-(p) - [:Relationship{name:'type of work'}]->(n) return distinct n.name"}, {"query": "Can the joint venture find me 5 houses?", "cypher": "match (:ENTITY{name:'joint venture'}) <- [:Relationship{name:'company nature'}]-(p) - [:Relationship{name:'company name'}]->(n) return distinct n.name limit 5"}, {"query": "I'm going to write five descriptive labels for Spring of '09 Han River.", "cypher": "match (:ENTITY{name:'09 spring Korean stream'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "What are the three main achievements of the show?", "cypher": "match (:ENTITY{name:'showing off'}) - [:Relationship{name:'main achievement'}]->(n) return n.name limit 3"}, {"query": "Can you show me where to play for five tickets at 20 dollars?", "cypher": "match (:ENTITY{name:'20.00\u5143'}) <- [:Relationship{name:'ticket price'}]-(p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "I'm not sure who has a job as a journalist, but I'm not sure who has a job as a journalist.", "cypher": "match (:ENTITY{name:'journalist'}) <- [:Relationship{name:'profession'}]- (x) return distinct x.name limit 5"}, {"query": "What is the relationship between the 3 and the 3rd floor of the building?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'property'}) RETURN distinct n.name limit 3"}, {"query": "The neo-Nazis are the main protagonists of what era and what is their purpose?", "cypher": "match (:ENTITY{name:'Neo-Nazism'}) - [:Relationship{name:'period'}]->(n) return n.name as name union all match (:ENTITY{name:'Neo-Nazism'}) - [:Relationship{name:'purpose'}]->(m) return m.name as name"}, {"query": "What are the films that are released by the same company as the Red Army Hockey Team? What are the respective labels of these films? Please list them in order of the number of labels of each film, from small to large.", "cypher": "match (n:ENTITY{name:' Red Army Hockey'}) - [:Relationship{name:' Issuing company'}]->(:ENTITY) <- [:Relationship{name:' Issuing company'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "What is the name of a stone structure with a three-dimensional skeleton?", "cypher": "match (:ENTITY{name:' three-dimensional skeleton'}) <- [:Relationship{name:' structure'}]- (h) return h.name"}, {"query": "Please help me find three highly toxic chemicals, what is their chemical formula?", "cypher": "match (:ENTITY{name:'strangely toxic'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'chemically'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Do you know what the number of obstacles for cross-border projects is 8?", "cypher": "match (:ENTITY{name:'8'}) <- [:Relationship{name:' number of obstacles'}] - (x) return x.name"}, {"query": "Please list three representative works of this man, born in 1949, and who is the author of the book.", "cypher": "match (:ENTITY{name:'1949'}) <- [:Relationship{name:'date of birth'}]-(h),(h) - [:Relationship{name:'representative work'}]->(x) return h.name skip 1 limit 3"}, {"query": "I want to know all the profiles of 5 Turkish Yigitusagi Fatih?", "cypher": "match (n:ENTITY{name:'Yigitusagi Fatih'}) - [*]->(x) where x.name <>'Turkey' return distinct x.name limit 5"}, {"query": "Please tell me the name of the park at 49 Guda Road 4 in Wuhu, Wuhu's Zhongshan District.", "cypher": "match (:ENTITY{name:'Wuhan City, Wuquan District, Gudai Road 49'}) <- [:Relationship{name:'address'}]- (p) return p.name"}, {"query": "Can you tell me about a label for 1-ton diode and - to - 2 penny?", "cypher": "match (:ENTITY{name:'1-bit binary plus - for - binary'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 1"}, {"query": "There is a love story from Uncle I Love You Mommy, do you know which one?", "cypher": "Match (:ENTITY{name:'Hey Uncle I love you'}) <- [:Relationship{name:'video'}]- (x) return x.name"}, {"query": "Please tell me which concert is the one that will be held on October 7th at 3pm?", "cypher": "match (:ENTITY{name:'October 7 at 3 pm'}) <- [:Relationship{name:' time of the conference'}]- (x) return x.name"}, {"query": "Tell me about the main departments of the Russian Central University.", "cypher": "match (:ENTITY{name:'Russian University'}) - [:Relationship{name:'main faculty'}]-> (x) return x.name skip 3"}, {"query": "There is a DVD called Unnamed Heights, and what is the name of the single?", "cypher": "match (:ENTITY{name:'Unnamed Highlands'}) <- [:Relationship{name:'other translated names'}]- (m) return m.name"}, {"query": "What is the name of the murder that happened at 2am on November 9, 2013?", "cypher": "match (p:ENTITY{name:'9 November 2013 at 2 am'}) <- [:Relationship{name:'time'}]- (h) return h.name"}, {"query": "Can you tell me about the 5 main supplements for the treatment of hepatocellular malaria?", "cypher": "match (n:ENTITY{name:'supplemental hepatitis C malaria'}) - [*]->(x) where x.name <> 'mainly in the liver' return distinct x.name limit 5"}, {"query": "The Chinese Social Science Publishing House has named one of its top ten infringed books of 2004: Win in execution.", "cypher": "match (:ENTITY{name:'One of the top ten infringed books of 2004: Win in execution'}) --(p) with p order by p.name where p.name <> 'China Social Science Publishing' return p.name"}, {"query": "What kind of soup can you make without the berries?", "cypher": "match (:ENTITY{name:'cranberry'}) <- [:Relationship{name:'classification'}]-(m), (m) - [:Relationship{name:'main ingredient'}]->(n) where n.name='no peaches' return distinct m.name"}, {"query": "Who can tell me who is the founder of running, hiking, outdoor, marathon, etc.?", "cypher": "match (:ENTITY{name:'running, hiking, outdoor, marathon'}) <- [:Relationship{name:'involved in project'}]-(n),(n) - [:Relationship{name:'founder'}]->(p) return distinct p.name limit 1"}, {"query": "Besides Ai and Shaan, who else is a well-known alumnus of the College of Education and Science at Chengdu University?", "cypher": "match (n:ENTITY{name:'College of Education and Science of Chengdu University'}) -[:Relationship{name:'known alumnus'}]->(h) where h.name <> 'Aisha' and h.name <> 'Sahara' return distinct h.name limit 1"}, {"query": "How can you make a 10 Years GMF Compilation out of 10 pieces of information?", "cypher": "match (n:ENTITY{name:'10 Years GMF Compilation'}) --(p) with p order by p.name return p.name limit 10"}, {"query": "Help me find 10 temples", "cypher": "match (:ENTITY{name:' temple'}) <- [:Relationship{name:' type'}]-(m) return distinct m.name limit 10"}, {"query": "I want to know what three jobs Dutch people do?", "cypher": "match (:ENTITY{name:'Netherlands'}) <- [:Relationship{name:'place of birth'}]-(m) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 3"}, {"query": "The following is a quick reference to the 0-start-to-read-book 2 layer relationship.", "cypher": "match (n:ENTITY{name:' Quick pass read book'}) - [:Relationship*1..2]->(x) where x.name <>'0 open' return distinct x.name"}, {"query": "Help me find five public universities in Nanjing.", "cypher": "match (:ENTITY{name:'Nanjing'}) <- [:Relationship{name:'area'}]-(m) , (m) - [:Relationship{name:'category'}]->(n) where n.name='public university' return distinct m.name limit 5"}, {"query": "Where is the headquarters of CNC Warming Group?", "cypher": "match (:ENTITY{name:'CNC Warming Group'}) - [:Relationship{name:'Hall of business'}]->(n) return n.name"}, {"query": "What are the tourist attractions in Yangon?", "cypher": "Match (:ENTITY{name:'Pyongyang County'}) - [:Relationship{name:'Famous attractions'}]->(n) return n.name"}, {"query": "Where is the Huangpu Museum? What time is it open?", "cypher": "match (:ENTITY{name:'Hong Kong Museum'}) - [:Relationship{name:'Location'}]->(n) return n.name as name union all match (:ENTITY{name:'Hong Kong Museum'}) - [:Relationship{name:'Open hours'}]->(m) return m.name as name"}, {"query": "Do you know which companies are limited companies? Name four?", "cypher": "match (:ENTITY{name:' stock company'}) <- [:Relationship{name:' nature of company'}]- (m) return m.name limit 4"}, {"query": "What are the different types of inkjet printers and what are the techniques used?", "cypher": "match (:ENTITY{name:' inkjet printer'}) - [:Relationship{name:' classification'}]->(n) return n.name as name union all match (:ENTITY{name:' inkjet printer'}) - [:Relationship{name:' use technology'}]->(m) return m.name as name"}, {"query": "I need to know about the six types of monogamous women in addition to literature.", "cypher": "match (:ENTITY{name:'spoiled'}) --(m) with m order by m.name where m.name <> 'literary work' return distinct m.name limit 6"}, {"query": "Can you name four Egyptian artworks?", "cypher": "match (:ENTITY{name:' Egypt'}) <- [:Relationship{name:' Country of origin'}]- (n) return n.name limit 4"}, {"query": "The book is a collection of 10 articles on 100 classic psychological cases from around the world.", "cypher": "match (:ENTITY{name:'100 world classic psychology cases'}) --(x) with x order by x.name where x.name <> 'literary work' return x.name limit 10"}, {"query": "I would like to meet Andrew Philpot.", "cypher": "match (:ENTITY{name:'Andrew Philpot'}) --(p) return p.name order by p.name"}, {"query": "Can you provide me with 5 pages of information about Pexa Ivan, who is 1.87 meters tall?", "cypher": "match (n:ENTITY{name:'Pexa Ivan'}) - [*]->(x) where x.name <>'1.87 m' return distinct x.name limit 5"}, {"query": "Can you find me three books published in 2015?", "cypher": "match (:ENTITY{name:'2015'}) <- [:Relationship{name:'published at the time'}]-(n) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 3"}, {"query": "The following is a list of some of the most popular films of Vishal Bhardwaj, including the films directed by him and the films produced by him.", "cypher": "match (n:ENTITY{name:'Vishwanath Balladwaje'}) -[:Relationship{name:'profession'}]->(h) where h.name <> 'director' and h.name <> 'producer' return distinct h.name limit 1"}, {"query": "I want to know what the name of this drug is for coughing up flu; what is the name of this drug for coughing up flu?", "cypher": "match (:ENTITY{name:'wind fever cough; cough syrup'}) <- [:Relationship{name:'subject'}]-(n),(n) - [:Relationship{name:'alias'}]->(p) return p.name order by p.name limit 1"}, {"query": "Can you tell me which team all three players who have won the European Cup belong to?", "cypher": "match (:ENTITY{name:'European Champions Cup'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:' belonging to a team'}]->(n) return m.name,n.name limit 3"}, {"query": "Tell me about the work of the ancient El Araos.", "cypher": "match (:ENTITY{name:'Guerrilla'}) - [:Relationship{name:'profession'}]-> (m) return distinct m.name"}, {"query": "I'm not sure which accident in the world has caused 56 deaths.", "cypher": "match (:ENTITY{name:' which caused 56 deaths'}) <- [:Relationship{name:' consequences'}]- (p) return p.name"}, {"query": "I'm wondering which schools have electrical engineering and electronics? Can you list 10?", "cypher": "match (:ENTITY{name:' electrician electrician'}) --(h) return distinct h.name limit 10"}, {"query": "Who wrote the works of Liu Bei during the Three Kingdoms period?", "cypher": "match (:ENTITY{name:'Tri-Country;'}) <- [:Relationship{name:'period'}]-(m), (m) - [:Relationship{name:'representative work'}]->(n) where n.name='Tri-Country' return distinct m.name"}, {"query": "Which exhibition is on display from 2011/5/6 to 2011/5/8?", "cypher": "match (:ENTITY{name:'2011/5/6 to 2011/5/8'}) <- [:Relationship{name:'exhibition time'}]- (n) return n.name"}, {"query": "Can you recommend a few non-continental novels?", "cypher": "match (:ENTITY{name:'otherworld'}) <- [:Relationship{name:'category'}]- (q) return distinct q.name"}, {"query": "What is the name of the artist who painted the painting?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'profession'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'representing work'}]->(m) return m.name as name"}, {"query": "I understand that the Food and Drug Administration of the city of Kursk is a government agency, there are 10 agencies, and I would like to know three more things about it, please help me find them.", "cypher": "match (n:ENTITY{name:'Food and Drug Administration of Kuykysing City'}) -->(h) with h order by h.name where h.name <> '10 internal agencies' and h.name <> 'Government bodies' return h.name limit 3"}, {"query": "Do you know which host is suitable for the most popular websites for businesses and individuals?", "cypher": "match (:ENTITY{name:'website application for large enterprises and individuals'}) <- [:Relationship{name:'objects to be used'}]- (n) return distinct n.name"}, {"query": "Can you name four economists and what are their main achievements?", "cypher": "match (:ENTITY{name:'economic figure'}) <- [*]-(m), (m) - [:Relationship{name:'main achievement'}]->(n) return m.name, n.name limit 4"}, {"query": "Do you know about the Kyushu Mountain Scenic Area? Find out about the other 5 in the 3 levels, besides the one in the northwest of Jiangxi Province.", "cypher": "match (:ENTITY{name:'Kuwait Mountain [Kuwait Mountain Scenic Area]'}) - [*1..3]->(p) where p.name <> 'Northwest of Jiangxi Province, between the Zhu River and Jinjiang' return p.name limit 5"}, {"query": "I'm curious about the No apologies album, can you tell me about it?", "cypher": "match (x:ENTITY{name:'- No apologies'}) --(n) return distinct n.name"}, {"query": "Can you list the top 5 achievements of Chinese University of Hong Kong economics graduates?", "cypher": "match (h:ENTITY{name:'Hong Kong Chinese University of Economics'}) <- [:Relationship{name:' Graduate School'}]-(q),(q) - [:Relationship{name:' Major achievements'}]->(p) return distinct p.name limit 5"}, {"query": "What are the bearings in KOYO? Can you name eight?", "cypher": "match (:ENTITY{name:'KOYO'}) <- [:Relationship{name:' bearing brand'}]- (q) return q.name limit 8"}, {"query": "In 10 words, tell me about the 1996 Central TV Spring Festival party?", "cypher": "match (:ENTITY{name:'1996 Central TV Spring Festival Reunion Party'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "Can you explain the 1830m?", "cypher": "match (:ENTITY{name:'1830m'}) --(p) with p order by p.name return p.name"}, {"query": "The game is called 007 and is a hardcore version of the game.", "cypher": "match (:ENTITY{name:'007: Legendary Hard Disk Version'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'game' return m.name"}, {"query": "What do you know about the film Goodbye Ghost? Help me find the other 4 pieces of information in the 2nd layer.", "cypher": "match (:ENTITY{name:'ghost count'}) -[:Relationship*1..2]-(p) where p.name <> 'film' return p.name limit 4"}, {"query": "Tell me about your career, what is it? Tell me about three.", "cypher": "match (:ENTITY{name:'show'}) <- [:Relationship{name:'show'}]-(h),(h) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 3"}, {"query": "Do you know anything else about it besides the fact that it is an aerobic sport? Help me find 5 information in 2 layers.", "cypher": "match (:ENTITY{name:'counting jump rope'}) - [*1..2]-(p) where p.name <> 'oxygen movement' return p.name limit 5"}, {"query": "What nation was Balam Sansar from, what did he do, and what were his major accomplishments?", "cypher": "match (:ENTITY{name:'Bulaim Sansar'}) - [:Relationship{name:'nationality'}]->(n) return n.name as name union all match (:ENTITY{name:'Bulaim Sansar'}) - [:Relationship{name:'Profession'}]->(m) return m.name as name union all match (:ENTITY{name:'Bulaim Sansar'}) - [:Relationship{name:'Major achievements'}]->(r) return r.name as name"}, {"query": "Can you recommend some hotel-style apartments?", "cypher": "match (:ENTITY{name:' hotel-style apartment'}) <- [:Relationship{name:' property category'}]- (n) return distinct n.name"}, {"query": "What kind of company is Shandong Kyuzhou Business Group Limited? How many people are in the company?", "cypher": "match (:ENTITY{name:'Sandong Kyushu Business Group Limited'}) - [:Describe{name:'Label'}]->(n) return n.name as name union all match (:ENTITY{name:'Sandong Kyushu Business Group Limited'}) - [:Relationship{name:'Total number of employees'}]->(m) return m.name as name"}, {"query": "In addition to representing the festival, five other works by Guangdong are also represented.", "cypher": "match (:ENTITY{name:'Relationship'}) <- [:Relationship{name:'Chinese name'}]-(h) - [:Relationship{name:'represented work'}]->(q) where q.name <> 'Relationship' return distinct q.name limit 5"}, {"query": "The company that runs the hotel helped me find five.", "cypher": "match (:ENTITY{name:' hotel management'}) <- [:Relationship{name:' business scope'}]->(n) where n is not null return distinct n.name limit 5"}, {"query": "Which of these people graduated from the same school as Deng Kongqing? What labels can you list for each of them?", "cypher": "match (n:ENTITY{name:'Conqing'}) - [:Relationship{name:'graduate school'}]->(:ENTITY) <- [:Relationship{name:'graduate school'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Is there any introduction to the devil rotating 214 degrees?", "cypher": "match (n:ENTITY{name:'214 degree rotating demon'}) --(q) with q order by q.name return q.name"}, {"query": "What is the name of the transmission, evolution, or lesion in Chinese medicine?", "cypher": "match (:ENTITY{name:'transmission, evolution of a disease or defect in Chinese medicine'}) <-[:Relationship{name:' interpretation'}]-(m) return distinct m.name"}, {"query": "Find information within the two-tier relationship of the postgraduate program of the University of Software Technology in Zhejiang.", "cypher": "match (n:ENTITY{name:'Ph.D. in Software Engineering at the University of Zhejiang'}) - [*1..2]->(x) where x.name <> 'organization' return distinct x.name"}, {"query": "The Chinese government has been trying to get the Chinese to stop the Chinese from using the Chinese language.", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(n),(n) - [:Relationship{name:'othername'}]->(m) return m.name order by m.name limit 5"}, {"query": "What is the name of the report published on January 7, 2016?", "cypher": "match (:ENTITY{name:'January 7, 2016'}) <- [:Relationship{name:' time of reporting'}]- (q) return distinct q.name"}, {"query": "Does early education for 0-3 year olds have a \"marginal label\" attribute?", "cypher": "match (:ENTITY{name:'0-3 years of age'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "Have you seen the one who calls out to the jinn,", "cypher": "match (n:ENTITY{name:'Ling'}) where n is not null return 1"}, {"query": "What do you know about the 2013 USA Badminton Gold Cup labels?", "cypher": "match (:ENTITY{name:'2013 US Badminton Gold Cup'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'sport' return p.name limit 3"}, {"query": "Do you know how many high-speed trains with air conditioning? Can you name four?", "cypher": "match (:ENTITY{name:'fast air conditioner'}) <- [:Relationship{name:'train grade'}]- (p) return p.name limit 4"}, {"query": "Is there a special soup in the village of Dongzhou in Huizhou, Fujian province?", "cypher": "match (:ENTITY{name:'Huzhou town of Hokusai County in the village of East Zhou'}) <--(n) return n.name"}, {"query": "What is the name of the games that are held at the main stadium of the Olympic Stadium in Nagano?", "cypher": "match (:ENTITY{name:'Langno Olympic Stadium'}) <- [:Relationship{name:'main stadium'}]- (p) return p.name"}, {"query": "Can you find the six books published by China Standard Publishing?", "cypher": "match (:ENTITY{name:'China Standard Publishing'}) <- [*]-(m), (m) - [:Relationship{name:' category'}]->(n) return m.name, n.name limit 6"}, {"query": "Excluding the new material in the new curriculum: What is your first impression of the book's attributes in the 7th grade language?", "cypher": "match (:ENTITY{name:'08 Rondeke dissects new subject new teaching material: 7th grade language'}) --(m) with m order by m.name where m.name <> 'books' return m.name limit 1"}, {"query": "Can you give me five personal messages from Ericsson Tim in Sweden?", "cypher": "match (n:ENTITY{name:'Erixon Tim'}) - [*]->(x) where x.name<>'Sweden' return distinct x.name limit 5"}, {"query": "The Han Chinese students studying at the Yunnan Provincial Communist Party College are Han Chinese?", "cypher": "match (p:ENTITY{name:'Hani'}) <--(x) -->(q:ENTITY{name:'Yunnan Provincial Committee of the Party School'}) return x.name"}, {"query": "What are the plants in Jilin Province that are protected at level 3?", "cypher": "match (:ENTITY{name:'Jilin Province'}) <- [:Relationship{name:'distribution area'}]-(m), (m) - [:Relationship{name:'protection level'}]->(n) where n.name='3 level' return distinct m.name"}, {"query": "Check out the five pieces of information on the super cute ballpoint pen created by Wang Chunhua.", "cypher": "match (n:ENTITY{name:'super cute ball needle'}) - [:Relationship*]->(x) where x.name <>'Wang Chun-hee' return distinct x.name limit 5"}, {"query": "Can you name the first three Chinese names of the MIT campus?", "cypher": "match (:ENTITY{name:'MIT campus'}) - [:Relationship{name:'Chinese name'}]-> (q) with q order by q.name return distinct q.name limit 3"}, {"query": "The list of five Chinese names for this drug, apart from the name of the drug itself, Tetoxin, contains five different names.", "cypher": "match (:ENTITY{name:'Tetoxin'}) <- [:Relationship{name:'English name'}]-(n) - [:Relationship{name:'Chinese name'}]->(q) where q.name <> 'Tetoxin withdrawal soft capsule' return distinct q.name limit 5"}, {"query": "Can you find out who directed the five documentaries?", "cypher": "match (:ENTITY{name:'documentary program'}) <--(m), (m) - [:Relationship{name:'director'}]->(n) return m.name, n.name limit 5"}, {"query": "What is the curriculum of the second senior secondary school in Dongyang City, Zhejiang Province?", "cypher": "match (:ENTITY{name:'Second Senior Secondary School in Dongyang City, Zhejiang Province'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'school training'}]->(n) return distinct n.name"}, {"query": "I want to find out who the current headteachers of seven primary schools are.", "cypher": "match (:ENTITY{name:' primary school'}) <- [*]-(m), (m) - [:Relationship{name:' current principal'}]->(n) return m.name, n.name limit 7"}, {"query": "There is a way to hack software, games, music, etc. What is the name of it?", "cypher": "match (m:ENTITY{name:' software, games, music, etc'}) <- [:Relationship{name:' coverage'}]- (p) return p.name"}, {"query": "Please refer to the following literary works: The book of Yeo-Jin-Shuang.", "cypher": "match (n:ENTITY{name:'Yee Zhenjian medical collection:Yee Zhenjian side certificate of medical certificate'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "Who has a senior grade in elementary school?", "cypher": "match (:ENTITY{name:' Primary school senior'}) <--(n) return n.name"}, {"query": "What books has Hu translated?", "cypher": "match (:ENTITY{name:'Hu Huan'}) <- [:Relationship{name:'translator'}]->(n) where n is not null return distinct n.name"}, {"query": "I heard there was a scream contest, right?", "cypher": "match (n:ENTITY{name:'screaming contest'}) where n is not null return 1"}, {"query": "What are the main ingredients and ingredients in bacon cream egg juice?", "cypher": "match (:ENTITY{name:'bacon cream egg juice'}) - [:Relationship{name:'main ingredient'}]->(n) return n.name as name union all match (:ENTITY{name:'bacon cream egg juice'}) - [:Relationship{name:'additive'}]->(m) return m.name as name"}, {"query": "I would like to ask you about the personal information of the third level of the relationship of the transgender footballer.", "cypher": "match (n:ENTITY{name:'moved to the right man'}) - [*1..3]->(x) where x.name<> 'football' return distinct x.name"}, {"query": "Please help me find two women from the MQQ related to what era?", "cypher": "match (:ENTITY{name:'Michigan'}) <--(m), (m) - [:Relationship{name:'Year'}]->(n) return distinct m.name, n.name limit 2"}, {"query": "Can you tell me what the relationship is between the 3rd layer of labels and the 2nd layer of labels on literary works?", "cypher": "match (n) - [:Tag*2{name:'tag'}]->(p:ENTITY{name:'literary work'}) RETURN distinct n.name limit 3"}, {"query": "Can you recommend me some professional group shopping sites?", "cypher": "match (:ENTITY{name:'professional group shopping site'}) <-[:Relationship{name:'website type'}]- (q) return q.name"}, {"query": "What three labels would you put on the 30th issue of Jinghua Publishing to make money?", "cypher": "match (:ENTITY{name:'30 after making money by money [Jinghua Publishing House book]'}) - [:Tag{name:'label'}]-> (q) with q order by q.name return q.name limit 3"}, {"query": "What other tags exist besides the software? List three lines.", "cypher": "match (:ENTITY{name:'Yoy'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'software' return p.name limit 3"}, {"query": "Who can tell me that Karchi Krishnan is a cook?", "cypher": "match (:ENTITY{name:'Kharchi Kashran'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'profession'}]->(m) return distinct m.name"}, {"query": "What information about dust buds is recorded in the system?", "cypher": "match (n:ENTITY{name:'Dustfather'}) --(x) return x.name"}, {"query": "Can you find me the name of the associate professor?", "cypher": "match (:ENTITY{name:'adjunct professor'}) <- [:Relationship{name:'profession'}]-(n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "Can you name the top 10 awards that Saint Viator High School has received?", "cypher": "match (:ENTITY{name:'Saint Viator High School'}) - [:Relationship{name:'main award'}]-> (n) return distinct n.name limit 10"}, {"query": "Can you tell me about the seven novels that are linked to the Chinese-language website?", "cypher": "match (:ENTITY{name:' starting point Chinese web'}) <- [:Relationship{name:' connecting platform'}]- (n) return n.name limit 7"}, {"query": "I wonder if it's a mystery to go on a quest?", "cypher": "match (:ENTITY{name:'funny search and rescue'}) <--(n) return n.name"}, {"query": "Ro lists no less than three levels of personal information regarding Alex Goligoski, born in Grand Rapids, MN.", "cypher": "match (n:ENTITY{name:'Goligoski Alex'}) - [*1..3]->(x) where x.name <>'Grand Rapids, MN' return distinct x.name"}, {"query": "Do you know of any other professions that have this name besides the vice secretary of the North Shore County Party Committee, Li Jingdong?", "cypher": "match (:ENTITY{name:'East'}) <- [:Relationship{name:'Chinese name'}]-(x) - [:Relationship{name:'profession'}]->(h) where h.name <> 'Deputy Secretary of the North Yangon County Party Committee' return distinct h.name limit 3"}, {"query": "What information can you give me about Lee Kim Jong-un?", "cypher": "match (:ENTITY{name:' Lee Jin-ho'}) --(x) return x.name order by x.name"}, {"query": "The school belongs to the provincial key universities, high-level universities?", "cypher": "match (:ENTITY{name:' University of the province of priority, university of high level'}) <--(n) return n.name"}, {"query": "Can you give us the following five Argentine Dubiel Sebastian's personal details of no less than five levels of relationship?", "cypher": "match (n:ENTITY{name:'Dubaier-Sebastian'}) - [*1..5]->(x) where x.name<>'Argentina' return distinct x.name limit 5"}, {"query": ".wang is a royal domain name, have you heard of it?", "cypher": "match (:ENTITY{name: '.wang'}) --(h) with h order by h.name where h.name <> 'wings domain name' return h.name"}, {"query": "Can you give me the inside story of the four-level relationship of 1.93m tall Owino George?", "cypher": "match (n:ENTITY{name:'Owino George'}) - [*1..4]->(x) where x.name <>'1.93 m' return distinct x.name limit 5"}, {"query": "Can you describe HP's upgrade in five words and talk about romance?", "cypher": "match (:ENTITY{name:'HP upgrade to chat about romance'}) --(q) with q order by q.name return q.name limit 5"}, {"query": "I want to know the lesson: What are the major departments of schools that are self-sufficient?", "cypher": "match (:ENTITY{name:'Chongde Shaan is self-sufficient'}) <- [:Relationship{name:'school training'}]-(m),(m) - [:Relationship{name:'main faculty'}]->(x) return distinct m.name"}, {"query": "The story of the king of the devils, the king of the nine angels?", "cypher": "match (:ENTITY{name:'King of the Nine Sins'}) --(n) with n order by n.name return n.name limit 1"}, {"query": "Can you recommend a few movies that are available on PPTV, YouTube, Search, and YouTube?", "cypher": "match (:ENTITY{name:'PPTV, Youku, Search, Music'}) <- [:Relationship{name:'Online play platform'}]- (x) return distinct x.name"}, {"query": "Can you tell me what labels are there for Daniel Alvis?", "cypher": "match (h:ENTITY{name:'Daniel Alvis'}) - [:Tag{name:'tag'}]-> (x) return x.name order by x.name"}, {"query": "Can you tell me the top five achievements of this Mongolian?", "cypher": "match (:ENTITY{name:'Mongolian'}) <- [:Relationship{name:'ethnicity'}]-(x),(x) - [:Relationship{name:'main achievements'}]->(p) return p.name skip 1 limit 10"}, {"query": "What are the main achievements of Sushma Swaraj?", "cypher": "match (:ENTITY{name:'Sushmita Swaraj'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'main achievement'}]->(x) return distinct x.name limit 1"}, {"query": "How many works of art does Claude Lorrain have?", "cypher": "match (:ENTITY{name:'Claude Laurent'}) - [:Relationship{name:'represents work'}]->(n) return count(n)"}, {"query": "I want to find six different types of Chinese medicine and their dosage.", "cypher": "match (:ENTITY{name:'drug'}) <--(m), (m) - [:Relationship{name:'useful dose'}]->(n) return m.name, n.name limit 6"}, {"query": "Can you tell me about the two companies that were founded in 2003?", "cypher": "match (:ENTITY{name:'2003'}) <- [:Relationship{name:'time of establishment'}]-(n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "I'm not sure which show Carlos Klebber played in.", "cypher": "match (:ENTITY{name:' Carlos Kleber'}) <- [:Relationship{name:'person'}]- (h) return distinct h.name"}, {"query": "What kind of plant has a leaf base of 1-3 or none?", "cypher": "match (:ENTITY{name:'1-3, or nonexistent'}) <- [:Relationship{name:'key-leaf count'}]- (h) return h.name"}, {"query": "What chemical is also called 2-methylsulphide-beta-hydrogen sulfate?", "cypher": "match (n:ENTITY{name:'2-methylsulphide-beta-hydrogen and sulfuric acid'}) <- [:Relationship{name:' alias'}] - (x) return x.name"}, {"query": "Please tell me about the traffic accident in Guizhou on the 1.13 Lanhai Highway in no more than 10 sentences?", "cypher": "match (:ENTITY{name:'1.13 Lanhai Highway Guizhou-bound traffic accident'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 10"}, {"query": "What is the name of the singer who sings the flower?", "cypher": "match (:ENTITY{name:'big flower'}) --(x) return distinct x.name"}, {"query": "What awards are given at the Hong Kong Asian International Expo?", "cypher": "match (:ENTITY{name:'Hong Kong Asian International Expo'}) <- [:Relationship{name:' awarding location'}]- (x) return distinct x.name"}, {"query": "Did you go to a high school with a famous alumnus?", "cypher": "match (:ENTITY{name:'high school'}) <--(m), (m) - [:Relationship{name:'known alumni'}]->(n) where n is not null return distinct m.name"}, {"query": "Can you show me what the Flying Fur V360 is?", "cypher": "match (n:ENTITY{name:'flying fur V360'}) --(x) return x.name"}, {"query": "Do you know what other names she has and what sect she belongs to?", "cypher": "match (:ENTITY{name:'\u7389\u65e0\u5fc3'}) - [:Relationship{name:'other name'}]->(n) return n.name as name union all match (:ENTITY{name:'\u7389\u65e0\u5fc3'}) - [:Relationship{name:'\u95e8\u6d3e'}]->(m) return m.name as name"}, {"query": "Can you get a label on the 0359 real estate network?", "cypher": "match (:ENTITY{name:'0359 real estate network'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "What other works represent the pre-religious era?", "cypher": "match (:ENTITY{name:'precursor before(after evolved into religion) '}) <-[:Relationship{name:'period'}]-(m) -[:Relationship{name:'representative work'}]->(q) return distinct m.name,q.name"}, {"query": "What are the other novels in the series? 11 books to recommend?", "cypher": "match (:ENTITY{name:'connected'}) <- [:Relationship{name:'connected status'}]- (n) return n.name limit 11"}, {"query": "The book is called \"The Book of the Sun\", and it is printed in what edition?", "cypher": "match (:ENTITY{name:'plainfit disc included'}) <- [:Relationship{name:'plainfit'}]-(p) - [:Relationship{name:'edition'}]->(m) return distinct p.name, m.name"}, {"query": "I want to find 5 messages about Caval Kristijan who is 1.78m tall.", "cypher": "match (n:ENTITY{name:'Caval Kristijan'}) - [*]->(x) where x.name <>'1.78 m' return distinct x.name limit 5"}, {"query": "Is there another label for Airbus CRM besides technology products?", "cypher": "match (:ENTITY{name:'CRM'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'technology product' return p.name limit 1"}, {"query": "Can you recommend me five representative works of nature?", "cypher": "match (p:ENTITY{name:'natural'}) <- [:Tag{name:'tag'}]-(q) - [:Relationship{name:'represents work'}]->(h) return distinct h.name limit 5"}, {"query": "Do you know this person who was born in Shiamen County, Hunan Province? Can you tell me five of his representative works?", "cypher": "match (:ENTITY{name:'Shimen County, Hunan Province'}) <- [:Relationship{name:'birthplace'}]-(q),(q) - [:Relationship{name:'representing work'}]->(n) return n.name order by n.name limit 5"}, {"query": "What are the levels of protection of the Xinjiang mosquitoes?", "cypher": "match (:ENTITY{name:'Xinjiang Aunty'}) - [:Relationship{name:'protection level'}]->(n) return n.name as name union all match (:ENTITY{name:'Xinjiang Aunty'}) - [:Relationship{name:'distributed area'}]->(m) return m.name as name"}, {"query": "How about four-amino methylphenidate with three pieces of information?", "cypher": "match (:ENTITY{name:'4-aminoformamide'}) --(x) with x order by x.name return x.name limit 3"}, {"query": "The company has also recommended a chip manufacturer that can cool to 5,100W, which is different from NVIDIA.", "cypher": "match (:ENTITY{name:'5100W'}) <- [:Relationship{name:'cooling volume'}]-(m) - [:Relationship{name:'chip manufacturer'}]->(x) where x.name <> 'NVIDIA' return distinct x.name limit 1"}, {"query": "How is population density calculated?", "cypher": "match (:ENTITY{name:'population density'}) - [:Relationship{name:'computing unit'}]->(n) return n.name"}, {"query": "The following is a list of links to the two-tiered relationship of single lung transplantation.", "cypher": "match (n:ENTITY{name:'Single lung transplantation'}) - [:Relationship*1..2]->(x) where x.name<>'Single lung transplantation' return distinct x.name"}, {"query": "Can you tell me about three of the famous artist's representative works?", "cypher": "match (:ENTITY{name:'big source'}) <- [:Relationship{name:'alias'}]-(x),(x) - [:Relationship{name:'representing work'}]->(q) return q.name order by q.name limit 3"}, {"query": "Tell me where are the three national exemplary high schools?", "cypher": "match (:ENTITY{name:'National exemplary high school'}) <- [*]-(m), (m) - [:Relationship{name:'area'}]->(n) return m.name,n.name limit 3"}, {"query": "Help me find a Spanish composer.", "cypher": "match (:ENTITY{name:'Spanish'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='composer' return distinct m.name limit 1"}, {"query": "I'm not sure what year it is in the calendar.", "cypher": "match (:ENTITY{name:'Dried for four years'}) <- [:Relationship{name:'date of occurrence'}]- (m) return m.name"}, {"query": "Please describe three professions Tom Shulman has.", "cypher": "match (:ENTITY{name:'Tom Shulman'}) - [:Relationship{name:'profession'}]-> (q) return distinct q.name limit 3"}, {"query": "What do you know about the movie 100 Thieves?", "cypher": "match (:ENTITY{name:'100 thieves'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'Dramatic film' return m.name"}, {"query": "The two-tiered relationship between literary works and filtering is discussed.", "cypher": "match (n:ENTITY{name:'filter'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "Please help me find three white rice dishes with ingredients.", "cypher": "match (:ENTITY{name:'whitefly'}) <--(m), (m) - [:Relationship{name:'substantial'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Help me find the distribution of the naked abdominal and oral sponges.", "cypher": "match (:ENTITY{name:' naked belly and mouth'}) - [:Relationship{name:' distribution area'}]->(m) return distinct m.name"}, {"query": "Can you find the content of 3 labels related to math education for children aged 0-6?", "cypher": "match (:ENTITY{name:'0-6 years old math education'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 3"}, {"query": "Which companies have the same date of foundation as Tianjin Chocolate Record Co., Ltd. and what are their respective labels? Please list them in order of number of labels, from large to small.", "cypher": "match (n:ENTITY{name:' Tianjin Chocolate Record Co. Ltd'}) - [:Relationship{name:' founding time'}]->(:ENTITY) <- [:Relationship{name:' founding time'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Please help me find three universities in Hebei, what are the main departments?", "cypher": "match (:ENTITY{name:'Hebei University'}) <--(m) ,(m) - [:Relationship{name:'main faculty'}]->(n) return m.name,n.name limit 3"}, {"query": "Can you find out which 5 universities have departments of e-informatics engineering?", "cypher": "match (:ENTITY{name:'electronic information engineering department'}) <- [*]-(m), (m) - [:Relationship{name:'school address'}]->(n) return distinct m.name,n.name limit 5"}, {"query": "Do you know how many shows have scripted?", "cypher": "match (q:ENTITY{name:' in Chinese'}) <- [:Relationship{name:' subtitles'}]- (n) return distinct n.name"}, {"query": "I'm looking for a link to the 1+1 easy win optimization training: 9th grade chemistry?", "cypher": "match (:ENTITY{name:'1+1 easily won the optimization training: 9th grade chemistry'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "What else do you know about Tang Dynasty Han Shaoxian Monument besides the Tang Dynasty artifacts? Find 5 information in 3 layers here.", "cypher": "match (:ENTITY{name:'Tang Dynasty Han Shaolin Monument'}) - [*1..3]-(p) where p.name <> 'Tang' return p.name limit 5"}, {"query": "I'm not sure what you mean by that, but I'm not sure what you mean by that.", "cypher": "match (:ENTITY{name:'ding ding [singer]'}) --(h) return h.name order by h.name"}, {"query": "What are the platforms for the four TV series?", "cypher": "match (:ENTITY{name:'TV series'}) <- [*]-(m), (m) - [:Relationship{name:'platform'}]->(n) return m.name, n.name limit 4"}, {"query": "Do you know what chemical is shaped like white or white crystalline powder?", "cypher": "match (:ENTITY{name:' white or white crystal powder'}) <- [:Relationship{name:' characteristics'}]- (h) return h.name"}, {"query": "Can you recommend three famous places with hot springs?", "cypher": "match (h:ENTITY{name:'Thermal pool'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'Famous attractions'}]->(q) return distinct q.name limit 3"}, {"query": "I'm not sure if you're aware of the fact that I'm a member of the LGBTQ community.", "cypher": "match (q:ENTITY{name:'12.7mm high-powered machine gun'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 3"}, {"query": "Can you please introduce me to 10 representative works of people born in Tianjin?", "cypher": "match (:ENTITY{name:' Tianjin'}) <- [:Relationship{name:' place of birth'}]-(m),(m) - [:Relationship{name:' representing work'}]->(q) return q.name order by q.name limit 10"}, {"query": "What are the famous attractions in Copper Creek Bay and how long do you recommend to spend there?", "cypher": "match (:ENTITY{name:'Copper Creek'}) - [:Relationship{name:'Famous attractions'}]->(n) return n.name as name union all match (:ENTITY{name:'Copper Creek'}) - [:Relationship{name:'Recommended playing time'}]->(m) return m.name as name"}, {"query": "Can you tell me the identity of this person named Liu Yue in Chinese?", "cypher": "match (:ENTITY{name:'\u52b1\u82b8'}) <- [:Relationship{name:'Chinese name'}]-(q),(q) - [:Tag{name:'tag'}]->(m) return distinct m.name limit 1"}, {"query": "Let me know what the label features of this vegetable paste?", "cypher": "match (:ENTITY{name:'. milk mountain medicine flour paste'}) - [:Tag{name:'label'}]-> (x) with x order by x.name where x.name <> 'dishes' return x.name"}, {"query": "Can you find out more about this online game, Vacation at the Oscars 2009?", "cypher": "match (:ENTITY{name:'2009 Oscar LaLernevacation'}) --(m) with m order by m.name where m.name <> ' web game ' return m.name"}, {"query": "What other professions do Osnabr\u00fcckers have besides directing? Give 10 of them.", "cypher": "match (h:ENTITY{name:'Osnabuck'}) <- [:Relationship{name:'place of birth'}]-(n) - [:Relationship{name:'profession'}]->(m) where m.name <> 'director' return distinct m.name limit 10"}, {"query": "Can you give me the 2012 F1 European Grand Prix tags as soon as possible?", "cypher": "match (:ENTITY{name:'2012 F1 European Grand Prix'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "The first five articles on the Chinese Institute of Industrial Engineering are:", "cypher": "match (:ENTITY{name:'China Institute of Industrial Engineering'}) --(n) return n.name order by n.name limit 5"}, {"query": "Do you know what version 16.02 of the flight software is?", "cypher": "match (:ENTITY{name:'16.02'}) <- [:Relationship{name:' software version'}]- (h) return distinct h.name"}, {"query": "I'm not sure if there's anything in Autumn's work.", "cypher": "match (:ENTITY{name:'Autumn'}) --(p) return distinct p.name limit 5"}, {"query": "What is the chemical formula of perovskite? In which regions is it mainly distributed?", "cypher": "match (:ENTITY{name:'petroleum'}) - [:Relationship{name:'chemical formula'}]->(n) return n.name as name union all match (:ENTITY{name:'petroleum'}) - [:Relationship{name:'distribution area'}]->(m) return m.name as name"}, {"query": "Can you name nine accidents that have killed nine people?", "cypher": "match (:ENTITY{name:'9 people killed'}) <- [:Relationship{name:'casualties'}]- (q) return q.name limit 9"}, {"query": "What are the most representative works of people born on October 19?", "cypher": "match (:ENTITY{name:'October 19'}) <- [:Relationship{name:' date of birth'}]-(m),(m) - [:Relationship{name:' representing work'}]->(n) return distinct n.name limit 1"}, {"query": "Do you know the Chinese name for a tired heart?", "cypher": "match (m:ENTITY{name:'a tired heart'}) - [:Relationship{name:'Chinese name'}]-> (p) with p order by p.name return distinct p.name"}, {"query": "What kind of leak-stopper has a 20-minute expiration date?", "cypher": "match (:ENTITY{name:'20min'}) <- [:Relationship{name:'effective time'}]- (h) return h.name"}, {"query": "Can you name three professions of George Gallo, please?", "cypher": "match (:ENTITY{name:'George Gallo'}) - [:Relationship{name:'profession'}]-> (h) return distinct h.name limit 3"}, {"query": "The 120 videos with social attribute tags and the rubber tags?", "cypher": "match (:ENTITY{name:'120 broadcast'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'social' return m.name"}, {"query": "The 10 achievements of Sminia are not included among the 10 achievements of the founder of the Shenyang Zhenjian Gallery in Henan.", "cypher": "match (:ENTITY{name:'Sminya'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'main achievements'}]->(m) where m.name <> 'Founder of the Shenyang Shaanjian Gallery in Henan' return distinct m.name limit 10"}, {"query": "I would like to know the personal profile of Farrugia Tyrone, who has no more than two relationships.", "cypher": "match (n:ENTITY{name:'Farrugia Tyrone'}) - [*1..2]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "Five things that explain 107 sunflowers?", "cypher": "match (:ENTITY{name:'107 South Korea'}) --(x) with x order by x.name return x.name limit 5"}, {"query": "Can you give me all the relevant information about the Jiangxi period?", "cypher": "match (:ENTITY{name:'Jang Viet Tong'}) --(q) return q.name order by q.name"}, {"query": "What are the famous sights in Three Gorges?", "cypher": "match (:ENTITY{name:'Triangle Village'}) - [:Relationship{name:'Famous attractions'}]-> (h) return distinct h.name"}, {"query": "Can you tell me who wrote them? Can you list five?", "cypher": "match (:ENTITY{name:'finished'}) <- [:Relationship{name:'finished'}]-(h),(h) - [:Relationship{name:'author'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you find three places in the subtropical monsoon climate?", "cypher": "match (:ENTITY{name:'subtropical monsoon climate'}) <- [*]-(m), (m) - [:Relationship{name:'geographical location'}]->(n) return m.name, n.name limit 3"}, {"query": "What are the works produced by audiovisual products and when were they published?", "cypher": "match (:ENTITY{name:'sound like product'}) <-[:Relationship{name:'publisher'}]-(h),(h) -[:Relationship{name:'publish time'}]->(q) return distinct h.name,q.name"}, {"query": "There is an actor who is 176 cm tall and what is his representation besides the road with heart? List 3 .", "cypher": "match (:ENTITY{name:'176cm'}) <- [:Relationship{name:'height'}]-(x),(x) - [:Relationship{name:'represents work'}]->(h) where h.name <> 'hearted way' return distinct h.name limit 3"}, {"query": "What comes to mind when you think of Jilin?", "cypher": "match (p:ENTITY{name:'Jilin'}) <- [:Relationship{name:'region'}]- (q) return distinct q.name"}, {"query": "Who are the famous Italian doctors?", "cypher": "match (:ENTITY{name:' Italy'}) <- [:Relationship{name:' nationality'}]-(m), (m) - [:Tag{name:' tag'}]->(n) where n.name='medical' return distinct m.name"}, {"query": "What are the main ingredients and edible uses of fish belly?", "cypher": "match (:ENTITY{name:'fish belly'}) - [:Relationship{name:'main nutrient'}]->(n) return n.name as name union all match (:ENTITY{name:'fish belly'}) - [:Relationship{name:'main food function'}]->(m) return m.name as name"}, {"query": "The O blood type has a rose for a work, say three rose?", "cypher": "match (:ENTITY{name:'O'}) <- [:Relationship{name:'blood type'}]-(m),(m) - [:Relationship{name:'represents work'}]->(x) return distinct x.name limit 3"}, {"query": "What else do you know about this person? Please help me find the other four information in the 2nd layer.", "cypher": "match (:ENTITY{name:'sweet'}) -[:Relationship*1..3]-(p) where p.name <> 'person' return p.name limit 4"}, {"query": "Tell me, what is the work of a writer born in the state of California, USA, that represents the state of Nebraska?", "cypher": "match (:ENTITY{name:'Brazilian state'}) <- [:Relationship{name:'place of birth'}]-(h),(h) - [:Relationship{name:'representative work'}]->(x) return distinct x.name limit 1"}, {"query": "I would like to know the other 5 information about this person Roy Hodgson in Level 2 .", "cypher": "match (:ENTITY{name:' Roy Hodgson'}) - [:Relationship*1..2]-(p) where p.name <> 'person' return p.name limit 5"}, {"query": "The book 1999/12/1 was published by which publisher?", "cypher": "match (:ENTITY{name:'1999/12/1'}) <- [:Relationship{name:' time of publication'}]-(h),(h) - [:Relationship{name:' publisher'}]->(q) return distinct h.name,q.name"}, {"query": "What is the literature of the Chinese Academy of Sciences' Sustainable Development Strategy Research Group?", "cypher": "match (:ENTITY{name:'Sustainable Development Strategy Research Group of the Chinese Academy of Sciences'}) <- [:Relationship{name:'written by'}]- (x) return x.name"}, {"query": "What other professions can men do besides being senior economists? 10 recommended ones.", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(p) - [:Relationship{name:'profession'}]->(q) where q.name <> 'senior economist' return distinct q.name limit 10"}, {"query": "Can you provide the following five personal stories about Anne Marie Defoe, a Canadian?", "cypher": "match (n:ENTITY{name:'Anne Marie De Jones'}) - [*]->(x) where x.name <>'Canada' return distinct x.name limit 5"}, {"query": "Can you name the year 1324? The year of the Rat doesn't count, I already know.", "cypher": "match (:ENTITY{name:'1324 year'}) - [:Relationship{name:'alias'}]-> (p) with p order by p.name where p.name <> 'Year of the Crow ((Year of the Mouse) ' return p.name"}, {"query": "Tell me about the 12.10 Chicken Soup for the Soul collapse and the various labels?", "cypher": "match (:ENTITY{name:'12.10 Tsuchiya Shinkansen Bridge collapse incident'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "The keynote material; MBA/MPA/MPAcc combined with Economics: Logical Keynote [6th edition] which labels are suitable?", "cypher": "match (:ENTITY{name:'(2015) focused teaching material;MBA/MPA/MPAcc combined with economics class combined: Logical focus[6th edition]'}) - [:Tag{name:'tags'}]-> (x) with x order by x.name return x.name"}, {"query": "Who was born in Shanghai and is working in teaching and research?", "cypher": "match (:ENTITY{name:'teacher and researcher'}) <- [:Relationship{name:'profession'}]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) where n.name='Shanghai' return m.name"}, {"query": "Check out the following 20 pages of Teaching the Heavy Strike Stage: A two-layer relationship in drawing geometric structure training.", "cypher": "match (n:ENTITY{name:'Teaching the Heavyweight Strike Stage: Drawing Geometric Structure Training'}) - [:Relationship*1..2]->(x) where x.name <>'20 pages' return distinct x.name"}, {"query": "The name of the relationship involved in the 5th floor of the Kasai County Busan Senior Secondary School, do you know what it is?", "cypher": "match path=(n) <- [:Relationship*5]-(p:ENTITY{name:'Chenyang Senior Secondary School of Xiamen County'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "What are the major awards won by the school named in Chinese as Tianjin City Tianjin Middle School?", "cypher": "match (:ENTITY{name:' Tianjin City Tianjin Secondary School'}) <- [:Relationship{name:' Chinese name'}]-(q),(q) - [:Relationship{name:' major award'}]->(p) return distinct p.name"}, {"query": "Can you tell me about the 10 places that are open all year round and how much they cost?", "cypher": "match (:ENTITY{name:'Open all year round'}) <- [*]-(m), (m) - [:Relationship{name:'Ticket price'}]->(n) return m.name, n.name limit 10"}, {"query": "I wonder who participated in the Chilean independence movement to eradicate the remnants of the colonial army in Chile?", "cypher": "match (:ENTITY{name:' Participated in Chilean independence movement, exterminated remnants of colonial forces in Chile'}) --(n) return n.name order by n.name"}, {"query": "Can you tell us about the two-tier relationship between the industry figure Liu Yansheng and the media?", "cypher": "match (n:ENTITY{name:'\u5f66\u9759'}) - [*1..4]->(x) where x.name <> 'industry person' return distinct x.name"}, {"query": "Can you find me two people who are both aesthetists and philosophers?", "cypher": "match (:ENTITY{name:'philosopher'}) <- [:Relationship{name:'profession'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='aestheticist' return m.name limit 2"}, {"query": "Can you tell me about the five levels of relationships between the workers on the road, who were created by Myeong Rivan, Hong Kyaw Cheung, and Shen Zhongshan?", "cypher": "match (n:ENTITY{name:'working on the road'}) - [*1..5]->(x) where x.name <>'meet Rivan Hong Kyaw Sheng' return distinct x.name"}, {"query": "Help me find 10 species of vertebrates", "cypher": "match (:ENTITY{name:'backbone'}) --(x) return distinct x.name limit 10"}, {"query": "What are the first five novels published in 2015?", "cypher": "match (n:ENTITY{name:'2015-06-4'}) <- [:Relationship{name:'time of start'}]-(x),(x) - [:Tag{name:'tag'}]->(h) return distinct h.name limit 5"}, {"query": "What does gut polyp mean?", "cypher": "match (:ENTITY{name:' intestinal polyp'}) - [:Tag{name:' label'}]-> (m) return distinct m.name"}, {"query": "Do you know the national tournaments? Name eight?", "cypher": "match (:ENTITY{name:'National level event'}) <- [:Relationship{name:'Type of event'}]- (x) return x.name limit 8"}, {"query": "Can you recommend a show with 10 episodes and 12 words?", "cypher": "match (n:ENTITY{name:'all 12 words'}) <- [:Relationship{name:'set'}]- (m) return m.name limit 10"}, {"query": "What other information does Sun have besides being a member of the CCP? Please help me find 6 information in 2 layers.", "cypher": "match (:ENTITY{name:'son has for'}) - [*1..2]-(p) where p.name <> 'CPC member' return p.name limit 6"}, {"query": "Can you name the top 5 for the month of May?", "cypher": "match (:ENTITY{name:' small leap month'}) --(p) return p.name order by p.name limit 5"}, {"query": "What is the nickname of the man who walks west?", "cypher": "Match (n:ENTITY{name:'go west'}) <- [:Relationship{name:'other name'}]- (mn) return mn.name"}, {"query": "Do you know when they were published? Can you tell me five?", "cypher": "match (:ENTITY{name:'8 open'}) <- [:Relationship{name:'open'}]-(h),(h) - [:Relationship{name:'published time'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Which organization or institution is the main award for members of the Western Catholic Educational Union?", "cypher": "match (:ENTITY{name:'Western Catholic Education Union member'}) <- [:Relationship{name:' Major Award'}]- (p) return p.name order by p.name limit 1"}, {"query": "Is there a footballer who is 180 cm tall?", "cypher": "Match (:ENTITY{name:'180 cm'}) <- [:Relationship{name:'height'}]- (mn) - [:Tag{name:'tag'}]->(n:ENTITY{name:'footballer'}) return mn.name limit 20"}, {"query": "Can you tell me the last names of five Chinese people?", "cypher": "match (:ENTITY{name:'Hangul'}) <-[:Relationship{name:'ethnicity'}]-(h),(h) -[:Relationship{name:'othername'}]->(x) return x.name skip 2 limit 5"}, {"query": "I need 4 pieces of information about the theory and practice of early childhood education outside of school?", "cypher": "match (:ENTITY{name:' Early childhood education theory and practice'}) --(m) with m order by m.name where m.name <> '16' return distinct m.name limit 4"}, {"query": "Help me find a view of Taoist palace in the northern slope", "cypher": "match (:ENTITY{name:'Northern Fork'}) <- [:Relationship{name:'time of establishment'}]-(m), (m) - [:Relationship{name:'type'}]->(n) where n.name='Daoist Palace view' return m.name"}, {"query": "What is your profession?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'profession'}]->(m) return distinct m.name limit 1"}, {"query": "Who is the author of the mountain watercolor competition?", "cypher": "match (:ENTITY{name:'square'}) <-[:Relationship{name:'square'}]-(m) return distinct m.name"}, {"query": "Do you know what sporting event was held on May 28, 1997?", "cypher": "match (x:ENTITY{name:'1997-05-28'}) <- [:Relationship{name:' time of holding'}]- (n) return distinct n.name"}, {"query": "Badja Djola's 5 facts about him:", "cypher": "match (:ENTITY{name:'Badja Djola'}) --(m) return distinct m.name limit 5"}, {"query": "What tags match the 101 real dog searches?", "cypher": "match (:ENTITY{name:'101 real dog looking for something'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "Can you recommend some strategy games? What are they called?", "cypher": "match (:ENTITY{name:'strategy game'}) <- [:Relationship{name:'software type'}]- (m) return m.name"}, {"query": "Please list the representative works of Zhu Zhanjin.", "cypher": "match (:ENTITY{name:'Zhu Zhen'}) - [:Relationship{name:'representing work'}]-> (n) return distinct n.name"}, {"query": "Can you tell me about the internal relationship between the 72 kg Kakubava Levan and the two?", "cypher": "match (n:ENTITY{name:'Kakubava Levan'}) - [:Relationship*1..2]->(x) where x.name<>'72 kg' return distinct x.name"}, {"query": "The following is a list of 16 books on the history of the Nordic media.", "cypher": "match (n:ENTITY{name:'Nepal Media; High School Exam Question Complete Interpretation: History'}) - [*1..2]->(x) where x.name <>'16' return distinct x.name"}, {"query": "How was the 1960 New York crash a historic event?", "cypher": "match (:ENTITY{name:'1960 New York crash'}) --(q) with q order by q.name where q.name <> 'historical event' return q.name"}, {"query": "Can you tell me about the names of the ancient people of the Qing Dynasty?", "cypher": "match (:ENTITY{name:'Chang Dynasty'}) <- [:Relationship{name:'at the time'}]-(x) - [:Relationship{name:'word'}]->(n) return n.name order by n.name limit 10"}, {"query": "Check the following gaming portal for information on the relationship between the two layers of the game network?", "cypher": "match (n:ENTITY{name:'says game network'}) - [:Relationship*1..2]->(x) where x.name<>'handheld portal' return distinct x.name"}, {"query": "Madden, who is a member of the Chinese Academy of Contemporary Art, spoke about his other 10 achievements.", "cypher": "match (:ENTITY{name:'Made in Chinese'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'main achievement'}]->(q) where q.name <> 'Chinese contemporary painters' return distinct q.name limit 10"}, {"query": "The following is a summary of the 12 nights:", "cypher": "match (:ENTITY{name:'12 nights'}) --(n) with n order by n.name return n.name"}, {"query": "Who is the author of the Tibetan Cloud Map Axis?", "cypher": "match (:ENTITY{name:'Tibetan cloud graph axis'}) - [:Relationship{name:'author'}]->(m) return distinct m.name"}, {"query": "What is the meaning of the three-earthed alphabet?", "cypher": "match (:ENTITY{name:''}) - [:Relationship{name:'spelling'}]-> (m) return distinct m.name"}, {"query": "Who is Miss Yang-Tseu referring to?", "cypher": "match (:ENTITY{name:'square miss'}) --(x) return distinct x.name"}, {"query": "107 has a rubber label?", "cypher": "match (:ENTITY{name:'107'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "Do you have a biochemistry department at your main campus?", "cypher": "match (:ENTITY{name:' has 8 departments: Department of Biochemistry'}) <- [:Relationship{name:' major department'}]- (m) return distinct m.name"}, {"query": "What is the best way to make a fresh, sweet and spicy winter squash?", "cypher": "match (n:ENTITY{name:'winter shrimp'}) - [*1..3]->(x) where x.name <>'fresh sweet' return distinct x.name"}, {"query": "Do you know which are the main departments of the Ningbo Road Space Middle School in Chengdu?", "cypher": "match (:ENTITY{name:'Ningbo Road Space Secondary School'}) - [:Relationship{name:'Major Faculty'}]-> (m) return m.name order by m.name"}, {"query": "What are the major awards won by NO.1 Middle school of Wanfeng?", "cypher": "match (:ENTITY{name:'NO.1 Middle school of Wanfeng'}) <- [:Relationship{name:'English name'}]-(m),(m) - [:Relationship{name:'main award'}]->(n) return distinct n.name"}, {"query": "What would be the label for a book called 101 Design Methods?", "cypher": "match (x:ENTITY{name:'101 Design Methods'}) - [:Tag{name:'tags'}]-> (h) with h order by h.name where h.name <> 'books' return h.name"}, {"query": "What are the publications published by Ocean Publishing? and what is his price range? can you give me five?", "cypher": "match (:ENTITY{name:' ocean publishing'}) <- [:Relationship{name:' publishing'}]-(h),(h) - [:Relationship{name:' pricing'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "I want to know about three different types of research that have broken the curse of the Inner Mongolia model of uranium resources, apart from 238 pages?", "cypher": "match (:ENTITY{name:'cracking the curse of the Inner Mongolia model of the curse of the Inner Mongolia'}) --(m) with m order by m.name where m.name <> '238 pages' return distinct m.name limit 3"}, {"query": "Where is the historical ancient city of Sichuan?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'geographical location'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'related person'}]->(m) return m.name as name"}, {"query": "Can you give us an introduction to the three-tier relationship between computer repair and Chongqing University Press?", "cypher": "match (n:ENTITY{name:'Computer repair'}) - [:Relationship*1..3]->(x) where x.name <>'Chongqing University Press' return distinct x.name"}, {"query": "The screen size is 42 inches, excluding the 4 messages in the 2nd layer of the TH-P42G11C.", "cypher": "match (:ENTITY{name:'P P-P-P-P-P-P-P-P-P-P-P-P'}) - [*1..2]-(p) where p.name <> '42 inches' return distinct p.name limit 4"}, {"query": "Please tell me the name of the next Tokyo undercover agent.", "cypher": "match (:ENTITY{name:'Tokyo Umbrella Outreach'}) <- [:Relationship{name:'other name'}]- (x) return x.name"}, {"query": "Can you recommend a song from the album by Triple H?", "cypher": "Match (:ENTITY{name:'Triple H'}) <- [:Relationship{name:'album singer'}]- (n) return n.name"}, {"query": "Please introduce me to this man from the country of alias Yum, can you tell me his profession?", "cypher": "match (:ENTITY{name:'s from country'}) <- [:Relationship{name:'s from country'}]-(m),(m) - [:Relationship{name:'s from profession'}]->(p) return p.name order by p.name limit 1"}, {"query": "Can you recommend 5 popular songs please?", "cypher": "match (:ENTITY{name:'popular'}) <- [:Relationship{name:'musical style'}]- (h) return h.name limit 5"}, {"query": "What is the Great Calamity?", "cypher": "match (:ENTITY{name:'the big bad sign'}) --(x) with x order by x.name return x.name"}, {"query": "Can you give me three national high school vocational schools that are exemplary and help me introduce them?", "cypher": "match (:ENTITY{name:'National exemplary secondary vocational school'}) <-[:Relationship*]-(m),(m) -[:Describe{name:'description'}]->(n) return m.name,n.name limit 3"}, {"query": "What is the name of the company that makes the 5-methyl-2-methyl-acetate?", "cypher": "match (:ENTITY{name:'5-spy spider dimethyl acetate dimethyl'}) - [:Tag{name:'label'}]-> (h) with h order by h.name return h.name"}, {"query": "What are Pierre Gauguin's main achievements and representative works?", "cypher": "match (:ENTITY{name:'Pierre Gauguin'}) - [:Relationship{name:'main achievements'}]->(n) return n.name as name union all match (:ENTITY{name:'Pierre Gauguin'}) - [:Relationship{name:'representing work'}]->(m) return m.name as name"}, {"query": "Can you name one of the characteristics of 101 penguins?", "cypher": "match (:ENTITY{name:'101 penguin'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "Can you tell me about any of the representative works of Biang?", "cypher": "match (:ENTITY{name:'\u6bd5\u540c'}) <- [:Relationship{name:' Chinese name'}]-(p),(p) - [:Relationship{name:' representing work'}]->(n) return distinct n.name"}, {"query": "In which country is the capital of Engazakamu?", "cypher": "match (:ENTITY{name:'Nagazakamu'}) --(x) return distinct x.name"}, {"query": "The representation of ten Japanese citizens?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'nationality'}]-(n) - [:Relationship{name:'representative work'}]->(h) return h.name order by h.name limit 10"}, {"query": "Please help me find out which publisher published the three books published in May 2008?", "cypher": "match (:ENTITY{name:'May 2008'}) <- [*]-(m), (m) - [:Relationship{name:'publisher'}]->(n) return distinct m.name, n.name limit 3"}, {"query": "The incident took place in the north-eastern province of Semnan.", "cypher": "match (:ENTITY{name:'Semen Province in northeastern Iran'}) <- [:Relationship{name:'place of occurrence'}]- (n) return distinct n.name"}, {"query": "I would like to know which chemicals are included in the catalogue of classification and varieties of chemicals?", "cypher": "match (:ENTITY{name:'Classification and variety of chemicals included in the catalogue'}) <- [:Relationship{name:'chemicals'}]- (x) return x.name"}, {"query": "Can you tell us a little bit about the swordless?", "cypher": "match (:ENTITY{name:' swordless'}) --(x) return x.name order by x.name"}, {"query": "Do you have any of the 10 occupations of this Japanese person?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'nationality'}]-(p),(p) - [:Relationship{name:'profession'}]->(m) return m.name order by m.name limit 10"}, {"query": "Can you recommend six romance novels?", "cypher": "match (:ENTITY{name:'city idiom'}) <- [:Relationship{name:'novel type'}]- (x) return x.name limit 6"}, {"query": "Can you list some of the B-level exhibitions?", "cypher": "match (:ENTITY{name:'B level'}) <- [:Relationship{name:'exhibition level'}]- (m) return distinct m.name"}, {"query": "And what will convey to you the Day of Resurrection?", "cypher": "match (n:ENTITY{name:'Death God has no rest day'}) --(x) return x.name"}, {"query": "You know the headquarters is in Zhejiang, China.", "cypher": "match (:ENTITY{name:'Yee-jin Wine Industry'}) - [*1..4]-(p) where p.name <> 'Zhejiang' return distinct p.name limit 6"}, {"query": "Did you have trouble finding the information on the three-tier relationship in Weiwei, Guangdong Province?", "cypher": "match (n:ENTITY{name:'Wizhou Wiyue'}) -[:Relationship*1..3]->(x) where x.name<>'Wizhou City, Guangdong Province' return distinct x.name"}, {"query": "I'm interested in the following features: What is the software that supports converting video to AVI?", "cypher": "match (x:ENTITY{name:'supports conversion of video to AVI'}) <- [:Relationship{name:'features'}]- (n) return n.name"}, {"query": "Putting aside the message that the rain god is in charge, find 10 information about the ancient rain god in 2 layers.", "cypher": "match (:ENTITY{name:' rain god'}) - [*1..2]->(p) where p.name <> ' rain god' return p.name limit 10"}, {"query": "What company offers products like switches, low voltage electrical appliances, lighting?", "cypher": "match (:ENTITY{name:' switch outlet, low voltage electrical appliance, lighting'}) <- [:Relationship{name:' product service'}]- (m) return distinct m.name"}, {"query": "Please list me the top 5 articles about A.A. Milne.", "cypher": "match (:ENTITY{name:'A.A. Milne'}) --(h) return h.name order by h.name limit 5"}, {"query": "Can you recommend some power metal bands?", "cypher": "match (:ENTITY{name:'power metal'}) <- [:Relationship{name:' style'}]- (p) return distinct p.name"}, {"query": "Please help me find the other 5 information in the second layer of this film Love Madness.", "cypher": "match (:ENTITY{name:'Love is crazy'}) - [:Relationship*1..2]-(p) where p.name <> 'film' return p.name limit 5"}, {"query": "The three coins refer to who? What have they achieved?", "cypher": "match (:ENTITY{name:'three-dollar'}) - [:Relationship{name:'Chinese name'}]->(n) return n.name as name union all match (:ENTITY{name:'three-dollar'}) - [:Tag{name:'tag'}]->(m) return m.name as name"}, {"query": "Can you find me three people who graduated from Shenyang Industrial University?", "cypher": "match (:ENTITY{name:'Shenyang Industrial College'}) <- [:Relationship{name:'Graduate College'}]-(n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "Which players are the best forwards? Name nine?", "cypher": "match (:ENTITY{name:'forward'}) <- [:Relationship{name:'field location'}]- (n) return n.name limit 9"}, {"query": "What other roles has Paul Ficks done?", "cypher": "match (:ENTITY{name:' Paul Fix'}) - [:Relationship{name:' profession'}]-> (x) with x order by x.name where x.name <> 'writer' return x.name"}, {"query": "Looking for a label associated with 101 acrylic resin solvents?", "cypher": "match (:ENTITY{name:'101 acrylic resin solvent'}) - [:Tag{name:'label'}]-> (p) with p order by p.name return p.name limit 1"}, {"query": "What is the status of the institution affiliated with the Industrial University of Harbin?", "cypher": "match (:ENTITY{name:'Harbin Industrial University'}) <- [:Relationship{name:'institutions affiliated'}]- (h) return distinct h.name"}, {"query": "The slogan of which contest is \"Passion burns here\"?", "cypher": "match (:ENTITY{name:'passion is burning here'}) <- [:Relationship{name:'password'}]- (q) return distinct q.name"}, {"query": "Please check the production area of Crazy Aliens and see if there are any stars.", "cypher": "match (:ENTITY{name:'crazy alien'}) - [:Relationship{name:'production area'}]->(n) return n.name as name union all match (:ENTITY{name:'crazy alien'}) - [:Relationship{name:'star'}]->(m) return m.name as name"}, {"query": "I want to ask you, who wrote the post about the youth party?", "cypher": "match (:ENTITY{name:'swinging party'}) --(p) return distinct p.name"}, {"query": "What are the famous sights and specialties of Shandong Peninsula?", "cypher": "match (:ENTITY{name:'Sandong Peninsula'}) - [:Relationship{name:'Famous attractions'}]->(n) return n.name as name union all match (:ENTITY{name:'Sandong Peninsula'}) - [:Relationship{name:'Special product'}]->(m) return m.name as name"}, {"query": "What chemical has a molar mass of 180.24?", "cypher": "match (:ENTITY{name:'180.24'}) <- [:Relationship{name:'Moor mass'}]- (h) return distinct h.name"}, {"query": "Tell me about the first five or seven dreams?", "cypher": "match (:ENTITY{name:'Seven Dreams'}) --(p) with p order by p.name return p.name limit 5"}, {"query": "Please tell me the name of the exhibition organized by Tianjin World Expo Limited.", "cypher": "match (h:ENTITY{name:' Tianjin Seka Expo Limited'}) <- [:Relationship{name:' organizational unit'}]- (m) return m.name"}, {"query": "Can you describe to me the situation of the Akira-san?", "cypher": "match (:ENTITY{name:'square'}) --(m) return m.name skip 1"}, {"query": "Can you give me a list of seven provincial nature reserves?", "cypher": "match (q:ENTITY{name:'Provincial nature reserve'}) <- [:Relationship{name:'Visitation level'}]- (h) return h.name limit 7"}, {"query": "What is the point of playing 175 games in five words?", "cypher": "match (:ENTITY{name:'175 little game'}) --(p) with p order by p.name return p.name limit 5"}, {"query": "Can you give me a little background on the game Football Match 2012?", "cypher": "match (n:ENTITY{name:' football match'}) - [:Relationship*1..3]->(x) where x.name <> 'game' return distinct x.name"}, {"query": "Do you know anything about the 4th level of the administrative division and its labels?", "cypher": "match (n) - [:Tag*4{name:'tag'}]->(p:ENTITY{name:'administrative division'}) RETURN distinct n.name limit 5"}, {"query": "Can you list the 3D Power projects?", "cypher": "match (:ENTITY{name:'3D Dynamics'}) <- [:Relationship{name:'company name'}]- (h) return h.name"}]