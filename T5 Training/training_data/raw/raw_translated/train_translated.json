[{"query": "Can you name one of the aliases of Ruxin?", "cypher": "match (:ENTITY{name:'Luxin'}) <--(h) -[:Relationship{name:'also known as '}]->(q) return distinct q.name limit 1"}, {"query": "Do you know what the hardness difference is for the most commonly used 301-SH stainless steel tape?", "cypher": "match ((p:ENTITY{name:'301SH stainless steel band'}) - [:Relationship{name:'hardness coefficient'}]-> (q) return q.name"}, {"query": "How many people can you find in multiplayer online games?", "cypher": "match (:ENTITY{name:'many people'}) <- [:Relationship{name:'number of players'}]- (mn) - [:Tag{name:'tag'}]->(n:ENTITY{name:'network game'}) return mn.name"}, {"query": "Tell me what film is produced in mainland China?", "cypher": "match (:ENTITY{name:'Mainland China'}) <- [:Relationship{name:'Place of manufacture'}]- (x) return distinct x.name limit 5"}, {"query": "What are the names of the three-lined whale?", "cypher": "match (:ENTITY{name:' three-line waveship'}) <- [:Relationship{name:' species'}]- (p) return p.name"}, {"query": "Do you know who is the person who has been doing the most to build a safe culture of demonstration in the city and create a workplace for advanced personal branding?", "cypher": "match (q:ENTITY{name:'conforming to the city hall's safety culture building demonstration creating work advanced personal shade'})"}, {"query": "And when was he born, and when did he die?", "cypher": "The name of the country is the same as the name of the country of origin of the person. The name of the country of origin is the same as the name of the country of origin of the person."}, {"query": "Can you give a list of 10 things that this person who graduated from Zhejiang University has achieved?", "cypher": "match (:ENTITY{name:'Zhejiang University'}) <- [:Relationship{name:'Graduate School'}]-(q),(q) - [:Relationship{name:'Main achievement'}]->(x) return x.name skip 1 limit 10"}, {"query": "Do you know which novel has a song in it, \"Pluto\"?", "cypher": "Match (:ENTITY{name:'night song, twilight dust'}) <- [:Relationship{name:' supporting role'}]- (m) return m.name"}, {"query": "Do you know which printing press was the predecessor of the printing press of the Apple Store Communications Department?", "cypher": "match (:ENTITY{name:'Relationship's printed copy of the store's communications'}) <- [Relationship{name:'s predecessor'}]- (n) return distinct n.name"}, {"query": "The following is a list of 5 foreign language personal information about a person named Nynkeu Nicolas.", "cypher": "match (n:ENTITY{name:'Nynkeu Nicolas'}) - [*1..5]->(x) where x.name <> 'foreign name' return distinct x.name limit 5"}, {"query": "Can you list the games included in the Nintendo N64 platform?", "cypher": "The game is also available in the form of a free-to-play game, called \"Relationship\" (Relationship)."}, {"query": "What other labels are there for the book 100 Ideas that Changed Fashion?", "cypher": "match (:ENTITY{name:'100 Ideas that Changed Fashion'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'books' return q.name"}, {"query": "I'm not sure if you can give me a major American work.", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(q),(q) - [:Relationship{name:'main works'}]->(m) return distinct m.name limit 1"}, {"query": "Do you know which is Zhang's main work?", "cypher": "match (:ENTITY{name:'\u5f20\u827a, born 9 January 1985 in Dongguan, Shandong, Mainland China\u3002'}) <- [:Describe{name:'description'}]-(p) - [:Relationship{name:'main works'}]->(n) return distinct n.name limit 1"}, {"query": "Do you know where he is at the University of Nankai's Fuhai College?", "cypher": "match (:ENTITY{name:'Nanking University Fuhai College'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'area'}]->(n) return distinct n.name"}, {"query": "What are the results of three social events?", "cypher": "match (:ENTITY{name:'social event'}) <--(m), (m) - [:Relationship{name:'result'}]->(n) return m.name, n.name limit 3"}, {"query": "I have four engineers, and they have given me their graduation schools.", "cypher": "match (:ENTITY{name:' engineer'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' graduate school'}]->(n) return m.name,n.name limit 4"}, {"query": "Can you tell me about Jiangxi Chinco New Building Materials Limited, other than the fact that it is registered with the Nanchang City Market and Quality Supervision Administration?", "cypher": "match (:ENTITY{name:'Jiangxi Chinko New Building Materials Limited'}) --(m) with m order by m.name where m.name <> 'Nanchang City Market and Quality Supervision Administration' return distinct m.name limit 2"}, {"query": "What books are priced at $10? Can you help me find two?", "cypher": "match (:ENTITY{name:'10.00\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' book name'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Can you tell whose main award is the FIFA Medal of Honor?", "cypher": "match (:ENTITY{name:' FIFA Medal of Honor'}) <- [:Relationship{name:' Major award'}]- (h) return distinct h.name limit 10"}, {"query": "Do you know whose song is The Door of Time? Please tell me one.", "cypher": "match (:ENTITY{name:' the door of time'}) --(p) return distinct p.name limit 1"}, {"query": "What chemical is 6\u00b0C?", "cypher": "match (:ENTITY{name:'6\u00b0C'}) <- [:Relationship{name:'focal point'}]- (q) return distinct q.name"}, {"query": "What is the information about plants in the four-layer relationship between the plant subfamily and the genus Rosea?", "cypher": "match (n:ENTITY{name:'Jiao Li'}) - [*1..4]->(x) where x.name<>'Jiaoliaceae' return distinct x.name"}, {"query": "I'm going to give you four actors from the 80s, and tell me about their representative work.", "cypher": "match (:ENTITY{name:'80s actor'}) <--(m), (m) - [:Relationship{name:'represents work'}]->(n) return m.name, n.name limit 4"}, {"query": "The following are the 5 questions for Serika Alexander, who is 1.87m tall.", "cypher": "match (n:ENTITY{name:'Serika Alexander'}) - [*]->(x) where x.name <>'1.87 m' return distinct x.name limit 5"}, {"query": "Please tell me what the name of the exhibition on November 18-19, 2012 is?", "cypher": "Match (:ENTITY{name:'November 18, 2012 - 19th'}) <- [:Relationship{name:'Relationship'}]- (m) return m.name"}, {"query": "Who is the original singer of the song?", "cypher": "match (:ENTITY{name:'Relationship{name:'song originally sung'}]-> (m) return distinct m.name"}, {"query": "What is the name of the accident that happened on July 5, 2016 at 23:16?", "cypher": "match (:ENTITY{name:'5 July 2016 at 23:16'}) <- [:Relationship{name:'time'}]- (x) return distinct x.name"}, {"query": "The three Dennis Trillos representing the country?", "cypher": "match (:ENTITY{name:'Dennis Trillo'}) - [:Relationship{name:'represents work'}]-> (q) with q order by q.name return q.name limit 3"}, {"query": "What kind of book is this 10/0.4kV power distribution practical training manual?", "cypher": "match (:ENTITY{name:'10/0.4kV power distribution practical technical training tutorial'}) --(p) with p order by p.name where p.name <> 'books' return p.name"}, {"query": "I met my mother at the 2011 Guangzhou International Energy Saving and Environmental Technology Exhibition, do you know where the exhibition is?", "cypher": "match ((:ENTITY{name:'2011 Guangzhou International Energy Saving and Environmental Technology Exhibition'}) - [:Relationship{name:'exhibition location'}]-> (n) return n.name"}, {"query": "The first is that the government has been able to provide a free access to the internet for the people of the country.", "cypher": "match (n:ENTITY{name:'free paper'}) - [:Relationship*1..2]->(x) where x.name<>'life supplies' return distinct x.name"}, {"query": "What are the species of the genus Culicoides?", "cypher": "match (:ENTITY{name:'sub-species'}) <- [:Relationship{name:'sub-species'}]- (m) return m.name limit 6 This is a list of the most commonly used and used names in the world."}, {"query": "Can you name a global competition?", "cypher": "match (:ENTITY{name:'global'}) <- [:Relationship{name:'event type'}]- (m) return m.name"}, {"query": "What is the static load of the 1301TN bearing we use?", "cypher": "match ((:ENTITY{name:'1301TN bearing'}) - [:Relationship{name:'stationary load'}]-> (h) return h.name"}, {"query": "I would like to know which places in the world are associated with the second tier of the label? Can you list five?", "cypher": "The name of the game is \"Skype\" (Skype) and the name of the game is \"Skype\" (Skype)."}, {"query": "I would like to know about the two-tier relationship between the two works of Jade's listening?", "cypher": "match (n:ENTITY{name:' listen to you'}) - [:Relationship*1..2]->(x) where x.name <> 'can' return distinct x.name"}, {"query": "What are the subfamilies of the Danish flying squirrel?", "cypher": "match (:ENTITY{name:'\u821e\u79d1'}) <- [:Relationship{name:'\u79d1'}]-(h),(h) - [:Relationship{name:'sub-category'}]->(q) return distinct h.name,q.name"}, {"query": "You know, the six-year-old who's the smartest, the sweetest, the smartest person in the world, who wrote the Encyclopedia?", "cypher": "match (h:ENTITY{name:'0 6 years old smart baby's intellectual development encyclopedia'}) --(x) with x order by x.name where x.name <> ' publications' return x.name"}, {"query": "Can you name three other labels that the Parenting Manual for 0-1 year olds completely removed from the data?", "cypher": "match (:ENTITY{name:'0-1 years old full parenting manual'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'books' return n.name limit 3"}, {"query": "Can you list five songs with Nalan Yanran's voice?", "cypher": "match (:ENTITY{name:'Nalan Yanran'}) <- [:Relationship{name:' foreign language name'}]-(m),(m) - [:Relationship{name:' voiceover'}]->(q) return distinct q.name limit 5"}, {"query": "So what do you call a sequence that has 5 bits per second?", "cypher": "match (:ENTITY{name:'5bp'}) <- [:Relationship{name:'contains'}]- (n) return n.name"}, {"query": "What are the investment institutions in the US?", "cypher": "match (p:ENTITY{name:' US investment agency\u3002'}) <--(x) return x.name"}, {"query": "You know what kind of historical fiction is?", "cypher": "match (:ENTITY{name:'historical evolution'}) <- [:Relationship{name:'novel type'}]- (n) return distinct n.name"}, {"query": "I'm not sure if I'm getting the 1% chance of understanding this Korean drama in 10 words or less.", "cypher": "match (:ENTITY{name:'1% chance [2003 Korean TV series]'}) --(h) with h order by h.name return h.name limit 10"}, {"query": "Can you find the five singers? Where is their band?", "cypher": "match (:ENTITY{name:' singer'}) <--(m), (m) - [:Relationship{name:' band'}]->(n) return m.name, n.name limit 5"}, {"query": "The following is a list of works that are related to the three levels of the post-war relationship between the two countries.", "cypher": "match (n:ENTITY{name:'send a deer to the door'}) - [:Relationship*1..3]->(x) where x.name <>'reason' return distinct x.name"}, {"query": "How many businesses have been opened in Wuhan?", "cypher": "match (p:ENTITY{location:'Wuhan'}) return count ((p)"}, {"query": "Can you recommend a system that supports Android 2.3 or iOS 6.0 or higher?", "cypher": "match (:ENTITY{name:'Android 2.3\u3001ios 6.0 or higher'}) <- [:Relationship{name:'System supported'}]- (m) return m.name"}, {"query": "Do you have any information about Zhou's representative works?", "cypher": "match (:ENTITY{name:'Zhou Yuano'}) - [:Relationship{name:'represents work'}]-> (p) return p.name order by p.name limit 5"}, {"query": "Do you know what types of relationships Joel Richards is involved in in the four layers?", "cypher": "The following is a list of the most commonly used URLs for the URLs listed in this section:"}, {"query": "Did you know that the year is called the Decade of Eternal Happiness?", "cypher": "match (:ENTITY{name:'Yongle decade'}) <- [:Relationship{name:'Mingde era'}]- (m) return m.name"}, {"query": "Can you list the five main works of the people who graduated from the School of Communication Arts of the International Department of Chulalongkorn University?", "cypher": "match (:ENTITY{name:'Champion's College of Communication Arts'}) <- [Relationship{name:'Graduate School'}]- ((n) - [Relationship{name:'Major work'}]->(m) return distinct m.name limit 5"}, {"query": "Tell me about the main award that ballet dancing boys have won, the top 10 lines?", "cypher": "match (:ENTITY{name:'the boy who danced the ballet'}) - [:Relationship{name:'the main prize'}]-> (q) return q.name order by q.name limit 10"}, {"query": "What are the most representative works of the writer born on July 6, 1975? Can you name three?", "cypher": "match (:ENTITY{name:'6 July 1975'}) <- [:Relationship{name:'date of birth'}]-(m),(m) - [:Relationship{name:'represents work'}]->(h) return distinct h.name limit 3"}, {"query": "Could you please provide me with a software that can do this for me?", "cypher": "match (:ENTITY{name:'Weekmail article embellishment'}) <- [:Relationship{name:' tool role'}]- (q) return distinct q.name"}, {"query": "The bombing in which 30 people were killed and 70 injured?", "cypher": "match (:ENTITY{name:'30 dead, 70 wounded'}) <- [:Relationship{name:'number of wounded'}]- (p) return distinct p.name"}, {"query": "What is the north-east of the village of East Shore in the northern part of the village of East Shore in the province of T\u014dky\u014d?", "cypher": "match (:ENTITY{name:'Nord-de-Kontor in the eastern part of the county of Fukuoka'}) <--(n) return n.name"}, {"query": "Where is the region of Baing Guo Zhou, the Mongolian Autonomous Region?", "cypher": "match (:ENTITY{name:'Baing Guoyang Mongolian Autonomous Region'}) - [:Relationship{name:'the region'}]-> (m) return distinct m.name"}, {"query": "Can you tell me what the three German-made weapons are?", "cypher": "match (:ENTITY{name:' Germany'}) <- [:Relationship{name:' country of manufacture'}]- ((n) - [:Relationship{name:' Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "Do you know which games are in the hobby and which platforms they play on? Can you tell me about five?", "cypher": "match (:ENTITY{name:'recreational'}) <- [:Relationship{name:'game type'}]-(h),(h) - [:Relationship{name:'game platform'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "What do you think of the mobile game 101 Paratroopers?", "cypher": "match (:ENTITY{name:'101 airborne'}) --(n) with n order by n.name where n.name <> 'mobile game' return n.name"}, {"query": "What are the most representative works of Marcia Strassman? Can you tell me the top 10?", "cypher": "match (:ENTITY{name:'Marcia Strassman'}) - [:Relationship{name:'represents work'}]-> (h) return h.name order by h.name limit 10"}, {"query": "What games are the same size as the game The Spider's Escape and what are their individual labels? Order them in order of how many labels they have, from most to least.", "cypher": "match (n:ENTITY{name:'the spider's escape'}) - [:Relationship{name:'game size'}]->(:ENTITY) <-[:Relationship{name:'game size'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) BY ORDER c DESC"}, {"query": "Do you know five things about this Chinese person's career?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(x),(x) - [:Relationship{name:'profession'}]->(n) return n.name skip 2 limit 5"}, {"query": "The following is a list of the most important Chinese books on the subject of social ecology:", "cypher": "match (n:ENTITY{name:' The local equivalent of the sacrificed chicken: Research on the social and ecological changes in the North of the Yangtze River'}) - [:Relationship*1..2]->(x) where x.name <> 'simplified Chinese' return distinct x.name"}, {"query": "The 16th floor real estate network is a technology product, but does it have any other features?", "cypher": "match (:ENTITY{name:'16th floor real estate network'}) --(p) with p order by p.name where p.name <> 'technology product' return p.name"}, {"query": "What exhibitions are held once a year? Can you list five?", "cypher": "match (x:ENTITY{name:'1 year 1 edition'}) <- [:Relationship{name:'exhibition cycle'}]- (n) return n.name limit 5"}, {"query": "What is the difference between the near and the opposite of the divine axe?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'next term'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'next term'}->(m) return m.name as name"}, {"query": "What are the three principles of political work?", "cypher": "match (:ENTITY{name:'the three principles of political work'}) - [:Tag{name:'tag'}]-> (m) return distinct m.name"}, {"query": "What does Dominic Sherwood do?", "cypher": "match (:ENTITY{name:'Dominic Sherwood')) born 6 February 1990 in Kent, South East England)"}, {"query": "What is the shortest distance between the two levels of the village of Incheon Sheng and the village of Wangjiao?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'\u803b\u51b2\u6751'}) - [*..2]-(b:ENTITY{name:'Wangjia\u51b2\u6751[shortest paths in Shichuan county, Yunnan province]')) return count ((p))"}, {"query": "Can you tell me about the most representative works of Melinda Renna?", "cypher": "match (:ENTITY{name:'Melinda Renna'}) - [:Relationship{name:'represents work'}]-> (p) return p.name order by p.name"}, {"query": "What is the binary number 10001001?", "cypher": "match (:ENTITY{name:'10001001'}) <- [:Relationship{name:' binary'}]- (m) return distinct m.name"}, {"query": "What are the main awards that are given to players who are practicing right footed?", "cypher": "match (:ENTITY{name:'right foot'}) <- [:Relationship{name:'used foot'}]-(h),(h) - [:Relationship{name:'main prize'}]->(m) return distinct m.name limit 1"}, {"query": "Do you want to know more about the work of Yuyuma Yuzun in the 2nd layer relationship?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'' return distinct x.name"}, {"query": "Can you tell me which schools have had notable alumni who have won this major award for being the first church schools founded by the American Church of Christ in China?", "cypher": "match (:ENTITY{name:'The first church schools founded by the American Christian Church in China'}) <- [:Relationship{name:'Major award'}]- ((h) - [:Relationship{name:'Famous alumni'}]->(p) return p.name skip 1 limit 10"}, {"query": "Can you name three professions of this politician?", "cypher": "match (:ENTITY{name:'political figure'}) <- [:Tag{name:'tag'}]-(h) - [:Relationship{name:'profession'}]->(m) return m.name order by m.name limit 3"}, {"query": "What is the Chinese name of the fantasy adventure of Barbie Princess? What is the foreign name? What kind of work is it?", "cypher": "match (:ENTITY{name:'Barbie Princess's Fantasy Adventure'}) - [:Relationship{name:'Barbie Princess's Fantasy Adventure'}]->(n) return n.name as name union all match (:ENTITY{name:'Barbie Princess's Fantasy Adventure'}) - [:Relationship{name:'Barbie Princess's Fantasy Adventure'}->(m) return m.name as name union all match (:ENTITY{name:'Barbie Princess's Fantasy Adventure'}) - [:Relationship{name:'Type'}]->(r) return r.name as name"}, {"query": "Do you know what accident happened on the Taitung pedestrian street in Qingdao?", "cypher": "match (:ENTITY{name:'Taydon Walkway in Qingdao Dressing the World'}) <- [:Relationship{name:'location'}]- (p) return distinct p.name"}, {"query": "Can you name five?", "cypher": "match (p:ENTITY{name:'man'}) <--(x) --> ((q:ENTITY{name:'painter'}) return x.name limit 5"}, {"query": "Which country uses the .hr domain name?", "cypher": "match ((:ENTITY{name: '.hr Domain name'}) - [:Relationship{name:' country'}]-> (q) return q.name"}, {"query": "I'm not sure if I can get a copy of the book, but I'm sure you can find a copy of the book.", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(h),(h) - [:Relationship{name:'profession'}]->(m) return h.name,m.name skip 1 limit 1"}, {"query": "Ro lists five types of subjects in the two-layer relationship of the temple of the battle bird.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'five\u7edd' return distinct x.name"}, {"query": "Find the five Congolese footballers in Makita-Passy Fabry's six-level relationship.", "cypher": "match (n:ENTITY{name:'Makita-Passy Fabry'}) - [*1..6]->(x) where x.name<>'Makita-Passy Fabry, Congolese footballer\u3002' return distinct x.name limit 5"}, {"query": "Can you tell me what the Chinese name of the author of the book A Rainy World is? Can you tell me five?", "cypher": "match (:ENTITY{name:'the world of raindrops'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'Chinese name'}]->(n) return n.name order by n.name limit 5"}, {"query": "Can you help me check out three related articles about the Class 09 crossover?", "cypher": "match (:ENTITY{name:'09 level crossing'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 3"}, {"query": "What do you know about this book that decides the life of a 6-year-old?", "cypher": "match (:ENTITY{name:'06 years old decides the life of a child'}) --(h) with h order by h.name where h.name <> 'books' return h.name"}, {"query": "Can you name 10 of the games that will be held in Beijing?", "cypher": "match (:ENTITY{name:'Beijing'}) <- [:Relationship{name:'place of the match'}]- (p) return p.name limit 10"}, {"query": "1TYM is the second singer-songwriter group launched by Y.G. When is their debut?", "cypher": "match ((:ENTITY{name:'1tym'}) - [:Relationship{name:'time of exit'}]-> (m) return m.name"}, {"query": "I'm not sure if you know what the third level of labels are related to the term life. Can you name three?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'life term'}) RETURN distinct n.name limit 3"}, {"query": "I asked if I could ask you about the relationship between Chen and Fan Mao.", "cypher": "match (n:ENTITY{name:' and only Van Mao'}) - [:Relationship*1..2]->(x) where x.name<>'Chenyang' return distinct x.name"}, {"query": "The earthquake was at a depth of 11 kilometers and the alarm was coming.", "cypher": "match (p:ENTITY{name:'11 km'}) <- [:Relationship{name:'depth'}]- (n) return n.name"}, {"query": "The police are working hard to solve a case in Shenzhen, which one is it?", "cypher": "match (:ENTITY{name:'The police are working hard on the case'}) <- [:Relationship{name:'Case status'}]- (x) return distinct x.name"}, {"query": "I need 5 messages from Skype for Business with 21MB of software?", "cypher": "match (n:ENTITY{name:'Skype for Business'}) - [*]->(x) where x.name <>'21MB' return distinct x.name limit 5"}, {"query": "I want to get all the information from the Digital Media Department of the Academy of Fine Arts.", "cypher": "match (:ENTITY{name:'Washington University's department of digital media'}) --(m) return m.name order by m.name"}, {"query": "Where is the Yellow River Gorge located?", "cypher": "match (:ENTITY{name:'Relationship{name:' geographical location'}]->(n) return n.name"}, {"query": "Do you know which company has more than 3 million CVs?", "cypher": "Match (:ENTITY{name:'more than 3 million'}) <- [:Relationship{name:'job search resume'}]- (h) return h.name"}, {"query": "In which year was the Vanshan Master's Higher Specialist University founded?", "cypher": "match (:ENTITY{name:'Venusan Teacher's College of Higher and Special Sciences'}) - [:Relationship{name:'time of establishment'}]->(m) return distinct m.name"}, {"query": "The Law on the Acting Officers of the People's Republic of China was passed at which conference and when did it come into effect?", "cypher": "match (:ENTITY{name:'Relationship'}-[:Relationship{name:' by meeting'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}->(m) return m.name as name"}, {"query": "Can you tell me about the five works of Lee Sang-min Shin-lin that show the reluctance to return to the past?", "cypher": "match (n:ENTITY{name:'return to \u674e\u53c3\u653f\u77f3\u6797'}) - [Relationship*]->(x) where x.name <>'\u8f9b\u5f03\u75be' return distinct x.name limit 5"}, {"query": "Can you tell me what Nebi Ros is? Please give me 5 articles.", "cypher": "match (n:ENTITY{name:'Neebee Ross'}) --(x) return distinct x.name limit 5"}, {"query": "Find 12 Monkeys is a movie with no more than five messages?", "cypher": "match (:ENTITY{name:'12 monkeys [American 1996 film directed by Terry Gilliam]'}) --(n) with n order by n.name return n.name limit 5"}, {"query": "I want to know the secrets of the zero-dollar ticket labels?", "cypher": "match (:ENTITY{name:'0-dollar ticket secret'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "You have looked in the Botanical Encyclopedia and found that the varieties of the short-stemmed sparrowflower belong to what group of plants?", "cypher": "match ((:ENTITY{name:'common stem short-distance sparrowflower[variation]'}) - [:Relationship{name:'program'}]-> (x) return x.name"}, {"query": "Can you recommend two fantasy novels?", "cypher": "match (:ENTITY{name:'magic'}) <- [:Relationship{name:'type'}]- (p) return p.name limit 2 The name of the match is not specified"}, {"query": "Can you help me find out where the three species of crustaceans live?", "cypher": "match (:ENTITY{name:'genus'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' distribution area'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Thanks for helping me find the molecular formula that is understandable in the book.", "cypher": "match ((:ENTITY{name:'match recognizable'}) - [:Relationship{name:'molecular'}]-> (m) return m.name"}, {"query": "Can you tell me if the parent-child program for 0-3 year olds has a rubber label?", "cypher": "match (:ENTITY{name:'0-3 years old parent activity program'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name"}, {"query": "What other information does Sun Shye-rong have besides being a university professor? Please help me find 6 information in 2 layers.", "cypher": "match (:ENTITY{name:'Sun Shuo Rong'}) - [*1..2]-(p) where p.name <> 'University teacher' return p.name limit 6"}, {"query": "What is the attention economy? Who proposed it?", "cypher": "match (:ENTITY{name:'attention economy'}) - [:Describe{name:'tag'}]->(n) return n.name as name union all match (:ENTITY{name:'attention economy'}) - [:Relationship{name:'proponent'}]->(m) return m.name as name"}, {"query": "Do you have a record of the top 10 events in Korea?", "cypher": "match (:ENTITY{name:'Korea'}) <- [:Relationship{name:'place of birth'}]- ((n) - [:Relationship{name:'important event'}]->(x) return distinct x.name limit 10"}, {"query": "Do you know what the exhibition categories of the 2011 Canadian International Plastics Expo are?", "cypher": "match ((:ENTITY{name:'2011 Canadian International Plastics Industry Exhibition'}) - [:Relationship{name:'exhibition category'}]-> (p) return p.name"}, {"query": "How about a description of the following industry figures, and the people in the two-tier relationship that Hu Jiabao has?", "cypher": "match (n:ENTITY{name:'\u8bb8\u5efa'}) - [:Relationship*1..2]->(x) where x.name <> 'industry person' return distinct x.name"}, {"query": "The three lecturers' representations?", "cypher": "match (:ENTITY{name:'lecturer'}) <- [:Relationship{name:'profession'}]-(q),(q) - [:Relationship{name:'representing work'}]->(h) return h.name order by h.name limit 3"}, {"query": "Can you name some of the famous attractions of the Gulf of Aqaba Agricultural Park?", "cypher": "match (:ENTITY{name:'Asian Gulf Agricultural Park'}) - [:Relationship{name:'Famous attractions'}]-> (x) return x.name order by x.name limit 10"}, {"query": "Tell me about the company in the 4th level relationship of the company in the 5th floor of Konron Building, 510 room, opposite the West Road of the Wigan House in the city of Mezansi.", "cypher": "match (n:ENTITY{name:'Kenzaki City New Perception Advertising Decoration Limited Liability Company'}) - [*1..6]->(x) where x.name <>'Kenzaki City Victory West Road across from the Conglomerate Home 5th floor room 510' return distinct x.name"}, {"query": "I'm going to show you 10 of the functions of the KF-3022 apart from the cooling air.", "cypher": "match (m:ENTITY{name:'KF-3022'}) <- [:Relationship{name:'Chinese name'}]-(n) - [:Relationship{name:'Cold wind function'}]->(p) where p.name <> ': support' return distinct p.name limit 10"}, {"query": "The following are five personal questions about Vukovic Nemanja from the Republic of Montenegro:", "cypher": "match (n:ENTITY{name:'Vukovic Nemanja'}) - [:Relationship*]->(x) where x.name <>'Republic of Montenegro' return distinct x.name limit 5"}, {"query": "Please list the personal information of Agayev Kamran, who is a football fan, in the three-tier relationship.", "cypher": "match (n:ENTITY{name:'Agayev Kamran'}) - [*1..3]->(x) where x.name<> 'football' return distinct x.name"}, {"query": "Do you know of anyone who has a third-tier label relationship with engineers?", "cypher": "The following is a list of the most commonly used tags in the search engine."}, {"query": "How do you understand the .pe domain name?", "cypher": "match (:ENTITY{name: '.pe domain name'}) --(p) with p order by p.name where p.name <> 'network dictionary' return p.name"}, {"query": "Can you recommend some love mini-films?", "cypher": "Match (:ENTITY{name:'love microfilm'}) <- [:Relationship{name:'type'}]- (n) return distinct n.name"}, {"query": "The film is about an actor who is searching for a missing skeleton.", "cypher": "match (:ENTITY{name:'spoon'}) --(x) return distinct x.name limit 1"}, {"query": "What kind of medicine is red flower oil and what is its use?", "cypher": "match (:ENTITY{name:' red flower oil'}) - [:Relationship{name:' drug type'}]->(n) return n.name as name union all match (:ENTITY{name:' red flower oil'}) - [:Relationship{name:' use classification'}]->(m) return m.name as name"}, {"query": "Help me find a half-dozen adjectives and adverbs.", "cypher": "match (:ENTITY{name:'a and a half'}) - [:Relationship{name:'a and a half'}]->(n) return n.name as name union all match (:ENTITY{name:'a and a half'}) - [:Relationship{name:'a and a half'}]->(m) return m.name as name"}, {"query": "The novel is called 1/7th Birthday Game, which labels can be noted?", "cypher": "match (:ENTITY{name:'1/7th grade also game'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'novel' return n.name"}, {"query": "Can you tell me what Amanda Wise is representing?", "cypher": "match (:ENTITY{name:'Amanda Weiss'}) <- [:Relationship{name:'Chinese name'}]-(x) - [:Relationship{name:'representing work'}]->(p) return distinct x.name"}, {"query": "Can you find me two doctors from Beijing Hospital and introduce them?", "cypher": "match (:ENTITY{name:'Beijing Hospital'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 2"}, {"query": "What else is there to know about this funny show? Help me find 6 things in 3 layers.", "cypher": "match (:ENTITY{name:'new smile jungle'}) - [:Relationship*1..3]-(p) where p.name <> 'funny show' return p.name limit 6"}, {"query": "Can you give me 10 things about Huang's career?", "cypher": "match (:ENTITY{name:'\u9ec4\u5c09\u6d2a'}) <--(q) -[:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 10"}, {"query": "The tofu soup is a food made from ingredients such as tofu, tofu and other ingredients.", "cypher": "match (:ENTITY{name:'Cinnamon tofu soup is a food made from ingredients such as cinnamon, tofu and other ingredients.\u3002'}) <- [:Describe{name:'description'}]-(q),(q) - [:Relationship{name:'spices'}]->(m) return distinct m.name"}, {"query": "In which publishing houses did Zhang's books appear?", "cypher": "match (:ENTITY{name:'Zhang Merzen'}) <- [:Relationship{name:'author'}]-(n) - [:Relationship{name:'publisher'}]->(q) return distinct q.name limit 2"}, {"query": "Can you give me a list of the names of the relationships involved in the two layers of the GUI?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'classic'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know what the $120 series is?", "cypher": "match (:ENTITY{name:'120-yuan series'}) --(n) with n order by n.name return n.name"}, {"query": "Can you tell me about the kindergartens in the centre of Shanpa River Town?", "cypher": "match (:ENTITY{name:'Children's daycare centre in the town of Shanpa River'}) --(m) return distinct m.name"}, {"query": "Please list 4 and what is the second level of the label relationship with the fruit commune?", "cypher": "match (n) <- [:Tag*2{name:'tag'}]- ((p:ENTITY{name:'Jawberry Jam Community'}) return distinct n.name limit 4"}, {"query": "I'm not sure if you can tell me where the company is that produces the main product of the car trunk?", "cypher": "match (:ENTITY{name:'Taxide'}) <- [:Relationship{name:'main product'}]- ((q),(q) - [:Relationship{name:'located in '}]->(m) return m.name order by m.name limit 5"}, {"query": "If you tag the number 13, what else can you type besides language?", "cypher": "match (:ENTITY{name:'13[number]'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'language' return q.name"}, {"query": "I would like to know about five personal details of the relationship between the Maltese footballer Curuana Christian 1-6?", "cypher": "match (n:ENTITY{name:'Curuana Christian'}) - [*1..6]->(x) where x.name <> 'Curuana Christian, Maltese footballer\u3002' return distinct x.name limit 5"}, {"query": "Find four historical institutions and their dates of construction.", "cypher": "match (:ENTITY{name:'historical institution'}) <--(m), (m) - [:Relationship{name:'time of construction'}]->(n) return m.name, n.name limit 4"}, {"query": "What ship is designed for 100 people?", "cypher": "match (:ENTITY{name:'100 people'}) <- [:Relationship{name:'compiled'}]- (p) return distinct p.name"}, {"query": "Please tell me 10 occupations of this man, who was born in May 1971.", "cypher": "match (:ENTITY{name:'May 1971'}) <- [:Relationship{name:'date of birth'}]-(p),(p) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 10"}, {"query": "What other positions did Ding Zhiqing, formerly the deputy secretary of the Party Committee of the Public Security Bureau of the Yangtze City District, hold?", "cypher": "match (:ENTITY{name:'\u4e01\u4e2d\u79cb[former Vice-Secretary of the Party Committee of the Public Security Bureau of the City of Shenzhen]'}) - [:Relationship{name:'Career'}]-> (n) with n order by n.name where n.name <> 'Former Vice-Secretary of the Party Committee of the Public Security Bureau of the City of Shenzhen' return n.name"}, {"query": "What chemical is C9H13NO2?", "cypher": "match (:ENTITY{name:'C9H13NO2'}) <- [:Relationship{name:'molecular'}]- (h) return distinct h.name"}, {"query": "What are some of the works that you represent? Can you list five?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'represents work'}]->(h) return distinct h.name limit 5"}, {"query": "I'm a musician and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician, and I'm a musician.", "cypher": "match (n:ENTITY{name:' Grace has come'}) - [:Relationship*1..2]->(x) where x.name <>'open' return distinct x.name"}, {"query": "I'm not sure if I'm ready to put my modern language in a bunch of curly hair.", "cypher": "match (:ENTITY{name:'\u4e00\u6210'}) --(x) with x order by x.name where x.name <> 'modern speech' return x.name"}, {"query": "The youngest of the three, Yayoi, is a young man who is very young and has a very strong sense of humor.", "cypher": "match (:ENTITY{name:'0-3 years old Yayoi Sakura'}) --(h) with h order by h.name return h.name limit 10"}, {"query": "What are the top 5 science fiction stories on the Chinese-language Internet?", "cypher": "match (p:ENTITY{name:'science fiction'}) <--(x) -->(q:ENTITY{name:'start point Chinese web'}) return x.name limit 5"}, {"query": "What does it mean to be encountered? Where did it come from?", "cypher": "match (:ENTITY{name:' encounter'}) - [:Relationship{name:' interpretation'}]->(n) return n.name as name union all match (:ENTITY{name:' encounter'}) - [:Relationship{name:' from'}]->(m) return m.name as name"}, {"query": "The first book in the series, The Land of Zero Beginnings: The Art of the Relationship between the Two Layers of the Earth, is published by Routledge.", "cypher": "match (n:ENTITY{name:'zero start date: X'}) - [:Relationship*1..2]->(x) where x.name <>'16' return distinct x.name"}, {"query": "What are the five professions that graduates of the University of Southern China are engaged in?", "cypher": "match (:ENTITY{name:'Cantonese University of China'}) <- [:Relationship{name:' Graduate School'}]-(p) - [:Relationship{name:'Career'}]->(n) return distinct n.name limit 5"}, {"query": "What is the name of the river that has a catchment area of 2,543 square kilometers?", "cypher": "match (:ENTITY{name:'2543 square kilometres'}) <- [:Relationship{name:'area of the watershed'}]- ((h) - [:Relationship{name:'alias'}]->(p) return distinct p.name"}, {"query": "The data shows how many players were in the 1988 Olympic women's volleyball team.", "cypher": "match ((:ENTITY{name:'1988 Olympic women's volleyball team'}) - [:Relationship{name:'Team'}]-> (p) return p.name"}, {"query": "The song that provided the lyrics for the next song reminds me of my five messages.", "cypher": "match (n:ENTITY{name:'remember you asked me to leave you'}) - [*]->(x) where x.name <>'Machin' return distinct x.name limit 5"}, {"query": "Which characters are associated with the third layer of the tagline of the anime?", "cypher": "The following is a list of characters that appear in the game."}, {"query": "Tell me about the five personal profiles of the 79kg Dmitrovic Boban in the four-tier relationship?", "cypher": "match (n:ENTITY{name:'Dmitrovic Boban'}) - [*1..4]->(x) where x.name <>'79 kg' return distinct x.name limit 5"}, {"query": "The recent China Infrastructure Forum 2011 was a huge exhibition, and you know how many people came?", "cypher": "match ((:ENTITY{name:'2011 China Infrastructure International Forum and the Chicken Expo'}) - [:Relationship{name:' number of visitors'}]-> (n) return n.name"}, {"query": "I'm not sure if you can find three of the 126 related descriptions.", "cypher": "match (:ENTITY{name:'126 [Chinese Internet Technology Company]'}) --(n) with n order by n.name return n.name limit 3"}, {"query": "Do you know what chemical has the CAS number 3308-02-9?", "cypher": "match (h:ENTITY{name:'3308-02-9'}) <- [:Relationship{name:'CASNo'}]- (n) return distinct n.name"}, {"query": "Can you list information about the Beijing Virchingan Asia Laboratory Equipment Co., Ltd., a three-tiered relationship started in 1999 with a registered capital of 10.2 million yuan?", "cypher": "match (n:ENTITY{name:'Beijing Weichen Asia Laboratory Equipment Limited'}) - [*1..3]->(x) where x.name<>'Beijing Weichen Asia Laboratory Equipment Limited was founded in 1999 with a registered capital of 10.2 million yuan. The company is headquartered in Fuli Palace brand base in Nanchang Xin Palace, Fongtai District, Beijing."}, {"query": "I'm looking for a 12306 ticket assistant software feature tag to send me?", "cypher": "match (:ENTITY{name:'12306 order assistant [order assistant software]'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'software' return p.name"}, {"query": "What is the shortest relationship path between the two levels of the Ordeal Vocational Technical College and the Purple Rose Vocational Technical College?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Orthodox Vocational Technical College'}) - [*..2]-(b:ENTITY{name:'Purple Rose Vocational Technical College'})) return count ((p)"}, {"query": "Can you immediately say the CAS number for 2-metha-4-triethyl-methyl-methacrylate acetate?", "cypher": "match ((:ENTITY{name:'2-metha-4-triethyl methyl-methyl-methacrylate acetate'}) - [:Relationship{name:'CAS number'}]-> (p) return p.name"}, {"query": "I want a two-tier relationship about the personal situation of Yann Resseguier, born on August 3, 1984.", "cypher": "match (n:ENTITY{name:'Resseguier Yann'}) - [*1..2]->(x) where x.name <> 'August 3, 1984' return distinct x.name"}, {"query": "Help me find three swimmers from the country.", "cypher": "match (:ENTITY{name:' swim'}) <- [:Relationship{name:' sporting project'}]-(m), (m) - [:Tag{name:' tag'}]->(n) where n.name='athlete' return distinct m.name limit 3"}, {"query": "What are the top five awards for films made in Taiwan, China?", "cypher": "match (:ENTITY{name:'China Taiwan'}) <- [:Relationship{name:' location of filming'}]-(p),(p) - [:Relationship{name:' main award'}]->(q) return q.name order by q.name limit 5"}, {"query": "Do you know Yue Yi [Chairman of the Guangxi Writers Association]? Tell me about Yue Yi.", "cypher": "match (:ENTITY{name:'Kyu Yue [President of the Guangxi Writers Association]'}) --(h) return distinct h.name"}, {"query": "In the meantime, I'm going to share some of the work of Lee Young-ho and Yang Yi-nan.", "cypher": "match (n:ENTITY{name:' and XYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZYZ"}, {"query": "Please tell me what kind of relationship you had with the two people who posted yesterday.", "cypher": "The following pages link to the list of links in the list of links in the list of links:"}, {"query": "Paul Borel, the master of fantasy fashion, was born in Paris on April 20, 1879, and spent his life and career in Paris.", "cypher": "match (:ENTITY{name:'Paul Borel, the master of fantasy fashion born 20 April 1879, lived and worked in Paris\u3002'}) <-[:Describe{name:'description'}]-(p) -[:Relationship{name:'represents works'}]->(n) return distinct n.name"}, {"query": "What kind of person is Dan Aykroyd?", "cypher": "match (:ENTITY{name:'Dan Aykroyd'}) --(q) with q order by q.name return q.name"}, {"query": "Do you have all the types of relationships that are involved in the three levels of Kinshasa beauty school?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Kinzar beauty school'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "What are the three shooting games on which platforms?", "cypher": "match (:ENTITY{name:'shooting game'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'game platform'}]->(n) return m.name,n.name limit 3"}, {"query": "Tell me about the introduction of Weckstr\u00f6m John, born in Helsinki, to no less than three levels of relationships.", "cypher": "match (n:ENTITY{name:'Weckstr?m John'}) - [*1..3]->(x) where x.name <>'Helsinki' return distinct x.name"}, {"query": "Can you list five Scottish athletes in the MacArthur Pat 4?", "cypher": "match (n:ENTITY{name:'MacArthur Pat'}) - [*1..4]->(x) where x.name <>'MacArthur Pat, Scottish athlete\u3002' return distinct x.name limit 5"}, {"query": "Inquire about the four-layer relationship between the drugs that contain the main ingredients of the drug, such as North Star, Straight Star, and Sunflower.", "cypher": "match (n:ENTITY{name:'town pill'}) - [*1..4]->(x) where x.name<>'town pill' is a drug with the main ingredients of northern lilac, straight lilac, and starry sky."}, {"query": "Did you know there was an accident in the Tibet's Tumba-Tumba county?", "cypher": "match (:ENTITY{name:'Tibetan Ink Bamboo County'}) <- [:Relationship{name:' low-key'}]- (q) return q.name"}, {"query": "Can you tell me about the political background of this man, his position and other information?", "cypher": "The name of the union is the same as the name of the union, but the name of the union is different from the name of the union."}, {"query": "I'm looking for six domestic and international ships, what are their Chinese names?", "cypher": "match (:ENTITY{name:'ship'}) <- [*]-(m), (m) - [:Relationship{name:'Chinese name'}]->(n) return distinct m.name, n.name limit 6"}, {"query": "What number is capitalized as \"Pick up the bag\"?", "cypher": "match (:ENTITY{name:'snaps'}) <- [:Relationship{name:'scapular'}]- (m) return distinct m.name"}, {"query": "Tell me about the next time you have a question about the three other tags besides language and literature.", "cypher": "match (n:ENTITY{name:'subscriber group Yuzana's remaining questions are in the same order'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'language' and h.name <> 'literature' return distinct h.name limit 3"}, {"query": "Do you know about the Richter's sea turtle? Find out what else is there to know about the other seven species of sea turtle in the 2nd layer.", "cypher": "match (:ENTITY{name:'Richie's sea turtle'}) - [:Relationship*1..2]->(p) where p.name <> 'Autumn sea turtle' return p.name limit 7"}, {"query": "I would like to know what is the height of a person whose date of birth is unknown?", "cypher": "match (:ENTITY{name:'unknown'}) <- [:Relationship{name:'date of birth'}]- ((p),(p) - [:Relationship{name:'length'}]->(q) return distinct q.name limit 5"}, {"query": "Can you find two other UPS alternatives besides the Chinese Communications Society?", "cypher": "match (:ENTITY{name:'UPS'}) --(m) with m order by m.name where m.name <> 'China Telecommunications Association' return distinct m.name limit 2"}, {"query": "Can you find me 5 foreigners named Florea Daniel in 5th level relationships?", "cypher": "match (n:ENTITY{name:'Florea Daniel'}) - [*1..5]->(x) where x.name<>'Florea Daniel' return distinct x.name limit 5"}, {"query": "The book is a summary of the book for me, 0-2 year old baby book: the message of toys?", "cypher": "match (:ENTITY{name:'0-2 years old babybook: toy'}) --(p) with p order by p.name return p.name"}, {"query": "I want the other 6 information in the 3 layers of the Deck battery made by the American company Eastpin Manufacturing.", "cypher": "match (:ENTITY{name:'Deck Battery'}) - [*1..3]-(p) where p.name <> 'American Hostel Manufacturing Company' return p.name limit 6"}, {"query": "Can you tell me the chemical formula for C22H17ClN2 is silicon?", "cypher": "The following is a list of the most commonly used types of chemical compounds."}, {"query": "Do you know how many companies are in Jinan?", "cypher": "match (p:ENTITY{location: Jin'an'}) return count ((p)"}, {"query": "I have four dancers, and they are from different countries.", "cypher": "match (:ENTITY{name:'dancer'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name,n.name limit 4"}, {"query": "Can you tell me about Marani Michele, the person who has five levels of relationships?", "cypher": "match (n:ENTITY{name:'Marani Michele'}) - [*1..5]->(x) where x.name<>'person' return distinct x.name limit 5"}, {"query": "Where is the Ban Chien-Kuen Eco-Tourist Resort? What time is it open?", "cypher": "match (:ENTITY{name:'Relationship{name:'geographical location'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'open hours'}]->(m) return m.name as name"}, {"query": "I'm going to be the first to write a book about the three authors who represented me.", "cypher": "match (:ENTITY{name:'writer'}) <- [:Relationship{name:'profession'}]-(q) - [:Relationship{name:'representative work'}]->(x) return distinct x.name limit 3"}, {"query": "Tell me about the literary works and the literary materials in the relationship between the six layers of Li Tung Poetry?", "cypher": "match (n:ENTITY{name:' and Li Tu's poems'}) - [*1..6]->(x) where x.name <> 'literary work' return distinct x.name limit 5"}, {"query": "What role did Shizuka play?", "cypher": "match (:ENTITY{name:'\u5fd7\u6751\u5999'}) - [:Relationship{name:'acting'}]-> (m) return distinct m.name"}, {"query": "Do you know who is in the second tier of the label relationship with Kong?", "cypher": "match (n) <- [:Tag*2{name:'tag'}]- ((p:ENTITY{name:'Kong Hyun Hyun'}}) return distinct n.name"}, {"query": "You're secretly telling me about the sinking of a fishing boat on the 10th of November 28th?", "cypher": "match (:ENTITY{name:'11.28 Dalyane's first fishing boat sink'}) --(p) with p order by p.name return p.name limit 10"}, {"query": "Who is representing the three swords?", "cypher": "match (n:ENTITY{name:'P'}) <- [:Relationship{name:'representative work'}]- (p) return distinct p.name"}, {"query": "The first 10 results of the 1905 Russian Revolution?", "cypher": "match (:ENTITY{name:'1905 Russian Revolution'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 10"}, {"query": "The 2012 Healthcare Expo was a big eye opener, and I wondered who was hosting it?", "cypher": "match ((:ENTITY{name:'2012 Healthcare Exhibition'}) - [:Relationship{name:' Hosted by'}]-> (q) return q.name"}, {"query": "Do you know how many limited liability companies (investments or holdings) there are? Name three?", "cypher": "match (:ENTITY{name:' limited liability company ((investment or holding by natural persons) '}) <- [:Relationship{name:' nature of company'}]- (m) return m.name limit 3"}, {"query": "I'm curious if you can find all the relevant information about Ren Shanping?", "cypher": "match (n:ENTITY{name:'\u4efb\u5c1a\u5cf0'}) - [*]->(x) where x.name <> 'teacher' return distinct x.name limit 5"}, {"query": "Can you tell me about the previous profession of Mikhalkov, N.S.?", "cypher": "match (:ENTITY{name:'Mikhalkov, N.S.'}) - [:Relationship{name:'profession'}]-> (h) return h.name order by h.name limit 1"}, {"query": "What exhibitions are there in 2012-08-16?", "cypher": "match (:ENTITY{name:'2012-08-16'}) <- [:Relationship{name:' time of development'}]- (n) return n.name"}, {"query": "Can you list me five relationships that are within the two layers of the Yueyang Mountain Scenic Area?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Yueyang Mountain Scenic Area'}) UNWIND relationships(path) AS rel return rel.name limit 5"}, {"query": "What is the name of the TV series called The King's Island of the Wiggly Wiggly?", "cypher": "match (:ENTITY{name:'Relationship{name:'other translations of names'}}) - (m) return m.name"}, {"query": "What books are there by author Ding Yong-jong, edited by Deng Xiaoping? Can you tell me which publisher published them?", "cypher": "match (:ENTITY{name:'\u4e01\u6c38\u751f\u3001\u4e16'}) <- [:Relationship{name:' author'}]-(h),(h) - [:Relationship{name:' publisher'}]->(q) return distinct h.name,q.name"}, {"query": "What are the types of minerals in perovskite and what are their main uses?", "cypher": "match (:ENTITY{name:'petroleum'}) - [:Relationship{name:'mineral type'}]->(n) return n.name as name union all match (:ENTITY{name:'petroleum'}) - [:Relationship{name:'main use'}]->(m) return m.name as name"}, {"query": "Do you know the movie The Thief of Zelda? What other information besides the director of Zelda, please find the other 7 information in layer 2", "cypher": "match (:ENTITY{name:' thief astar'}) - [:Relationship*1..2]->(p) where p.name <> 'Chu\u539f' return p.name limit 7"}, {"query": "What are the event labels involved in the snowmobile deaths of climbers in Yunnan?", "cypher": "match (q:ENTITY{name:'10\u00b71 Yunnan Happas snow mountaineer slide death accident'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "I heard that the 0280D005BNHC filter has been upgraded with new technology, how accurate is the filtering?", "cypher": "The following is a list of the most commonly used filters:"}, {"query": "Help me find the films that are being released by the eight film producers and tell me their release times.", "cypher": "match (:ENTITY{name:'eighty-one film production company'}) <- [:Relationship{name:'production company'}]-(h),(h) - [:Relationship{name:'production time'}]->(q) return distinct h.name,q.name"}, {"query": "Can you give me a list of the first events of the year?", "cypher": "match (:ENTITY{name:' first round'}) <- [:Relationship{name:' first round'}]- (x) return distinct x.name"}, {"query": "What would you label 1 Contre 100?", "cypher": "match (:ENTITY{name:'1 Contre 100'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "What fish are distributed in the Hong Kong-Australia-Taiwan area?", "cypher": "match (:ENTITY{name:'Hong Kong and the Australian Capital Territory'}) <- [:Relationship{name:' distribution'}]- ((m) return m.name"}, {"query": "I want to know about the high-power transverse CO2 laser and its applications in the other 6 pages of this book, published by the University of Technology of China Press.", "cypher": "match (:ENTITY{name:' High-power cross-flow CO2 lasers and their applications'}) - [*1..2]-(p) where p.name <> 'University of Technology of China Press' return distinct p.name limit 6"}, {"query": "Can you recommend a novel that is a classic?", "cypher": "Match (:ENTITY{name:'Relationship{name:'art style'}}) - (p) return p.name"}, {"query": "Do you know what Major Ray is doing?", "cypher": "match (x:ENTITY{name:'Rei Chao Kang'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'profession'}]->(q) return distinct q.name"}, {"query": "Can you list the 20 species of vertebrates that live under the door?", "cypher": "match (n:ENTITY{name:'Relationship{name:'door'}]- (mn) return mn.name limit 20"}, {"query": "Do you know how he expresses the river lights in English?", "cypher": "match (:ENTITY{name:'riverlight'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'foreign name'}]->(q) return distinct q.name"}, {"query": "What are the labels of the 1.2080 steel bands? Can you name three?", "cypher": "match (p:ENTITY{name:'1.2080 steel'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 3"}, {"query": "The film starring Fredrik Forster helped me find it.", "cypher": "Match (:ENTITY{name:'Frederick Forrester'}) <- [:Relationship{name:'starring'}]- (mn) return mn.name"}, {"query": "Do you know anything about the monkey Jozy's book, The Great Blood Monster?", "cypher": "match (:ENTITY{name:'000 heavy blooded evil soul'}) --(q) with q order by q.name where q.name <> 'Monkey Jozy' return q.name"}, {"query": "Tell me, is there any other category of banana bags in Shanghai besides the oil and banana?", "cypher": "match (n:ENTITY{name:'Shanghai banana bean bag'}) -[:Relationship{name:'category'}]->(h) where h.name <> 'oil bean' and h.name <> 'banana' return distinct h.name limit 2"}, {"query": "The first 10 articles on the rice tree are listed here.", "cypher": "match (:ENTITY{name:'Oreo tree'}) --(x) return x.name order by x.name limit 10"}, {"query": "What are the actors who play the role of the Goddess Red Cherry 6? Please tell me one.", "cypher": "match (:ENTITY{name:'Cherry 6'}) --(p) return p.name limit 1"}, {"query": "What else do you know about the Qing Dynasty other than what was published in the Huang Wen Press?", "cypher": "match (:ENTITY{name:'those things in the Qing Palace'}) - [*1..3]-(p) where p.name <> 'Huawei Publishing House' return p.name limit 10"}, {"query": "Can you name some of the animals that have spinal cord injuries? Can you name five?", "cypher": "match (h:ENTITY{name:'Relationship{name:'gate'}]) - (q) return distinct q.name limit 5"}, {"query": "What is C13H10BrCI2O2PS?", "cypher": "match (n:ENTITY{name:'C13H10BrCI2O2PS'}) --(x) return distinct x.name"}, {"query": "In five words, what is beyond the three dimensions?", "cypher": "match (:ENTITY{name:'exceeding three limits'}) --(h) with h order by h.name return h.name limit 5"}, {"query": "Do you know what chemical materials are used in the products of the Gucci Company?", "cypher": "match (:ENTITY{name:'Relationship{name:' manufacturer'}]- (n) return distinct n.name"}, {"query": "Tell me about the personal profile of this person, who is called Xifu, in Chinese, in the four levels of relationships?", "cypher": "match (n:ENTITY{name:'Xian's'}) - [*1..4]->(x) where x.name<>'Xian's' return distinct x.name limit 5"}, {"query": "Which of Lee's works is representative?", "cypher": "match (:ENTITY{name:' Lee Jong-town'}) - [:Relationship{name:' representing work'}]-> (h) return distinct h.name"}, {"query": "What does C8H9CINO5PS stand for?", "cypher": "match (:ENTITY{name:'C8H9CINO5PS'}) --(x) return distinct x.name"}, {"query": "Please tell me what is the work of director Liu Yiyang?", "cypher": "match (:ENTITY{name:'\u65e5\u9633'}) <- [:Relationship{name:'director'}]- (m) return distinct m.name"}, {"query": "The three professions that graduates of the University of Mizoram are engaged in", "cypher": "match (:ENTITY{name:'Sino University'}) <- [:Relationship{name:'Graduate School'}]-(n) - [:Relationship{name:'Profession'}]->(q) return distinct q.name limit 3"}, {"query": "I want to know about the personal situation of Ambassador Georges in Cameroon in the second level of relations.", "cypher": "match (n:ENTITY{name:'Ambassa Georges'}) - [:Relationship*1..2]->(x) where x.name<>'Cameroon' return distinct x.name"}, {"query": "The following are three jobs that can be done by a professional male member of the Professional Lighting Designers Association (PLDA):", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(m) - [:Relationship{name:'profession'}]->(q) where q.name <> 'Association of Professional Lighting Designers (PLDA) Professional member' return distinct q.name limit 3"}, {"query": "I'm going to be a part of the project, but I'm not going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project, I'm going to be a part of the project.", "cypher": "match (n:ENTITY{name:'Zan Chong; third generation Chong's family name'}) - [:Relationship*1..2]->(x) where x.name<>'Seven\u7edd' return distinct x.name"}, {"query": "The song is a cover of the song \"Sweet Dreams\" by the band The Beatles.", "cypher": "match (:ENTITY{name:'Reprise of the song 'Missing Waterfalls' released in 2013 as a solo EP: Love Your Heart'})"}, {"query": "I'm going to be writing a blog about my artwork, and I'm going to be writing about my artwork.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <> 'artwork' return distinct x.name"}, {"query": "Can you tell me the top five achievements of Xu Jinping?", "cypher": "match (x:ENTITY{name:' Xu\u9526'}) - [:Relationship{name:' Major achievements'}]-> (m) with m order by m.name return m.name limit 5"}, {"query": "Can you explain to me what the main achievement of this person who owns Rush, Leessang, and Blues is?", "cypher": "match (:ENTITY{name:'RushLeessang blues'}) <- [:Relationship{name:'represents work'}]-(n) - [:Relationship{name:'main achievements'}]->(q) return q.name order by q.name limit 10"}, {"query": "What's the matter with 30,000 tons?", "cypher": "match (:ENTITY{name:'30000'}) <--(n) return n.name The name of the match is"}, {"query": "I wonder who wrote the lyrics to the song \"Lover No. 16\" by my grandfather.", "cypher": "The following is a list of all the different ways The Fellowship of the Ring is credited in the database:"}, {"query": "Please describe the Golden Horse Award for Taiwanese Cinema.", "cypher": "match (:ENTITY{name:'Taiwanese Film Golden Horse Award'}) --(n) return distinct n.name"}, {"query": "What is the name of a photograph taken in 1909?", "cypher": "match (:ENTITY{name:'1909'}) <- [:Relationship{name:'Year of filming'}]- (p) return p.name"}, {"query": "Did you have trouble telling me that Italian Salviato Simone's profile is no more than six levels of relationships?", "cypher": "match (n:ENTITY{name:'Salviato Simone'}) - [*1..6]->(x) where x.name <>'Italy' return distinct x.name limit 5"}, {"query": "Could you provide a profile of the five-star football player Baines Kitson in the fourth tier of relationships?", "cypher": "match (n:ENTITY{name:'Baines Kitson'}) - [*1..4]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "Please tell me who is the host of the 5th Spring Home Expo 2012 in Hyogo?", "cypher": "match ((:ENTITY{name:'2012 Fifth Spring Home Expo in Hubei'}) - [:Relationship{name:'host unit'}]-> (m) return m.name"}, {"query": "Can you name one representative work written by a Canadian citizen?", "cypher": "match (:ENTITY{name:'Canada'}) <- [:Relationship{name:'nationality'}]- ((n) - [:Relationship{name:'representative work'}]->(m) return distinct m.name limit 1"}, {"query": "Do you know what the taste of beef is like?", "cypher": "Match ((:ENTITY{name:'sand tea beef'}) - [:Relationship{name:'taste'}]-> (n) return n.name"}, {"query": "Can you tell us about the romance of the house?", "cypher": "match (m:ENTITY{name:' Romantic house full'}) --(q) return q.name skip 3"}, {"query": "The article is about the book \"The pregnancy synchronization guidelines for October\" and the book \"The pregnancy synchronization guidelines for October\".", "cypher": "match (:ENTITY{name:'October pregnancy synchronization guidance overall'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'publication' return p.name limit 1"}, {"query": "Can you find me two species of mosquitoes and describe them?", "cypher": "match (:ENTITY{name:'Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Do you know what nicknames people born in Zhuzhou, Henan have?", "cypher": "match (:ENTITY{name:'Canton of Shenzhen, Henan Province'}) <- [:Relationship{name:'place of birth'}]- ((x),(x) - [:Relationship{name:'alias'}]->(q) return distinct q.name limit 10"}, {"query": "Do you know how many silicon cores have a working temperature of -10 tons + 100 degrees Celsius? Can you list five?", "cypher": "The temperature of the water is about 100\u00b0C."}, {"query": "Do you know anything about the inner ties involved in the Beijing Youth Palace?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Peking City Youth Palace'}) UNWIND relations(path) AS rel RETURN rel.name"}, {"query": "Please help me find the 10 poems of Li Wei. Where did they all come from?", "cypher": "match (:ENTITY{name:'Lee White'}) <- [*]-(m), (m) - [:Relationship{name:'work originated from'}]->(n) return m.name, n.name limit 10"}, {"query": "I'm not sure if you're familiar with the name of the movie, but I'm not sure if you're familiar with the name of the movie.", "cypher": "match (:ENTITY{name:'Nanjing'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'representing work'}]->(x) return distinct x.name limit 5"}, {"query": "The book is a poem about the relationship between the two worlds, and the story of the two worlds in which the city is destroyed by the night.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'publication' return distinct x.name"}, {"query": "Do you want to know about the personal information of the subject, Mr. Choi Yayoi, in his three-tier relationship?", "cypher": "match (n:ENTITY{name:'Koichi Yokota'}) - [*1..2]->(x) where x.name <> 'subject person' return distinct x.name"}, {"query": "Please let me know what the relationship is between choosing the toxicity content in the three layers?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'select toxicity'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "I want to find six films, how long will they run?", "cypher": "match (:ENTITY{name:' film work'}) <- [*]-(m), (m) - [:Relationship{name:' time of release'}]->(n) return m.name, n.name limit 6"}, {"query": "How many books of 16 pages have been published by Henan Science and Technology Publishing?", "cypher": "match (l:ENTITY{name:' Henan Science and Technology Publishing House'}) <- [:Relationship{name:' Publishing House'}]- (mn) - [:Relationship{name:' Opening House'}]->(n:ENTITY{name:'16 Opening House'}) return mn.name limit 30"}, {"query": "I would like to know which of the programs addresses the current hot topics in education?", "cypher": "match (:ENTITY{name:' current educational hot topic'}) <- [:Relationship{name:' targeted content'}]- (p) return p.name"}, {"query": "I suddenly forgot the chemical formula for 1-hydroxy-2-alkyl, can you write it for me?", "cypher": "match ((:ENTITY{name:'1-hydroxy-2-ethyl alcohol'}) - [:Relationship{name:'chemical formula'}]-> (q) return q.name"}, {"query": "Please tell me what the name of the accident is that killed two people and injured four.", "cypher": "match (x:ENTITY{name:'2 dead 4 wounded'}) <- [:Relationship{name:'consequences'}]- (q) return q.name"}, {"query": "Can you remove the label of the 1982 concert at the Elizabeth Stadium in Hong Kong?", "cypher": "match (:ENTITY{name:'1982 Hong Kong Elizabeth Stadium Concert'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'show' return p.name"}, {"query": "Fan Ko Xin, born on September 19, 1993 in Seven Rivers City, Heilongjiang Province, is a Chinese female short track speed skater.", "cypher": "match (:ENTITY{name:'Fan Ko-sin, born 19 September 1993 in Seven River City, Heilongjiang, is a female Chinese short track speed skater\u3002'})"}, {"query": "Can you give me the chemical formula for methyl methacrylate?", "cypher": "match ((:ENTITY{name:'diethyl methacrylate'}) - [:Relationship{name:'chemical formula'}]-> (m) return m.name"}, {"query": "Can you find me 15 free sites that are open all day?", "cypher": "match (:ENTITY{name:'all day'}) <- [:Relationship{name:'open hours'}]-(m), (m) -->(n) where n.name='free' return distinct m.name limit 15"}, {"query": "What events have happened in history?", "cypher": "match (:ENTITY{name:' history'}) <- [:Tag{name:' tag'}]-(p),(p) - [:Relationship{name:' event'}]->(n) return distinct n.name limit 1"}, {"query": "And what is the story of Qubba' al-Jawwal?", "cypher": "match (:ENTITY{name:'Kyuboya One'}) --(p) return p.name skip 2"}, {"query": "The first is that the government has not been able to provide any information about the personal relationship between the three levels of the Shining Dynasty.", "cypher": "match (n:ENTITY{name:'Shengxian'}) - [*1..3]->(x) where x.name<>'Ming\u671d' return distinct x.name"}, {"query": "Can you find the tags for 1221 Bearings for me?", "cypher": "match (p:ENTITY{name:'1221 bearing'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "The village of Draghi is known for its fishing.", "cypher": "match (n:ENTITY{name:'dragging village'}) where n is not null return 1"}, {"query": "The following is a list of the best-selling books by Sub-Saharan Africa, published by Sub-Saharan Africa.", "cypher": "match (:ENTITY{name:'sub-banana'}) - [:Relationship{name:'brokerage company'}]->(n) return n.name as name union all match (:ENTITY{name:'sub-banana'}) - [:Relationship{name:'representative work'}]->(m) return m.name as name"}, {"query": "I wonder if you have a nickname?", "cypher": "match (:ENTITY{name:''}) - [:Relationship{name:'alias'}]-> (m) return m.name order by m.name"}, {"query": "I would like to know three specific messages from Carlos Roberto Flores Fukuze.", "cypher": "match (:ENTITY{name:' Carlos Roberto Flores Faucet'}) --(n) return distinct n.name limit 3 The name of the game is the same as the name of the game itself."}, {"query": "The following are the three categories of people who are born in April 1972 and who are engaged in cooking.", "cypher": "match (q:ENTITY{name:'April 1972'}) <- [:Relationship{name:'date of birth'}]-(p),(p) - [:Relationship{name:'occupation'}]->(h) return distinct h.name limit 3"}, {"query": "I'm looking for a list of the top 5 tags for 06 years old smart baby full-time nurturing.", "cypher": "match (:ENTITY{name:'06 years old smart baby full-time nurturing encyclopedia'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 5"}, {"query": "What is the main work of the 167-centimeter man?", "cypher": "match (:ENTITY{name:'167 cm'}) <- [:Relationship{name:'height'}]- ((q),(q) - [:Relationship{name:'main works'}]->(h) return distinct h.name limit 1"}, {"query": "I'm not sure if you can tell me about the conferences that are being held in Beijing.", "cypher": "match (:ENTITY{name:'Beijing'}) <- [:Relationship{name:'Place of the meeting'}]- (p) return distinct p.name"}, {"query": "The investigation has revealed how the outcome of the disappearance of a Chinese tourist in South Korea at 12.30 was reported.", "cypher": "match ((:ENTITY{name:'12.30 Chinese tourist disappearance in South Korea'}) - [:Relationship{name:'results of the incident'}]-> (p) return p.name"}, {"query": "I need an introduction to the five layers of social theory, like the five Sullivan anxiety theories?", "cypher": "match (n:ENTITY{name:'Sullivan's anxiety theory'}) - [*1..5]->(x) where x.name <> 'society' return distinct x.name limit 5"}, {"query": "What are the famous alumni of Jiangsu Secondary School in Guizhou Province? Name three?", "cypher": "match (:ENTITY{name:'Guyzhou Jiangsu Middle School was founded in 1942, located in Jiangsu County, Jiangsu City, Guizhou Province, on the banks of the Jinjiang River, through the efforts of several generations of Jiangsu people, it has developed to become a modern garden-style school with an area of 41 800 square meters, 2518 students, harmonious layout, elegant environment."}, {"query": "The book 1913: What labels were placed on the vagrants of the summer of the century?", "cypher": "match (:ENTITY{name:'1913: The Vagabonds of the Summer of the Century'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'books' return h.name"}, {"query": "Which parks have the same area as the North Room City Agricultural Park? What are the labels for each park? Please list them in order of number of labels from small to large.", "cypher": "match (n:ENTITY{name:'North Room Urban Agricultural Park'}) - [:Relationship{name:'accounting for area'}]->(:ENTITY) <- [:Relationship{name:'accounting for area'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you list two accidents where six people were injured?", "cypher": "match (:ENTITY{name:'6 people injured'}) <- [:Relationship{name:'injured'}]- (m) return m.name limit 2"}, {"query": "What kind of plant is 25cm-35cm tall?", "cypher": "Match (:ENTITY{name:'25CM-35CM'}) <- [:Relationship{name:'chief'}]- (n) return n.name The name of the match is not shown."}, {"query": "Can you name the first three paintings that are the first three paintings?", "cypher": "match (:ENTITY{name:'3'}) <- [:Relationship{name:'the first painting'}]-(m) - [:Relationship{name:'the first painting'}]->(h) return h.name skip 2 limit 3"}, {"query": "The system is currently in the process of being downloaded from the Chinese website, and you can find 2 more information about it here.", "cypher": "match (n:ENTITY{name:'the system'}) -->(h) with h order by h.name where h.name <> 'start Chinese web' and h.name <> 'connected' return h.name limit 2"}, {"query": "What books are published by Ocean Publishing?", "cypher": "match (:ENTITY{name:' ocean publishing'}) <- [:Relationship{name:' publishing'}]- ((x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name limit 3"}, {"query": "Take me to the site of the Cottage of the Rose.", "cypher": "match (:ENTITY{name:'Cottage of the Sun'}) --(p) return distinct p.name"}, {"query": "What chemical substance has a molecular weight of 226?", "cypher": "The name of the function is the name of the function itself."}, {"query": "Can you name 6 of them?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What are the common symptoms of bipolar disorder and which clinic should I go to?", "cypher": "match (:ENTITY{name:'biphasic disorder'}) - [:Relationship{name:'common symptoms'}]->(n) return n.name as name union all match (:ENTITY{name:'biphasic disorder'}) - [:Relationship{name:'visiting department'}]->(m) return m.name as name"}, {"query": "Can you tell me about the five species of plants in the family Tiananmen?", "cypher": "Match (n:ENTITY{name:'Relationship{name:'Relationship'}) - (mn) return mn.name limit 5"}, {"query": "What are the horror novels? 3 types can I recommend?", "cypher": "match (m:ENTITY{name:'terror'}) <- [:Relationship{name:'type'}]- ((h) - [:Relationship{name:'Chinese name'}]->(x) return distinct x.name limit 3"}, {"query": "I would like to know which unit is hosting the 2012 Industrial Computer and Embedded Systems Expo?", "cypher": "match ((:ENTITY{name:'2012 Industrial Computers and Embedded Systems Exhibition'}) - [:Relationship{name:'host entity'}]-> (h) return h.name"}, {"query": "I'm wondering if there are any online stores that have exclusive limited editions of their products?", "cypher": "match (:ENTITY{name:' exclusive limited edition'}) <- [:Relationship{name:' product'}]- (p) return distinct p.name"}, {"query": "What else do you know about sinusitis other than what happens in the nose?", "cypher": "match (:ENTITY{name:'nasal arthritis'}) - [:Relationship*1..2]-(p) where p.name <> 'nose' return distinct p.name limit 10"}, {"query": "Help me find the five species of plants in the mulberry category", "cypher": "match (:ENTITY{name:'Relationship{name:'program'}]-(m) return distinct m.name limit 5"}, {"query": "1- What is the Chinese name for methylphenidate, please help me check in the chemical catalogue.", "cypher": "match ((:ENTITY{name:'1-methacrylate'}) - [:Relationship{name:'Chinese alias'}]-> (m) return m.name"}, {"query": "The following is a list of five types of blood type A in the four levels of personal information of Chen Jinhua:", "cypher": "match (n:ENTITY{name:'Chen Jinping'}) - [*1..4]->(x) where x.name<>'A' return distinct x.name limit 5"}, {"query": "The following is a list of five 20th century Tiger Panda double-faced exotic cultures.", "cypher": "match (n:ENTITY{name:'20th century tiger panda double-sided weird'}) - [*]->(x) where x.name <> 'culture' return distinct x.name limit 5"}, {"query": "I look at the two-layered relationship between literary works and the double-flat tone of the material.", "cypher": "match (n:ENTITY{name:' double-flying consonant'}) - [:Relationship*1..2]->(x) where x.name<>'literary work' return distinct x.name"}, {"query": "I need all the information related to Shenzhen's gift of Wang Zhuo Guarantee?", "cypher": "match (n:ENTITY{name:'submitted by the king'}) - [*]->(x) where x.name<>'Shenzhen' return distinct x.name limit 5"}, {"query": "Tell me about the achievements of three graduates of Moscow Eastern University.", "cypher": "match (:ENTITY{name:'Moscow Eastern University'}) <- [*]-(m), (m) - [:Relationship{name:'main achievements'}]->(n) return m.name, n.name limit 3"}, {"query": "Can you name the first three Chinese names of the young cows that eat old grass?", "cypher": "match (:ENTITY{name:'Tender cow eating old grass'}) - [:Relationship{name:'Chinese name'}]-> (n) with n order by n.name return n.name limit 3"}, {"query": "I'm not sure what the big blue root is, but I'm wondering if you can name the top 10?", "cypher": "match (:ENTITY{name:'Big Blue Root'}) --(n) return n.name order by n.name limit 10"}, {"query": "The first is that the people who are representing the country are the ones who are smiling and are very willing to count them.", "cypher": "match (:ENTITY{name:'smiling very much'}) <- [:Relationship{name:'representing work'}]- (h) return h.name skip 3"}, {"query": "What is the name of the accident in Beijing that is being investigated for suspected involvement in the accident?", "cypher": "match (:ENTITY{name:'related by someone'}) <- [:Relationship{name:'suspicious'}]- (h) return h.name"}, {"query": "Can you find me three books published by Henan People's Press?", "cypher": "match (:ENTITY{name:'People's Press of Henan'}) <- [:Relationship{name:'Publications'}]- ((n) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 3"}, {"query": "Can you tell me which schools in Zhejiang City, Guangdong have famous alumni?", "cypher": "match (:ENTITY{name:'Zhejiang City, Guangdong Province'}) <- [:Relationship{name:'the area'}]-(h),(h) - [:Relationship{name:'known alumni'}]->(x) return distinct x.name"}, {"query": "What does MCP mean?", "cypher": "match (:ENTITY{name:'MCP[content integrator]'}) - [:Tag{name:'tag'}]-> (m) return distinct m.name"}, {"query": "Do you know the Chinese name of the main achievement of this man, Galileo Galilei?", "cypher": "match (:ENTITY{name:'Galileo Cheryrae'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'main achievement'}]->(h) return h.name order by h.name limit 3"}, {"query": "Do you know the name of the law published in 1983?", "cypher": "match (:ENTITY{name:'1983'}) <- [:Relationship{name:' published date'}]- (n) return distinct n.name"}, {"query": "Can you tell me about the 3 07 new T-shirt shows?", "cypher": "match (:ENTITY{name:'07 new T-shirt show'}) --(h) with h order by h.name return distinct h.name skip 1 limit 3"}, {"query": "Do you know about the three-year guerrilla war in the Yangtze? What other information is there besides the war in the Yangtze Central Region of Fujian, please find the other 6 information in the 2nd layer", "cypher": "match (:ENTITY{name:'Three years of guerrilla war in the Yangtze'}) - [*1..2]->(p) where p.name <> 'Fujian Yangtze area' return p.name limit 6"}, {"query": "Do you know what is taboo in the case of hot, wet and temper tantrums?", "cypher": "match (:ENTITY{name:'true heat proof, wet heat proof and good temperament'}) <-[:Relationship{name:'taboo'}]-(p) return distinct p.name limit 1"}, {"query": "I'm wondering about this animal that belongs to the vertebrate family, can you tell me one of its English names?", "cypher": "match (:ENTITY{name:'backbone'}) <- [:Relationship{name:'backbone'}]- ((x) - [:Relationship{name:'English name'}]->(p) return p.name skip 2 limit 1"}, {"query": "What are the words to describe a city-loving man?", "cypher": "match (:ENTITY{name:'city-looking man or flower-looking man'}) --(x) return distinct x.name"}, {"query": "This person graduated from the Northeast Army Officer Training Corps, what are his main achievements that you know about?", "cypher": "match (:ENTITY{name:'Northeast Army Officer Training Class'}) <- [:Relationship{name:' Graduate School'}]-(q),(q) - [:Relationship{name:' Major Achievements'}]->(x) return x.name order by x.name limit 3"}, {"query": "Please, what keywords are relevant to 2013?", "cypher": "match (:ENTITY{name:'2013'}) <- [:Relationship{name:'time'}]- (x) return distinct x.name"}, {"query": "The book was published by Langley University Press and introduced me to two books.", "cypher": "match (:ENTITY{name:'Lancaster University Press'}) <- [:Relationship{name:'Publisher'}]-(p) - [:Relationship{name:'Book name'}]->(n) return distinct n.name limit 2"}, {"query": "The following is a list of the top 10 best online dating sites in the world.", "cypher": "match (:ENTITY{name:'18 years old going to heaven'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 3"}, {"query": "The Chinese name of the top five immortal holy places?", "cypher": "match (:ENTITY{name:'non-destructive sacred'}) - [:Relationship{name:'Chinese name'}]-> (n) with n order by n.name return distinct n.name limit 5"}, {"query": "I want a profile of Zhang Yiqiang, born in 1985, in three levels of relationships?", "cypher": "match (n:ENTITY{name:'Zhang Qianlong'}) - [*1..3]->(x) where x.name <>'1985' return distinct x.name"}, {"query": "108 will find me five of the attributes of the hyper-fighting link tag?", "cypher": "match (:ENTITY{name:'108 will super fight'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "What is Shen Guangjian's profession?", "cypher": "match (:ENTITY{name:' Chen Kwon Jian'}) <--(q) - [:Relationship{name:' profession'}]->(m) return distinct m.name limit 1"}, {"query": "Please tell me which show is sold at 557 Liberation Avenue, 2206 Shandong Square?", "cypher": "Match (:ENTITY{name:'Relationship{name:'Tickets sold at address'}) - (n) return n.name"}, {"query": "Do you know what the main element of phosphate is?", "cypher": "match (:ENTITY{name:'nitrate'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'main elements'}]->(n) return distinct n.name"}, {"query": "Can you provide the following three articles on Oswaldo outside Brazil?", "cypher": "match (:ENTITY{name:'Oswaldo'}) --(m) with m order by m.name where m.name <> 'Brazil' return distinct m.name limit 3"}, {"query": "The 5/12 earthquake memorial wall, do you know when it will happen?", "cypher": "match ((:ENTITY{name:'5\u00b712 earthquake poem wall'}) - [:Relationship{name:'falling into time'}]-> (h) return h.name"}, {"query": "What other information is there about the Zuo Dong Collection of Books published by the Commercial Printing Library? Help me find the other 6 in the 3 layers.", "cypher": "match (:ENTITY{name:'Relationship*1..3]-(p) where p.name <> 'business printing library' return p.name limit 6"}, {"query": "Tell us about who Louis Cousteau is.", "cypher": "match (:ENTITY{name:'Lewis Coussey'}) --(p) return p.name order by p.name"}, {"query": "183 Shoe Industry Do you know? Introduce yourself to me in a word", "cypher": "match (:ENTITY{name:'183 show shoe industry'}) --(p) with p order by p.name return p.name limit 1"}, {"query": "Do you know which machines can be used for mechanical performance testing?", "cypher": "match (:ENTITY{name:'Mechanical performance test'}) <- [:Relationship{name:' application'}]- (p) return p.name"}, {"query": "I want to find six midfielders, tell me where they were born?", "cypher": "match (:ENTITY{name:'central defender'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name, n.name limit 6"}, {"query": "What is the relationship if I get the four layers of relationships that are associated with swine flu?", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:' if I get swine flu'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me the first three?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "Do you know what tournaments are held in Winnipeg, Canada?", "cypher": "match (:ENTITY{name:'Winnipeg, Canada'}) <- [:Relationship{name:'location'}]- (q) return distinct q.name"}, {"query": "Do you know which earthquake reached a depth of 143 kilometers?", "cypher": "match (:ENTITY{name:'143 km'}) <- [:Relationship{name:'depth'}]- (q) return distinct q.name"}, {"query": "I'm not sure what kind of label is this, but I'm not sure what kind of label is this.", "cypher": "match (:ENTITY{name:'\u8bb8\u6b63\u5b81'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Tag{name:'tag'}]->(x) return distinct x.name limit 1"}, {"query": "Is there a chemical that is slightly soluble in water and can be mixed with ethanol or ethylene?", "cypher": "match (:ENTITY{name:'microsoluble in water, miscible with ethanol, ethanol'}) <- [:Relationship{name:'water soluble'}]- (h) return distinct h.name"}, {"query": "Can you find me two books published by Hai Publishing?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "The following is a list of literary works by Liu Yi-nan.", "cypher": "match (n:ENTITY{name:'submitted by Yuen Yan's'}) -[:Relationship*1..2]->(x) where x.name<>'literary work' return distinct x.name"}, {"query": "Can you recommend a car with a two-year warranty?", "cypher": "match (:ENTITY{name:'2 year unlimited km'}) <- [:Relationship{name:'warranty policy'}]- (m) return distinct m.name"}, {"query": "What are the names of the participants in the summit on March 28, 2011 at 10:00 am?", "cypher": "match (n:ENTITY{name:'28 March 2011 at 10 am'}) <- [:Relationship{name:'summary meeting'}]- (m) return m.name"}, {"query": "I'm curious about the three-layer relationship of hip neuroplasticity to neural pain caused by several diseases.", "cypher": "match (n:ENTITY{name:'Pulmonary nerve block'}) - [:Relationship*1..3]->(x) where x.name <> 'nerve pain caused by several diseases' return distinct x.name"}, {"query": "Can you help me find the poem written by Don Dey on the web?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database."}, {"query": "What else is on the Happy Bride label besides the drama and the film? Name three.", "cypher": "match (n:ENTITY{name:'happy bride'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'drama film' and h.name <> 'film work' return distinct h.name limit 3"}, {"query": "What are the different labels of each person? List them in order of their number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'Sun Hwang'}) - [:Relationship{name:'political appearance'}]->(:ENTITY) <- [:Relationship{name:'political appearance'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, ((r.name) OR collect BY cDER"}, {"query": "Can you help me find the next big name in the industry, Xu Zhongxun, and get a three-tiered relationship?", "cypher": "match (n:ENTITY{name:'Xue Zhong'}) - [*1..3]->(x) where x.name<>'industry person' return distinct x.name"}, {"query": "Can you name the eight cases that occurred on April 18, 2015?", "cypher": "match (:ENTITY{name:'18 April 2015'}) <- [:Relationship{name:'time'}]- (m) return m.name limit 8 The name of the match is not available."}, {"query": "I'm not sure if you can tell me about the five symbolism of the peak, but I can tell you about the other five symbolism of the peak, which are not just online novels and literature.", "cypher": "match (n:ENTITY{name:'Word'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'network novel' and h.name <> 'literature' return distinct h.name limit 5"}, {"query": "2009 Shanghai Political Science Study, in addition to the social science books, are there any other characteristic labels?", "cypher": "match (:ENTITY{name:'2009 Shanghai Political Law Research'}) --(x) with x order by x.name where x.name <> 'Sociology books' return x.name limit 5"}, {"query": "I'm not sure if you can tell me about the social event of the 9/11 robbery and murder.", "cypher": "match (:ENTITY{name:'11\u00b716 underground robbery murder case'}) --(n) with n order by n.name where n.name <> 'social event' return n.name"}, {"query": "I wonder how many companies were founded in 1998?", "cypher": "match (p:ENTITY{time:'1998'}) return count ((p)"}, {"query": "The following person Simek Karlo has three levels of relationships:", "cypher": "match (n:ENTITY{name:'Simek Karlo'}) - [*1..3]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "Do you know which song was released on 2015-8-28?", "cypher": "match (:ENTITY{name:'2015-8-28'}) <- [:Relationship{name:'release time'}]- (m) return distinct m.name"}, {"query": "Can you tell me about another feature of the 169 Forum besides the medical one?", "cypher": "match (h:ENTITY{name:'169 forum'}) --(q) with q order by q.name where q.name <> 'medicine' return q.name limit 1"}, {"query": "The company is also known for its online magazine, The Mystery Ocean, which is published by Jilin Publishing Group Ltd.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name <> 'Jilin Publishing Group Limited' return distinct x.name"}, {"query": "Please tell me which village has an area of 0.92 square kilometers.", "cypher": "match (:ENTITY{name:'0.92 square kilometres'}) <- [:Relationship{name:'the village occupies the area'}]- (x) return x.name"}, {"query": "Do you know of any publications published in 2006/1/1? Can you tell me two?", "cypher": "match (:ENTITY{name:'2006/1/1'}) <- [:Relationship{name:' time of publication'}]- ((x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know the main edible benefits of the foam mixture?", "cypher": "match (:ENTITY{name:'Pumpkin mist'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'mainly consumed power'}]->(n) return distinct n.name"}, {"query": "Which three major awards have been awarded to Shanghai Aluminum University of Technology?", "cypher": "match (:ENTITY{name:'Shanghai Aluminum Higher Specialist School'), a high-tech engineering school with a tradition and special characteristics, is located in Shanghai's Southwest Shenzhen River Estuary Emerging Technology Development Zone."}, {"query": "Do you know what the name of the relationship within the five layers that this person is involved in is?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'\u4f55\u5174\u821f'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "When was the first time in history that humans studied the properties of hydrogen in detail?", "cypher": "match (:ENTITY{name:' the first detailed study of the properties of hydrogen'}) <- [:Relationship{name:' event'}]- (q) return q.name"}, {"query": "I'm curious about the details of the four-tier relationship called the Four Seasons Shed in Chinese.", "cypher": "match (n:ENTITY{name:' four-season shed'}) - [*1..4]->(x) where x.name <> ' four-season shed' return distinct x.name limit 5"}, {"query": "Can you tell us which are the main departments of the Faculty of Economics of the Tibetan National University?", "cypher": "match (:ENTITY{name:'School of Finance at the Tibetan National University'}) - [:Relationship{name:'Main Faculty'}]-> (p) return p.name order by p.name"}, {"query": "There is a case called 7/1 Burma Mandalay fiber EDA good township riots case", "cypher": "match (:ENTITY{name:'7 / 1 Burma Mandalay fiber EDA good township riots'}) <- [:Relationship{name:'foreign name'}]- (h) return distinct h.name"}, {"query": "What is the shortest relationship path between the 3rd and 3rd levels of Escape the Fate?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest paths'}) - [*..3]-(b:ENTITY{name:'shortest paths'})) return count ((p)"}, {"query": "Do you know the Chinese name for rainbow love?", "cypher": "match (:ENTITY{name:'Relationship{name:'Chinese name'}]-> (q) with q order by q.name return distinct q.name"}, {"query": "13131 is a weird name for a music album, do you know that?", "cypher": "match (:ENTITY{name:'13131 [Chen Ling's seventh album]'}) --(q) with q order by q.name where q.name <> 'music' return q.name"}, {"query": "I need information about the relationship between the three layers of the Basic Training and Teaching of Ballet published by Shanghai Music Publishing.", "cypher": "match (n:ENTITY{name:'Basic training and teaching of ballet'}) - [:Relationship*1..3]->(x) where x.name<>'Shanghai Music Publishing' return distinct x.name"}, {"query": "Can you tell me where the scope of the first aid for cardiac asthma is?", "cypher": "match (:ENTITY{name:'Cardiac Asthma Emergency'}) <- [:Relationship{name:'Chinese name'}]- ((n),(n) - [:Relationship{name:'Scope of application'}]->(x) return distinct x.name limit 1"}, {"query": "Can you give me a list of the top ten T-series products from TCL?", "cypher": "match (h) <- [:Relationship{name:' Chinese name'}]-(m) where substring ((h.name, 0,5)='TCL T' return distinct m.name limit 10"}, {"query": "Do you remember what kind of insurance is valid for 10 days?", "cypher": "match (:ENTITY{name:'10 days'}) <- [:Relationship{name:' valid for a period of time'}]- (x) return distinct x.name"}, {"query": "What conferences or competitions have been held in the cities of Kho and Phat in Inner Mongolia?", "cypher": "match (:ENTITY{name:'Inner Mongolia Autonomous Region Khost and Khent City'}) <- [:Relationship{name:'Holding place'}]- (x) return x.name"}, {"query": "What are the features of the apartment?", "cypher": "match (:ENTITY{name:'levels'}) - [:Relationship{name:'attributes'}]->(n) return n.name as name union all match (:ENTITY{name:'levels'}) - [:Relationship{name:'levels'}]->(m) return m.name as name"}, {"query": "Find out what type of product they are, what kind of laptop they are, what kind of product they are.", "cypher": "match (:ENTITY{name:' notebook'}) <- [*]-(m), (m) - [:Relationship{name:' product type'}]->(n) return m.name, n.name limit 6"}, {"query": "Who can write five tags for the 0746 recruitment network?", "cypher": "match (:ENTITY{name:'0746 recruitment network'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "I'm not sure what Fan Qiao Hua does for a living.", "cypher": "match (:ENTITY{name:'fan\u5251\u534e'}) <--(x) -[:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 5"}, {"query": "Please give us 10 articles about Cloud Wang.", "cypher": "match (:ENTITY{name:'CLOUD WANG'}) --(h) return distinct h.name limit 10 is the name of the game"}, {"query": "The name of the pilot, who is also known as \"Ch\u014dsh\u016b-no-Hokuto\", is not mentioned in the book.", "cypher": "match (n:ENTITY{name:'flying officer's name'}) - [:Relationship{name:' alias'}]->(h) where h.name <> 'sea turtle king' and h.name <> 'northern nose' return distinct h.name limit 3"}, {"query": "What lists have been released by the China 500 Summit Forum in 2015?", "cypher": "match (:ENTITY{name:'2015 China 500 Summit Forum'}) <- [:Relationship{name:'release forum'}]- (m) return distinct m.name"}, {"query": "Do you know how many labels are on aquatic life?", "cypher": "match ((:ENTITY{name:' aquatic organism'}) - [:Tag{name:' tag'}]-> (n) return n.name order by n.name"}, {"query": "Tell me about the school that won the main award for the National Peace and Conflict Campus Advanced Collective?", "cypher": "match (:ENTITY{name:'National Peace and Conflict Campus Advanced Collective'}) <- [:Relationship{name:'main award'}]- (n) return distinct n.name"}, {"query": "Can I get two copies of the book published by Qingdao Publishing?", "cypher": "match (:ENTITY{name:'Qing Island Publishing House'}) <- [:Relationship{name:'Publishing House'}]-(x),(x) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 2"}, {"query": "Please introduce me to the people of the village.", "cypher": "match (:ENTITY{name:' village'}) --(m) return m.name skip 1"}, {"query": "Can you tell me one thing about this 182-cm man, his nickname?", "cypher": "match (:ENTITY{name:'182cm'}) <- [:Relationship{name:'height'}]-(n),(n) - [:Relationship{name:'alias'}]->(q) return q.name order by q.name limit 1"}, {"query": "Do rural villagers have Chinese names?", "cypher": "match (:ENTITY{name:'Kinohara'}) - [:Relationship{name:'Chinese name'}]-> (h) with h order by h.name return distinct h.name"}, {"query": "What are the possible labels for 1050-2009?", "cypher": "match (x:ENTITY{name:'1050-2009'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'single' return h.name"}, {"query": "How much do you know about the 12/12 textile factory collapse in Alexandria, Egypt?", "cypher": "match (:ENTITY{name:'12\u00b712 Egypt Alexandria textile plant collapse'}) --(x) with x order by x.name return x.name"}, {"query": "The large fruit lily is a protected plant in which category?", "cypher": "match (:ENTITY{name:'Big Tree'}) - [:Relationship{name:'protection level'}]->(n) return n.name as name union all match (:ENTITY{name:'Big Tree'}) - [:Relationship{name:'distribution area'}]->(m) return m.name as name"}, {"query": "What does the moonlight mean? Where did it come from?", "cypher": "match (:ENTITY{name:'daylight'}) - [:Relationship{name:'explanation'}]->(n) return n.name as name union all match (:ENTITY{name:'daylight'}) - [:Relationship{name:'out of place'}]->(m) return m.name as name"}, {"query": "I would like to know the other 4 information about the athlete Jagelkar 2nd level.", "cypher": "match (:ENTITY{name:'Phillippe Jagelca'}) -[:Relationship*1..2]-(p) where p.name <> 'athlete' return p.name limit 4"}, {"query": "Tell me about the three films you know about Sato Ryuji, besides his other work as a \"Live Spectacle Fire Movie Ninja\" assistant to Yuki Bobo.", "cypher": "match (:ENTITY{name:'\u4f50\u85e4\u6d41\u53f8'}) <- [:Relationship{name:'Chinese name'}]- ((x) - [:Relationship{name:'representative work'}]->(m) where m.name <> '\u300eLive Spectacle Fire Shadow Ninja\u300f \u5b87\u667a\u6ce2\u4f50\u52a9 return distinct m.name limit 3"}, {"query": "Can you tell me about the people who are in a 4th level relationship with Liu Yan? Can you name two?", "cypher": "match (n) <- [:Relationship*4{name:' partner'}]- ((p:ENTITY{name:' elegant'}) RETURN distinct n.name limit 2"}, {"query": "Who is the interim commander-in-chief of the new army of the Wu Zetian Rebellion?", "cypher": "match (:ENTITY{name:'Provisional Commander-in-Chief of the New Army of the Wu-Tang Rebellion'}) <- [:Relationship{name:'Main achievements'}]- ((m) return distinct m.name"}, {"query": "Do you know what purely public (non-commercial) bicycle parks are?", "cypher": "match (:ENTITY{name:' purely public (non-commercial) bicycle fleet'}) <- [:Relationship{name:' fleet nature'}]- (h) return distinct h.name"}, {"query": "Can you recommend 5 novels that are being published in Jinjiang City?", "cypher": "match (:ENTITY{name:'Jingjiang City'}) <- [:Relationship{name:'connecting platform'}]- (m) return distinct m.name limit 5"}, {"query": "Can you list the areas with 750,000 hectares of arable land?", "cypher": "match (x:ENTITY{name:'750,000 tons'}) <- [:Relationship{name:'cultivated area'}]- (m) return distinct m.name"}, {"query": "Do you know of any literary works that date back to 1344?", "cypher": "match (:ENTITY{name:'1344 year made'}) <- [:Relationship{name:'years'}]- (h) return h.name"}, {"query": "What is the alias of the main character in Grand Theft Auto: The Lost and Damned?", "cypher": "match (:ENTITY{name:'Grand Theft Auto: The Lost and Damned(lost and cursed) }) <- [:Relationship{name:'representing work'}]- ((h) - [:Relationship{name:'alias'}]->(n) return distinct n.name"}, {"query": "What is CF-105 Avro Chinese translation?", "cypher": "match (:ENTITY{name:'CF-105 Avro'}) <- [:Relationship{name:'English name'}]- (x) return distinct x.name"}, {"query": "10 things that make me understand 007's death?", "cypher": "match (:ENTITY{name:'007 dead fight'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "Can you tell us more about the career of Balu, what his faith is and what military rank he holds?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "The 2012 Burmese Tea Party from the Tea Culture Expo to the Purple Sands Boutique Exhibition is set to be held in which exhibition hall?", "cypher": "match ((:ENTITY{name:'2012 Burhan Belly from the Tea Culture Fair's Purple Sands Boutique Show}) - [:Relationship{name:' Exhibition Gallery'}]-> (p) return p.name"}, {"query": "How do you explain the term \"misuse of public funds\"?", "cypher": "match (:ENTITY{name:'abuse of public funds'}) <- [:Relationship{name:'interpretation'}]- ((m) return distinct m.name"}, {"query": "Do you know how fast the ocean plate is moving?", "cypher": "match (:ENTITY{name:' ocean plate'}) <- [:Relationship{name:' Chinese name'}]- ((x),(x) - [:Relationship{name:' moving speed'}]->(q) return distinct q.name"}, {"query": "Can you find me two archaeological sites and describe them?", "cypher": "match (:ENTITY{name:'archaeological artifacts'}) <- [:Relationship*]-(m), (m) - [:Describe{name:'description'}]->(n) return m.name, n.name limit 2"}, {"query": "Who killed Ju Friendly in the Fifth Dynasty and took the throne?", "cypher": "match (:ENTITY{name:'Tongdong Five Generations'}) <- [:Relationship{name:'at the time'}]-(m), (m) - [:Relationship{name:'main achievement'}]->(n) where n.name='Killing Zhu Jingming, taking the throne' return m.name"}, {"query": "Can you tell me what kind of relationship is involved in the farmers in the three layers?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' what is a farmer called'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "I'm not sure if this is a good idea, but I'm not sure if it's a good idea.", "cypher": "match (:ENTITY{name:'The apprentice of the magician's puppet'}) --(h) return h.name order by h.name limit 1"}, {"query": "Can you list four war dramas and tell me when they will be released?", "cypher": "match (:ENTITY{name:'war drama'}) <- [*]-(m), (m) - [:Relationship{name:'release time'}]->(n) return m.name, n.name limit 4"}, {"query": "Do you know the three labels in Xiaoping County besides the language?", "cypher": "match (:ENTITY{name:'Shawks over Baokpo County Three's Head'}) - [:Tag{name:'tags'}]-> (p) with p order by p.name where p.name <> 'language' return p.name limit 3"}, {"query": "What is the nickname of the weapon tank developed in 1963?", "cypher": "match (h:ENTITY{name:'1963'}) <- [:Relationship{name:'time of research and development'}]- ((x) - [:Relationship{name:'alias'}]->(p) return distinct p.name"}, {"query": "Please tell me what the fourth layer of the label relationship is social events?", "cypher": "match (n) - [:Tag*4{name:'tag'}]->(p:ENTITY{name:'social event'}) RETURN distinct n.name limit 5"}, {"query": "I wonder what the magnitude of the 10.23 Ganja earthquake was?", "cypher": "match ((:ENTITY{name:'10.23 Glyphosate earthquake'}) - [:Relationship{name:'seismicity'}]-> (x) return x.name"}, {"query": "Do you know what chemical is C2H7NO?", "cypher": "match (:ENTITY{name:'C2H7NO'}) <- [:Relationship{name:'molecular'}]- (h) return distinct h.name"}, {"query": "The game is a Christmas-themed game that is a Christmas-themed game.", "cypher": "match (:ENTITY{name:'2011 Christmas bubble'}) --(q) with q order by q.name where q.name <> 'game' return q.name"}, {"query": "What is Shi Yong-kyu's profession?", "cypher": "match (:ENTITY{name:'\u77f3\u6c38\u594e'}) <- [:Relationship{name:' Chinese name'}]-(n),(n) - [:Relationship{name:' profession'}]->(m) return distinct m.name limit 1"}, {"query": "Give me all the information about SKF 22380CAK/W33 bearings in three seconds?", "cypher": "match (x:ENTITY{name:'SKF 22380CAK/W33 bearing'}) --(p) with p order by p.name return p.name"}, {"query": "What is the name of the chemical called 1-Adamantyl methyl ketone?", "cypher": "The name of the product is \"Relationship\" (Relationship)"}, {"query": "The conference was held in Beijing, China, on the theme of disaster history.", "cypher": "match (q:ENTITY{name:'China disaster history'}) <- [:Relationship{name:'content'}]- (p) return p.name"}, {"query": "Can you give me five items that I can use to find out about archaeological sites?", "cypher": "match (:ENTITY{name:'Archaeological artifacts'}) <--(n) return n.name limit 5"}, {"query": "Can you tell me what Nova's entry is?", "cypher": "match (:ENTITY{name:'\u30ce\u30fc\u30d0'}) <- [:Relationship{name:' foreign language name'}]- ((x) - [:Relationship{name:' entry work'}]->(p) return distinct p.name"}, {"query": "What is the name of the nation of King Seuss and what are his labels?", "cypher": "The name of the game is \"The Battle of the Sexes\" (Relationship) and the name of the game is \"The Battle of the Sexes\" (Relationship)."}, {"query": "What are the public schools in Ning District, Shanghai?", "cypher": "match (:ENTITY{name:'Shanghai Mayor Ning District'}) <- [:Relationship{name:'area'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='public secondary school' return m.name"}, {"query": "I know that the school was founded in 1958 and the current principal is Liu Weifang, so give me five more details.", "cypher": "match (n:ENTITY{name:' downloader school'}) -->(h) with h order by h.name where h.name <> '1958' and h.name <> 'Jin Wei Fang' return h.name limit 5"}, {"query": "The county is also known as Sheridan County.", "cypher": "match (:ENTITY{name:'Shyam County'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'alpha name'}]->(q) return distinct q.name"}, {"query": "I recommend three TV series shot in Shanghai, not the summer of bubbles.", "cypher": "match (:ENTITY{name:'Shanghai'}) <- [:Relationship{name:'place of birth'}]-(m),(m) - [:Relationship{name:'main works'}]->(h) where h.name <> 'Summer of the Foam' return distinct h.name limit 3"}, {"query": "Check when the 2012 Shanghai International Education Expo is taking place.", "cypher": "match ((:ENTITY{name:'2012 Shanghai International Education Exhibition'}) - [:Relationship{name:'season'}]-> (m) return m.name"}, {"query": "Can you recommend a film or TV series that Sugiyama loves?", "cypher": "Match (:ENTITY{name:'Sujiragi'}) <- [:Relationship{name:'main character'}]- (n) return n.name"}, {"query": "The first is that the people who are in the village are not very good at school, but they are not very good at school.", "cypher": "match (:ENTITY{name:'canopy, villa/child, you can't go'}) --(x) with x order by x.name return x.name"}, {"query": "What are the main works of the authors of the 10 constellations of Virgo?", "cypher": "match (:ENTITY{name:'virgin'}) <- [:Relationship{name:'star'}]- ((n) - [:Relationship{name:'main work'}]->(m) return distinct m.name limit 10"}, {"query": "What is the name of the largest Chinese campus community affiliated with Search?", "cypher": "match (:ENTITY{name:'Search'}) <- [:Relationship{name:'affiliated'}]-(m), (m) - [:Relationship{name:'nature'}]->(n) where n.name='China's largest campus community' return distinct m.name"}, {"query": "Have you heard about the 1969 Singapore race riots?", "cypher": "match (:ENTITY{name:'1969 Singapore ethnic riots'}) --(q) with q order by q.name return q.name"}, {"query": "I really want to go to the Shanghai International Luxury Packaging Expo 2011 and see it.", "cypher": "match ((:ENTITY{name:'2011 Shanghai International Luxury Packaging Exhibition'}) - [:Relationship{name:'exhibition time'}]-> (h) return h.name"}, {"query": "What is the name of the event organized by Chinese Online?", "cypher": "match (:ENTITY{name:' in Chinese online'}) <- [:Relationship{name:' host unit'}]- (h) return h.name"}, {"query": "The two types of relationships that Emily's mourning involves are what, five?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'to mourn Emily's mother's death'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "What profession did you take after fighting in the anti-Japanese war, the liberation war, the heroic war against the Axis?", "cypher": "match (:ENTITY{name:'anti-Japanese War, Liberation War, Anti-US-Assistance Korea, etc'}) <- [:Relationship{name:'main achievements'}]- ((x) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 5"}, {"query": "The Soviet-built Type 671 attack nuclear submarine, when was it designed?", "cypher": "match ((:ENTITY{name:'671 attack nuclear submarine'}) - [:Relationship{name:'temporary time'}]-> (m) return m.name"}, {"query": "Can you help me find the phone number in Yangon?", "cypher": "match ((:ENTITY{name:'Picnic'}) - [:Relationship{name:'Phone area code'}]-> (n) return n.name"}, {"query": "What is the slang term?", "cypher": "match (:ENTITY{name:''}) - [:Relationship{name:'do not call'}]-> (m) return distinct m.name"}, {"query": "Can you help me find the alias of the thermobaric bomb?", "cypher": "match (:ENTITY{name:'thermobaric bomb'}) <- [:Relationship{name:' foreign language name'}]-(x),(x) - [:Relationship{name:' alias'}]->(h) return distinct h.name"}, {"query": "Do you know anything else about John Lennon's Ideal World other than the 1988 release? Help me find 4 pieces of information in 2 layers.", "cypher": "match (:ENTITY{name:' The Ideal World of John Lennon'}) - [*1..2]-(p) where p.name <> '1988/10/7' return p.name limit 4"}, {"query": "Do you know what 100 classic books are?", "cypher": "match (:ENTITY{name:'100 classic books'}) --(q) with q order by q.name return q.name"}, {"query": "Who is the first of the top 10 entertainment personalities of 2013 according to the news, and what is your impression?", "cypher": "Match (s) (n) return (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n)"}, {"query": "The building in which the street is located is the one in which the city is located.", "cypher": "match (:ENTITY{name:'Appreciation Street'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'city to which belongs'}]->(n) return distinct n.name"}, {"query": "What other labels can you give to the 100 different types of ants in the publication?", "cypher": "match (x:ENTITY{name:'100 different practices'}) - [:Tag{name:'tags'}]-> (n) with n order by n.name where n.name <> 'publications' return n.name"}, {"query": "What is the shortest relationship path between the two layers of diffraction and diffraction?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest paths'}) - [*..2]-(b:ENTITY{name:'shortest paths'})) return count ((p)"}, {"query": "Do you want to know about the 5 facts about the mathematics teacher Wang Zhenjia?", "cypher": "match (n:ENTITY{name:'spanish'}) - [*]->(x) where x.name <> 'math teacher' return distinct x.name limit 5"}, {"query": "Can you list any artifacts from the Zhejiang Provincial Museum collection?", "cypher": "The museum is located in the city of Zhejiang, Zhejiang Province."}, {"query": "Can you find me four publications published by the WU Teacher's University Press?", "cypher": "match (:ENTITY{name:'Washington University Press'}) <- [:Relationship{name:'Publications'}]-(h),(h) - [:Relationship{name:'Book name'}]->(q) return distinct h.name,q.name limit 4"}, {"query": "What else do you know about the Bay of Lei besides that it belongs to the Shandong Tobacco Company?", "cypher": "match (:ENTITY{name:'Relationship*1..2]-(p) where p.name <> 'Shandong Province Tobacco City' return p.name limit 10"}, {"query": "Can you list five items related to the 2008 Jiangmen Municipal Work Report?", "cypher": "match (n:ENTITY{name:'2008 Jiangmen City Government work report'}) - [*]->(x) where x.name <>'2008 Jiangmen City Government work report' return distinct x.name limit 5"}, {"query": "The 2011 Asian Display Industry Expo Cocktail Seminar Guangzhou The Cocktail Seminar is about to be held in Guangzhou, please let us know the time of the exhibition, thank you.", "cypher": "match ((:ENTITY{name:'2011 Asia [Guangzhou] flat panel display industry expo cookery workshop Guangzhou flat panel display industry expo cookery workshop'}) - [:Relationship{name:'exhibition time'}]-> (q) return q.name"}, {"query": "Do you know how much she is charging for her book?", "cypher": "match (:ENTITY{name:'Wendell's edited}) <- [:Relationship{name:'author'}]- ((x),(x) - [:Relationship{name:'priced'}]->(q) return distinct q.name"}, {"query": "What kind of novels are there where the guy who is related to the real-life Shin Tae-yong and the real-life General Shin Tae-yong?", "cypher": "match (:ENTITY{name:'hyunjin and the real-life generals'}) <- [:Relationship{name:'blood source'}]-(h),(h) - [:Relationship{name:'type'}]->(m) return distinct m.name"}, {"query": "What is the name of the processor that uses A4 A6 A8 A10 A12 series?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Do you know the name of the vans made by Makina?", "cypher": "match (:ENTITY{name:'Makinara'}) <- [:Relationship{name:'production unit'}]- (p) return p.name"}, {"query": "The following is a list of the top 10 best-selling singles of all time, including the number one single of the year, \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song Ever\", \"The Best Song is the One and the Best is the Other One\" and \"What is the Meaning of This?\"", "cypher": "match (n:ENTITY{name:'suburbs vocabulary\u00b7\u5584\u80dc\u821e\u00b7\u987a'}) - [:Relationship*1..3]->(x) where x.name <>'\u4e50\u5e9c' return distinct x.name"}, {"query": "The three species of the family are distributed in which regions?", "cypher": "match (:ENTITY{name:'clown'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' distribution area'}]->(n) return m.name,n.name limit 3"}, {"query": "What are the films directed by Kim Yong-kyu? Can you tell me about five?", "cypher": "Match (:ENTITY{name:'Kin Yong-kyu'}) <- [:Relationship{name:'director'}]-(p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 3"}, {"query": "Tell me about three famous alumni of Zhongning Vocational High School, but who else besides Liu Guo and Chen Minghui?", "cypher": "match (n:ENTITY{name:'Zhouning Vocational Secondary School'}) -[:Relationship{name:'known alumnus'}]->(h) where h.name <> 'Hong Kong' and h.name <> 'Chenming Yang' return distinct h.name limit 3"}, {"query": "I'm going to be the first to introduce you to some of the most representative works of Conti Barber.", "cypher": "match (:ENTITY{name:'Conte Barber'}) - [:Relationship{name:'representing work'}]-> (m) return m.name skip 3"}, {"query": "I'm looking for a book published by Taobao Literature Publishing, can you find me three?", "cypher": "match (:ENTITY{name:'Tao Wei Literature Publishing House'}) <- [:Relationship{name:'Publishing House'}]-(n) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 3"}, {"query": "Do you know how the Sony A580 works?", "cypher": "match (:ENTITY{name:'Soniaa580'}) <- [:Relationship{name:'Chinese name'}]- ((n) - [:Relationship{name:'operating method'}]->(h) return distinct n.name"}, {"query": "There is a service hotline that is responsible for industry complaints, consultations, what is it called?", "cypher": "match (:ENTITY{name:' Accepting complaints and consultations from industry'}) <- [:Relationship{name:' Function'}]- (h) return h.name"}, {"query": "(+) - Can you help me check the molecular weight of the bag of dandelion?", "cypher": "match ((:ENTITY{name:'(+) - packet of jellyfish'}) - [:Relationship{name:'molecular mass'}]-> (x) return x.name"}, {"query": "What is the shortest distance between Ningxia Central Mountain Hospital and Ningxia Beijing Women's Hospital within two floors?", "cypher": "match p=allshortestpaths (((a:entity{name:'Ningxia Central Mountain Hospital'}) - [*..2]-(b:ENTITY{name:'Ningxia Beijing Women's Hospital'})) return count ((p)"}, {"query": "I want to know who is the president of the Civilian Village of Xi'an County in accordance with the law.", "cypher": "match (:ENTITY{name:'Consistent with the City of Xi'an County Citizenship Village's Chairman'}) --(h) return h.name order by h.name"}, {"query": "Do you know Sam Hunt's nickname? Name three, please.", "cypher": "match (:ENTITY{name:'Sam Hunt, American country singer, former college football player\u3002'}) <- [:Describe{name:'description'}]-(p) - [:Relationship{name:'alias'}]->(q) return distinct p.name limit 10"}, {"query": "What are the main awards that the Lao Dragon Center in Jinjiang, Jiangsu province has received?", "cypher": "match (:ENTITY{name:'Relationship Centre of the city of Jinjiang, Jiangsu Province'}) <- [Relationship{name:'Chinese name'}]- ((q),(q) - [Relationship{name:'main award'}]->(n) return distinct n.name limit 3"}, {"query": "Do you know what is the profession of Ben Ben?", "cypher": "match (m:ENTITY{name:'spanish'}) <- [:Relationship{name:'spanish'}]- ((x) - [:Relationship{name:'spanish'}]->(n) return distinct n.name limit 1"}, {"query": "1940s people - What other professions were born in 1940 besides one of the artists?", "cypher": "match (:ENTITY{name:'1940'}) <- [:Relationship{name:'date of birth'}]-(h) - [:Relationship{name:'profession'}]->(n) where n.name <> 'artist' return distinct n.name limit 3"}, {"query": "Do you know what kind of propulsion system the Type 001A carrier uses?", "cypher": "match ((:ENTITY{name:'001A aircraft carrier'}) - [:Relationship{name:'power unit'}]-> (n) return n.name"}, {"query": "Please explain the simplified Chinese version of the National Standard of the People's Republic of China: Flammable Alloy Board 3 layers in relation to the details of the introduction.", "cypher": "match (n:ENTITY{name:'National standard of the People's Republic of China: non-flammable aluminum plate'}) - [:Relationship*1..3]->(x) where x.name <>'simplified Chinese' return distinct x.name"}, {"query": "What has the production committee of Beyond the Border done?", "cypher": "match (:ENTITY{name:' Production committee from the other side of the border'}) <--(n) return n.name"}, {"query": "What is the metadata that can be used for engineering simulation analysis?", "cypher": "match (n:ENTITY{name:' engineering simulation analysis'}) --(x) return distinct x.name"}, {"query": "Do you know the names of the novels written by pencil marks?", "cypher": "match (:ENTITY{name:'falling down'}) <- [:Relationship{name:'author'}]- ((x) - [:Relationship{name:'Chinese name'}]->(h) return distinct h.name"}, {"query": "What is the book feeding and caring for babies 0-3 years old by Chemical Industries?", "cypher": "match (m:ENTITY{name:'0-3 years old baby feeding and care book'}) --(q) with q order by q.name where q.name <> 'chemical industry publisher' return q.name"}, {"query": "Which books have the same literary style as the carriage maker and what are the labels on them?", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Z"}, {"query": "What does enmity mean? Where did it come from?", "cypher": "match (:ENTITY{name:'enemy and foe'}) - [:Relationship{name:'definition'}]->(n) return n.name as name union all match (:ENTITY{name:'enemy and foe'}) - [:Relationship{name:'outcome'}]->(m) return m.name as name"}, {"query": "Can you tell me which major departments can be included in the universities in Guangdong, China?", "cypher": "match (:ENTITY{name:'China Guangdong'}) <- [:Relationship{name:'area'}]-(n),(n) - [:Relationship{name:'main department'}]->(h) return distinct h.name"}, {"query": "Please explain the full content of the Nantong Maritime Vocational Technical College.", "cypher": "match (:ENTITY{name:'Nantong City Shipping Vocational Technical College'}) --(q) return q.name order by q.name"}, {"query": "The software operating system launched in June 2013 is still in good condition?", "cypher": "match (:ENTITY{name:'June 2013'}) <- [:Relationship{name:'listing date'}]-(p) - [:Relationship{name:'operating system'}]->(n) return distinct n.name"}, {"query": "I wonder what kind of jobs are there for the great ones?", "cypher": "match (:ENTITY{name:'strong family'}) <- [:Relationship{name:'ethnicity'}]-(m),(m) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 3"}, {"query": "What is Wang Rixit doing? Did he mention two jobs he did?", "cypher": "match (:ENTITY{name:'King of Swords'}) <--(n),(n) - [:Relationship{name:'Career'}]->(x) return distinct x.name limit 2"}, {"query": "Can you find out how big the hot spring area and lake view water system is in Yangtze?", "cypher": "match (x:ENTITY{name:'Yangsiung waterfall resort'}),(x) - [:Relationship{name:'waterfall area'}]-> (m), (x) - [:Relationship{name:'lake view waterfall system'}]->(n) return m.name,n.name"}, {"query": "How about 19 tons of spray in 5 words?", "cypher": "match (:ENTITY{name:'19 nitrous spray'}) --(p) with p order by p.name return p.name limit 5"}, {"query": "Can you tell me about one of Tracy Kay Wolfe's representative works?", "cypher": "match (:ENTITY{name:'Tracy Kay Wolfe'}) - [:Relationship{name:'represents work'}]-> (h) return distinct h.name limit 1"}, {"query": "The following is a list of topics related to the two-tiered relationship of urban geography in Northeast China, published by Science Press.", "cypher": "match (n:ENTITY{name:'Northeast China's urban geography'}) - [:Relationship*1..3]->(x) where x.name <> 'scientific publisher' return distinct x.name"}, {"query": "What are the most representative works of the writer who died on March 22, 2015? Can you name three?", "cypher": "match (:ENTITY{name:'22 March 2015'}) <- [:Relationship{name:'date of death'}]-(h) - [:Relationship{name:'representative work'}]->(n) return distinct n.name limit 3"}, {"query": "What are the novels that are being published in Jinjiang Literature City? Can you tell me seven?", "cypher": "match (m:ENTITY{name:'Jingjiang City'}) <- [:Relationship{name:'connecting platform'}]- (p) return p.name limit 7"}, {"query": "Tell me, what are the two main ingredients of the purple rice besides the purple rice and the iced sugar?", "cypher": "match (n:ENTITY{name:'Relationship{name:'main ingredient'}]->(h) with h order by h.name where h.name <> 'purple rice' and h.name <> 'ice sugar' return h.name limit 2"}, {"query": "What is the name of the accident that killed 21 people?", "cypher": "match (:ENTITY{name:'21 dead'}) <- [:Relationship{name:'personal injury'}]- (m) return distinct m.name"}, {"query": "What are the lessons in Zhuhai's primary school?", "cypher": "match (:ENTITY{name:'Jubei City High School'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'School training'}]->(n) return distinct n.name"}, {"query": "I'm going to be a little more specific about this.", "cypher": "match (:ENTITY{name:'brad paisley'}) --(x) return x.name skip 3 The name of the match is"}, {"query": "I would like to know what are the main ingredients of Taiwanese roasted corn. What is it for and what storage methods are used?", "cypher": "match (:ENTITY{name:'Taiwan roasted corn'}) - [:Relationship{name:'main raw material'}]->(n) return n.name as name union all match (:ENTITY{name:'Taiwan roasted corn'}) - [:Relationship{name:'suitable for the crowd'}]->(m) return m.name as name union all match (:ENTITY{name:'Taiwan roasted corn'}) - [:Relationship{name:'(storage method'}]->r) return r.name as name"}, {"query": "Can you quickly name three labels for a 1980 model 7.62mm automatic pistol?", "cypher": "match (:ENTITY{name:'1980 model year 7.62 mm automatic pistol'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 3"}, {"query": "Do you know which company has 2,000 law firms and more than 30,000 lawyers on its operating team?", "cypher": "match (:ENTITY{name:'2 thousand law firms, over 30,000 lawyers'}) <- [:Relationship{name:'operating team'}]- (q) return q.name"}, {"query": "Can you name 20 Chinese teachers who don't repeat themselves?", "cypher": "match (:ENTITY{name:'teacher'}) <--(m), (m) --(n) where n.name='China' return distinct m.name limit 20"}, {"query": "Do you know which match was held on 27.7.2015?", "cypher": "match (:ENTITY{name:'2015.7.27'}) <- [:Relationship{name:' time of holding'}]- (x) return distinct x.name"}, {"query": "10 schools with the same name as the University of Technology, Eddiscoville and founded in 1989 are recommended.", "cypher": "match (:ENTITY{name:'1989'}) <- [:Relationship{name:'time of founding'}]-(x),(x) - [:Relationship{name:'known alumni'}]->(m) where m.name <> 'Corting University of Technology, Edinburgh University' return distinct m.name limit 10"}, {"query": "What is the name of the fishology that we commonly call the colored flower?", "cypher": "match (:ENTITY{name:'color gift flower, stone stick'}) <-[:Relationship{name:'clan name'}]-(m) return distinct m.name"}, {"query": "Can you find the top 10 introductions to you for my fork?", "cypher": "match (:ENTITY{name:' you are my fork'}) --(h) with h order by h.name return h.name limit 10"}, {"query": "I want to know what the 1945 fighter's label says.", "cypher": "match (:ENTITY{name:'1945 fighter'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "The first three Chinese names for 11 God Thieves are?", "cypher": "match (:ENTITY{name:'11 godfather'}) - [:Relationship{name:'Chinese name'}]-> (q) with q order by q.name return q.name limit 3"}, {"query": "What companies are there in Qingdao?", "cypher": "match (p:ENTITY{location:'Qingdao'}) return p.name"}, {"query": "What is the domestic and foreign editions of the Modern History Studies of Liu Xiaobo?", "cypher": "match (r:ENTITY{name:'Modern History Research'}) - [:Relationship{name:' Domestic issue'}]->(n) return n.name as name union all match (r:ENTITY{name:'Modern History Research'}) - [:Relationship{name:'International issue'}]->(m) return m.name as name"}, {"query": "The most famous attractions in the Welsh Grey Provincial Park are Hanken Falls and Dawson Falls, to name but two.", "cypher": "match (n:ENTITY{name:'Wells Grey Provincial Park'}) - [:Relationship{name:'Famous attractions'}]->(h) where h.name <> 'Hanken Falls' and h.name <> 'Dawson Falls' return distinct h.name limit 2"}, {"query": "I need to know about 18K gold X-rays by five things?", "cypher": "match (:ENTITY{name:'18K gold X pendant'}) --(h) with h order by h.name return h.name limit 5"}, {"query": "Which dialect is the official language of Beijing - Zhongshan - Zhongshan?", "cypher": "match (:ENTITY{name:'Beijing official language-\u671d\u5cf0\u7247-\u671d\u9633\u8bdd'}) <- [:Relationship{name:'dialect'}]-(x),(x) - [:Relationship{name:'transport'}]->(q) return distinct x.name,q.name"}, {"query": "What is the English name of Duncan?", "cypher": "match ((:ENTITY{name:'spanish'}) - [:Relationship{name:'spanish name'}]-> (n) return n.name"}, {"query": "What are the five labels of a young rain besides poetry and literature?", "cypher": "match (n:ENTITY{name:'bring a younger rain'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'poetry' and h.name <> 'literature' return distinct h.name limit 5"}, {"query": "Do you know which units are working with the 2012 Wu Zetian Concert?", "cypher": "Match (s) (h) return (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h (h) (h) (h) (h) (h (h"}, {"query": "Do you want to know about the three-tier relationship of the JMC Health Management Training Center?", "cypher": "match (n:ENTITY{name:'Tajikistan Health Management Training Centre'}) - [*1..3]->(x) where x.name<>'Tajikistan Health Management Training Centre' return distinct x.name"}, {"query": "I'm curious about the soundtracks of the movie. Can you name five?", "cypher": "match (n:ENTITY{name:'strongman'}) <--(q) - [:Relationship{name:'sounding'}]->(x) return distinct x.name limit 5"}, {"query": "What else do you know about Lan Xiao Chan, besides that it was founded in 2002?", "cypher": "match (:ENTITY{name:'Lanterns'}) - [*1..3]-(p) where p.name <> '2002' return p.name limit 5"}, {"query": "Tell me about Finnish Bj\u00f6rkman Jani in the third level of relationships?", "cypher": "match (n:ENTITY{name:'B?ckman Jani'}) - [*1..3]->(x) where x.name <> 'Finland' return distinct x.name"}, {"query": "Please tell me what games require graphics cards with 32M or more GeForce 2 3D acceleration cards?", "cypher": "match (:ENTITY{name:'GeForce2 or higher 3D acceleration card 32M displayed'}) <- [:Relationship{name:'graphics card'}]- (q) return q.name"}, {"query": "Find out who are the main characters in the six Korean movies.", "cypher": "Match (:ENTITY{name:'Korean film'}) <- [*]-(m), (m) - [:Relationship{name:'star'}]->(n) return m.name, n.name limit 6"}, {"query": "How much are Liu's books priced?", "cypher": "match (:ENTITY{name:'\u798f\u7965'}) <- [:Relationship{name:'author'}]- ((n) - [:Relationship{name:'pricing'}]->(q) return distinct q.name"}, {"query": "Did you mention that Beijing has a brick company?", "cypher": "match (p:ENTITY{location:'Beijing'}) return p.name The name of the match is"}, {"query": "Can you sum up your dream for me in no more than 10 words?", "cypher": "match (:ENTITY{name:'your dream'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "Can you tell me about the representative works of the National Tour of the City of Khartoum?", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}]-> (m) return distinct m.name"}, {"query": "What are the chemical elements of aluminum and what are the main uses?", "cypher": "match (:ENTITY{name:'peridot'}) - [:Relationship{name:'element symbol'}]->(n) return n.name as name union all match (:ENTITY{name:'peridot'}) - [:Relationship{name:'main use'}]->(m) return m.name as name"}, {"query": "Find out about the three types of flour dishes and introduce them.", "cypher": "match (:ENTITY{name:'flour'}) <- [:Relationship*]-(m), (m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What else do you know about the mountain besides the mountain range?", "cypher": "match (:ENTITY{name:'Mountain'}) -[*1..2]-(p) where p.name <> 'Mountains' return p.name limit 10"}, {"query": "What is the name of the cucumber?", "cypher": "match (:ENTITY{name:' sea cucumber'}) --(x) return distinct x.name"}, {"query": "I wonder what TV shows are on Farmers TV?", "cypher": "Match (:ENTITY{name:'Relationship'}) <- [:Relationship{name:'online play platform'}]- (m) return m.name"}, {"query": "Tell me five things about the position of acting deputy governor.", "cypher": "match (:ENTITY{name:' Deputy County Chief'}) --(h) return distinct h.name limit 5"}, {"query": "I'm not sure if you're familiar with the film, but I'm not sure.", "cypher": "match (:ENTITY{name:'Wau Steel'}) <- [:Relationship{name:'General Director'}]- (q) return q.name"}, {"query": "What are the novels that are included in Red Sleeve? Can you name two?", "cypher": "match (:ENTITY{name:' red sleeve added'}) <- [:Relationship{name:' connecting platform'}]- (x) return x.name limit 2"}, {"query": "Please tell me what kind of birds are in the Dimension?", "cypher": "match (:ENTITY{name:' multi-dimensional bird'}) --(p) return p.name order by p.name limit 10"}, {"query": "This person is a Maon, male, Han, born in September 1964, a native of Inner Mongolia, with a master's degree, entered the workforce in July 1986, and joined the Communist Party of China in November 1990.", "cypher": "match (n:ENTITY{name:'Mao, male, Han, born September 1964, native of Inner Mongolia, master's degree, entered the workforce in July 1986, joined the Communist Party of China in November 1990)"}, {"query": "Can you tell me the top 5 information about Ren Liyuan?", "cypher": "match (:ENTITY{name:'reputed'}) <- [Relationship{name:'known'}]- (n) return n.name order by n.name limit 5"}, {"query": "Please tell me what is the nature of evening dancing and what is the good of it?", "cypher": "match (:ENTITY{name:'night's dance'}) - [:Relationship{name:'bound'}]->(n) return n.name as name union all match (:ENTITY{name:'night's dance'}) - [:Relationship{name:'\u5c5e'}]->(m) return m.name as name"}, {"query": "How much is the global sales of Mario Kart 8?", "cypher": "match (:ENTITY{name:'Mario Racing 8'}) <- [:Relationship{name:' Chinese name'}]- ((m) - [:Relationship{name:' Global sales'}]->(q) return distinct q.name limit 1"}, {"query": "Can you list the 10 most representative works of people born on August 1, 1973?", "cypher": "match (:ENTITY{name:'August 1, 1973)) <- [:Relationship{name:'date of birth'}]-(n) - [:Relationship{name:'representative work'}]->(q) return distinct q.name limit 10"}, {"query": "Do you have any information about the most representative works of Liu?", "cypher": "match (:ENTITY{name:''}) - [:Relationship{name:'represents work'}]-> (h) return h.name order by h.name limit 10"}, {"query": "I wonder if there is a plant-based skin care brand named after you?", "cypher": "match (m:ENTITY{name:' plant skin care brand'}) <- [:Relationship{name:' definition'}]- (x) return x.name"}, {"query": "Do you have the content of the relationship names involved in the 3 tier commercial real estate planning blue book?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' Commercial real estate planning blue book'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "The type of website is tourism, study abroad help me find 10 of them.", "cypher": "match (:ENTITY{name:' travel, study abroad'}) <- [:Relationship{name:' website type'}]- (n) return n.name order by n.name limit 10"}, {"query": "I want an introduction to the three-layer relationship between the method of airtight testing of dangerous goods and airtight packaging published by China Standard Publishing.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name <> 'China Standard Publishing' return distinct x.name"}, {"query": "Do you know what All Source Chinese translation is?", "cypher": "The name of the file is the same as the name of the file in the source code."}, {"query": "I'm not going to give you more than 10 professors' achievements.", "cypher": "match (:ENTITY{name:'professor'}) <- [:Relationship{name:'profession'}]-(p),(p) - [:Relationship{name:'main achievement'}]->(h) return h.name order by h.name limit 10"}, {"query": "Can you tell us about the main achievements of this Chinese person?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(p) - [:Relationship{name:'main achievement'}]->(x) return x.name skip 1 limit 3"}, {"query": "What is the representative work of Arthur Shields?", "cypher": "match (:ENTITY{name:'Arthur Shields'}) - [:Relationship{name:'represents work'}]-> (h) return h.name order by h.name"}, {"query": "What are the books of Florida George and what are they classified as?", "cypher": "match (:ENTITY{name:'Florida George'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Tag{name:'tag'}]->(q) return distinct h.name,q.name"}, {"query": "Can you tell me the first three Chinese names of the Dark Souls of the Third Age?", "cypher": "match (:ENTITY{name:'Relationship{name:'Chinese name'}]-> (h) with h order by h.name return distinct h.name limit 3"}, {"query": "The Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, the Chinese Academy of Sciences, and the Chinese Academy of Engineering.", "cypher": "match (:ENTITY{name:'Land Road, academician of Chinese Academy of Sciences, economic geographer\u3002'}) <- [:Describe{name:'description'}]- ((h) - [:Relationship{name:'main achievements'}]->(x) return distinct x.name"}, {"query": "I want to publish the 2009 version of the 2010 Chinese Pharmaceutical Model and the other 5 pieces of information in the second layer of the book.", "cypher": "match (:ENTITY{name:'2010 Chinese pharmaceutical simulation and analysis'}) - [*1..2]-(p) where p.name <> '2009/11/1' return distinct p.name limit 5"}, {"query": "The article is about the political education and political science topics that are being studied in the two-tiered relationship.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'Jade' return distinct x.name"}, {"query": "What is the difference between the adjective and the adverb in poor villages like Yangyang?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'next meaning'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'next meaning'}]->(m) return m.name as name"}, {"query": "Where did the expression \"alcoholic hell\" come from?", "cypher": "match (:ENTITY{name:'drinking hell'}) - [:Relationship{name:'from where'}]->(m) return distinct m.name"}, {"query": "The Chinese with the number \"Ling\" are?", "cypher": "The name of the game is}, {"query": "Help me find a primate with a curly tail.", "cypher": "match (:ENTITY{name:'ringtail'}) <- [:Relationship{name:'ringtail'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='ringtail' return distinct m.name"}, {"query": "I'm not sure what the main achievements of Irene Ko are.", "cypher": "match (:ENTITY{name:'Irene ko'}) <- [:Relationship{name:' foreign language name'}]- ((q),(q) - [:Relationship{name:' major achievement'}]->(n) return n.name order by n.name limit 3"}, {"query": "The book was published by which publisher?", "cypher": "match (:ENTITY{name:'super'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'publisher'}]->(q) return distinct q.name"}, {"query": "The price of a concert is 255, 355, 455, 655, which concert?", "cypher": "match (:ENTITY{name:'255\u3001355\u3001455\u3001655 etc'}) <- [:Relationship{name:'concert ticket price'}]- (m) return m.name"}, {"query": "Has there come to you the news of the name of the rich man?", "cypher": "Match (:ENTITY{name:'Relationship{name:'alias'}]-> (m) return m.name skip 2"}, {"query": "Is the 09 Miss USA benefiting other brand attributes besides the smart game?", "cypher": "match (:ENTITY{name:'09 Selected American Games'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'wisdom game' return h.name"}, {"query": "The top 10 archaeological discoveries of 2010 in the country are so amazing, I would like to know who is the organizer?", "cypher": "match ((:ENTITY{name:'2010 Top 10 Archaeological Discoveries in the Country'}) - [:Relationship{name:' Host'}]-> (q) return q.name"}, {"query": "Please tell me which books have been published by author Ju-Jin? Please help me find three books, each published by which publisher?", "cypher": "match (:ENTITY{name:'Ju Akishun Kingdompin'}) <- [*]-(m), (m) - [:Relationship{name:'publishing house'}]->(n) return m.name, n.name limit 3"}, {"query": "What is the English name of the subject of the family?", "cypher": "match (:ENTITY{name:'cow'}) <- [:Relationship{name:'category'}]- ((n) - [:Relationship{name:'English name'}]->(m) return distinct n.name limit 1"}, {"query": "What does 1000 keyboard tricks mean for a label?", "cypher": "match (:ENTITY{name:'1000 keyboard tricks'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "What is the culture of the company that is on the 0912 website?", "cypher": "match ((:ENTITY{name:'0912 info network'}) - [:Relationship{name:'corporate culture'}]-> (h) return h.name"}, {"query": "Please list all the content of Sun Yat-sen.", "cypher": "match (:ENTITY{name:'Sun Yi Huan'}) --(q) return q.name skip 3 This is a list of all the different ways Sun Yi Huan is credited in the database."}, {"query": "Help me find the words next to the five foot words.", "cypher": "match (:ENTITY{name:'foot'}) <- [:Relationship{name:'part'}]-(m) return distinct m.name limit 5"}, {"query": "Help me find five pieces of music.", "cypher": "match (:ENTITY{name:'music'}) <- [:Tag{name:'label'}]-(m) return distinct m.name limit 5"}, {"query": "Can you tell me about the three actors who star in the movie \"Love at Dawn\"?", "cypher": "match (:ENTITY{name:'Love at dawn and sunrise'}) --(q) return distinct q.name limit 3"}, {"query": "Do you know how many Chinese government employees there are? Name three?", "cypher": "match (:ENTITY{name:'Chinese'}) <- [:Relationship{name:'Chinese'}]- (n) return n.name limit 3"}, {"query": "What is the main treatment for the 14 amino acid solution 800 in the hospital?", "cypher": "match ((:ENTITY{name:'14 amino acid injectable -800'}) - [:Relationship{name:' mainly used for '}]-> (n) return n.name"}, {"query": "There is an exhibition called \"Experimentation across borders\" and its name is what?", "cypher": "match (:ENTITY{name:' cross-border; experiment'}) <- [:Relationship{name:' exhibition theme'}]- (n) return n.name"}, {"query": "I'm curious about some of Rochelle Redfield's iconic works.", "cypher": "Match (:ENTITY{name:'Rochelle Redfield'}) - [:Relationship{name:'representing work'}]-> (x) return x.name skip 1"}, {"query": "Do you know how many 3D works of unknown voice actors are there?", "cypher": "match (:ENTITY{name:' unknown'}) <- [:Relationship{name:' three circles'}]-(x),(x) - [:Relationship{name:' sounding'}]->(p) return distinct p.name limit 3"}, {"query": "Are you playing Minecraft?", "cypher": "The game is called \"Minecraft\" and is called \"Minecraft\"."}, {"query": "Do you remember what the theme of the 2010 Mid-Autumn TV show was?", "cypher": "match ((n:ENTITY{name:'2010 Central Television Mid-Autumn Party'}) - [:Relationship{name:'subject'}]-> (x) return x.name"}, {"query": "What is the Chinese name of a novel called Swordspine Rockfish?", "cypher": "match (:ENTITY{name:'Swordspine rockfish'}) <- [:Relationship{name:'English name'}]- (m) return m.name"}, {"query": "Tell me what the hotline was founded on April 1, 2009?", "cypher": "match (:ENTITY{name:'April 1, 2009'}) <- [:Relationship{name:'time of opening'}]- (m) return distinct m.name"}, {"query": "Help me find three AAAA-rated sites.", "cypher": "match (:ENTITY{name:'AAAA level'}) <- [:Relationship{name:'site level'}]-(m) return distinct m.name limit 3"}, {"query": "Can you tell me what kind of relationship is covered by the passionate fighter in the three layers?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' passionate battleground owner'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "I want to know the complete nutrition book for 0-3 year old babies?", "cypher": "match (:ENTITY{name:'0~3 years old baby nutrition book'}) --(m) with m order by m.name return m.name"}, {"query": "Could you tell me what you know about the five professions of this Dutch-born person?", "cypher": "match (:ENTITY{name:'Netherlands'}) <- [:Relationship{name:'place of birth'}]- ((m) - [:Relationship{name:'profession'}]->(q) return q.name skip 1 limit 5"}, {"query": "What is the name of the school of the river otter?", "cypher": "match (:ENTITY{name:' river, river, river'}) <- [:Relationship{name:' not named'}]- ((m) return distinct m.name"}, {"query": "The attackers were also killed by the Taliban, who were also killed by the Taliban.", "cypher": "match (:ENTITY{name:' offensive weapon, defensive equipment'}) <- [:Relationship{name:' classification'}]- (p) return p.name"}, {"query": "Can you help me find two people who were born in Hebei's Lotus?", "cypher": "match (:ENTITY{name:'Hebei's Playground'}) <- [:Relationship{name:'birthplace'}]- ((x),(x) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name"}, {"query": "Tell me about the five pieces of information about the organization of Hangzhou Miwan Advertising Co., Ltd.", "cypher": "match (n:ENTITY{name:'Hangzhou Miwan Advertising Co. Ltd'}) - [*]->(x) where x.name <> 'organizing agency' return distinct x.name limit 5"}, {"query": "What is the origin of the name of the dish?", "cypher": "match (:ENTITY{name:'Relationship{name:'category'}]-> (m) return distinct m.name"}, {"query": "The first is that the scientists who graduated from the University of Hebei have a medical degree.", "cypher": "match (:ENTITY{name:'Hebei Medical College'}) <- [:Relationship{name:'Graduate College'}]-(m), (m) - [:Relationship{name:'Profession'}]->(n) where n.name='Scientist' return m.name"}, {"query": "I would like to ask you about the 13 books of the People's University of China: The relationship between the two layers of the literature curriculum?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'13' return distinct x.name"}, {"query": "Can anyone help me find two national champions for Lanzhou?", "cypher": "match (:ENTITY{name:'\u5170\u5dde'}) <- [:Relationship{name:'\u7c4d\u8d2f'}]-(x),(x) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "What are the five famous places that are open from 07:00 to 17:30?", "cypher": "match (:ENTITY{name:'07:00~17:30'}) <- [:Relationship{name:'open hours'}]- ((x),(x) - [:Relationship{name:'famous attractions'}]->(m) return distinct m.name limit 5"}, {"query": "Can you tell me who is the voice of Jaune Arc? Can you name the first five?", "cypher": "match (:ENTITY{name:'Jaune Arc'}) - [:Relationship{name:'sounding'}]-> (m) return m.name order by m.name limit 5"}, {"query": "Do you know which relationship names are included in the 3 layers of the Haze?", "cypher": "The following pages link to The Unknown:"}, {"query": "Where are the six seasonal picnic spots listed?", "cypher": "match (:ENTITY{name:' four seasons are available'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' geographical location'}]->(n) return m.name,n.name limit 6"}, {"query": "Find me the location of the three Da Nang International Airports, which are the famous attractions?", "cypher": "match (:ENTITY{name:'Da Nang International Airport'}) <--(m), (m) - [:Relationship{name:'Famous attractions'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What do you know about the publication, the Encyclopedia of Early Childhood Education 0-6?", "cypher": "match (:ENTITY{name:'0~6 Early Childhood Encyclopedia'}) --(n) with n order by n.name where n.name <> ' publications' return n.name"}, {"query": "Do you know the 5 facts about the chemical 2-hydroxy-3-hydroxy-methyl acetate?", "cypher": "match (n:ENTITY{name:'2-hydroxy-3-hydroxy-methylmethacrylate'}) - [*]->(x) where x.name <>'2-hydroxy-3-hydroxy-methylmethacrylate' is a chemical compound with the molecular formula C11H8O2S\u3002' return distinct x.name limit 5"}, {"query": "I would like to know what other identity is there besides the personality tag?", "cypher": "match (:ENTITY{name:'Lang-shan'}) --(m) with m order by m.name where m.name <> 'person' return distinct m.name limit 2"}, {"query": "The system is related to the records of Beijing Zhuhai Investment Limited?", "cypher": "match (n:ENTITY{name:'Beijing Huizhou Investment Co. Ltd'}) where n is not null return 1"}, {"query": "The first 10 items are the most popular in the world, and the first 10 are the most popular in the world.", "cypher": "match (:ENTITY{name:'floating city giant'}) --(n) return n.name order by n.name limit 10"}, {"query": "I want to know the total number of Longcheng businesses.", "cypher": "match (p:ENTITY{location:' Long Spring'}) return count ((p) and the number of matches"}, {"query": "Please help me find out the names of the four species of fish in the family of the beaked sea snails.", "cypher": "match (:ENTITY{name:'spoon'}) <- [*]-(m), (m) - [:Relationship{name:'spoon'}]->(n) return m.name, n.name limit 4"}, {"query": "What news events were reported on the 23rd?", "cypher": "match (:ENTITY{name:' news event'}) <- [:Relationship{name:' concept'}]- (h) return h.name"}, {"query": "Where can I find the Rainforest Company?", "cypher": "match (p:ENTITY{name:' Rainforest Company'}) return p.location The name of the company is"}, {"query": "What is the maximum storage capacity of the Quintin Scalar i40 ((LSC14-CH5J-219H)?", "cypher": "match (:ENTITY{name:'Quinn Scalar i40(LSC14-CH5J-219H) is a tape library with a maximum storage capacity of: 37500GB\u3002'}) <- [:Describe{name:'description'}]- ((q) - [:Relationship{name:'Maximum storage capacity'}]->(m) return distinct m.name"}, {"query": "I want to know what the three layers of the relationship that Maya Babi is involved in are?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations"}, {"query": "What is the personal information of Levite Ohad, the five-time world champion?", "cypher": "match (n:ENTITY{name:'Levitte Ohad'}) - [*]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "What are the symptoms of plant diseases?", "cypher": "match (:ENTITY{name:' plant disease'}) - [:Relationship{name:' disease'}]->(m) return distinct m.name"}, {"query": "Can you recommend 5 songs that are in Mandarin?", "cypher": "match (:ENTITY{name:'Mandarin'}) <- [:Relationship{name:'Language of song'}]- (q) return distinct q.name limit 5"}, {"query": "Can you find 10 animals with two outlines? Please help me introduce them.", "cypher": "match (:ENTITY{name:' two-lined'}) <- [*]-(m), (m) - [:Describe{name:' description'}]->(n) return distinct m.name, n.name limit 10"}, {"query": "Which people have the same weight as Andrey Yedlin and what are their labels? Please list them in order of number of labels.", "cypher": "The following is a list of the most commonly used and used data types in the world:"}, {"query": "What chemical is Beilstein's number 1764476?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you describe the contents of the five-tier relationship related to the Hu clan?", "cypher": "match (n:ENTITY{name:'Hu clan'}) - [*1..5]->(x) where x.name<>'Hu clan' return distinct x.name"}, {"query": "Help me find 10 religious figures from the Qing Dynasty.", "cypher": "match (:ENTITY{name:'Chang Dynasty'}) <- [:Relationship{name:'at the time'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='religious figure' return distinct m.name limit 10"}, {"query": "What are the different types of poems in the genre of science fiction? What are the different labels? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'science fiction'}) - [:Relationship{name:'style'}]->(:ENTITY) <- [:Relationship{name:'style'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you tell me the name and surname of Liang Sambo in English?", "cypher": "match (:ENTITY{name:'Liang Shanber'}) - [:Relationship{name:'foreign language name'}]->(n) return n.name as name union all match (:ENTITY{name:'Liang Shanber'}) - [:Relationship{name:'alpha name'}]->(m) return m.name as name"}, {"query": "The book is published by a group of young writers in the city of Gyumri, which is also known as the \"Gumrah\".", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'publisher'}]->(q) return distinct q.name"}, {"query": "The question is, which category of theory is the universal resource theory?", "cypher": "match (:ENTITY{name:'theory of the whole resource'}) <- [:Relationship{name:'theory of belonging'}]- (n) return distinct n.name"}, {"query": "The first is the medical field, which is a field of study that is not only a medical field but also a medical field.", "cypher": "match (:ENTITY{name:'1-'}) --(n) with n order by n.name where n.name <> 'medicine' return n.name limit 10"}, {"query": "The Big Four has a representation of the chicken?", "cypher": "match (:ENTITY{name:'Big four'}) - [:Relationship{name:'representing work'}]-> (m) return m.name skip 1"}, {"query": "The people who are representing the work of the people who are climbing the mountains in the mountains?", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}}) - (p) return p.name skip 1"}, {"query": "List five books by the management, and tell me when they were published.", "cypher": "match (:ENTITY{name:'Manage books'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' time of publication'}]->(n) return m.name, n.name limit 5"}, {"query": "What is the word for Kirchhoff's law? Who proposed it?", "cypher": "match (:ENTITY{name:'Kirhof's law'}) - [:Relationship{name:'other name'}]->(n) return n.name as name union all match (:ENTITY{name:'Kirhof's law'}) - [:Relationship{name:'proponent'}]->(m) return m.name as name"}, {"query": "Can you list the four major faculties of Beijing's industrial schools that are not mechanical and chemical?", "cypher": "match (n:ENTITY{name:'Beijing Industrial School'}) - [:Relationship{name:'main faculty'}]->(h) where h.name <> 'mechanical' and h.name <> 'chemical' return distinct h.name limit 4"}, {"query": "Can you recommend some fun 8.2M software to me?", "cypher": "Match (:ENTITY{name:'8.2M'}) <- [:Relationship{name:'size'}]- (h) return h.name The name of the match is the same as the name of the match."}, {"query": "Which people have the same birthday as Kirilenko Denis, and what tags do they each have? Please list them in order of number of tags, in order of number of tags.", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Z"}, {"query": "Do you know about the South Korean movie theater? What information is there about the other 10 locations in the 2nd tier besides Linzhou?", "cypher": "match (:ENTITY{name:'mirror shadow fascination'}) - [:Relationship*1..2]->(p) where p.name <> 'gold addict' return p.name limit 10"}, {"query": "What is the meaning of the '09 Barzilai T-Show star'?", "cypher": "match (:ENTITY{name:'09 Barzilai T-Show star'}) --(p) with p order by p.name return p.name"}, {"query": "The following is a list of all the works by Ro in Guayaquil, Guanajuato, Guanajuato.", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name <>'\u4e07\u91cc' return distinct x.name"}, {"query": "What is the level of protection of the Pomodoro?", "cypher": "match (:ENTITY{name:'Relationship{name:'protection level'}]->(m) return distinct m.name"}, {"query": "The title of the film is \"The Master of the Flying Machine\" and the title of the film is \"The Master of the Flying Machine\".", "cypher": "match (:ENTITY{name:'1944 Master of the Flying Dutchman'}) --(q) with q order by q.name where q.name <> 'entertainment work' return q.name limit 3"}, {"query": "Who sang the last song of the bandit?", "cypher": "match (:ENTITY{name:' last time a rogue'}) <- [:Relationship{name:' representing work'}]- ((m) return distinct m.name"}, {"query": "And I was asked to say, \"What is this substance called R-2-methyl-CBS-vibrate?\"", "cypher": "match (:ENTITY{name:'(R)-2-methyl-CBS-vibrate'}) --(h) with h order by h.name where h.name <> '(R) -(+)-2-Methyl-CBS-oxazaborolidinesolution' return h.name"}, {"query": "Tell me about a piece of work by Jack Chan that has a three-tier relationship?", "cypher": "match (n:ENTITY{name:'mining seat one'}) - [*1..3]->(x) where x.name<>'poker house' return distinct x.name"}, {"query": "Did you have trouble reading the app for Android Cookie Singing 2 for the software introduction of the no less than two-layer relationship?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'Relationship is an Android app\u3002' return distinct x.name"}, {"query": "Can you find 5 facts about the footballer Sinzov Sergey?", "cypher": "match (n:ENTITY{name:'Shinzuov Sergey'}) - [*]->(x) where x.name <> 'footballer' return distinct x.name limit 5"}, {"query": "The following information is provided on the technical regulations for the management of the Huai'an and Huai'an artificial forests published by the State Forestry Department:", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name <> 'National Forestry Bureau' return distinct x.name"}, {"query": "I wonder what the name of the conflict that took place on May 20, 2007 is?", "cypher": "match (:ENTITY{name:'May 20, 2007'}) <- [:Relationship{name:'time of explosion'}]- (q) return q.name"}, {"query": "What is the rated voltage of this 12V10A power adapter you use?", "cypher": "match ((:ENTITY{name:'12V10A power adapter'}) - [:Relationship{name:'rated voltage'}]-> (h) return h.name"}, {"query": "Can you list the five characteristics of the SMG3000?", "cypher": "match (:ENTITY{name:'SMG3000'}) <--(x) - [:Relationship{name:'attributes'}]->(n) return distinct n.name limit 5"}, {"query": "I wonder if the State Department has made any specific reports on the implementation of these, can you name three?", "cypher": "match (:ENTITY{name:'Department of State'}) <- [:Relationship{name:'department'}]- (h) return h.name limit 3"}, {"query": "In addition to literature, I would like to know three things about the use of electronic technology in professional systematic construction practices and research.", "cypher": "match (:ENTITY{name:' Electronic technology application professional systematization of construction practice and research'}) --(m) with m order by m.name where m.name <> 'literary work' return distinct m.name limit 3"}, {"query": "I would like to know what the exam process is for the written test?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What are the most representative works of people born in 1865?", "cypher": "match (:ENTITY{name:'1865'}) <- [:Relationship{name:'date of birth'}]-(n),(n) - [:Relationship{name:'representative work'}]->(x) return distinct x.name limit 1"}, {"query": "What ethnicity are the Chuvash?", "cypher": "match (:ENTITY{name:'Chuvash'}) - [:Relationship{name:'ethnicity'}]->(m) return distinct m.name"}, {"query": "The three professions that graduates of Sichuan University are engaged in", "cypher": "match (:ENTITY{name:' University of Sichuan'}) <- [:Relationship{name:' Graduate School'}]-(n) - [:Relationship{name:' Profession'}]->(q) return distinct q.name limit 3"}, {"query": "Can you please list a computer-specific noun?", "cypher": "match (:ENTITY{name:'exclusive name in the computer domain'}) <- [:Relationship{name:'meaning'}]- (h) return distinct h.name"}, {"query": "And you told me about the 18 switch?", "cypher": "match (:ENTITY{name:'18 switched net'}) --(m) with m order by m.name return m.name"}, {"query": "Can you provide me with 10 books translated by Lee Yongping?", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of the Wild"}, {"query": "Which electronic operating systems are running Android 4.2? Name 10?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What are the names of the five names of the five representative works of art that are the ultimate witnesses to the real world, the Nazi murderers, the sleepers?", "cypher": "match (:ENTITY{name:'s ultimate witness's true world's Nazi murderer's sleeper's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother's mother"}, {"query": "What is the shortest relationship path between the pressure relief pump and the sillipari within the two layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Cyrillary'}) - [:Relationship*..2]-(b:ENTITY{name:'Cyrillary'})) return count ((p))"}, {"query": "I'm going to tell you about the High Sierra Red Fox, and I think you can tell me three things.", "cypher": "match (p:ENTITY{name:'High Sierra Red Fox'}) --(x) return distinct x.name limit 3"}, {"query": "Can you list two books that are simple Chinese?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Can I have a representative work of the Yangtze language please?", "cypher": "match (:ENTITY{name:'space'}) <- [:Relationship{name:'space'}]-(n),(n) - [:Relationship{name:'space'}]->(q) return q.name order by q.name limit 1"}, {"query": "Is there any other profession for David Icke as a writer and speaker?", "cypher": "match (:ENTITY{name:'David Icke'}) - [:Relationship{name:'profession'}]-> (m) with m order by m.name where m.name <> 'writer and speaker' return m.name"}, {"query": "I would like to know what else is there about Ling Zhen besides Chinese civil engineers? Help me find 20 information on 2 levels related to this person.", "cypher": "match (:ENTITY{name:'Lingming'}) - [*1..3]->(p) where p.name <> 'Chinese civil engineer' return p.name limit 20"}, {"query": "I'm going to do an experiment with 2-hydro-4-hydroxybutyric acid, and you tell me its CAS NO.", "cypher": "match ((:ENTITY{name:'2-Cyan-4-Cyanide'}) - [:Relationship{name:'CASNO'}]-> (n) return n.name"}, {"query": "The man was born in April 1962 and his profession is known to you. Can you name three?", "cypher": "match (x:ENTITY{name:'April 1962'}) <- [:Relationship{name:'date of birth'}]-(m),(m) - [:Relationship{name:'occupation'}]->(q) return q.name order by q.name limit 3"}, {"query": "Who is the CEO of the US advertising platform?", "cypher": "match (:ENTITY{name:'same advertising platform'}) <- [:Relationship{name:'represents work'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='CEO' return distinct m.name"}, {"query": "Can you find the first three Chinese names with red in them?", "cypher": "match (:ENTITY{name:' a little bit of red'}) - [:Relationship{name:' Chinese name'}]-> (h) with h order by h.name return h.name limit 3"}, {"query": "Do you know which events are organized in the form of exhibitions?", "cypher": "match (:ENTITY{name:'exhibition'}) <- [:Relationship{name:'activity form'}]- (p) return distinct p.name"}, {"query": "The name of the occupation of the three men?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(q) - [:Relationship{name:'occupation'}]->(n) return n.name order by n.name limit 3"}, {"query": "I want to publish the other 5 information in the 3rd layer of this book Semiconductor Physics and Devices by Mechanical Industry Publishing.", "cypher": "match (:ENTITY{name:' semiconductor physics and devices'}) - [*1..3]-(p) where p.name <> 'Machinery industry publisher' return distinct p.name limit 5"}, {"query": "What is the shortest distance between the village of Hohokyu and the village of Yulguy within the two levels?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' at home bay village'}) - [*..2]-(b:ENTITY{name:'\u7389\u6e7e\u6751'})) return count ((p)"}, {"query": "What are the onset and symptoms of staining of the cyst?", "cypher": "match (:ENTITY{name:'colorant glandular disease'}) - [:Relationship{name:'commonly occurring site'}]->(n) return n.name as name union all match (:ENTITY{name:'colorant glandular disease'}) - [:Relationship{name:'commonly occurring site'}->(m) return m.name as name"}, {"query": "Excellence Unit for Contemporary Education Research in China (2013)", "cypher": "match (:ENTITY{name:'China's Unit of Excellence for Contemporary Education Research (2013 year) '}) <- [:Relationship{name:' Major award'}]- (n) return distinct n.name"}, {"query": "Can you tell me the name of a story based on a folk myth?", "cypher": "match (:ENTITY{name:'folklore story'}) <- [:Relationship{name:'source'}]- (h) return h.name"}, {"query": "What is the analyzer for the measurement range of 0.0 to 50.0 mg/L PO4?", "cypher": "The following is a list of the most commonly used measurement methods:"}, {"query": "The company is a subsidiary of the Jiangsu Yilai Hotel Management Limited.", "cypher": "match (n:ENTITY{name:'Jiangsu Yi Guests Hotel Management Limited'}) - [*1..3]->(x) where x.name<>'Limited liability company' return distinct x.name"}, {"query": "What kind of system is required to play the 16th anniversary edition of the game?", "cypher": "match (:ENTITY{name:' electronic wax 16th anniversary edition'}) <- [:Relationship{name:' Chinese name'}]-(n) - [:Relationship{name:' system request'}]->(p) return distinct p.name"}, {"query": "Please, who is involved in filtering any historical stories that are in this post?", "cypher": "match (:ENTITY{name:'Please any historical story please'}) --(p) return distinct p.name"}, {"query": "What other material can be used to make the signature rolls besides nonwovens and silk?", "cypher": "match (:ENTITY{name:'signature roll'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'material'}]->(x) where x.name <> 'without fabric, silk' return distinct x.name limit 1"}, {"query": "Tell me what the skills of the fire witch are?", "cypher": "match (:ENTITY{name:'Firefather Witch'}) - [:Relationship{name:'skill'}]-> (n) return n.name order by n.name limit 5"}, {"query": "I'm not sure if you're familiar with the name of this guy, but I'm sure you'll be able to relate to him.", "cypher": "match (:ENTITY{name:'Danny Bower'}) --(q) return distinct q.name"}, {"query": "What hardness standards does the state require 14nicr10 to meet?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What is the concept of mixing?", "cypher": "match (:ENTITY{name:' mixed recording'}) <- [:Relationship{name:' Chinese name'}]-(p) - [:Relationship{name:' concept'}]->(n) return distinct n.name limit 1"}, {"query": "Please answer me to the RWBY team, who is the voiceover artist for the Verner?", "cypher": "match (p:ENTITY{name:'RWBY team member, Verner'}) <- [:Relationship{name:'identity'}]-(n),(n) - [:Relationship{name:'voice'}]->(m) return distinct m.name"}, {"query": "Do you know of another label for starch besides medicine?", "cypher": "match (:ENTITY{name:'star'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'medicine' return p.name limit 1"}, {"query": "Where did egg rolls come from? What are the main ingredients?", "cypher": "match (:ENTITY{name:'egg pack rice[Japanese family staple]'}) - [:Relationship{name:'source'}]->(n) return n.name as name union all match (:ENTITY{name:'egg pack rice[Japanese family staple]'}) - [:Relationship{name:'main ingredient'}]->(m) return m.name as name"}, {"query": "Can you recommend a few romance novels?", "cypher": "match (:ENTITY{name:'love'}) <- [:Relationship{name:'novel type'}]- (q) return distinct q.name"}, {"query": "Help me find a word to describe famous people and important people.", "cypher": "match (:ENTITY{name:'Famous and important people'}) <- [:Relationship{name:'interpretation'}]-(m) return distinct m.name"}, {"query": "Could you please share 5 personal details about Bodanu Variu, Romanian footballer?", "cypher": "match (n:ENTITY{name:'Bodanu Variu'}) - [*]->(x) where x.name <>'Bodanu Variu, Romanian footballer\u3002' return distinct x.name limit 5"}, {"query": "Help me find three companies that are in the gold industry.", "cypher": "match (:ENTITY{name:'metallic gold'}) <- [:Relationship{name:'scale of operations'}]-(m) return distinct m.name limit 3"}, {"query": "Which 20 hotels are rated as five stars?", "cypher": "match ((:ENTITY{name:'five star'}) < - [:Relationship{name:'star'}]-> (m) with m order by m.name limit 20 return m.name"}, {"query": "When was Kido-Momo Unified Primary School founded? Where is it located? What kind of school is it?", "cypher": "match (:ENTITY{name:'K\u68a8\u6728\u8054\u5408\u5c0f\u5b66'}) - [:Relationship{name:'Relationship time'}]->(n) return n.name as name union all match (:ENTITY{name:'K\u68a8\u6728\u8054\u5408\u5c0f\u5b66'}) - [:Relationship{name:'Region'}]->(m) return m.name as name union all match (:ENTITY{name:'\u514b\u68a8\u6728\u8054\u5408\u5c0f\u5b66'}) - [:Relationship{name:School type'}->(r) return r.name:'Relationship{name:Relationship} as name"}, {"query": "Can you tell me which major departments are in the School of Publishing at Zhejiang University of Commerce and Industry?", "cypher": "match (:ENTITY{name:'Publishing major at Zhejiang University of Commerce and Industry'}) - [:Relationship{name:'Main Faculty'}]-> (n) return n.name order by n.name"}, {"query": "Do you know the color of my holy way and which works are the same? what are the names of the labels of each of these works? but can you sort them from small to large by the number of labels of each work?", "cypher": "match (n:ENTITY{name:'My holy way'}) - [:Relationship{name:'color'}]->(:ENTITY) <- [:Relationship{name:'color'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "What is the name of the type of economy where data is owned by the state?", "cypher": "match (:ENTITY{name:' a type of economic entity owned by the country'}) --(x) return distinct x.name"}, {"query": "Can you explain what a $0 machine is?", "cypher": "match (:ENTITY{name:'0\u5143\u8d2d\u4e70\u673a'}) --(n) with n order by n.name return n.name"}, {"query": "Who are you representing?", "cypher": "match (:ENTITY{name:'Hey you're such a guy'}) <- [:Relationship{name:'represents work'}]- (h) return h.name order by h.name"}, {"query": "Tell me, what kind of relationship is involved in the three layers of the Death Star?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "The 2011 edition of 00537 Modern Chinese Literature History should be labeled as such?", "cypher": "match (:ENTITY{name:'00537 Chinese modern literature history [2011 edition]'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "Please list the names of the people who work in the same profession as Louise. What are their labels?", "cypher": "match (n:ENTITY{name:'Switzerland'}) - [:Relationship{name:'profession'}]->(:ENTITY) <- [:Relationship{name:'profession'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "I would like to know what types of relationships are in the three layers of the knowledge management standard?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' knowledge management standard'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "The 7th National Roasting Exhibition 2011 in Beijing was held in which exhibition venue?", "cypher": "match ((:ENTITY{name:'2011 7th National [Beijing] Baking Exhibition'}) - [:Relationship{name:'Exhibition venue'}]-> (q) return q.name"}, {"query": "Can you tell me how to say this thing in the dialects of Liao, Shui, Shui, Gansu, and Plain? Can you tell me three?", "cypher": "match (:ENTITY{name:'Relationship:'dialect'}-(q) - [:Relationship{name:'alias'}->(x) return x.name order by x.name limit 3"}, {"query": "I need you to tell me about the kind of relationship that Beijing Argos have in the two levels, okay?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Beijing arrogant'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you tell me what tournaments were held from 18 to 25 May 2014?", "cypher": "match (:ENTITY{name:'May 18 to 25, 2014'}) <- [:Relationship{name:'time of holding'}]- (m) return m.name"}, {"query": "Check out the profile of the three-tiered relationship of sports personality Liu Weiwei.", "cypher": "match (n:ENTITY{name:'Weiwei'}) - [*1..3]->(x) where x.name <> 'sportsman' return distinct x.name"}, {"query": "Do you know the Chinese name for a night of drugs?", "cypher": "match (:ENTITY{name:'One night drug addict'}) - [:Relationship{name:'Chinese name'}]-> (h) with h order by h.name return h.name"}, {"query": "Please update the query software on July 15, 2016 what is it?", "cypher": "match (:ENTITY{name:'2016-7-15'}) <- [:Relationship{name:'updated time'}]- (n) return distinct n.name"}, {"query": "Do you know what the main award is for the institution founded in 1939?", "cypher": "match (:ENTITY{name:'1939'}) <- [:Relationship{name:'time of founding'}]- ((x),(x) - [:Relationship{name:'main award'}]->(q) return distinct q.name limit 1"}, {"query": "Can you list 14 novels that are printed on paper?", "cypher": "match (:ENTITY{name:'Relationship{name:'paper'}) - (n) return n.name limit 14"}, {"query": "What CAS number do I need to check the status of the worm?", "cypher": "Match ((:ENTITY{name:'wormhole'}) - [:Relationship{name:'CAS login number'}]-> (n) return n.name"}, {"query": "Can you tell me what the relationship is between the two layers of the glass that are involved?", "cypher": "The following pages link to The Unknown:"}, {"query": "Can you find out all the personal information about Liu Yonglin, a Yangtze man?", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name<>'Clan' return distinct x.name"}, {"query": "Can you tell us about the main achievements of the party?", "cypher": "match (:ENTITY{name:'chengming'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'main achievements'}]->(n) return n.name order by n.name limit 1"}, {"query": "The first thing I did was to find out the properties of all the aromatic beans.", "cypher": "match (:ENTITY{name:'sweet potatoes'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "Can you tell me what other professions this person who graduated from Zhejiang Master's University has? Can you name the top three?", "cypher": "match (:ENTITY{name:'Zhejiang Teachers' University'}) <- [:Relationship{name:' Graduate School'}]-(m),(m) - [:Relationship{name:' Career'}]->(p) return p.name skip 4 limit 3"}, {"query": "I want to know everything about the dream of prosperity.", "cypher": "match (n:ENTITY{name:'Blooming Dream'}) --(x) return x.name"}, {"query": "I wonder which company has the slogan \"Honest business, service first\"?", "cypher": "match (:ENTITY{name:'Integrity business, service first\u3002'}) <- [:Relationship{name:'company slogan'}]- (x) return x.name"}, {"query": "This person is described as Zhou Liang-ying (Selina Chow, born 25 January 1945), born in Hong Kong, a native of Guangdong Province, a prominent Hong Kong television personality, former member of the Executive Council, former member of the Legislative Assembly for the New West Constituency, former vice-chairman of the Liberal Party. Can you name her three main achievements?", "cypher": "Selina Chow (born 25 January 1945), born Selina Chow, is a Hong Kong television personality, former member of the Executive Council, former Member of Parliament for the New West Legislative Assembly, former deputy chairperson of the Liberal Party."}, {"query": "Do you know what kind of job Xu Xiaohua [a member of the Party Committee, Deputy Secretary, Director of the Guizhou Provincial Maritime Administration] has besides being a Deputy Secretary and Director?", "cypher": "match (n:ENTITY{name:'\u8bb8\u534e[Guizhou Province Local Maritime Bureau Party Committee Member, Deputy Secretary, Director]'}) - [:Relationship{name:'profession'}]->(h) where h.name <> 'Deputy Secretary' and h.name <> 'Deputy Director' return distinct h.name limit 1"}, {"query": "You look at the instructions for the 12V7A power adapter, is there any introduction on what the rated voltage is?", "cypher": "match ((:ENTITY{name:'12V7A power adapter'}) - [:Relationship{name:'rated voltage'}]-> (x) return x.name"}, {"query": "Do you know the area and population of Zhejiang?", "cypher": "The name of the country is the same as the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the name of the country of origin of the country of origin of the name of the country of origin of the country of origin of the name of the country of origin of the country of origin of the country of origin of the name of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of origin of the country of origin of the country of origin of the country of origin of the country of origin of the country of origin of origin of the country of origin of the country of origin of the country of origin of the country of origin of origin of the country of origin of the country of origin of the country of origin of the country of origin of origin of the country"}, {"query": "Tell me about the six teachers, where were they born?", "cypher": "match (:ENTITY{name:'teacher'}) <- [*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name, n.name limit 6"}, {"query": "Can you recommend me 9 types of wallpaper beautification software?", "cypher": "match (:ENTITY{name:' wallpaper embellishment class'}) <- [:Relationship{name:' software type'}]- (h) return h.name limit 9"}, {"query": "What is your profession?", "cypher": "match (:ENTITY{name:''}) <--(m),(m) - [:Relationship{name:'profession'}]->(n) return distinct n.name"}, {"query": "What other name is there for a Buddhist monk besides the name of the Longbottomed?", "cypher": "match (:ENTITY{name:'Buddhism'}) <- [:Relationship{name:'faith'}]-(h) - [:Relationship{name:'alias'}]->(x) where x.name <> 'Lambobas' return distinct x.name limit 1"}, {"query": "What other information can be found besides entertainment works?", "cypher": "match (:ENTITY{name:'FATE fellow person must die'}) --(m) with m order by m.name where m.name <> 'entertainment work' return distinct m.name limit 2"}, {"query": "What is the shortest route between the two levels of Tronlong Village and Ka-Kang Village?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Translong village [translong township under the Liaoning village of Liaoning county of Kunming city]'}) -[*..2]-(b:ENTITY{name:'Ka Airport [transportation area under the Liaoning village of Umun county of Yunnan province]'})) return count ((p))"}, {"query": "Can you tell me what the audit number of the declaration of the Institute of Wheat of the Shaanxi University of Agricultural Sciences is?", "cypher": "match (:ENTITY{name:'Wheat Institute of the Shaanxi University of Agricultural Sciences'}) <- [:Relationship{name:'declared unit'}]- ((m) - [:Relationship{name:'audited number'}]->(q) return distinct q.name limit 1"}, {"query": "Can you recommend a book for me that the editor recommends for cotton textile repair workers?", "cypher": "match (:ENTITY{name:'Technical reading for cotton textile repair workers'}) <- [:Relationship{name:'recommended by editor'}]- (m) return m.name"}, {"query": "What are the labels around the 3D sound?", "cypher": "match (:ENTITY{name:'3d triangular surrounding sound'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "Tell me about the joint search and rescue exercise in 2010 on both sides of the strait?", "cypher": "match (:ENTITY{name:'2010 Joint search and rescue exercise at sea on both sides of the Strait'}) --(x) with x order by x.name return x.name"}, {"query": "The history and publications are the labels of the English-language version of Li's biography, which other two?", "cypher": "match (n:ENTITY{name:'s official name'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'history' and h.name <> 'publication' return distinct h.name limit 2"}, {"query": "I am organizing a company introduction to the three-tier relationship of the agency Yonglong Tighting Co. Ltd. in the city of Sa River.", "cypher": "match (n:ENTITY{name:'Yonglong Tighting Co. Ltd. of Shanxi City'}) - [*1..3]->(x) where x.name<>'organization' return distinct x.name"}, {"query": "The Treaty of Yue was signed in which year?", "cypher": "match (n:ENTITY{name:'Relationship{name:' time of signing'}) ->(h) return substring ((h.name, 0,5)"}, {"query": "Do you know who the diplomats of the modern Chinese historians are?", "cypher": "match (:ENTITY{name:'Chinese modern historian'}) <- [:Relationship{name:'profession'}]- ((m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='diplomatic' return m.name"}, {"query": "Which law firms are under the jurisdiction of the Beijing Municipal Court and which law firms have the same labels? List them in order of number of labels.", "cypher": "match (n:ENTITY{name:'Beijing City Hope Law Firm'}) - [:Relationship{name:'Department of Justice'}]->(:ENTITY) <-[:Relationship{name:'Department of Justice'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC "}, {"query": "The book is a newly published book I fell in love with a girl: a pre-marriage guide for teenagers.", "cypher": "match ((:ENTITY{name:'I fell in love with a girl: a girl's guide to marriage'}) - [:Relationship{name:' publisher'}]-> (n) return n.name"}, {"query": "What are the most common types of dogs? Name 5 of them.", "cypher": "match (n:ENTITY{name:'dog family'}) <-[:Relationship{name:'dog family'}]- (h) return h.name limit 5"}, {"query": "Can you find the first name in Chinese from the photographer's legend?", "cypher": "match (:ENTITY{name:'Legend of the photographer'}) - [:Relationship{name:'Chinese name'}]-> (n) with n order by n.name return n.name limit 1"}, {"query": "Can you list some of the important events that have happened in the Star Wars franchise?", "cypher": "match (p:ENTITY{name:'Alienation of the Stars'}) <- [:Relationship{name:'participation in the event'}]- ((m) - [:Relationship{name:'important event'}]->(h) return distinct h.name"}, {"query": "What is the characteristic of the front tire besides the light yellow-orange powder and slightly peculiar smell?", "cypher": "match (:ENTITY{name:'car front'}) --(q) with q order by q.name where q.name <> 'light yellow orange powder, slightly peculiar smell\u3002' return q.name"}, {"query": "Can you find the five universities in Hunan? Where are they all?", "cypher": "match (:ENTITY{name:'Hunan Long Sands'}) <--(m), (m) - [:Relationship{name:'school address'}]->(n) return distinct m.name,n.name limit 5"}, {"query": "The main award of which Shanghai primary school is the City Green School?", "cypher": "match (:ENTITY{name:'Relationship{name:'main award'}}) - (m) return distinct m.name"}, {"query": "Help me find three scientists who graduated from Wuhan University.", "cypher": "match (:ENTITY{name:'Wuhan University'}) <- [:Relationship{name:' Graduate School'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='scientist' return distinct m.name limit 3"}, {"query": "Do you know which are the most representative works of the graduates of the WU? Name three?", "cypher": "match (:ENTITY{name:'Washington State University'}) <- [:Relationship{name:' Graduate School'}]- ((h) - [:Relationship{name:' Representative work'}]->(p) return distinct p.name limit 3"}, {"query": "What is the name of the conference in Beijing to further implement the eight-word policy of adjusting, consolidating, enriching and improving the uranium?", "cypher": "match (:ENTITY{name:'the eight-letter policy for further implementing the adjustment, consolidation, enrichment, and improvement of the branding'}) <- [:Relationship{name:'main achievements'}]-(m), (m) - [:Relationship{name:'location'}]->(n) where n.name='Beijing' return distinct m.name"}, {"query": "Can you tell me about the 10 most expensive jobs?", "cypher": "match (:ENTITY{name:'high'}) <--(p) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 10"}, {"query": "Which man has a representative work?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(p),(p) - [:Relationship{name:'representing work'}]->(h) return p.name order by p.name limit 1"}, {"query": "What is the name of the city on the southern bank of the Limassol River in the Gulf of Khayao?", "cypher": "match (:ENTITY{name:'in the Gulf of Cayo, southern shore of the mouth of the R\u00edmac River\u3002'}) <- [:Describe{name:'describe'}]-(m), (m) - [:Relationship{name:'country to which belongs'}]->(n) return distinct m.name,n.name"}, {"query": "Do you know which school's main department is the Central German School of Intelligent Manufacturing?", "cypher": "match (:ENTITY{name:'Central German Institute of Intelligent Manufacturing'}) <- [:Relationship{name:'Main Faculty'}]- (h) return h.name skip 1"}, {"query": "Can you help me find information about dating on the cf of Activ Coral Island?", "cypher": "match (:ENTITY{name:'cf's talk about love'}) --(q) with q order by q.name where q.name <> 'active coral island' return q.name"}, {"query": "Do you want to know the information about the two-tiered relationship between the road named in Chinese as the South Road of Busan?", "cypher": "match (n:ENTITY{name:'Shanghai Road'}) - [*1..2]->(x) where x.name<>'Shanghai Road' return distinct x.name"}, {"query": "I'm going to introduce you to the main achievements of Agustin Gamala, the first 10 of them, please.", "cypher": "match (:ENTITY{name:'Agustin Gamala'}) - [:Relationship{name:'main achievement'}]-> (x) return x.name order by x.name limit 10"}, {"query": "Please help me find the other 5 pieces of information on this person in the 2nd layer.", "cypher": "match (:ENTITY{name:' Zhang\u610f\u7fd4'}) - [:Relationship*1..2]-(p) where p.name <> 'person' return p.name limit 5"}, {"query": "Tell me about the three-tier relationship of Ngoma Heriman in Rwanda?", "cypher": "match (n:ENTITY{name:'Ngoma Heriman'}) - [*1..3]->(x) where x.name<>'Rwanda' return distinct x.name"}, {"query": "Can you tell me where Greta is from and where she was born?", "cypher": "Match (:ENTITY{name:'Granchow'}) - [:Relationship{name:'ethnicity'}]->(n) return n.name as name union all match (:ENTITY{name:'Granchow'}) - [:Relationship{name:'birthplace'}]->(m) return m.name as name union all match (:ENTITY{name:'Granchow'}) - [:Relationship{name:'spouse'}]->(r) return r.name as name"}, {"query": "Which company is located in Nanjing, Jiangning District, Tangling Street, 228 Tianwan East Road, Apple City Building, Room 3207?", "cypher": "match (:ENTITY{name:'Relationship{name:'headquarters location'}) - (h) return distinct h.name"}, {"query": "I want to know the other 5 information about this person in the 2nd layer.", "cypher": "match (:ENTITY{name:'Relationship*1..2]-(p) where p.name <> 'person' return p.name limit 5"}, {"query": "The 180m self-propelled suspension combined with all-aluminum steel structure bridge complete construction technology", "cypher": "match (:ENTITY{name:'180m self-propelled suspension combination all-aluminium steel structure bridge complete construction technology'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "The film is based on the novel of the same name by Japanese author and filmmaker Tatsuya Nakano.", "cypher": "The game is based on the manga series of the same name by Hiroyuki Takeda."}, {"query": "I would like to know what relationship names are used for the relationship between Liu Yunzan and the two layers?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'\u4e91\u8d5e'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the role of the river lights?", "cypher": "match ((:ENTITY{name:'riverlight'}) - [:Relationship{name:'role'}]-> (n) return n.name"}, {"query": "Can you introduce me to five books priced at $15?", "cypher": "The following is a list of the most commonly used keywords in the search results."}, {"query": "What is your profession?", "cypher": "match (:ENTITY{name:''}) <--(h) - [:Relationship{name:'profession'}]->(p) return distinct p.name"}, {"query": "How many protected plants are Hainanese potatoes?", "cypher": "match (:ENTITY{name:'Hainan bean'}) - [:Relationship{name:'protection level'}]->(n) return n.name as name union all match (:ENTITY{name:'Hainan bean'}) - [:Relationship{name:'distributed area'}]->(m) return m.name as name"}, {"query": "Can you find me a park with an altitude of less than 500 meters and an area of 4000 hectares?", "cypher": "match (:ENTITY{name:'4000 hectares'}) <- [:Relationship{name:'area'}]-(m), (m) - [:Relationship{name:'park altitude'}]->(n) where n.name='500 meters below' return m.name"}, {"query": "Can you find out where the five Chinese associate professors are?", "cypher": "match (:ENTITY{name:'adjunct professor'}) <--(m), (m) - [:Relationship{name:'practice location'}]->(n) return m.name, n.name limit 5"}, {"query": "I want to find six coaches, say their nationality.", "cypher": "match (:ENTITY{name:'coach'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'nationality'}]->(n) return m.name, n.name limit 6"}, {"query": "What is the nickname of the banana used in the banana plant?", "cypher": "match ((:ENTITY{name:'Vanessa'}) - [:Relationship{name:'do not use'}]-> (m) return m.name"}, {"query": "I'm going to find 10 sports clubs and introduce them.", "cypher": "match (:ENTITY{name:'sports association'}) <- [:Relationship*]-(m), (m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 10"}, {"query": "Mad Machine 2: Alien Invasion: What kind of relationships are involved in the three layers?", "cypher": "The following pages link to The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknown"}, {"query": "Can you please tell me which band's main achievement is the post-punk band The Sound?", "cypher": "match (:ENTITY{name:' post-punk band The Sound'}) <- [:Relationship{name:' major achievements'}]- (p) return p.name order by p.name limit 3"}, {"query": "I would like to know about the Beijing Aviation Tourism Academy.", "cypher": "match (:ENTITY{name:'Beijing Aviation and Tourism Specialist School'}) --(h) return h.name skip 1"}, {"query": "I'm looking for two poems by Byron, what year was it written?", "cypher": "match (:ENTITY{name:'Byron'}) <- [*]-(m), (m) - [:Relationship{name:'date of creation'}]->(n) return m.name, n.name limit 2"}, {"query": "Which hotels and hotels in Tucson are on the 3rd floor of the label relationship can you say?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'Tusan Hotel'}) return distinct n.name"}, {"query": "I don't know Casey Robinson, can you introduce me?", "cypher": "match (h:ENTITY{name:'Kassie Robinson'}) --(n) return n.name skip 3 The name of the game is the same as the name of the game"}, {"query": "The technology product 101 anti-fouling oil feature label?", "cypher": "match (:ENTITY{name:'101 anti-fouling oil'}) - [:Tag{name:'label'}]-> (p) with p order by p.name where p.name <> 'technology product' return p.name"}, {"query": "Can you tell me how many companies are located in Shenyang?", "cypher": "match (p:ENTITY{location:' Shenyang'}) return count ((p)"}, {"query": "Can you tell me which website has a user-first service principle?", "cypher": "match (:ENTITY{name:' user to top'}) <- [:Relationship{name:' service principle'}]- (p) return distinct p.name"}, {"query": "Who are the three football stars of Groningen Football Club and from which country?", "cypher": "match (:ENTITY{name:'Football Club Groningen'}) <- [*]-(m), (m) - [:Relationship{name:'nationality'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "I'm looking for a time to find a candy super sweet company.", "cypher": "match (p:ENTITY{name:'Candy Super Sweet Company'}) return p.time The name of the company is not known"}, {"query": "I would like to know what are the representative works of people born on April 4, 1970?", "cypher": "match (:ENTITY{name:'April 4, 1970'}) <- [:Relationship{name:'date of birth'}]- ((q) - [:Relationship{name:'representative work'}]->(h) return distinct h.name"}, {"query": "I'm not sure if you're a native of Beijing, but I'm a native of Beijing, so please help me find 10 of them.", "cypher": "match (:ENTITY{name:'Beijing'}) <- [:Relationship{name:'place of birth'}]-(x),(x) - [:Relationship{name:'representative work'}]->(n) return distinct n.name limit 10"}, {"query": "What are the two main ingredients of the fresh water extract besides flour and violet?", "cypher": "match (n:ENTITY{name:'five-colored three-fresh watercress'}) -[:Relationship{name:'main ingredient'}]->(h) where h.name <> 'flour' and h.name <> 'purple' return distinct h.name limit 2"}, {"query": "Can you name three works that are representative of this Han Chinese person?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(q) - [:Relationship{name:'representative work'}]->(h) return h.name skip 1 limit 3"}, {"query": "What events are organized by Beijing Avenue Cultural Program Production Co. Ltd.", "cypher": "match (:ENTITY{name:'Beijing Avenue Cultural Program Production Ltd. etc'}) <- [:Relationship{name:'host unit'}]- (q) return q.name"}, {"query": "I can't remember the chemical formula for 2-acetyl-4-methylmercury-5-di-sulfuric acid, can you help me?", "cypher": "match ((:ENTITY{name:'2-ethyl-4-methylmethyl-5-di-sulfuryl sulfate'}) - [:Relationship{name:'chemical formula'}]-> (x) return x.name"}, {"query": "What are the songs in Sango? Can't say five?", "cypher": "match (:ENTITY{name:'slang'}) <-[:Relationship{name:'slang'}]-(h) return h.name limit 5"}, {"query": "Can you recommend a few novels in the genre?", "cypher": "match (n:ENTITY{name:' fictional'}) <- [:Relationship{name:' novel type'}]- ((h) - [:Relationship{name:' Chinese name'}]->(m) return distinct m.name"}, {"query": "Do you know the names of how many car shows? Can you name 20?", "cypher": "match (:ENTITY{name:' car show'}) <- [:Relationship{name:' show type'}]- (x) return x.name limit 20"}, {"query": "Do you know what is the main achievement of Helen?", "cypher": "match (:ENTITY{name:'Haleen'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'main achievement'}]->(n) return distinct n.name"}, {"query": "Can you provide us with five personal details about Finnish footballer Hikira Tapio?", "cypher": "match (n:ENTITY{name:'Hikila Tapio'}) - [*]->(x) where x.name <>'Hikila Tapio, Finnish footballer\u3002' return distinct x.name limit 5"}, {"query": "The following is a list of three works by the Chinese artist, who is known as \"Kang Sam-ji\" in Chinese.", "cypher": "match (:ENTITY{name:'death by suicide'}) --(m) with m order by m.name where m.name <> 'death by suicide' return distinct m.name limit 3"}, {"query": "Can you help me analyze 13 grams?", "cypher": "match (:ENTITY{name:'13\u514b'}) --(h) with h order by h.name return h.name"}, {"query": "The 2012 Shanghai Spring Art Salon, do you know when the time is scheduled?", "cypher": "match ((:ENTITY{name:'2012 Shanghai Spring Art Salon'}) - [:Relationship{name:' time of the event'}]-> (p) return p.name"}, {"query": "What else do you know about Bailing Net besides the commercial website?", "cypher": "match (:ENTITY{name:'Blingnet'}) -[*1..3]-(p) where p.name <> 'commercial website' return distinct p.name limit 5"}, {"query": "What else do you know about comparative research on East Asian fertility culture, other than what is published by China Population Press?", "cypher": "match (:ENTITY{name:' East-West Fertility Comparison Research'}) - [*1..2]-(p) where p.name <> 'China Population Press' return p.name limit 6"}, {"query": "Would you like to see the first three labels of the Dietary Guidelines for Infants 0-3 years old?", "cypher": "match (:ENTITY{name:'0-3 years old baby and toddler food book'}) - [:Tag{name:'label'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "10 descriptions that identify me as a Type 10411 missile boat?", "cypher": "match (:ENTITY{name:'10411 type missile boat'}) --(x) with x order by x.name return x.name limit 10"}, {"query": "Talk to me about 1H-hydroxy-2-amide in chemistry?", "cypher": "match (:ENTITY{name:'1H-butadiene-2-amide'}) --(q) with q order by q.name where q.name <> 'chemistry' return q.name"}, {"query": "What is the chemical formula for C5H8O2 called hydrogen?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'alias'}]-(m), (m) - [:Relationship{name:'molecular'}]->(n) where n.name='C5H8O2' return distinct m.name"}, {"query": "I need 6 types of Mr. Small Balls Adventure 2 and other games besides entertainment, can you provide information about them?", "cypher": "match (:ENTITY{name:'Mr. Little Ball Adventure 2'}) --(m) with m order by m.name where m.name <> 'entertainment work' return distinct m.name limit 6"}, {"query": "I'm going to ask you a question, do you know what his symbol is?", "cypher": "match (:ENTITY{name:'\u4e2d'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'represents work'}]->(q) return distinct q.name limit 2"}, {"query": "The first thing I want to say is, what is the meaning of the name of the person or thing?", "cypher": "Match (:ENTITY{name:'Ming'}) <- [:Relationship{name:'age'}]- (h) return h.name limit 5 This is a list of all the different ways H.M.S.H. is credited in the database."}, {"query": "What is the most representative work of Huberlin's father?", "cypher": "match (:ENTITY{name:'\u4faf\u5b9d\u6797'}) <- [:Relationship{name:' father'}]-(q),(q) - [:Relationship{name:' representing work'}]->(h) return distinct h.name limit 3"}, {"query": "Please tell me what kind of relationship information is contained in the three layers of a dark kingdom?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'dark kingdom'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1 The name of the game is unknown"}, {"query": "I want to go to people, which ticket should the company buy?", "cypher": "match (p:ENTITY{name:'the people company'}) return p.location"}, {"query": "What are the main ingredients of the two bitter dishes?", "cypher": "match (:ENTITY{name:'bitter spices'}) <- [*]-(m), (m) - [:Relationship{name:'main ingredient'}]->(n) return m.name, n.name limit 2"}, {"query": "What year was the Audi A4 launched?", "cypher": "match (:ENTITY{name:' Audi A4'}) - [:Relationship{name:' time of listing'}]-> (m) return distinct m.name"}, {"query": "Can you name three representative works of this male celebrity?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(q) - [:Relationship{name:'representing work'}]->(m) return m.name order by m.name limit 3"}, {"query": "The problem is, what do Chinese people do for a living?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(h),(h) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 1"}, {"query": "What are the Chinese names for the arrogant sky?", "cypher": "match (:ENTITY{name:' arrogant heaven'}) - [:Relationship{name:' Chinese name'}]-> (n) with n order by n.name return distinct n.name"}, {"query": "Please tell me which green space is characterized by natural, ecological, park-like green landscapes?", "cypher": "match (:ENTITY{name:'natural, ecological, green landscape in a park'}) <-[:Relationship{name:'feature'}]- (p) return p.name"}, {"query": "The article is about the five graduates of the University of Wei Wei who are in the fourth tier of Kim Bashan's relationship.", "cypher": "match (n:ENTITY{name:'\u91d1\u7384\u5baa'}) - [*1..4]->(x) where x.name <>'Wang Jian University' return distinct x.name limit 5"}, {"query": "Which people were born in the same place as Tatsuya and what labels did they have? List them in order of their respective labels.", "cypher": "match (n:ENTITY{name:'\u6b66\u7530\u5e78\u53f2'}) - [:Relationship{name:'place of birth'}]->(:ENTITY) <- [:Relationship{name:'place of birth'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "What kind of genre is the \"Skype\" of the song?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "Can you tell me where the geographical location of the town is? and how big is it? and how many people live there?", "cypher": "The name of the country is the same as the name of the country of origin of the population of the country."}, {"query": "Can you list the five most representative works of the authors?", "cypher": "match (:ENTITY{name:'writer'}) <- [:Relationship{name:'profession'}]-(m) - [:Relationship{name:'representative work'}]->(n) return distinct n.name limit 5"}, {"query": "What is the name of a contest that is coming up to speed up structural adjustment and transformation upgrades?", "cypher": "match (:ENTITY{name:'Accelerate the advancement of structural adjustments and transformation upgrades'}) <- [:Relationship{name:'purpose'}]- (x) return x.name"}, {"query": "What was the specific situation of enemy casualties in the 1944 Shandong campaign against Japan?", "cypher": "match ((:ENTITY{name:'1944 Shandong Military District against Japan'}) - [:Relationship{name:'Casualty situation'}]-> (x) return x.name"}, {"query": "Can you name the names of the Chinese Academy of Engineering members and their respective achievements?", "cypher": "match (:ENTITY{name:'Academician of the Chinese Academy of Engineering'}) <- [:Relationship{name:'profession'}]- ((q) - [:Relationship{name:'main achievements'}]->(h) return distinct q.name,h.name"}, {"query": "Do you know what kind of relationships are involved in the three layers of Samsung Decorations in Guangzhou?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' Guangzhou Samsung Decoration Co. '}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "How is June 20, 1949 in the Chinese calendar?", "cypher": "match ((:ENTITY{name:'20 June 1949'}) - [:Relationship{name:'calendar'}]-> (h) return h.name"}, {"query": "Do you know what is a delicious dish of iron-rich vitamin sesame leaves and pork?", "cypher": "match (:ENTITY{name:'Fine with iron Vitamin-rich sesame leaves with a delicious pork dish...'}) <--(n) return n.name"}, {"query": "Do you know which chemical has the product number P100079?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Can you tell me where the book by author Li Zhi was published?", "cypher": "match (:ENTITY{name:'Lee Min'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Relationship{name:'publisher'}]->(q) return distinct h.name,q.name"}, {"query": "Can you tell me how many wrestlers are 183 cm tall? Can you name 6?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What does it mean to be a rogue?", "cypher": "match (:ENTITY{name:'spoiler'}) - [:Relationship{name:'spoiler'}]-> (m) return distinct m.name"}, {"query": "Who wrote the beer poster?", "cypher": "match (:ENTITY{name:'after the beer'}) <- [:Relationship{name:'representing the work'}]-(m) return distinct m.name"}, {"query": "The chemical 1-hydroxybenzoate is a chemical that is used in the production of polyethylene.", "cypher": "match (:ENTITY{name:'1-nitrate of sodium'}) --(x) with x order by x.name where x.name <> 'chemical' return x.name"}, {"query": "Help me find 10 Chinese dishes.", "cypher": "match (:ENTITY{name:'\u4eac\u83dc'}) <- [:Relationship{name:'category'}]-(m) return distinct m.name limit 10"}, {"query": "Please describe the content of an information piece about Pinghu High School in Yunyang County.", "cypher": "match (x:ENTITY{name:'Ping Lake Secondary School'}) --(h) return distinct h.name limit 1"}, {"query": "What other achievements have people born in Teresos village of Tumba Town, Khandong County, Sichuan, Gansu province, and who have received the National Military Education Advanced Person of Talent achieved?", "cypher": "match (:ENTITY{name:'Toba Kaungso village of Tsupa county, Sichuan, Guangdong Province'}) <- [:Relationship{name:'Born'}]-(x),(x) - [:Relationship{name:'Major achievement'}]->(q) where q.name <> 'Total education at the highest level' return distinct q.name limit 1"}, {"query": "Can you tell me what the relationship is within the three levels of the Nehru Gold Cup?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Nihrukhov Cup'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2 The name of the game is unknown"}, {"query": "What schools are there in Shanghai, China? Find the names of the top 5 famous alumni", "cypher": "match (:ENTITY{name:'China Shanghai'}) <- [:Relationship{name:'area'}]-(n) - [:Relationship{name:'known alumni'}]->(x) return x.name order by n.name,x.name limit 5"}, {"query": "Can you list the occupations of a junkie for me?", "cypher": "match (:ENTITY{name:'\u541b'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'representative work'}]->(q) return q.name order by q.name limit 1"}, {"query": "What is the name of the work that Alyosha created in 1944-1948?", "cypher": "match (:ENTITY{name:'old\u820d'}) <- [:Relationship{name:'author'}]-(m), (m) - [:Relationship{name:'creation year'}]->(n) where n.name='1944-1948' return m.name"}, {"query": "Can you tell me the name of the 16 international tournaments?", "cypher": "match (:ENTITY{name:'International event'}) <- [:Relationship{name:'event type'}]- (h) return h.name limit 16 The name of the game is not available"}, {"query": "Please help me find three students who graduated from the Beijing Broadcasting Academy.", "cypher": "match (:ENTITY{name:'Beijing Radio Academy'}) <- [:Relationship{name:' Graduate School'}]-(m) return distinct m.name limit 3"}, {"query": "Which crime thriller was released on August 26, 2005?", "cypher": "match (p:ENTITY{name:'August 26, 2005'}) <--(x) -->(q:ENTITY{name:'crime'}) return x.name"}, {"query": "What do you think of 007 - The Seventh Spy?", "cypher": "match (:ENTITY{name:'007 The Sea of Monsters: The Seventh Intelligence'}) --(x) with x order by x.name return x.name"}, {"query": "What is the curriculum at Hebei Sin University?", "cypher": "match (:ENTITY{name:'Hebei Sin Zhen'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'School training'}]->(n) return distinct n.name"}, {"query": "Please list the actors who have small roles.", "cypher": "match (:ENTITY{name:' minor character actor'}) --(m) return m.name order by m.name"}, {"query": "Please tell me what kind of job this Chinese guy does?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(n) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 3"}, {"query": "The story of the rose of the rose that everyone is talking about is published on which platform?", "cypher": "match ((:ENTITY{name:'Relationship{name:'connecting platform'}]-> (n) return n.name"}, {"query": "Can you find me the main achievements of the co-founder and CTO of Desert Vision Technologies?", "cypher": "match (:ENTITY{name:'Wildview Technology Co-founder and CTO'}) <- [:Relationship{name:'Career'}]- ((p),(p) - [:Relationship{name:'Main achievements'}]->(x) return distinct x.name"}, {"query": "When was the Bauhaus formed and when did it disband?", "cypher": "match (:ENTITY{name:'Bauhaus band'}) - [:Relationship{name:'time of formation'}]->(n) return n.name as name union all match (:ENTITY{name:'Bauhaus band'}) - [:Relationship{name:'time of dissolution'}]->(m) return m.name as name"}, {"query": "The software's description says that 360 technicians are on the computer, so what's the software called?", "cypher": "match (:ENTITY{name:'360 computer technician in a computer suit'}) <- [:Relationship{name:'software brief'}]- (p) return p.name"}, {"query": "I wonder which government work report quotes Deng Xiaoping's theory?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Tell me about the two-tier relationship between Hwaseong Biography [Beijing] and Cultural Development Limited.", "cypher": "match (n:ENTITY{name:'Washington [Beijing] Cultural Development Limited'}) - [*1..2]->(x) where x.name<>'Washington [Beijing] Cultural Development Limited' return distinct x.name"}, {"query": "The person who represents the work is DEMO in blue shorts, what other occupations do you have?", "cypher": "match (:ENTITY{name:'DEMO blue shorts'}) <- [:Relationship{name:'represents work'}]-(h),(h) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 3"}, {"query": "What is the shortest path between the two layers of the dome and the dome?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortestpaths'}) - [*..2]-(b:ENTITY{name:'shortestpaths'})) return count ((p)"}, {"query": "Can you tell me what category of city Xuzhou is?", "cypher": "match (:ENTITY{name:'Xuzhou'}) <- [:Relationship{name:'location'}]-(x) - [:Relationship{name:'category'}]->(q) return distinct q.name"}, {"query": "Please tell me which platform is open on 3/15/2017?", "cypher": "match (:ENTITY{name:'March 15, 2017) <- [:Relationship{name:' platform open'}]- (x) return x.name"}, {"query": "Where is the North Sea City Aquarium?", "cypher": "match ((:ENTITY{name:'Hong Kong City Aquatic Exhibition Hall'}) - [:Relationship{name:' located at '}]-> (n) return n.name"}, {"query": "Tell me about 5 information tips for the career of a junior high teacher.", "cypher": "match (n:ENTITY{name:'snowflake'}) - [*]->(x) where x.name <>'snowflake' return distinct x.name limit 5"}, {"query": "What is the name of the cultivated area with an area of 1933 hectares?", "cypher": "match (:ENTITY{name:'1933'}) <- [:Relationship{name:'cultivated area'}]- ((x) - [:Relationship{name:'alias'}]->(p) return distinct p.name limit 1"}, {"query": "Can you print as many labels as possible on 100CR6 bearing steel?", "cypher": "match (:ENTITY{name:'100CR6 bearing steel'}) - [:Tag{name:'label'}]-> (h) with h order by h.name return h.name"}, {"query": "Can you list the personal information of the graduates of the TCU's T2C?", "cypher": "match (n:ENTITY{name:'hardcore'}) - [*1..2]->(x) where x.name <>'Cryptography' return distinct x.name"}, {"query": "Can you recommend 10 songs that are popular and nostalgic?", "cypher": "match (:ENTITY{name:'pop, nostalgic'}) <- [:Relationship{name:' music style'}]- (m) return m.name limit 10"}, {"query": "What are the names of the people who have been professors, principals, and members of the Chinese Printmakers Association at Zhejiang Academy of Fine Arts?", "cypher": "match (:ENTITY{name:'formerly Professor, Head of Department, and Chairman of the Chinese Printmakers Association'}) <- [:Relationship{name:'main achievements'}]-(p),(p) - [:Relationship{name:'alias'}]->(q) return distinct q.name limit 1"}, {"query": "Do you know what time it was open? The house in the mountains where American writer Agnes Keyes lived with her husband and family from 1934 to 1942 is a small house in the mountains.", "cypher": "match (:ENTITY{name:' Between 1934 and 1942, American writer Agnes Keyes lived with her husband and family in this small house in the mountains, a township under a hurricane that made Sabah famous and won her the respect of the people of Sabah. Based on her novel based on her life experiences in Sabah, the story is set in the year 1934."}, {"query": "What's the point of saying that 3 and the prize are the 3rd level of the label relationship?", "cypher": "match (n) - [:Tag*3{name:' tag'}]->(p:ENTITY{name:' award'}) RETURN distinct n.name limit 3"}, {"query": "Please provide me with details of the three-tier relationship regarding the provisional measures of the Standing Committee of the People's Congress of the City of Songkhun regarding incentives and guarantees for the office of the City's representative of the people.", "cypher": "match (n:ENTITY{name:'Standing Committee of the People's Congress of the City of Xinjiang on the Provisional Measures for Incentivising and Securing the Maintaining of the Office of the City Representative'}) - [*1..3]->(x) where x.name<>'Standing Committee of the People's Congress of the City of Xinjiang' return distinct x.name"}, {"query": "Do you know what other nickname is there for this place in the Northwestern District of China?", "cypher": "match (:ENTITY{name:'the Northwestern District of China'}) <- [:Relationship{name:'foreign name'}]-(h) - [:Relationship{name:'alias'}]->(x) return x.name order by x.name limit 1"}, {"query": "What old-time songs did you sing?", "cypher": "match (:ENTITY{name:'Yun Yi Fei'}) <--(m), (m) --(n) where n.name='Gui' return distinct m.name"}, {"query": "What are the occupations of the people in the industry?", "cypher": "match (:ENTITY{name:'person in the industry'}) <- [:Tag{name:'tag'}]-(n) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 10"}, {"query": "Do you know which exhibition has an exhibition area of 10,700 square meters?", "cypher": "match (h:ENTITY{name:'10700 square meters'}) <- [:Relationship{name:'exhibition area'}]- (x) return x.name"}, {"query": "When was the opening of the Anhui Foreign Trade and Trade Vocational School? and do you know the current principal of the school?", "cypher": "match (:ENTITY{name:'Anhui to Foreign Trade Professional College'}) - [:Relationship{name:'Time of foundation'}]->(n) return n.name as name union all match (:ENTITY{name:'Anhui to Foreign Trade Professional College'}) - [:Relationship{name:'Current Rector'}]->(m) return m.name as name"}, {"query": "Excluding the fact that the yellow fever bug is odorless, what else do you know about it?", "cypher": "match (:ENTITY{name:' yellow-butterfly'}) - [*1..2]-(p) where p.name <> 'dry, almost without moisture, without any odor' return p.name limit 5"}, {"query": "How many people are called \u014cta Atsuko?", "cypher": "match (:ENTITY{name:'\u304a\u304a\u305f\u306b\u3042\u3084\u304b'}) <--(n) return n.name The name of the match is"}, {"query": "What are the different leagues that have the same time as the Japan Professional Football League A. They are listed in order of the number of leagues.", "cypher": "match (n:ENTITY{name:'Japan Professional Football A-League'}) - [:Relationship{name:'time of holding'}]->(:ENTITY) <-[:Relationship{name:'time of holding'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "I'm not sure what Taegmin does for a living, but I'm not sure what he does for a living.", "cypher": "match (:ENTITY{name:'\u7530\u5146\u660e'}) <- [:Relationship{name:' Chinese name'}]-(h),(h) - [:Relationship{name:' profession'}]->(x) return distinct x.name"}, {"query": "And what do you know of the place where the cedar-tree sprouts come from?", "cypher": "match (:ENTITY{name:'\u4ed9\u5bd3\u9999\u82bd'}) <- [:Relationship{name:'Chinese name'}]- ((n) - [:Relationship{name:'produced by'}]->(q) return distinct q.name"}, {"query": "What are the symptoms of persistent severe abdominal pain, convulsive seizures, inhalation-free stools, marked bloating, nausea and vomiting?", "cypher": "match (:ENTITY{name:' sudden persistent severe abdominal pain, convulsive cramping, no exhaled stools, obvious bloating, nausea and vomiting'}) <- [Relationship{name:' common symptoms'}]- ((m) return distinct m.name"}, {"query": "What is the representation of the graduates of the Tokyo Tsuji-Baku Early High School?", "cypher": "match (m:ENTITY{name:'Tokyo T\u014dky\u014d Takayama Early High School'}) <- [:Relationship{name:'Graduate School'}]- ((q) - [:Relationship{name:'representing work'}]->(p) return distinct q.name"}, {"query": "Do you know what is the fourth layer of the relationship between the labels and the original desire?", "cypher": "match (n) <- [:Tag*4{name:'tag'}]- ((p:ENTITY{name:'original desire'}) RETURN distinct n.name limit 1"}, {"query": "Please list the main achievements of one party apart from the first prize of the 2006 calligraphy exhibition and the seventh prize of the 2002 book review.", "cypher": "match (n:ENTITY{name:'party\u5b88\u4e00'}) - [:Relationship{name:'main achievement'}]->(h) where h.name <> '06 first prize of the calligraphy fair' and h.name <> '02 book review as level seven' return distinct h.name limit 1"}, {"query": "What are the three layers of relationships that the desire to go home contains?", "cypher": "The following pages link to The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the King: The Return of the Return of the King: The Return of the Return of the King: The Return of the Return of the King: The Return of the Return of the Return of the King: The Return of the Return of the Return of the King: The Return of the Return of the Return of the King: The Return of the Return of the Return of the King: The Return of the Return of the Return of the Return of the King: The Return of the Return of the Return of the Return of the King: The Return of the Return of the Return of the Return of the Return of the King: The Return of the Return of the Return of the Return of the King: The Return of the Return of the Return of"}, {"query": "I'm wondering what port is the RPC (Remote Process Calling) service on?", "cypher": "match (:ENTITY{name:'RPC(called by a remote process) service'}) <- [:Relationship{name:'service'}]- (h) return h.name"}, {"query": "Which games are the same size as Naeli's cute baby games and what are the labels for each of them? Show these games in order of number of labels.", "cypher": "match (n:ENTITY{name:'Niley's cute baby'}) - [:Relationship{name:'game size'}]->(:ENTITY) <-[:Relationship{name:'game size'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Can you help me find the CAS number for 1-amino cyclohexanate?", "cypher": "match ((:ENTITY{name:'1-amino cycloacetate'}) - [:Relationship{name:'CAS number'}]-> (x) return x.name"}, {"query": "What chemical has a molar volume (m3/mol) of 205.6?", "cypher": "match (:ENTITY{name:'205.6'}) <- [:Relationship{name:'mol volume m3mol'}]- (x) return distinct x.name"}, {"query": "I remember the bugs didn't fill out the words?", "cypher": "match (:ENTITY{name:' bug'}) <- [:Relationship{name:' filler'}]-(m) where m is not null return 1"}, {"query": "The problem is that the public health press has published a two-tiered description of the relationship between the hazards of easily misused food additives and the identification of the work.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <> 'People's Health Publishing' return distinct x.name"}, {"query": "I want to know about the three levels of relationships in the novel.", "cypher": "match (n:ENTITY{name:'not to be confused with '}) - [*..3]->(x) where x.name<>'novel work' return distinct x.name"}, {"query": "How many Mandarin songs do you know?", "cypher": "match (:ENTITY{name:'Mandarin'}) <- [:Relationship{name:'Language of the song'}]- (n) return n.name limit 10"}, {"query": "For the person known as Rosanna, do you have any information about the important events that happened?", "cypher": "match (:ENTITY{name:'Rosanna'}) <- [:Relationship{name:'alias'}]-(n),(n) - [:Relationship{name:'important event'}]->(x) return x.name order by x.name limit 5"}, {"query": "Where are the main coffee machines located? What are the famous brands?", "cypher": "match (:ENTITY{name:' coffee machine'}) - [:Relationship{name:' main region'}]->(n) return n.name as name union all match (:ENTITY{name:' coffee machine'}) - [:Relationship{name:' famous brand'}]->(m) return m.name as name"}, {"query": "I would like to know about the three-tier relationship company related to the organization Xinjiang Green Building Co., Ltd.", "cypher": "match (n:ENTITY{name:'Xinjiang Green Building Co. Ltd'}) - [*1..3]->(x) where x.name<>'organizing entity' return distinct x.name"}, {"query": "Tell me, what are the five types of jobs that Chinese nationals do?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(m),(m) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 5"}, {"query": "Help me find a German novelist.", "cypher": "match (:ENTITY{name:'Germany'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='playwright, novelist' return distinct m.name limit 1"}, {"query": "Can you tell me which of them are famous alumni of the Beijing Yangtze River Experimental High School?", "cypher": "match (:ENTITY{name:'Beijing City Yangtze Experimental Secondary School'}) - [:Relationship{name:'Known Alumni'}]-> (h) return h.name order by h.name limit 5"}, {"query": "Can you give me a list of exhibition events in Beijing China International Expo Center?", "cypher": "match (m:ENTITY{name:'Beijing China International Exhibition Center'}) <- [:Relationship{name:' Exhibition location'}]- (p) return p.name"}, {"query": "How many companies have you started in the last 14 years?", "cypher": "match (p:ENTITY{time:'2014'}) return count ((p)"}, {"query": "Do you know what kind of medicine is bringing hope to patients with terminal tumors?", "cypher": "match (:ENTITY{name:'bringing hope to patients with incurable tumors'}) <- [:Relationship{name:'impact'}]- (q) return q.name"}, {"query": "Tell me about the two pine-street labels, apart from society and life.", "cypher": "match (n:ENTITY{name:'Pinewood Boulevard'}) - [:Tag{name:'tag'}]->(h) with h order by h.name where h.name <> 'society' and h.name <> 'life' return h.name limit 2"}, {"query": "What are the five types of relationships within the four levels of Lotus Bridge Station?", "cypher": "The following pages link to The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The Lottery: The"}, {"query": "Which works and books were written in the same year and are each labeled with a rose?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "What was the name of the concert held on 11 and 12 September 2011?", "cypher": "match (:ENTITY{name:'September 11 and 12, 2011'}) <- [:Relationship{name:' time of event'}]- (p) return p.name"}, {"query": "In addition to the 20+ awards for the Riverside City Ethical Education Advanced Collective, which awards has Li received?", "cypher": "match (:ENTITY{name:'Liangmianhuang Middle School or Liangmianhuang'}) <- [:Relationship{name:'abbreviated as '}]-(p),(p) - [:Relationship{name:'Main award'}]->(x) where x.name <> 'River City Deaf Education Advanced Collective and other 20+ projects' return distinct x.name limit 5"}, {"query": "Can you tell me a label for 100 euro?", "cypher": "match (:ENTITY{name:'100ioo\u5229\u8d2d\u4e70'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 1"}, {"query": "I want five messages from industry figures like He Changping, okay?", "cypher": "match (n:ENTITY{name:'Hengming'}) - [*]->(x) where x.name<>'industry person' return distinct x.name limit 5"}, {"query": "The first is to find the most accomplished Americans in the world.", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(q),(q) - [:Relationship{name:'main achievements'}]->(p) return q.name order by q.name limit 1"}, {"query": "I would like to know more about the game Black Girl 1/9.", "cypher": "match (h:ENTITY{name:'1/9 black girl'}) --(q) with q order by q.name where q.name <> 'game' return q.name"}, {"query": "What is the name of the book with the ISBN number 9787549239306?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Who is the Denver Nuggets' 34th?", "cypher": "match (:ENTITY{name:'Denver Miners'}) <- [:Relationship{name:'Related team'}]-(m), (m) - [:Relationship{name:'T-shirt number'}]->(n) where n.name='34' return distinct m.name"}, {"query": "Can you tell me what the foreign name of this book is and what language and publisher it is in?", "cypher": "match (:ENTITY{name:'positive energy heartbeat'}) - [:Relationship{name:'foreign language heartbeat'}]->(n) return n.name as name union all match (:ENTITY{name:'positive energy heartbeat'}) - [:Relationship{name:'speech'}]->(m) return m.name as name union all match (:ENTITY{name:'positive energy heartbeat'}) - [:Relationship{name:'publishing'}]-(r>) return r.name as name"}, {"query": "Can you recommend some of the famous places in the subtropical monsoon climate? Can you tell us about the top 5?", "cypher": "match (:ENTITY{name:'subtropical monsoon climate'}) <- [:Relationship{name:'climate type'}]-(n),(n) - [:Relationship{name:'famous attractions'}]->(h) return h.name skip 1 limit 5"}, {"query": "In no more than ten sentences, 1+1 easily won the Optimized Training in 6th grade Mathematics in addition to the publication labels?", "cypher": "match (:ENTITY{name:'1+1 easily won the optimization training; 6th grade math'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> ' publications' return q.name limit 10"}, {"query": "The 105 mm 6\u00d76 round armored assault gun has military tags, but what other tags are there?", "cypher": "match (:ENTITY{name:'105 mm 6\u00d76 round armored assault gun'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'military' return q.name"}, {"query": "What is the status of the Muns in Liang Shenyang?", "cypher": "match (p:ENTITY{name:'Manh'}) <--(x) --> ((q:ENTITY{name:'Lining Shenyang'}) return x.name"}, {"query": "Can you help me find five works by Zhang's wife?", "cypher": "match (:ENTITY{name:'\u5f20\u56fd\u7acb'}) <- [:Relationship{name:' husband'}]-(p) - [:Relationship{name:' main work'}]->(n) return distinct n.name limit 5"}, {"query": "Can you list three different professions that celebrities do?", "cypher": "match (:ENTITY{name:'person'}) <- [:Tag{name:'tag'}]-(m),(m) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 3"}, {"query": "You don't understand what the sale of a brick in two layers has to do with it?", "cypher": "The following is a list of all the different ways Match path=(n) <- [:Relationship*2]-(p:ENTITY{name:'sell a chicken'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "The group is based in the United States, but it is not affiliated with any political party.", "cypher": "match (:ENTITY{name:'metabolic class'}) - [:Relationship{name:' country'}]->(n) return n.name as name union all match (:ENTITY{name:'metabolic class'}) - [:Describe{name:'tag'}]->(m) return m.name as name"}, {"query": "The painting of General Meng Zhen is from which dynasty?", "cypher": "Match (:ENTITY{name:'Marshal Meng Xiaoqing's painting'}) - [:Relationship{name:'Dynasty'}]-> (m) return distinct m.name"}, {"query": "What are the benefits of the white skin, white fruit, and lean meat soup?", "cypher": "match (:ENTITY{name:'scrubbed white fruit lean meatballs'}) - [:Describe{name:'describe'}]->(n) return n.name"}, {"query": "The word definition.trel?", "cypher": "match (:ENTITY{name:'.trel'}) --(x) with x order by x.name return distinct x.name skip 1 limit 1"}, {"query": "What occupations do you know of this Chinese national? Can you name three?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(m),(m) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 3"}, {"query": "Help me find five words that read \"o\".", "cypher": "match (:ENTITY{name:'\u00e0o'}) <- [:Relationship{name:'spelling'}]-(m) return distinct m.name limit 5"}, {"query": "Help me find the 10 words next to the clothes.", "cypher": "match (:ENTITY{name:'clothing'}) <- [:Relationship{name:'clothing'}]-(m) return distinct m.name limit 10"}, {"query": "The number of the telephone number of the Environmental Emergency and Accident Investigation Center is?", "cypher": "match (:ENTITY{name:' Environmental Emergency and Accident Investigation Center'}) <- [:Relationship{name:' Management department'}]- (m) return m.name"}, {"query": "Do you know the waterfall character Mu Chun? What other information is there besides the 80th General of Liangsan, please find the other 7 information in layer 2", "cypher": "match (:ENTITY{name:'Mu Chun'}) - [:Relationship*1..2]->(p) where p.name <> '80th' return p.name limit 7"}, {"query": "Can you tell me who else has written about the \"Kinshasa\" campaign?", "cypher": "match (:ENTITY{name:'Crow's nest'}) --(x) return x.name order by x.name"}, {"query": "I heard that the 11.30 Shibuya earthquake was very strong, do you know what the specific magnitude was?", "cypher": "match ((:ENTITY{name:'11\u00b730 when the earthquake occurs'}) - [:Relationship{name:'seismic level'}]-> (m) return m.name"}, {"query": "Can you tell me about the book Chess Tactics in General?", "cypher": "match (:ENTITY{name:'chess tactics in general'}) <- [:Relationship{name:' book name'}]-(x),(x) - [:Tag{name:'tag'}]->(q) return distinct q.name"}, {"query": "The film is based on the life of the French actor Th\u00e9ophile Gautier, who was born in Paris in 1928.", "cypher": "match (:ENTITY{name:'Th\u00e9ophile Gottier'}'}) - [:Relationship{name:'nationality'}]->(n) return n.name as name union all match (:ENTITY{name:'Th\u00e9ophile Gottier'}) - [:Relationship{name:'representing work'}]->(m) return m.name as name"}, {"query": "Can you recommend a hybrid with a fuel consumption of 7 liters?", "cypher": "match (:ENTITY{name:'7L'}) <- [:Relationship{name:'complete state of use fuel consumption'}]- (x) return x.name"}, {"query": "I'm trying to find a way to write a simple and confusing type, what is the full name?", "cypher": "match (:ENTITY{name:' short and confused'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:' full name'}]->(n) return distinct m.name,n.name limit 1"}, {"query": "What is the name of the freshwater whitefish and where is it mainly found?", "cypher": "match (:ENTITY{name:'sweetwater whitefish'}) - [:Relationship{name:'do not call'}]->(n) return n.name as name union all match (:ENTITY{name:'sweetwater whitefish'}) - [:Relationship{name:'distribution area'}]->(m) return m.name as name"}, {"query": "What about the Shanghai-born scientists?", "cypher": "match (:ENTITY{name:' Shanghai'}) <- [:Relationship{name:' place of birth'}]-(m), (m) - [:Tag{name:' tag'}]->(n) where n.name='scientist' return m.name"}, {"query": "What do people born in Dongde Town, Liujiang County do?", "cypher": "match (:ENTITY{name:'Liujiang County German Town'}) <- [:Relationship{name:'birthplace'}]-(h),(h) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 4"}, {"query": "What is the name of a common Southern snack made from rice and fodder?", "cypher": "match (:ENTITY{name:'a common southern snack'}) <- [:Relationship{name:'definition'}]-(m), (m) - [:Relationship{name:'main ingredient'}]->(n) where n.name='rice, rice' return distinct m.name"}, {"query": "Can you get me three industrial books to read?", "cypher": "match (:ENTITY{name:'industrial book'}) <- [:Tag{name:'tag'}]-(n) - [:Relationship{name:'book'}]->(q) return distinct q.name limit 3"}, {"query": "I would like to know what the scope of the 50 yuan card is?", "cypher": "match (:ENTITY{name:'50\u5143'}) <- [:Relationship{name:'hanging off fee'}]-(p) - [:Relationship{name:'scale of domain'}]->(x) return distinct x.name limit 1"}, {"query": "Do you know which concert has a song that features the heroine, her back-up, etc?", "cypher": "match (:ENTITY{name:'You are the heroine, you are the shadow of her back'}) <- [:Relationship{name:'Represents song'}]- (n) return n.name"}, {"query": "Segatta Viktor Smari is an Icelander born on November 21, 1992. I would like to know four more things about him.", "cypher": "match (n:ENTITY{name:'Segatta Viktor Smari'}) -->(h) with h order by h.name where h.name <> '1992/11/21' and h.name <> 'Iceland' return h.name limit 4"}, {"query": "What else do you know about the campus underground besides the work of director Park Geun-hye?", "cypher": "match (:ENTITY{name:'campus underground'}) - [:Relationship*1..3]-(p) where p.name <> 'Pong's' return p.name limit 5"}, {"query": "Can you name five Albanian writers who have been so well represented?", "cypher": "match (x:ENTITY{name:'Albania'}) <- [:Relationship{name:'nationality'}]-(h),(h) - [:Relationship{name:'representative work'}]->(p) return distinct p.name limit 5"}, {"query": "Can you list five things in a four-tier relationship that are related to English footballer Delph Fabian?", "cypher": "match (n:ENTITY{name:'Delph Fabian'}) - [*1..4]->(x) where x.name <>'Delph Fabian, English footballer\u3002' return distinct x.name limit 5"}, {"query": "I'm going to be taking a look at the top 10 things about Jilin North China University.", "cypher": "match (:ENTITY{name:'Jilin North China University'}) --(p) return p.name order by p.name limit 10"}, {"query": "What other achievements have graduates of the Department of Political Science at Nanking University achieved besides the 2009 Nanking University Award for Outstanding Achievement in Social Science Research?", "cypher": "match (:ENTITY{name:'Political Science Department'}) <- [:Relationship{name:' Graduate School'}]-(q) - [:Relationship{name:' Major achievements'}]->(p) where p.name <> '2009 NTU Social Science Research Award for Outstanding Achievement' return distinct p.name limit 1"}, {"query": "What is the shortest relationship path between the two layers of the redback and the corn cob?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'redback spider'}) - [*..2]-(b:ENTITY{name:'corn spider'})) return count ((p)"}, {"query": "Asking ten princesses who fell in love with your Chinese name?", "cypher": "match (:ENTITY{name:'Princess Princess Loves You'}) - [:Relationship{name:'Chinese name'}]-> (h) with h order by h.name return distinct h.name limit 10"}, {"query": "I'm going to ask you, what are the other names of the South Road in Han City?", "cypher": "match (:ENTITY{name:'Han City Road'}) <- [:Relationship{name:'Chinese name'}]- ((h) - [:Relationship{name:'alpha name'}]->(p) return distinct p.name limit 2"}, {"query": "When did the 2013 CCTV celebrity selection kick off?", "cypher": "Match ((x:ENTITY{name:'2013 CCTV world famous person'}) - [:Relationship{name:' Selected first review'}]-> (n) return n.name"}, {"query": "Tell me, is this Ignacy Jan Paderewski a good man?", "cypher": "match (:ENTITY{name:'Ignacy Jan Paderewski'}) --(h) return distinct h.name"}, {"query": "Do you know which labels are there in the National Palace of Culture? Can you tell me three other good ones besides entertainment?", "cypher": "match (:ENTITY{name:'All the People's Palace'}) - [:Tag{name:'tags'}]-> (p) with p order by p.name where p.name <> 'entertainment work' return p.name limit 3"}, {"query": "What are some of the songs sung by Huang Zheng?", "cypher": "match (:ENTITY{name:'\u9ec4\u8d2f\u4e2d'}) <- [:Relationship{name:' original song'}]-(p) - [:Relationship{name:' Chinese name'}]->(n) return distinct n.name"}, {"query": "Help me find 10 species of vertebrates in the subfamily", "cypher": "match (:ENTITY{name:' vertebrate Armenia'}) <- [:Relationship{name:' Armenia'}]- ((h) return h.name limit 10 This is a list of characters that are listed in the game."}, {"query": "What are the 5 messages of emotional motherhood besides music that you can tell me?", "cypher": "match (:ENTITY{name:'the feeling of being alone'}) --(m) with m order by m.name where m.name <> 'music' return distinct m.name limit 5"}, {"query": "Do you have any information about the relationship between the three layers of the hive?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' beehive'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Who is the one who has graduated from the fourth edition of the Radio Artists Training Course and will give me his representative work?", "cypher": "match (:ENTITY{name:' fourth period of radio artists training class'}) <- [:Relationship{name:' graduate school'}]-(h) - [:Relationship{name:' major works'}]->(x) return h.name order by h.name,x.name limit 10"}, {"query": "The book is called \"Audio Presenting Theory\" and it is related to the book \"Introduction to a book with no more than four levels of relationship\".", "cypher": "match (n:ENTITY{name:' hosted by the broadcaster'}) - [*1..4]->(x) where x.name <> 'book name' return distinct x.name"}, {"query": "I'm not sure what kind of concerts were held at the Workers' Stadium.", "cypher": "match (:ENTITY{name:'Workers' Stadium'}) <- [:Relationship{name:'Concert venue'}]- (p) return p.name"}, {"query": "I know the second season of Don't Be Proud airs on January 11, 2017, do you know the other times?", "cypher": "match (:ENTITY{name:'Don't be so proud [2016 ?? \u82b8, A Dream of a Lifetime]'}) - [:Relationship{name:' air time'}]-> (q) with q order by q.name where q.name <> '11 January 2017 ((second season)) ' return q.name"}, {"query": "Do you know what the occupation of a person born in Nanchang, Jiangxi Province is?", "cypher": "match (:ENTITY{name:'Nanjing City'}) <- [:Relationship{name:'Born'}]-(m),(m) - [:Relationship{name:'Profession'}]->(x) return x.name skip 1 limit 3"}, {"query": "Tell me about some of the major departments at the Faculty of Law in Cecil C. Flesch, the top five.", "cypher": "match (:ENTITY{name:'Cape Fles Law School'}) <- [:Relationship{name:'Main Faculty'}]- (m) return m.name order by m.name limit 5"}, {"query": "Can you list the five types of professions that politicians do?", "cypher": "match (:ENTITY{name:'political figure'}) <- [:Tag{name:'tag'}]-(x),(x) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 5"}, {"query": "I'm not sure what this person is doing.", "cypher": "match (x:ENTITY{name:'Duncan'}) --(q) return q.name order by q.name"}, {"query": "Can you find out about the personal life of the football prodigy Merdovic in the Luka 2 relationship?", "cypher": "match (n:ENTITY{name:'Merdovic Luka'}) - [:Relationship*1..2]->(x) where x.name<>'football' return distinct x.name"}, {"query": "The following is a brief introduction to the 2012 Central to Local National Key Ecosystem Functional Areas Transfer Payment Process.", "cypher": "match (:ENTITY{name:'2012 Central to local national key ecological functional areas transfer payment method'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "Can you tell us about Hannah Emily Anderson, please?", "cypher": "match (:ENTITY{name:'Hannah Emily Anderson'}) --(h) return h.name order by h.name"}, {"query": "What country is Van Kang from?", "cypher": "Match ((:ENTITY{name:'spanish'}) - [:Relationship{name:'nationality'}]-> (n) return n.name"}, {"query": "Tell me about Kevin Allen's career, first line?", "cypher": "match (:ENTITY{name:'Kevin Allen'}) - [:Relationship{name:'profession'}]-> (h) return h.name order by h.name limit 1"}, {"query": "I would like to know what kind of jobs are available for you? Can you give me 10?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'profession'}]->(q) return q.name order by q.name limit 10"}, {"query": "I want you to tell me what other names are there for this place in Taipei?", "cypher": "match (:ENTITY{name:'Taylor'}) <- [:Relationship{name:'address'}]-(q) - [:Relationship{name:'do not name'}]->(x) return x.name order by x.name limit 10"}, {"query": "Do you know how many regular buses there are?", "cypher": "match (m:ENTITY{name:'bus'}) <- [:Relationship{name:'bus type'}]- (p) return distinct p.name"}, {"query": "The 2&#39;-deoxy-nucleotide-5&#39;-triphosphate salt mixed solution you used yesterday, what is its product number?", "cypher": "match ((:ENTITY{name:'2&#39;- deoxyribonucleic acid-5&#39;- triphosphate salt mixed solution'}) - [:Relationship{name:' product number'}]-> (m) return m.name"}, {"query": "I would like to know which places are associated with the third tier of the label of the University of Gambia?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'Cobaya University'}) return distinct n.name limit 5 The name of the university is not known"}, {"query": "The two lakes are located in the southern part of the country, and the two lakes are located in the southern part of the country.", "cypher": "match (:ENTITY{name:'Two Lakes Special Area'}) - [*1..3]-(p) return p.name limit 20"}, {"query": "Do you know the label attribution of this social event, the 1.2 oil pipeline explosion in southern Yemen?", "cypher": "match (:ENTITY{name:'11\u00b72 South Yemen oil pipeline explosion'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'social event' return n.name"}, {"query": "The incident of the 10.22 Ikea wreckage, which caused a sensation, what is the status of the case?", "cypher": "match ((:ENTITY{name:'10.22 Lake Tahoe remains case'}) - [:Relationship{name:'case status'}]-> (x) return x.name"}, {"query": "What is the name of the incident involving a US Air Force B-52 bomber?", "cypher": "match (:ENTITY{name:'B-52 bomber of the United States Air Force'}) <- [:Relationship{name:' model'}]- (x) return x.name"}, {"query": "The book was published on 6/1/1998, what is the price?", "cypher": "match (:ENTITY{name:'1998/6/1'}) <- [:Relationship{name:' time of publication'}]- ((x),(x) - [:Relationship{name:' pricing'}]->(q) return distinct q.name"}, {"query": "Can you find out about the four-tier relationship between Wang Wei's work and the work of the Chongqing Monk [in the village of Abbey near Chongqing Temple]?", "cypher": "match (n:ENTITY{name:'\u5bc4\u5d07\u50e7[\u5d07\u5bfa\u8fd1\u4e1c\u963f\u8986\u6751]'}) - [*1..4]->(x) where x.name <>'\u738b\u7ef4' return distinct x.name"}, {"query": "What are the works of novelists called Khlo\u00e9 Ch'ing-wen?", "cypher": "match (:ENTITY{name:' cold\u6e05\u6c76'}) <- [:Relationship{name:' author'}]-(x),(x) - [:Relationship{name:' Chinese name'}]->(p) return distinct p.name"}, {"query": "Can you run away? Whose work is the little vanilla? Name the first three.", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}}) - (h) return h.name order by h.name limit 5"}, {"query": "Can you tell me what the relationship is between the two levels of psychological dysfunction involved?", "cypher": "The following pages link to The Unknown:"}, {"query": "Can you name some of the famous alumni of the school?", "cypher": "match (:ENTITY{name:'Divisionary secondary school is a mountain secondary school\u3002'}) <-[:Describe{name:'description'}]-(n) -[:Relationship{name:'known alumni'}]->(q) return distinct q.name"}, {"query": "Tell me about the work of the two-tier relationship between Hideyoshi and Nakano?", "cypher": "match (n:ENTITY{name:' and \u91ce\u5b50'}) - [:Relationship*1..2]->(x) where x.name <>'hino' return distinct x.name"}, {"query": "Can you tell me about the information about the Grand Canyon?", "cypher": "match (:ENTITY{name:'Crystal'}) --(p) return distinct p.name"}, {"query": "Can you find information on the relationship between the two layers of Chen's 20th century Western Marxist philosophy?", "cypher": "match (n:ENTITY{name:'20th century Western Marxist philosophy'}) - [:Relationship*1..2]->(x) where x.name <>'Chen Shih-min' return distinct x.name"}, {"query": "Can you please translate 175\u00b0 color blindness into other languages?", "cypher": "match (:ENTITY{name:'175\u00b0 color blind'}) <- [:Relationship{name:'other translated name'}]- (h) return distinct h.name"}, {"query": "Can you find out the five models? What are their nationalities?", "cypher": "The following is a list of the most commonly used names in the world:"}, {"query": "Quickly, give me three tags for the intelligence and potential of children aged 0-6 years old.", "cypher": "match (:ENTITY{name:'0-6 years of age children's intelligence and potential development'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "Can you tell me about the introduction to Don Quixote?", "cypher": "match (:ENTITY{name:'P'}) --(p) return p.name order by p.name limit 10"}, {"query": "The project that gave me the key to the building, the project that gave me the information about the three-tier relationship between my brother and my brother-in-law?", "cypher": "match (n:ENTITY{name:'problems less than the underlying brother'}) - [:Relationship*1..3]->(x) where x.name <>'building key' return distinct x.name"}, {"query": "Can you tell me about the three labels that are in the Ali-Tibet Arak Cemetery besides food and vegetables?", "cypher": "match (n:ENTITY{name:'Tibetan Ali as a cemetery in the form of a wooden mound'}) - [:Tag{name:'label'}]->(h) with h order by h.name where h.name <> 'food' and h.name <> 'dishes' return h.name limit 3"}, {"query": "What are the common symptoms of infectious spots?", "cypher": "match (:ENTITY{name:' Infectious red spots'}) - [:Relationship{name:' Common symptoms'}]-> (m) return distinct m.name"}, {"query": "Help me find the 11 words next to the three native words.", "cypher": "match (:ENTITY{name:'\u571f'}) <- [:Relationship{name:'\u90e8\u9996'}]-(m), (m) - [:Relationship{name:'\u603b\u7b14\u753b'}]->(n) where n.name='11' return distinct m.name limit 3"}, {"query": "Can you tell me about one of the representative works of this painter?", "cypher": "match (:ENTITY{name:'painter'}) <- [:Relationship{name:'profession'}]-(x) - [:Relationship{name:'representing work'}]->(m) return m.name order by m.name limit 1"}, {"query": "Rolet, a software on Android that teaches you to draw cartoon characters in three layers of relationships.", "cypher": "match (n:ENTITY{name:'Teach you to draw animated characters'}) - [*1..3]->(x) where x.name<>'Teach you to draw animated characters' is a software application for Android running on the platform 32.19 MB."}, {"query": "What is the price of Li's books?", "cypher": "match (:ENTITY{name:'Lee Min Ho'}) <- [:Relationship{name:'author'}]- ((n) - [:Relationship{name:'pricing'}]->(q) return distinct q.name"}, {"query": "The 2012 China International Touchscreen Expo is about to be held in Qingdao, please announce the time.", "cypher": "match ((:ENTITY{name:'2012 China [Qingdao] International Touch Screen Exhibition'}) - [:Relationship{name:' run time'}]-> (p) return p.name"}, {"query": "Can you tell me about the three and a half seconds that will determine your life?", "cypher": "match (:ENTITY{name:'0.5 seconds decide your life'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 3"}, {"query": "Can you name two people who have secondary professional relationships with actors?", "cypher": "Match (n) - [:Relationship*2{name:'profession'}]->(p:ENTITY{name:'actor'}) RETURN distinct n.name limit 2"}, {"query": "I'm going to be writing a book about the science of 1-methylphenidate.", "cypher": "match (:ENTITY{name:'1-methylphenidate'}) --(n) with n order by n.name where n.name <> 'science' return n.name"}, {"query": "The asteroid is less than 900,000 miles (1.45 million kilometers) away, what is it called?", "cypher": "match (:ENTITY{name:'less than 900,000 miles (~1.45 million km) '}) <- [:Relationship{name:'distance from'}]- (n) return distinct n.name"}, {"query": "What are the symptoms of chronic non-convulsive gastritis?", "cypher": "match (:ENTITY{name:' Chronic non-convulsive gastritis'}) - [:Relationship{name:' common symptoms'}]-> (m) return distinct m.name"}, {"query": "How much do you know about the 12/15 riots in Athens, Greece?", "cypher": "match (:ENTITY{name:'12\u00b715 Greek Athens riots'}) --(q) with q order by q.name return q.name"}, {"query": "Do you know what the animals in the animal kingdom are called? Can you give me two examples?", "cypher": "The following is a list of the most commonly used characters in the game."}, {"query": "What is the other thing about the hornbeam?", "cypher": "match (:ENTITY{name:'sect'}) <-[:Relationship{name:'sect'}]-(m) where m.name <>'hornworm' return distinct m.name"}, {"query": "Can you find the EINECS login number for the dispersed blue peach RFL?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Who was born in Red Mountain City, Inner Mongolia, and went to the Haikou University?", "cypher": "match (p:ENTITY{name:'Harbin University'}) <--(x) -->(q:ENTITY{name:'Inner Mongolia Red Mountain City'}) return x.name"}, {"query": "Can you name three main functions of the substances that regulate the gut microbiome?", "cypher": "match (:ENTITY{name:'regulate the gut microbiome'}) <- [:Relationship{name:'main function'}]- ((n) return distinct n.name limit 3"}, {"query": "What is the software developed by Sun Studio?", "cypher": "match (:ENTITY{name:'to the sun's studio'}) <- [:Relationship{name:'developer'}]- (h) return distinct h.name"}, {"query": "Can you find me the tags for the contemporary historical event 10/29 in Guizhou, the demolition of the Public Security Building?", "cypher": "match (:ENTITY{name:'10\u00b729 Quang Nam demolition of the Public Security Building incident'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'contemporary historical event' return x.name"}, {"query": "Please try to label the publication as a \"Handbook for Growing Up for Toddlers 0-6 Years Old\".", "cypher": "match (:ENTITY{name:'0-6 years old early childhood development manual'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'publication' return x.name"}, {"query": "Can you name three teachers?", "cypher": "match (:ENTITY{name:'teacher'}) <- [:Relationship{name:'profession'}]- (x) return x.name limit 3"}, {"query": "What are the best-selling games developed by Nintendo?", "cypher": "match (:ENTITY{name:'Nintendo Corporation'}) <- [:Relationship{name:'developer'}]- ((m), (m) - [:Relationship{name:'best selling game'}]->(n)? return distinct m.name,n.name"}, {"query": "Who is the voice of the Saint Warrior star? Name 10?", "cypher": "match (x:ENTITY{name:'Sandwich Star'\u03a9'}) <- [:Relationship{name:'Log in work'}]-(h) - [:Relationship{name:'sounding'}]->(n) return distinct n.name limit 10"}, {"query": "Can you list the top 5 achievements of Steppenwolf?", "cypher": "match (m:ENTITY{name:'Stephan'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'main achievement'}]->(p) return distinct p.name limit 5"}, {"query": "The list of 7 dishes and their ingredients.", "cypher": "match (:ENTITY{name:'dishes'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'ingredients'}]->(n) return m.name, n.name limit 7"}, {"query": "Help me find 10 companies with more than 3,000 employees.", "cypher": "match (:ENTITY{name:' company'}) <- [:Tag{name:' tag'}]-(m), (m) - [:Relationship{name:' employee'}]->(n) where substring ((n.name, 0,4)>'3000' return m.name limit 10"}, {"query": "Do you know all the relationships that are involved in the three layers of the coffee? Can you tell me five?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Kinshasa's most powerful coffee'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "Can you name the nine B-series exhibitions?", "cypher": "match (:ENTITY{name:'B level'}) <- [:Relationship{name:'car show level'}]- (x) return x.name limit 9"}, {"query": "Do you know the information within the 5 tier relationships of the technology products education technology services platform?", "cypher": "match (n:ENTITY{name:' Educational technology service platform'}) - [*1..5]->(x) where x.name <> 'technology product' return distinct x.name"}, {"query": "Can you name five pieces of work representing Avi Federgreen?", "cypher": "match (:ENTITY{name:'Avi Federgreen'}) - [:Relationship{name:'represents work'}]-> (x) return distinct x.name limit 5"}, {"query": "Please tell me which people are directors by profession?", "cypher": "match (:ENTITY{name:' director'}) <- [:Relationship{name:' profession'}]- (n) return distinct n.name limit 10"}, {"query": "Do you know what kind of relationships are involved in the two layers of Wonder Woman?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you give me a detailed description of the four-tier relationship between the Cultural Activist and the Relief Society for the Disabled?", "cypher": "match (n:ENTITY{name:'People's Representative for the Relief of the Disadvantaged'}) - [*1..4]->(x) where x.name<>'cultural activities' return distinct x.name"}, {"query": "Who was born at the same time as Emeka Joseph, and what are their labels?", "cypher": "The following is a list of all the different ways Emeka Joseph is credited in the database:"}, {"query": "Can you give me all the information about the traffic accident in Fujian's Fujian district on 11/17?", "cypher": "match (h:ENTITY{name:'11.17 Fujian Fujian City Road Accident'}) --(n) with n order by n.name where n.name <> 'social event' return n.name"}, {"query": "Do you know the professional background of this person from Yangtze Mountain? Can you give me 5 things?", "cypher": "match (:ENTITY{name:'Thanks for the help}) <- [:Relationship{name:'Teacher'}]-(h),(h) - [:Relationship{name:'Profession'}]->(n) return n.name order by n.name limit 5"}, {"query": "Do you know how many exhibitions are held in Shanghai International Expo Center?", "cypher": "match (:ENTITY{name:' Shanghai International Exhibition Centre'}) <- [:Relationship{name:' Hosted exhibition hall'}]- (m) return m.name limit 9"}, {"query": "Can you name some names related to the field of psychology?", "cypher": "match (:ENTITY{name:' psychology'}) <- [:Relationship{name:' field'}]- ((n) - [:Relationship{name:' alias'}]->(x) return distinct x.name"}, {"query": "Find the same price as the old one and tell me what their respective labels are, then reorder them by number of labels and give them to me.", "cypher": "The following is a list of the most commonly used and used commands in the Windows operating system:"}, {"query": "Can you list the relationships that are covered in the two levels of the cabinet's CV?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'cursor'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you tell me the names of the relationships in the four layers involved in the following curve?", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:' down curve'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I would like to know five personal details about the football player Vesterinen Jan, who has no less than four levels of relationships.", "cypher": "match (n:ENTITY{name:'Vesterinen Jan'}) - [*1..4]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "What chemical is C10H18Si2?", "cypher": "match (:ENTITY{name:'C10H18Si2'}) <- [:Relationship{name:'molecular'}]- (m) return distinct m.name"}, {"query": "Can you list the main achievements of Rockin' Rose?", "cypher": "match (:ENTITY{name:'RockinRose'}) <- [:Relationship{name:'foreign language name'}]- ((p),(p) - [:Relationship{name:'main achievement'}]->(x) return distinct x.name"}, {"query": "The author of the newly published novel, Chi Chi and Me, can you help me find out?", "cypher": "match ((:ENTITY{name:'reproduction: Chichi and Miki'}) - [:Relationship{name:'novel author'}]-> (q) return q.name"}, {"query": "Can you name four people who have given their stories about where they were born?", "cypher": "match (:ENTITY{name:'scenario description'}) <- [*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name, n.name limit 4"}, {"query": "What is the channel distributed in the 3D swinging prize hall of the Welfare Lottery Center?", "cypher": "match (:ENTITY{name:'Welfare Lottery Center 3D swinging hall'}) <- [:Relationship{name:'distributed location'}]- (n) return distinct n.name"}, {"query": "I would like to know all the details about the reconstruction of the cruciate ligament of the knee, which is called ligamenta cruciata genu reconstruction.", "cypher": "match (n:ENTITY{name:'Knee cruciate ligament reconstruction'}) - [:Relationship*]->(x) where x.name<>'ligamenta cruciata genu reconstruction' return distinct x.name"}, {"query": "The car portal 0413 is a car portal that is used by the Chinese government to promote the car industry.", "cypher": "match (:ENTITY{name:'0413 smooth car network'}) --(x) with x order by x.name where x.name <> 'car portal' return x.name"}, {"query": "The first 10 gold coins were issued for the words other than the word \"Mummy\".", "cypher": "match (:ENTITY{name:'\u91d1\u4e00'}) <- [:Relationship{name:'\u672c\u540d'}]-(h) - [:Relationship{name:'\u540d\u5b57'}]->(m) where m.name <> 'silent' return distinct m.name limit 10"}, {"query": "What is 0593?", "cypher": "match (:ENTITY{name:'0593'}) --(h) with h order by h.name return h.name"}, {"query": "What is the headquarters of the Public Library in Beijing?", "cypher": "match (:ENTITY{name:'Public utility library'}) <- [:Relationship{name:'Company nature'}]- (mn) - [:Relationship{name:'Hall of business'}]->(n:ENTITY{name:'Beijing'}) return mn.name"}, {"query": "Share some of George Walker Bush's major accomplishments here.", "cypher": "match (:ENTITY{name:'George Walker Bush'}) - [:Relationship{name:'major achievement'}]-> (x) return distinct x.name"}, {"query": "Can you find me five books on economics published by the publishing house Mechanical Industries?", "cypher": "match (:ENTITY{name:' publisher'}) <- [:Relationship{name:' publisher'}]- ((m), (m) - [:Relationship{name:' packaged'}]->(n) where n.name='packaged' return m.name limit 5"}, {"query": "The problem is that there is a personal information link to Nduka Usim in the following two levels of relationships?", "cypher": "match (n:ENTITY{name:'Nduka Usim'}) - [*1..2]->(x) where x.name<>'Nduka Usim' return distinct x.name"}, {"query": "How much are Ding Xiaotong's books priced?", "cypher": "match (:ENTITY{name:'\u4e01\u5b66\u4e1c \u7f16'}) <- [:Relationship{name:' author'}]- ((n) - [:Relationship{name:' pricing'}]->(q) return distinct q.name limit 2"}, {"query": "Who are the French poets?", "cypher": "match (:ENTITY{name:'poet'}) <- [:Relationship{name:'profession'}]-(m), (m) - [:Relationship{name:'nationality'}]->(n) where n.name='France' return m.name"}, {"query": "Where is the famous stone castle in Merlo, Xinjiang?", "cypher": "match (:ENTITY{name:'Marlowe City, Shanxi Province'}) <- [:Relationship{name:'town'}]-(m), (m) - [:Relationship{name:'famous attractions'}]->(n) where n.name='Steinjungszijn' return distinct m.name"}, {"query": "I want to know which novel has 519481 words in total.", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "I would like to know the description of the work in the relationship between GB/T8137-2009 Particulate Violet 2 layer in simple Chinese?", "cypher": "match (n:ENTITY{name:'GB/T8137-2009 Particles of Purple Xylem'}) - [:Relationship*1..2]->(x) where x.name <> 'simplified Chinese' return distinct x.name"}, {"query": "I'm going to show you a list of 10 novels that are both online and romance novels.", "cypher": "The following is a list of all the characters that appear in the game."}, {"query": "I want to know about the five personal profiles of this McDonnell John?", "cypher": "match (n:ENTITY{name:'McDonnell John'}) - [*]->(x) where x.name<>'person' return distinct x.name limit 5"}, {"query": "The 2011 China International Building Structure and Engineering Technology Expo is packed with people, how many do you estimate?", "cypher": "match ((:ENTITY{name:'2011 China International Architectural and Engineering Technology Exhibition'}) - [:Relationship{name:'number of visitors'}]-> (n) return n.name"}, {"query": "Do you know what kind of music is the most powerful in Sanskrit?", "cypher": "match ((:ENTITY{name:'Sennheiser'}) - [:Relationship{name:'work type'}]-> (m) return m.name"}, {"query": "The 14th Home Health Expo 2013 is an event that is approved by which unit?", "cypher": "match ((:ENTITY{name:'2013 Fourteenth Annual Home Health Exhibition'}) - [:Relationship{name:' Approved Unit'}]-> (x) return x.name"}, {"query": "Tell me about the three summers of the Circular God Press.", "cypher": "match (:ENTITY{name:'3 summers'}) --(x) with x order by x.name where x.name <> 'Dark God Publishing' return x.name"}, {"query": "Is it difficult to recommend a business-style calendar?", "cypher": "match (:ENTITY{name:' business style'}) <- [:Relationship{name:' style'}]- (n) return n.name"}, {"query": "Can you tell me about one of the professions of this Chinese person?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(p) - [:Relationship{name:'profession'}]->(x) return x.name skip 1 limit 1"}, {"query": "I'm not sure if you can give me the profile of Hachad Mohamed, a Moroccan, in the three levels of his relationship.", "cypher": "match (n:ENTITY{name:'hachad Mohamed'}) - [*1..3]->(x) where x.name<>'Morocco' return distinct x.name"}, {"query": "What exhibition is coming from 28/06/2011 to 30/06/2011?", "cypher": "match (:ENTITY{name:'2011/6/28 to 2011/6/30'}) <- [:Relationship{name:'exhibition time'}]- (n) return n.name"}, {"query": "What profession did the people born in Jiangsu, Wuxi, have?", "cypher": "match (:ENTITY{name:'Jiangsu Wuxi'}) <- [:Relationship{name:'birthplace'}]- ((h) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 10"}, {"query": "How do you spell the English name of 2-amino-6-methacrylate in the book?", "cypher": "match ((:ENTITY{name:'2-amino-6-methacrylate'}) - [:Relationship{name:' English name'}]-> (p) return p.name"}, {"query": "Can you tell me who's main achievement was to create the Newar shipping company and make steamboat navigation on the Magdalena River possible?", "cypher": "match (:ENTITY{name:'Founded the Naval Shipping Company to enable steamship navigation on the Magdalena River'}) <- [:Relationship{name:' Major achievements'}]- (n) return n.name order by n.name limit 1"}, {"query": "What is the nickname of a person born on November 30?", "cypher": "match (n:ENTITY{name:'30 November'}) <- [:Relationship{name:'date of birth'}]- ((x) - [:Relationship{name:'alias'}]->(h) return distinct h.name limit 1"}, {"query": "The student choir of Xi'an University is also known as?", "cypher": "match (:ENTITY{name:'Shian Siang University Choir'}) <- [:Relationship{name:'alias'}]- (q) return distinct q.name"}, {"query": "Our lab needs to use S-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E-E", "cypher": "match ((:ENTITY{name:'(S) - ((-) - for ethanol) }) - [:Relationship{name:'flashpoint'}]-> (x) return x.name"}, {"query": "The book is a must read for 0-3 year olds: 300 mistakes new moms make, what else is there?", "cypher": "match (:ENTITY{name:'0~3 years of age feeding must read: 300 common mistakes of beginners'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'publication' return h.name"}, {"query": "Can you tell me which school's master's degree is a joint master's degree of the University of Korea?", "cypher": "match (:ENTITY{name:' Jointly operated Master's degree'}) <- [:Relationship{name:'Master's degree'}]- (m) return m.name order by m.name"}, {"query": "The end of the world is a novel that is connected to the Chinese internet, and it sounds good, do you know what kind?", "cypher": "match ((p:ENTITY{name:'End of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the world: end of the beginning of the world: end of the world: end of the world: end of the beginning of the world: end of the end of the world: end of the end of the end of the world: end of the end of the end of the end of the world: end of the end of the end of the end of the end of the end of the end)"}, {"query": "Can you help me find out about Zhang Guo?", "cypher": "match (:ENTITY{name:'swing'}) - [*1..3]-(p) return p.name limit 10"}, {"query": "Tell me about the work within the three-tier relationship that is being sent to you by the company.", "cypher": "match (n:ENTITY{name:'reward forwarded'}) - [:Relationship*1..3]->(x) where x.name<>'tinfoil' return distinct x.name"}, {"query": "What are the pros of the smart poker tournament in Guangdong?", "cypher": "match (:ENTITY{name:'Intelligent Jacket'}) <- [:Relationship{name:'event type'}]-(m), (m) - [:Relationship{name:'location held'}]->(n) where n.name='Guangdong province' return m.name"}, {"query": "I would like to know what exhibitions are there on building materials?", "cypher": "match (:ENTITY{name:' building material'}) <- [:Relationship{name:' subject'}]- (h) return h.name"}, {"query": "Did you find any information about the five Maltese Falzon Dyson?", "cypher": "match (n:ENTITY{name:'Falzon Dyson'}) - [*]->(x) where x.name<>'Malta' return distinct x.name limit 5"}, {"query": "Help me find a place to play all year round.", "cypher": "match (:ENTITY{name:'all year round'}) <- [:Relationship{name:' suitable season'}]- ((m) return m.name limit 1"}, {"query": "Can you help me find the 101 articles of lifelong learning?", "cypher": "match (:ENTITY{name:'101 articles of lifelong experience'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'publication' return n.name"}, {"query": "Where is the first hospital affiliated with Jammu University?", "cypher": "match (:ENTITY{name:'Relationship{name:'Hospital address'}}) - >(n) return n.name"}, {"query": "Tell me about a major incident that happened in this sporting project where the men shot 25 meters with a pistol.", "cypher": "match (:ENTITY{name:'Men's 25m pistol shot'}) <- [:Relationship{name:'Sports project'}]-(m) - [:Relationship{name:'important event'}]->(h) return h.name order by h.name limit 1"}, {"query": "Can you describe the song \"Blood\" from the movie?", "cypher": "match (:ENTITY{name:'Pink Brooklin'}) --(p) return p.name skip 3 The name of the game is the same as the name of the game"}, {"query": "Can you list the 17 TV series that Hunan TV has broadcast?", "cypher": "The game is based on the game of the same name."}, {"query": "Who among the actors graduated from Shanghai University of Arts?", "cypher": "match (:ENTITY{name:'Shanghai University of the Arts'}) <- [:Relationship{name:' Graduate School'}]-(m), (m) - [:Relationship{name:' Career'}]->(n) where n.name='Actor' return distinct m.name"}, {"query": "Please help me find the other 5 information about footballer Stephen Muiko Kolo in level 2 .", "cypher": "match (:ENTITY{name:'Stephen Muyokolo'}) - [:Relationship*1..2]-(p) where p.name <> 'footballer' return p.name limit 5"}, {"query": "Do you know the loyal prince?", "cypher": "match (n:ENTITY{name:'loyal prince'}) --(x) return x.name"}, {"query": "Do you know, Lord Rabbit?", "cypher": "match (:ENTITY{name:'His Holiness the Monkey'}) --(x) return x.name skip 1"}, {"query": "Do you have information on the five names of the relationships within the six layers involved in Chen Bo Nu's leather case?", "cypher": "The following pages link to The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknown"}, {"query": "Can you tell me about the five relationships within the six layers of the Solar System's three-ring to four-ring migration record?", "cypher": "match path=(n) <- [:Relationship*6]- ((p:ENTITY{name:' Solar system three ring to four ring relocation records'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Please help me to find out the principles and applications of RF technology.", "cypher": "match (:ENTITY{name:'radio frequency technology'}) - [:Relationship{name:'principle'}]->(n) return n.name as name union all match (:ENTITY{name:'radio frequency technology'}) - [:Relationship{name:'main application'}]->(m) return m.name as name"}, {"query": "What is the shortest path between the two layers of soy and sweet almond tofu?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest'}) - [*..2]-(b:ENTITY{name:'milk and almond tofu'})) return count ((p)"}, {"query": "What is the name of a Chinese person with a symbol?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(n),(n) - [:Relationship{name:'main works'}]->(h) return n.name order by n.name limit 3"}, {"query": "Help me find 10 works by Liu Xiaobo other than the Mekong operation.", "cypher": "match (n:ENTITY{name:'\u5609\u9f99'}) - [:Relationship{name:'main works'}]->(h) with h order by h.name where h.name <> 'Mekong action' return h.name limit 10"}, {"query": "What are the main awards that Yue Red Primary School has received? Can you name 3?", "cypher": "match (:ENTITY{name:'Yurudong Primary School is a five-star school located in the center of the city of Sanyang, founded in 1958, covering an area of 15172.52 square meters, the first key elementary school in Liaoning Province."}, {"query": "Help me find a Korean dish made with beef.", "cypher": "match (:ENTITY{name:'beef'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='North Korean cuisine' return distinct m.name limit 1"}, {"query": "What are some of Chen Bre's most representative works?", "cypher": "match (:ENTITY{name:' Chen Bray'}) - [:Relationship{name:'representing work'}]-> (m) return distinct m.name"}, {"query": "I want to ask you about the famous White Tower.", "cypher": "match (:ENTITY{name:'White Tower'}) <- [:Relationship{name:'Famous attractions'}]- (n) return distinct n.name"}, {"query": "What is the name of a movie about a myth that says that a person earns $60,000 in 45 days?", "cypher": "match (:ENTITY{name:'45 days net worth 60000 yuan myth'}) <- [:Relationship{name:'event'}]- (p) return p.name"}, {"query": "Can you give me some information about Jobar?", "cypher": "match (:ENTITY{name:'Jobberware'}) --(x) return x.name skip 3 This is a list of all the different ways Jobberware is credited in the database."}, {"query": "Can you tell me about the mycotoxins?", "cypher": "match (:ENTITY{name:'Bacillus'}) --(x) return x.name skip 3 This is a list of all the different ways BACillus is credited in the database."}, {"query": "Do you know what the three-layer relationship is called at Grey's School of Magic?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Grey's School of Magic'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "I know that the East Lake Wetland Reserve is in the city of Anda, in the province of Helanggang, and is also a provincial reserve, so please give me more information about it, find 10 of them.", "cypher": "match (n:ENTITY{name:'Tong Lake Wetland Reserve'}) -->(h) with h order by h.name where h.name <> 'Ananda City, Heilongjiang Province' and h.name <> 'Province' return h.name limit 10"}, {"query": "What kind of games can a person play besides the games of the intellectual class?", "cypher": "match (:ENTITY{name:'single person'}) <- [:Relationship{name:'number of players'}]-(m),(m) - [:Relationship{name:'game type'}]->(n) where n.name <> 'intelligent' return distinct n.name limit 1"}, {"query": "I was asked to give three Japanese Navy officers their ethnicity.", "cypher": "match (:ENTITY{name:'Japanese Navy'}) <- [*]-(m), (m) - [:Relationship{name:'ethnic group'}]->(n) return m.name, n.name limit 3"}, {"query": "What is the shortest path between Zhu Yucheng and Chen Jianxin in the two levels?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'\u5468\u5fc6\u6e05'}) -[:Relationship*..2]-(b:ENTITY{name:'\u9648\u5efa\u6b23[painter]'})) return count ((p) This is the first time that a match has been made between two different paths."}, {"query": "Do you know which exhibitions are held in the China International Expo Center?", "cypher": "match (:ENTITY{name:'China International Exhibition Centre'}) <- [:Relationship{name:'Exhibition and exhibition hall'}]- (x) return x.name"}, {"query": "Except for the fact that it was published by the Sichuan University of Transportation Press, what else do you know about digital transmission engineering?", "cypher": "match (:ENTITY{name:' Digital transmission engineering'}) - [*1..2]-(p) where p.name <> 'Sian Transport University Publishing' return distinct p.name limit 8"}, {"query": "Do you know what the basic principle of radar is?", "cypher": "match (:ENTITY{name:'Radar'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'basic principle'}]->(n) return distinct n.name"}, {"query": "Can you tell me what other titles my Liu Qing has besides craft artist from Jiangxi Province?", "cypher": "match (:ENTITY{name:'Pengqing'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'Profession'}]->(x) where x.name <> 'Artisanal artist from Jiangxi province' return distinct x.name limit 1"}, {"query": "I want to know where the fourth meeting of Chen Jian talks in Taiwan will be held.", "cypher": "match (:ENTITY{name:' the fourth time Chen Jiang talks'}) - [*1..2]-(p) where p.name <> 'Taichung' return p.name limit 6"}, {"query": "How many labels can you put on a 1-amino-2-alkyl-4-hydroxybenzyl?", "cypher": "match (:ENTITY{name:'1-amino-2-alkyl-4-butadiene'}) - [:Tag{name:'label'}]-> (x) with x order by x.name return x.name"}, {"query": "Check out these 5 tips from football player Puta Tree:", "cypher": "match (n:ENTITY{name:'Putai'}) - [*]->(x) where x.name <> 'footballer' return distinct x.name limit 5"}, {"query": "Is there any information about the publication 13th House?", "cypher": "match (:ENTITY{name:'13 murder house'}) --(q) with q order by q.name where q.name <> ' publication' return q.name"}, {"query": "What is the name of the city other than Summer City?", "cypher": "match (:ENTITY{name:'City'}) - [:Relationship{name:'Like name'}] - (x) with x order by x.name where x.name <> 'City' return x.name"}, {"query": "What else do you know about him? Find 8 information in 3 layers.", "cypher": "match (:ENTITY{name:'in progress'}) - [*1..3]-(p) where p.name <> 'anxious' return p.name limit 8"}, {"query": "Please help me find 10 Rancho plants, what are their names?", "cypher": "match (:ENTITY{name:'Ranco'}) <--(m),(m) - [:Relationship{name:'School name'}]->(n) return n.name limit 10"}, {"query": "Do you have any doctors with a bachelor's degree? Can you find three for me?", "cypher": "match (:ENTITY{name:' bachelor's'}) <- [:Relationship{name:' degree'}]-(m), (m) - [:Relationship{name:' profession'}]->(n) where n.name='doctor' return m.name limit 3"}, {"query": "What kind of jobs do people born in Yangon, Shandong province, do?", "cypher": "match (:ENTITY{name:'Changming counties'}) <- [:Relationship{name:'place of birth'}]- ((h) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 1"}, {"query": "Can you tell me which provincial road has the number 10, 8, 6, 4 lanes?", "cypher": "match (:ENTITY{name:'10 lane,8 lane,6 lane,4 lane'}) <- [:Relationship{name:'lane'}]- (m) return distinct m.name"}, {"query": "Do you recommend the two novels that are still in the series?", "cypher": "The title of the novel is \"The Story of a Girl\" by the author of the novel, and the title of the novel is \"The Story of a Girl\"."}, {"query": "What are the main departments of the Self-Employment Vocational Training Institute, and what are the two departments besides the Electronic Electrical Engineering and Mechanical Engineering departments?", "cypher": "match (n:ENTITY{name:'Relationship{name:'main faculty'}]->(h) where h.name <> 'Electronic and electrical engineering laboratory' and h.name <> 'Mechanical engineering laboratory' return distinct h.name limit 2"}, {"query": "Where are the silverleaf ferns distributed?", "cypher": "match (:ENTITY{name:' silver leaf crab'}) - [:Relationship{name:' distribution area'}]->(n) return n.name as name union all match (:ENTITY{name:' silver leaf crab'}) - [:Relationship{name:' protection level'}]->(m) return m.name as name"}, {"query": "Do you have any information about this man Martin Stock?", "cypher": "The name of the game is \"Martin Stock\"."}, {"query": "What are the main achievements of people born in Shanghai?", "cypher": "match (:ENTITY{name:'Shanghai City'}) <- [:Relationship{name:'Birthplace'}]- ((q),(q) - [:Relationship{name:'Main achievements'}]->(p) return distinct p.name limit 10"}, {"query": "I'm a young man with a very strong family and a very strong sense of community.", "cypher": "match (n:ENTITY{name:'Jindong'}) - [*1..3]->(x) where x.name <>'70 kg' return distinct x.name"}, {"query": "Can you do that?", "cypher": "match (:ENTITY{name:'11:14'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "Please help me find out what ingredients are needed for the hot chicken and silk salad?", "cypher": "match (:ENTITY{name:'sweet stew'}) - [:Relationship{name:'main ingredient'}]-> (m) return distinct m.name"}, {"query": "Please tell me which company is headquartered in Dalei Economic and Technological Development Zone, Liaoning Province, in the 35th floor of the building 1-6-2 in the city of Yangzhou.", "cypher": "match (q:ENTITY{name:'Dalean Economic and Technological Development Zone, Liaoning Province, Liaoning, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan, Taiwan)"}, {"query": "I want to know 5 facts about Rwanda football player Uwacu Jean Bosco.", "cypher": "match (n:ENTITY{name:'Uwacu Jean Bosco'}) - [*]->(x) where x.name<>'Rwanda' return distinct x.name limit 5"}, {"query": "Tell me about the work of Lin Lin, who sent Wang Dao to the two-tier relationship?", "cypher": "match (n:ENTITY{name:' send the king into the box'}) - [:Relationship*1..2]->(x) where x.name <>'conjunction box' return distinct x.name"}, {"query": "Don't call him \"Khul-Jah\", tell me his first name and his main accomplishments.", "cypher": "match (:ENTITY{name:'comforted'}) <- [:Relationship{name:'alias'}]- ((q) - [:Relationship{name:'main achievement'}]->(p) return distinct q.name, p.name"}, {"query": "I would like to hear about Shelley.P.B. Please list the first three.", "cypher": "match (:ENTITY{name:' Shelley\u3002P.B.'}) --(p) return p.name order by p.name limit 3"}, {"query": "What is the width of the 1024 MB GDDR3 graphics card?", "cypher": "match (:ENTITY{name:'1024MB GDDR3'}) <- [:Relationship{name:' displayed storage capacity'}]-(h) - [:Relationship{name:' displayed storage width'}]->(n) return distinct n.name"}, {"query": "What is the model/class of the newly launched Type 081 minesweeper?", "cypher": "match ((:ENTITY{name:'081 type minesweeper'}) - [:Relationship{name:'pre-type class'}]-> (m) return m.name"}, {"query": "I'm going to introduce you to this person who was born in Beijing, what is his work?", "cypher": "match (p:ENTITY{name:'Beijing'}) <- [:Relationship{name:'place of birth'}]-(n) - [:Relationship{name:'representative work'}]->(m) return m.name skip 1 limit 3"}, {"query": "The main use of this substance is for the production of oxide of tungsten, do you know?", "cypher": "match ((:ENTITY{name:'2-hydroxybutyric acid'}) - [:Relationship{name:'use'}]-> (q) return q.name"}, {"query": "The following page provides a list of the 92 paintings that are related to the three layers of mythology.", "cypher": "match (n:ENTITY{name:'drawing a goddess into a myth'}) -[:Relationship*1..3]->(x) where x.name <>'92 page' return distinct x.name"}, {"query": "What else do you know about the blue-green algae world besides that it has been around for 3 billion years?", "cypher": "match (:ENTITY{name:' blue algae community'}) - [:Relationship*1..2]-(p) where p.name <> 'about 3 billion years' return p.name limit 10"}, {"query": "Can you introduce me to two books priced at $20?", "cypher": "The following is a list of the most commonly used keywords in the search results."}, {"query": "The following is an introduction to the relationship software in the 4th layer of the software called Primary School Synchronization in Chinese.", "cypher": "match (n:ENTITY{name:' primary sync'}) - [*1..4]->(x) where x.name <> 'primary sync' return distinct x.name"}, {"query": "What are the main awards in public high schools? List 5?", "cypher": "match (:ENTITY{name:'public high school'}) <- [:Relationship{name:' category'}]- ((x) - [:Relationship{name:' major award'}]->(h) return distinct h.name limit 5"}, {"query": "What is the fish of the genus of the squid other than the tall plains squid?", "cypher": "match (:ENTITY{name:'Key'}) <-[:Relationship{name:'Key'}]-(m) where m.name <> 'high heels' return distinct m.name"}, {"query": "Give three professions that do not include members of the Party Group of the People's Court of Huazhong County who believe in communism.", "cypher": "match (:ENTITY{name:'Communism'}) <- [:Relationship{name:'faith'}]-(h) - [:Relationship{name:'profession'}]->(p) where p.name <> 'Washington County People's Court party member' return distinct p.name limit 3"}, {"query": "The Russian President Vladimir Putin has asked the Russian government to declare a national holiday in the Russian state of Petrograd.", "cypher": "match (:ENTITY{name:'Petrosavozk'}) <- [:Relationship{name:'capital'}]- ((x),(x) - [:Relationship{name:'National Day'}]->(q) return distinct q.name"}, {"query": "Do you know what year the concept of Kabbalah was born?", "cypher": "match (:ENTITY{name:'Kaboo'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'rise time'}]->(n) return distinct n.name limit 2"}, {"query": "Can you name some of the venues where the games are held on hard courts?", "cypher": "match (:ENTITY{name:'outdoor  hard ground'}) <- [:Relationship{name:'match venue'}]- (p) return distinct p.name"}, {"query": "Do you know what kind of job Northeast Khawaja has, say the first one is better?", "cypher": "match (:ENTITY{name:'Northeast Flower'}) - [:Relationship{name:' occupation'}]-> (q) return q.name order by q.name limit 1"}, {"query": "What are the top 10 brands with Japanese and Korean brand labels?", "cypher": "match ((:ENTITY{name:'Japanese brand'}) < - [:Tag{name:'tag'}]-> (m) with m order by m.name limit 10 return m.name"}, {"query": "What are the members of the board of directors of the Shanghai Association for Cultural Exchange Abroad?", "cypher": "match (:ENTITY{name:'Shanghai City Council of the Association for Cultural Exchange'}) <- [:Relationship{name:' as '}]-(x),(x) - [:Relationship{name:' Chinese name'}]->(q) return distinct q.name"}, {"query": "Do you know what three other names for Potosi in England are?", "cypher": "match (:ENTITY{name:'Portoxy, England'}) <- [:Relationship{name:'place of birth'}]- ((n) - [:Relationship{name:'alias'}]->(p) return distinct n.name limit 3"}, {"query": "I remember a game with a score of 6 (Monk, Monk, Yellow, Hot Beer, Wonderful, Perfect)", "cypher": "match (:ENTITY{name:'6 ((monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, monk, mon"}, {"query": "Do you have any idea what the rated voltage of your 10KV circuit breakers is?", "cypher": "match ((:ENTITY{name:'10KV circuit breaker'}) - [:Relationship{name:'rated voltage'}]-> (m) return m.name"}, {"query": "It is said that there were a lot of athletes competing in the 2010 Beijing International Marathon, do you know how many?", "cypher": "match ((:ENTITY{name:'2010 Beijing International Marathon'}) - [:Relationship{name:' number of athletes'}]-> (q) return q.name"}, {"query": "Where is the worship center of the sun god Amun?", "cypher": "match (:ENTITY{name:'Center of worship of the sun god Amon'}) --(x) return distinct x.name"}, {"query": "How many books of 32 pages have been published by Kyushu Publishing, and how many of the 10 are listed?", "cypher": "The following pages link to List of Chinese newspapers by country:"}, {"query": "I'm not sure what songs Chen Yue originally sang.", "cypher": "match (x:ENTITY{name:'Chen Yue'}) <- [:Relationship{name:'original song'}]- (m) return distinct m.name"}, {"query": "The full story of the 2007 cricket match?", "cypher": "match (:ENTITY{name:'07 cricket game'}) --(p) with p order by p.name return p.name"}, {"query": "Can you name the three teams from the Eastern Conference, and help me introduce them?", "cypher": "match (:ENTITY{name:'Eastern Union'}) <- [*]-(m), (m) - [:Describe{name:'describe'}]->(n) return distinct m.name, n.name limit 3"}, {"query": "What is the most representative work of Wu Shih-Tseung, the stage technician of the People's Art Theatre in Wuhan?", "cypher": "match (:ENTITY{name:'Wang Xie Red, stage technician, stage technician of the Wuhan People's Art Theatre\u3002'}) <- [:Describe{name:'description'}]-(x),(x) - [:Relationship{name:'representing work'}]->(h) return distinct h.name"}, {"query": "Who is Antonio Margheriti do you know?", "cypher": "match (:ENTITY{name:'Antonio Margheriti'}) --(h) return h.name order by h.name"}, {"query": "Can you name the organizations that were founded in 1968?", "cypher": "match (:ENTITY{name:'1968'}) <- [:Relationship{name:'time of creation'}]- (x) return distinct x.name"}, {"query": "What is the specifications model of the 1-amino cyclohexanate for laboratory use?", "cypher": "match ((:ENTITY{name:'1-amino ring phosphate'}) - [:Relationship{name:'specifications and model'}]-> (h) return h.name"}, {"query": "Can you find me two books published by Scholastic Publishing?", "cypher": "match (:ENTITY{name:'Bachelor's degree'}) <- [:Relationship{name:'Bachelor's degree'}]- ((n) - [:Relationship{name:'Bachelor's degree'}->(q) return distinct q.name limit 2"}, {"query": "What are the characteristics of the company named 1+1 supermarket?", "cypher": "match (:ENTITY{name:'1+1 supermarket'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'company' return h.name limit 10"}, {"query": "Can you give a poetic introduction to the five-layer relationship of this poem in the frost?", "cypher": "match (n:ENTITY{name:'in the middle'}) - [*1..5]->(x) where x.name<>'poem' return distinct x.name limit 5"}, {"query": "Do you know the Canoe Shield K360A-i3BD1?", "cypher": "match (n:ENTITY{name:' the Ark of the Covenant K360A-i3BD1'}) --(x) return x.name"}, {"query": "Do you know which schools were in the 1920s in Tianjin's Baoding District?", "cypher": "match (:ENTITY{name:'1920'}) <- [:Relationship{name:'time of founding'}]-(m), (m) - [:Relationship{name:'area to which belongs'}]->(n) where n.name='Bawun District of Tianjin City' return m.name limit 2"}, {"query": "What is muscle protein?", "cypher": "Match (n:ENTITY{name:'muscle protein'}) - [:Tag{name:'tag'}]-> (h) return h.name"}, {"query": "Do you know of any metal material with a tensile strength of \u2265585 (MPa)?", "cypher": "The following is a list of the most commonly used parameters for the calculation of the maximum power of a device:"}, {"query": "What are the two main representations of the Yoga literature?", "cypher": "match ((:ENTITY{name:'Yue Literature [Master of Political Science, former director of the Department of Political Science at Tsinghua University]'}) - [:Relationship{name:'represents works'}]-> (n) return n.name limit 2"}, {"query": "The EINECS registration number for which chemical is 209-057-8?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Is there a way to search for the characteristic tag 103H548-0440?", "cypher": "match (:ENTITY{name:'103H548-0440'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "Do you know which versions of the software are 1.0.0 (new version coming soon?)", "cypher": "match (:ENTITY{name:'1.0.0(new version coming soon;\u00b7\u00b7) '}) <-[:Relationship{name:' version'}]- (h) return distinct h.name"}, {"query": "The project is a collaboration between the two companies, and the project is a collaboration between the two companies.", "cypher": "match (n:ENTITY{name:'7 degrees warming: creating a world of confusion'}) - [:Relationship*1..2]->(x) where x.name <>'32' return distinct x.name"}, {"query": "Can you tell me what kind of relationship is involved in summoning the dead at the two levels?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'calling the dead'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you tell me 5 things about the 1.80-metre Mazurkiewicz in no more than 5 relationships?", "cypher": "match (n:ENTITY{name:'Mazurkiewicz'}) - [*1..5]->(x) where x.name <>'1.80 m' return distinct x.name limit 5"}, {"query": "What books were published on 4/1/2009? By which publisher?", "cypher": "match (:ENTITY{name:'2009/4/1'}) <- [:Relationship{name:' time of publication'}]-(h),(h) - [:Relationship{name:' publisher'}]->(q) return distinct h.name,q.name"}, {"query": "The theme of the event is Hello World, what is the name of the event?", "cypher": "Match (:ENTITY{name:'hello world'}) <- [:Relationship{name:'subject'}]- (n) return n.name"}, {"query": "The following is a list of the three levels of government relations in the 2007 Jiangmen Municipal Government Work Report:", "cypher": "match (n:ENTITY{name:'2007 Jiangmen City Government work report'}) - [*1..3]->(x) where x.name <>'2007 Jiangmen City Government work report' return distinct x.name"}, {"query": "Please list one person born in 1974 and one representative work owned by this person.", "cypher": "match (:ENTITY{name:'1974'}) <- [:Relationship{name:'date of birth'}]- ((q),(q) - [:Relationship{name:'representative work'}]->(n) return q.name,n.name skip 2 limit 1"}, {"query": "Is there any other relevant knowledge about anti-5-acrylamide besides writing C10H20O?", "cypher": "match (:ENTITY{name:' anti-5-acrylic'}) --(p) with p order by p.name where p.name <> 'C10H20O' return p.name"}, {"query": "I'm not sure if you're familiar with the Chicago Bulls.", "cypher": "match (:ENTITY{name:'Chicago Bulls'}) <--(n) return n.name The team was ranked #8 in the nation by the Associated Press."}, {"query": "Can you name three exhibitions that are on display at Dalian World Expo Square?", "cypher": "match (:ENTITY{name:'Dalyane World Expo Square'}) <- [:Relationship{name:'Holding exhibition hall'}]- (n) return n.name limit 3"}, {"query": "Can you tell me what other occupations this person who is in charge of all government work has?", "cypher": "match (:ENTITY{name:'preside over the overall work of the government\u3002'}) <- [:Describe{name:'describe'}]-(x),(x) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 3"}, {"query": "Do you know the specific parameters of the temperature probe on the 11036 thermometer?", "cypher": "match ((:ENTITY{name:'11036 central thermometer'}) - [:Relationship{name:' temperature probe'}]-> (m) return m.name"}, {"query": "What events are being held at the Johannesburg Football City Stadium?", "cypher": "match (:ENTITY{name:'Football City Stadium'}) <- [:Relationship{name:'Place of the match'}]- (p) return distinct p.name"}, {"query": "Can you help me find a songwriter, producer in the US?", "cypher": "match (p:ENTITY{name:'United States'}) <--(x) -->(q:ENTITY{name:'composer, producer'}) return x.name"}, {"query": "About Daejeon: He is the director of the gynecological department of the Kawasaki Medical College affiliated hospital and has three other professions besides physician.", "cypher": "match (:ENTITY{name:'Daiz\u00e9\u541b'}) <- [:Relationship{name:'Chinese name'}]-(h) - [:Relationship{name:'profession'}]->(q) where q.name <> 'Director of Obstetrics and Gynecology at the Hospital Affiliated to Kawahara Medical College' return distinct q.name limit 3"}, {"query": "What awards has YANG Hak Seon won?", "cypher": "match (q:ENTITY{name:'YANG Hak Seon'}) <- [:Relationship{name:'foreign language name'}]-(h),(h) - [:Relationship{name:'main award'}]->(p) return distinct p.name"}, {"query": "Can you name two books that could be worth 16?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "I would like to know what the device that is responsible for modulation, transmission and reception in the infrared remote control system is called?", "cypher": "match (:ENTITY{name:' modulation, sending and receiving'}) <- [:Relationship{name:' infrared remote control system'}]- (x) return x.name"}, {"query": "What happened on December 2, 2015?", "cypher": "match (:ENTITY{name:'December 2, 2015'}) <- [:Relationship{name:' time'}]- (m) return distinct m.name"}, {"query": "Do you know what other literature Zhang Xiahou wrote?", "cypher": "match (:ENTITY{name:'Zhang Shuhua'}) <- [:Relationship{name:'written'}]- (x) return distinct x.name"}, {"query": "The article is about the five best Chinese wine brands.", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name <>'Relationship' return distinct x.name limit 5"}, {"query": "The first five Chinese names for the extinguishing storm?", "cypher": "match (:ENTITY{name:'extinguishing storm'}) - [:Relationship{name:'Chinese name'}]-> (n) with n order by n.name return n.name limit 5"}, {"query": "Do you know what technology is responsible for the pre-charging?", "cypher": "match (:ENTITY{name:'pre-loaded'}) <- [:Relationship{name:'technical origin'}]- (x) return x.name"}, {"query": "Who were the parties to the 1848 European Revolutionary War and where did it take place?", "cypher": "match (:ENTITY{name:'Revolution of 1848 in Europe'}) - [:Relationship{name:'both sides of the war'}]->(n) return n.name as name union all match (:ENTITY{name:'Revolution of 1848 in Europe'}) - [:Relationship{name:'place of occurrence'}]->(m) return m.name as name"}, {"query": "The film is based on the novel of the same name by the Chinese writer, who also wrote the screenplay for the film.", "cypher": "match (n:ENTITY{name:' and Hu Midchan's Choi Hye Rain Three'}) - [*1..4]->(x) where x.name <> '' return distinct x.name limit 5"}, {"query": "What are the main awards for those who have 13 (first + second) PhDs?", "cypher": "match (:ENTITY{name:'13(first level + second level) individuals'}) <-[:Relationship{name:'ph.d. point'}]-(n) -[:Relationship{name:'main award'}]->(m) return distinct m.name"}, {"query": "The following is a list of the works by the Japanese artist and composer, who are known for their work in the genre of Kintetsu-Tsujin.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'seven times' return distinct x.name"}, {"query": "What is the price and number of pages of this book on the biology of the pineal gland?", "cypher": "match (:ENTITY{name:'Relationship'}) - (n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - (m) return m.name as name union all match (:ENTITY{name:'Relationship'}) - (r) return r.name as name"}, {"query": "The article was written by a young woman from the city of Yangzhou, China, who is a student of the University of Hong Kong.", "cypher": "match (n:ENTITY{name:' difficult to put down children's paper folding size'}) - [:Relationship*1..3]->(x) where x.name <> 'Yangjiang Publishing' return distinct x.name"}, {"query": "Can you explain 1010 to me?", "cypher": "match (:ENTITY{name:'1010'}) --(m) with m order by m.name return m.name"}, {"query": "Do you know what kind of work is represented by professionals like screenwriters/actors/producers/assistant directors/composers?", "cypher": "match (:ENTITY{name:'writer/actor/producer/assistant director/composer'}) <- [:Relationship{name:'profession'}]-(n) - [:Relationship{name:'representing work'}]->(x) return distinct x.name"}, {"query": "In which region are the striped ventriloquists mainly distributed?", "cypher": "match (:ENTITY{name:'Relationship{name:'distribution area'}]-> (m) return distinct m.name"}, {"query": "Help me find five really amazing creatures.", "cypher": "match (:ENTITY{name:'true'}) <-[:Relationship{name:'spect'}]-(m) return distinct m.name limit 5"}, {"query": "What exhibition is coming from May 25th, 2011 to May 28th, 2011?", "cypher": "match (:ENTITY{name:'2011/5/25 to 2011/5/28'}) <- [:Relationship{name:'exhibition time'}]- (m) return m.name"}, {"query": "Check out the 2012 Shanghai Air Purification and Dust Removal Technology Equipment Exhibition in China.", "cypher": "match ((:ENTITY{name:'2012 Shanghai Air Purification and Dust Removal Technology Equipment Exhibition in China'}) - [:Relationship{name:' Industry'}]-> (m) return m.name"}, {"query": "Can you find out where the five CCP members graduated from?", "cypher": "match (:ENTITY{name:'CPC member'}) <- [*]-(m), (m) - [:Relationship{name:'Graduate school'}]->(n) return m.name, n.name limit 5"}, {"query": "I want to know the main accomplishments of John McCarthy Jr., do you have any?", "cypher": "match (:ENTITY{name:'John McCarthy Jr.'}) - [:Relationship{name:'major achievement'}]-> (q) return distinct q.name limit 5"}, {"query": "Do you know which of the accidents involved a common injured person?", "cypher": "match (:ENTITY{name:'Yunming'}) <- [:Relationship{name:'Commons'}]- (m) return m.name"}, {"query": "There's a problem in the workplace, what's the ratio of 2-deoxy-D-glucose, you know that?", "cypher": "match ((:ENTITY{name:'2-deoxy-D-glucose'}) - [:Relationship{name:'relative to rotational distance'}]-> (h) return h.name"}, {"query": "Find the book \"Professional teaching in pre-school education in secondary vocational schools: information within the two-tier relationship of music\" by Sheryl.", "cypher": "match (n:ENTITY{name:' Vocational school pre-school teaching professional textbook: music'}) - [:Relationship*1..2]->(x) where x.name<>'Sherlie' return distinct x.name"}, {"query": "What is the relationship between the two layers of the Nietzsche translation?", "cypher": "The following is a list of all the different ways Match path=(n) <- [:Relationship*2]-(p:ENTITY{name:'read Nietzsche'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the two other professions that are not good in literature besides master's and professor?", "cypher": "match (n:ENTITY{name:' in grammar'}) - [:Relationship{name:' profession'}]->(h) where h.name <> 'professor' and h.name <> 'master's graduate tutor' return distinct h.name limit 2"}, {"query": "What is the name of the disease in polycystic kidney disease?", "cypher": "match (:ENTITY{name:'Remove the dirty ones'}) <- [:Relationship{name:'Multiple hair groups'}]- (q) return q.name"}, {"query": "Please tell me what the name of the relationship involved in SHANKHAI TENNO Investment Management Ltd. is in the 3 layers?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Shanghai Teno Investment Management Ltd'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the fish that are mainly found in the shallow waters of the East China Sea and the South China Sea?", "cypher": "match (:ENTITY{name:'shallow waters of the East China Sea, South China Sea'}) <- [:Relationship{name:'distribution area'}]- ((h) return h.name"}, {"query": "The following is a list of information on the four-tier relationship, other than Lee Hong-won's work on the exotic animal.", "cypher": "match (n:ENTITY{name:'Lee Hongwen'}) - [*1..4]->(x) where x.name <>'Divine beast of the thief' return distinct x.name"}, {"query": "Who is the voice actor for Super Beast?", "cypher": "match (:ENTITY{name:'Super Beast Squad' is an original 3D anime series produced by Guangzhou Blue Arc Cultural Promotion Ltd. featuring the characters of the super beasts, the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the heroes of the hero"}, {"query": "What accident killed 74 people and injured 2?", "cypher": "match (:ENTITY{name:'74 dead, 2 wounded'}) <- [:Relationship{name:'casualties'}]- (n) return distinct n.name"}, {"query": "You know the other 7 pieces of information in the 3rd layer of this book, Digital Electronics Technology Basics Experiment, published by China Hydro-Hydro Electric Publishing.", "cypher": "match (:ENTITY{name:' Basic experiment in digital electronics'}) - [*1..3]-(p) where p.name <> 'China Hydroelectric Publishing' return distinct p.name limit 7"}, {"query": "Where was the poet born and what are his works?", "cypher": "match (:ENTITY{name:'Kenna'}) - [:Relationship{name:'birthplace'}]->(n) return n.name as name union all match (:ENTITY{name:'Kenna'}) - [:Relationship{name:'representative work'}]->(m) return m.name as name"}, {"query": "10 words that make you familiar with the 1039 bike map?", "cypher": "match (:ENTITY{name:'1039 bike map'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "The company is based in Wanda Square in Beijing's Stone Mountain.", "cypher": "match (:ENTITY{name:'Wanda Square in the city of Beijing's Shijiazhuang Mountain'}) <- [:Relationship{name:'Hall of Residence'}]- (m) return m.name"}, {"query": "Do you know what a river showgirl does?", "cypher": "match (:ENTITY{name:' River River'}) <--(p) - [:Relationship{name:' profession'}]->(n) return distinct n.name limit 1"}, {"query": "Do you know all the relationships involved in the two levels of the Xinjiang Education Group?", "cypher": "The following pages link to The Unknown:"}, {"query": "Please describe the product description of the technology product Xiaomi Mechanical Keyboard in no more than two layers of relationship.", "cypher": "match (n:ENTITY{name:'Micro-mechanical keyboard'}) - [:Relationship*1..2]->(x) where x.name <> 'technology product' return distinct x.name"}, {"query": "I wonder what the classic fairy tale is about?", "cypher": "match (:ENTITY{name:'Classic Fairy'}) <- [:Relationship{name:'work type'}]- (n) return distinct n.name"}, {"query": "What are the characteristics of the label of the 1+1 bi-active therapy?", "cypher": "match (:ENTITY{name:'1+1 bi-active therapy'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name"}, {"query": "Are there any films with the same location as the police dog fighting, and what are the labels for each?", "cypher": "match (n:ENTITY{name:'police dog's fight'}) - [:Relationship{name:' location of shooting'}] ->(:ENTITY) <- [:Relationship{name:' location of shooting'}] - ((m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) BY ORDER c"}, {"query": "Which tournament was held from June 8 to June 13, 2010?", "cypher": "match (:ENTITY{name:'June 8 to June 13, 2010'}) <- [:Relationship{name:'time of start'}]- (x) return x.name"}, {"query": "What are the main departments of Special Education school of GuLinn County?", "cypher": "match (p:ENTITY{name:'Special Education school of GuLinn County'}) <- [:Relationship{name:'foreign language name'}]-(h) - [:Relationship{name:'main faculty'}]->(q) return distinct q.name"}, {"query": "The revolutionary of which era was the great man? What were his major achievements?", "cypher": "match (:ENTITY{name:'Relationship{name:'Relationship'}) - (n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - (n) return m.name as name"}, {"query": "Can you tell me about the 5 recipes for Korean steamed yellow bean sprouts, which are mainly made with mince, beans, etc.?", "cypher": "match (n:ENTITY{name:'Korean steamed yellow bean sprouted minnow'}) - [*]->(x) where x.name <>' yellow bean sprouted minnow' return distinct x.name limit 5"}, {"query": "Which hotels have check-out times before 12:00? Can you tell me nine?", "cypher": "match (:ENTITY{name:'before 12:00'}) <- [:Relationship{name:'time of departure'}]- (q) return q.name limit 9"}, {"query": "I'm not sure if you're familiar with the story of the two women who were involved in the murder of the young girl, but I'm not sure if you're familiar with the story of the woman who was involved in the murder of the young girl.", "cypher": "match (n:ENTITY{name:' and Zhang's face is soaked in heat'}) - [*1..4]->(x) where x.name <>'s face is soaked in heat' return distinct x.name limit 5"}, {"query": "Can you tell me what the name of the relationship that Jody Lynch covered in Level 2 is?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Jody Lynch'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I'm going to find two provincial media outlets and introduce him to me.", "cypher": "match (:ENTITY{name:'provincial media'}) <-[:Relationship*]-(m),(m) -[:Describe{name:'description'}]->(n) return m.name,n.name limit 2"}, {"query": "A star who retired from the sport has won the main prize of the championship?", "cypher": "match (:ENTITY{name:' has been retired'}) <- [:Relationship{name:' belongs to sports team'}]-(m),(m) - [:Relationship{name:' main award'}]->(n) return distinct n.name limit 2"}, {"query": "And what do you know of the way?", "cypher": "match (:ENTITY{name:' clouded'}) --(n) with n order by n.name return n.name"}, {"query": "I wonder which international conference all the five countries of the FASU, China, UK and USA are participating in?", "cypher": "match (:ENTITY{name:'US, UK, French, Chinese'}) <- [:Relationship{name:'number of exhibitors'}]- (n) return n.name"}, {"query": "I'm not sure what the four layers of humor have to do with it.", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:'humorous life'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "The Trinity refers to which of the three religions?", "cypher": "match (:ENTITY{name:'triple'}) - [:Relationship{name:' is to '}]->(n) return n.name as name union all match (:ENTITY{name:'triple'}) - [:Relationship{name:' subject'}]->(m) return m.name as name"}, {"query": "The story of the four layers of the relationship between the two is a mystery, but what are the details of the four layers of the relationship?", "cypher": "match (n:ENTITY{name:'secretly attributed to the Yellow Rose'}) - [*1..4]->(x) where x.name<>'food' return distinct x.name limit 5"}, {"query": "The following is a description of the two-tier relationship between the organization and Anhui Mei Wudang Technology Co., Ltd.", "cypher": "match (n:ENTITY{name:'Anhui Mei-Won Technology Co. Ltd'}) - [*1..2]->(x) where x.name <> 'organization' return distinct x.name"}, {"query": "Who has a national model of work?", "cypher": "match (:ENTITY{name:'national labour model'}) <- [:Relationship{name:'main achievements'}]- ((m) return distinct m.name"}, {"query": "Is the film technology real?", "cypher": "match (n:ENTITY{name:'Molding membrane technology'}) where n is not null return 1"}, {"query": "Except for the People's Daily, what else do you know about the Zhejiang Public Service Examination Pre-Spring Prediction Test?", "cypher": "match (:ENTITY{name:'Zhejiang Civil Servants Exam Preliminary Sprint Test Tests Test of Administrative Ability'}) - [*1..2]-(p) where p.name <> 'People's Daily Press' return p.name limit 6"}, {"query": "Do you know what chemical is used in Palonosetron intermediate?", "cypher": "The name of the product is \"Palonosetron\" (Palonosetron)"}, {"query": "The following is a brief introduction to Robert Soros, one step at a time.", "cypher": "match (:ENTITY{name:'Robert Sorso'}) --(m) return distinct m.name limit 1 The name of the game is the name of the game."}, {"query": "Tell me, what other famous alumni of this public school are there?", "cypher": "match (:ENTITY{name:'public school'}) <- [:Relationship{name:'category'}]-(m) - [:Relationship{name:'known alumni'}]->(h) return h.name order by h.name limit 10"}, {"query": "How should lotus tea be stored?", "cypher": "match (:ENTITY{name:'\u83b2\u82af\u8336'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'storage method'}]->(n) return distinct n.name"}, {"query": "Help me find two weapons.", "cypher": "match (:ENTITY{name:' weapon equipment'}) <- [:Tag{name:' tag'}]-(m) return distinct m.name limit 2"}, {"query": "I'm looking for a game that can be played on the Internet, but I'm not sure if I can find it.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'intelligent class' return distinct x.name"}, {"query": "Tell me how many companies are operating in the port?", "cypher": "match (p:ENTITY{location:' port'}) return count ((p)"}, {"query": "I'm looking for a book by Satoshi Miyamoto that was published by a top publisher.", "cypher": "match (p:ENTITY{name:'editorial'}) <--(x) -->(q:ENTITY{name:'\u4f50\u85e4\u53cb\u54c9'}) return x.name"}, {"query": "Please tell me what other names Nanjing has. Give me an example.", "cypher": "match (h:ENTITY{name:'Nanjing'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'alias'}]->(q) return q.name order by q.name limit 1"}, {"query": "What is the name of the colorful dragon that is distributed in Madagascar's tropical rainforest?", "cypher": "match (:ENTITY{name:'Madagascar rainforest area'}) <- [:Relationship{name:'distribution area'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='previously excluded' return distinct m.name"}, {"query": "The following 5 tips for helping with this software?", "cypher": "match (n:ENTITY{name:'microidentical'}) - [*]->(x) where x.name<>'microidentical' return distinct x.name limit 5"}, {"query": "Can you list academic studies related to inorganic chemistry?", "cypher": "match (:ENTITY{name:' inorganic chemistry'}) <- [:Relationship{name:' subject area'}]- (q) return distinct q.name"}, {"query": "Have you ever seen the functional food ingredient network?", "cypher": "match (n:ENTITY{name:'functional food ingredient network'}) where n is not null return 1"}, {"query": "What are the characteristics of the 143-8 label in the economic sector?", "cypher": "match (:ENTITY{name:'143-8'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'economy' return n.name"}, {"query": "The book introduces the two-tiered relationship between the occult and the Zen viewer.", "cypher": "match (n:ENTITY{name:' send a person to the abode of the unseen and the visited Zen master'}) - [*1..2]->(x) where x.name <>'' return distinct x.name"}, {"query": "I want the relationship between the three 6-amino-2-methacrylate methyl groups in the 2nd layer of the methyl group.", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'6-amino-2-methacrylate methylate'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "06Ni9DR is what, open up?", "cypher": "match (:ENTITY{name:'06Ni9DR'}) --(p) with p order by p.name return p.name"}, {"query": "I'm going to be playing a game of RPGs.", "cypher": "match (:ENTITY{name:'rpg adventure class'}) <--(n) return n.name"}, {"query": "I would like to know the information about the company within the two-tier relationship of the organization, Hangzhou One Auto Spare Parts Limited.", "cypher": "match (n:ENTITY{name:'Hangzhou One Automobile Spare Parts Co., Ltd'}) - [*1..2]->(x) where x.name <> 'organizing entity' return distinct x.name"}, {"query": "What is the relationship between acupuncture and the three layers of acupuncture?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'needle therapy'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know what browser update is the latest version 2.0.2.112?", "cypher": "The following is a list of the most commonly used keywords in the search engine."}, {"query": "Can you tell me everything you know about the Faculty of Medicine of the University of Guam?", "cypher": "match (:ENTITY{name:'Relationship*1..3]-(p) return distinct p.name limit 10"}, {"query": "Help me find three dishes made with chicken brains.", "cypher": "match (:ENTITY{name:'crow brain'}) <- [:Relationship{name:'main ingredient'}]-(m) return distinct m.name limit 3"}, {"query": "Do you have all the information about the types of relationships within the six layers that Master Gao Yong is involved in?", "cypher": "match path=(n) <- [:Relationship*6]- ((p:ENTITY{name:'Chang Yong Fa's'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you name 10 professions that Sergeant Jun has?", "cypher": "match (:ENTITY{name:'\u9646\u58eb\u4fca'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'profession'}]->(q) return q.name order by q.name limit 10"}, {"query": "Do you know what happened on November 24, 2016?", "cypher": "match (p:ENTITY{name:'November 24, 2016'}) <- [:Relationship{name:'time of event'}]- (h) return distinct h.name"}, {"query": "How do you say \"extremely busy\" or \"extremely confused\" in English?", "cypher": "match (:ENTITY{name:'describes how very busy or confused it looks'}) --(x) return distinct x.name"}, {"query": "Three things made me understand.", "cypher": "match (:ENTITY{name: '.INFO domain name'}) --(m) with m order by m.name return m.name limit 3"}, {"query": "And what will make you know what the height of the Cup is?", "cypher": "match (n:ENTITY{name:'Relationship{name:'common height'}]-> (h) return h.name"}, {"query": "In addition to the lavender and the melon deer, there is another famous attraction in the Western Aromatic Gardens.", "cypher": "match (n:ENTITY{name:'West Fragrance Garden'}) - [:Relationship{name:'Famous attractions'}]->(h) with h order by h.name where h.name <> 'Cinderella' and h.name <> 'Cinderella' return h.name limit 1"}, {"query": "The book is a study of the four-layer relationship between cancer and cancer treatment.", "cypher": "match (n:ENTITY{name:' Malignant tumour endotherapy research'}) - [*1..4]->(x) where x.name <> 'Malignant tumour endotherapy research' return distinct x.name"}, {"query": "The novel is like the flower of the year, waiting to bloom in which of the following websites?", "cypher": "match ((:ENTITY{name:'like the year of the flower'}) - [:Relationship{name:'connected website'}]-> (n) return n.name"}, {"query": "Please help me find out if the language of the software for the 3Asia rental car is not English.", "cypher": "match (:ENTITY{name:'Tri-Asia rental car'}) - [*1..2]-(p) where p.name <> 'English' return p.name limit 5"}, {"query": "What is the shortest distance between Shenza County and Sochi County?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Shenzhen County'}) - [*..2]-(b:ENTITY{name:'Shenzhen County'})) return count ((p)"}, {"query": "I'm not sure what the Chinese are doing, but I'm not sure what the Chinese are doing.", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnicity'}]-(x) - [:Relationship{name:'representative work'}]->(h) return h.name skip 1 limit 3"}, {"query": "Do you know what kind of representative works this Chinese man has?", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnicity'}]-(p),(p) - [:Relationship{name:'representative work'}]->(h) return h.name skip 3 limit 5"}, {"query": "Can you name three of the most representative works of the Tanguay?", "cypher": "match (q:ENTITY{name:'canal\u7384'}) - [:Relationship{name:'represents work'}]-> (x) return distinct x.name limit 3"}, {"query": "Please tell me about the company in the second level of the relationship with Chengdu Boyun Printing Co., Ltd., headquartered at 31 North Road in Grand Canyon.", "cypher": "match (n:ENTITY{name:'Chengdu Bo Yun Printing Co. Ltd'}) - [:Relationship*1..2]->(x) where x.name <>'Da Nang North Road 31' return distinct x.name"}, {"query": "Tell me where the 10 species of plants in the genus are distributed?", "cypher": "match (:ENTITY{name:''}) <--(m), (m) - [:Relationship{name:' distribution area'}]->(n) return distinct m.name, n.name limit 10"}, {"query": "I wonder what the Jinjiang Development and Reform Commission is responsible for?", "cypher": "match (:ENTITY{name:'Jinzhou City Development and Reform Commission'}) <- [:Relationship{name:'Chinese name'}]-(q),(q) - [:Relationship{name:'responsible'}]->(n) return distinct n.name limit 1"}, {"query": "Can you introduce me to two books priced at $68.00?", "cypher": "The following is a list of the most commonly used keywords in the search results."}, {"query": "What are the ingredients and main ingredients of cheese rice?", "cypher": "Match (:ENTITY{name:' cheesecake'}) - [:Relationship{name:' ingredients'}]->(n) return n.name"}, {"query": "What other awards has Han Shan Teacher Training College received besides the third-class award for the advancement of university science and technology?", "cypher": "match (:ENTITY{name:'Hangsan Teachers' College'}) - [:Relationship{name:'main award'}]->(h) where h.name <> 'Guangdong Province University of Science and Technology Progress Third Class Award one ((as of 2009)) ' return h.name"}, {"query": "Can you describe the career of R. Felshaw? Can you name the top 10?", "cypher": "match (:ENTITY{name:'Fersh, R.'}) - [:Relationship{name:'profession'}]-> (h) return h.name order by h.name limit 10"}, {"query": "Can you list the following publications and information about the two-tier relationship between Dr. Liu and the prosecution?", "cypher": "match (n:ENTITY{name:' and Dr. Liu Jia's relationship'}) - [:Relationship*1..2]->(x) where x.name <> 'publication' return distinct x.name"}, {"query": "What is the name of a documentary that was featured in the Golden Horse Award-winning documentary in Taiwan?", "cypher": "Match (:ENTITY{name:'Taiwanese Film Golden Horse Award'}) <- [:Relationship{name:'award winning record'}]- (h) return h.name"}, {"query": "The Shanghai Central Library has branches in addition to the Caoyang branch.", "cypher": "match (:ENTITY{name:'China Shanghai'}) <- [:Relationship{name:'area'}]-(x) - [:Relationship{name:'main department'}]->(m) where m.name <> 'Cao Xiao Branch' return distinct m.name limit 3"}, {"query": "The following is a list of the topics that are recommended for the price of vocational and technical education materials and plastic materials.", "cypher": "match (n:ENTITY{name:'Vocational technical education materials\u00b7plastic materials'}) - [:Relationship*1..2]->(x) where x.name <>'26' return distinct x.name"}, {"query": "Can you please list me 5 of the four levels of relationships that are relevant to the literary work of St. Clare May?", "cypher": "match (n:ENTITY{name:' and St. Mayberry'}) - [*1..4]->(x) where x.name<> 'literary work' return distinct x.name limit 5"}, {"query": "What is the name of the 100 choice subject exam?", "cypher": "match (:ENTITY{name:'100 articles'}) <- [:Relationship{name:'selection questions'}]- (h) return distinct h.name"}, {"query": "Can you tell me about the five varieties of tea?", "cypher": "match (:ENTITY{name:' tea'}) <- [:Tag{name:' tag'}]-(h) return h.name limit 5 This is a list of all the different ways H.Tag{name:' tea'} is credited in the database."}, {"query": "Where is Jiangsu TV located? Who is the director?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'HQ location'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'Tayuan Chairman'}]->(m) return m.name as name"}, {"query": "Ask yourself, what institution values platforms: open, sharing, collaborative, dedicated, and persistent?", "cypher": "match (:ENTITY{name:' platform  open sharing  puzzle  dedication  persistence '}) <- [:Relationship{name:' values'}]- (n) return distinct n.name"}, {"query": "I'm looking for a voice actor for a virtual Japanese character.", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'nationality'}]-(x),(x) - [:Relationship{name:'sounding'}]->(m) return m.name order by m.name limit 1"}, {"query": "What are the three main ingredients of colorful sandwiches besides the lemon and carrot?", "cypher": "match (n:ENTITY{name:'colored sand waterfall'}) -[:Relationship{name:'main ingredient'}]->(h) where h.name <> 'carrot mud' and h.name <> 'carrot mud' return distinct h.name limit 3"}, {"query": "Can you list the albums released by CUBE Entertainment?", "cypher": "Match (:ENTITY{name:'CUBE Entertainment'}) <- [:Relationship{name:' record company'}]- (n) return distinct n.name"}, {"query": "Can you tell me about one of the main achievements of this Chinese person?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(q) - [:Relationship{name:'main achievements'}]->(n) return n.name order by n.name limit 1"}, {"query": "Can you list which schools have a level 3 label relationship with the Central Academy of Cinema and Television and Media?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'Central Academy of Cinema and Television Media'}) return distinct n.name limit 3"}, {"query": "Find out five popular songs and what their record label is.", "cypher": "match (:ENTITY{name:'pop music'}) <- [*]-(m), (m) - [:Relationship{name:'record company'}]->(n) return m.name, n.name limit 5"}, {"query": "Help me find three paintings of the pumpkin.", "cypher": "match (:ENTITY{name:'South Korea'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='painter' return m.name limit 3"}, {"query": "Where is Yongning Park located? How big is it?", "cypher": "match (:ENTITY{name:'Yongning Park'}) - [:Relationship{name:'Geographical location'}]->(n) return n.name as name union all match (:ENTITY{name:'Yongning Park'}) - [:Relationship{name:'occupying area'}]->(m) return m.name as name"}, {"query": "How to prevent soft feet?", "cypher": "match (:ENTITY{name:'softfoot'}) - [:Relationship{name:'prevention'}]->(m) return distinct m.name"}, {"query": "Please describe to me the three major awards that this celebrity with type O blood has won.", "cypher": "match (:ENTITY{name:'O type'}) <- [:Relationship{name:'blood type'}]-(q),(q) - [:Relationship{name:'main prize'}]->(h) return h.name skip 3 limit 3"}, {"query": "I'm not sure if you can tell me the personal information of this person, who is called Mi-Soo-Jin, in the four levels of his relationship?", "cypher": "match (n:ENTITY{name:'Tong Tzu Tzu'}) - [*1..5]->(x) where x.name <> 'Gangsu Province high-tech products identified as implementing rules' return distinct x.name limit 5"}, {"query": "Please collect box information on what 4 aspects of the game besides the web game?", "cypher": "match (:ENTITY{name:' collection box'}) --(m) with m order by m.name where m.name <> ' web game ' return distinct m.name limit 4"}, {"query": "What is the shortest path between the two levels of the World's Fair and the Empire Road?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'the family guy'}) - [*..2]-(b:ENTITY{name:'the road to empire'})) return count ((p)"}, {"query": "Do you know of any earthquakes that have a magnitude of 4.8?", "cypher": "match (:ENTITY{name:'4.8 degree'}) <- [:Relationship{name:'seismic degree'}]- (m) return distinct m.name"}, {"query": "I'm not sure if you know what Penn A does.", "cypher": "match (:ENTITY{name:'Penn A'}) - [:Relationship{name:'profession'}]-> (p) return p.name order by p.name limit 1"}, {"query": "Do you know about the four temples? Can you share with me the specifics?", "cypher": "match (:ENTITY{name:' the four great temples'}) --(h) return h.name skip 2"}, {"query": "Tell us about the top three athletes in the men's singles at the 2016 Rio Olympics.", "cypher": "match (:ENTITY{name:'2016 Rio Olympics Badminton Men's Singles Team'}) --(h) return h.name order by h.name limit 3"}, {"query": "I want all the information about where to look for a date.", "cypher": "match (n:ENTITY{name:'where to look for pictures'}) --(x) return x.name"}, {"query": "Can you provide me with information about the four-tier relationship and Bakaniceva Radikedike Malakai, born in Nausori?", "cypher": "match (n:ENTITY{name:'Bakaniceva Radikedike Malakai'}) - [*1..4]->(x) where x.name<>'Nausori' return distinct x.name"}, {"query": "Which machine has a blade mount angle of 35 degrees?", "cypher": "match (:ENTITY{name:'35\u00b0'}) <- [:Relationship{name:'leaf mounted corner'}]- (m) return m.name"}, {"query": "Please tell me which accidents resulted in one person being injured?", "cypher": "match (:ENTITY{name:'1 person injured'}) <- [:Relationship{name:'injured'}]- (q) return q.name limit 10"}, {"query": "Tell me, apart from Zhang Se Dong and Li Zhi, who are the producers of VillaEscape?", "cypher": "match (n:ENTITY{name:'VillaEscape'}) - [:Relationship{name:'producer'}]->(h) with h order by h.name where h.name <> 'Zhang Windong' and h.name <> 'Lee Min' return h.name limit 2"}, {"query": "What is the address of the company in Dalian?", "cypher": "match (p:ENTITY{location:'\u5927\u8fde'}) return p.name"}, {"query": "What is the shortest path between the corn cob and the corn cob?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest corn'}) - [:Relationship*..2]-(b:ENTITY{name:'corn's shortest paths'})) return count ((p)"}, {"query": "Can you share something about the marble gate?", "cypher": "match (:ENTITY{name:' Marble Gate'}) --(q) return q.name skip 3 The name of the match is"}, {"query": "Do you know the person who represents the work of Madame de la Pamphale?", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}}) - (m) return m.name order by m.name"}, {"query": "Do you have any information about the main award won by Sundar Desai Primary School in Bursa?", "cypher": "match (:ENTITY{name:'Sunderecheen Primary School, Burhan City'}) - [:Relationship{name:'Major award'}]-> (p) return p.name order by p.name limit 1"}, {"query": "What is the name of an accident that happened in a bus chase?", "cypher": "match (:ENTITY{name:' there was a bus chase accident'}) <- [:Relationship{name:' content'}]- (x) return x.name"}, {"query": "What other profession does this person who fits the political label have?", "cypher": "match (:ENTITY{name:'political figure'}) <- [:Tag{name:'tag'}]-(m) - [:Relationship{name:'profession'}]->(p) return p.name skip 3 limit 1"}, {"query": "Can you name three people who won the 2006 Royal Institute of British Architects Regional Award (London)?", "cypher": "match (m:ENTITY{name:'2006 winner of the Royal Institute of British Architects Regional Award (London) ') --(x) return distinct x.name limit 3"}, {"query": "What is the name of a book in the series called the North Korea Humanities and Social Sciences Library?", "cypher": "match (:ENTITY{name:'Northeast Asia Humanities and Social Sciences Library'}) <- [:Relationship{name:' belongs to the series'}]- (m) return m.name"}, {"query": "I'm not sure if you're familiar with the book, but I'm not sure if you're familiar with the book, but I'm not sure if you're familiar with the book.", "cypher": "match (:ENTITY{name:'Flying Dragon Falls is an online novel whose author has abandoned Flying Dragon. \u25bd'}) <- [:Describe{name:'description'}]-(m),(m) - [:Relationship{name:'type of work'}]->(n) return distinct n.name"}, {"query": "I would like to know about the other four levels of the Goldman Sachs Group Limited in New York.", "cypher": "match (:ENTITY{name:'Goldwyn-Mayer's Limited'}) - [:Relationship*1..2]-(p) where p.name <> 'New York' return p.name limit 4"}, {"query": "Where is the geographical location of Lake Khyber Pakhtunkhwa?", "cypher": "Match (n:ENTITY{name:'Milan Lake'}) - [:Relationship{name:'Geographical location'}]-> (h) return h.name"}, {"query": "What is the definition of a 5s press?", "cypher": "match (:ENTITY{name:'5s compressor'}) --(n) with n order by n.name return n.name limit 1"}, {"query": "I'm not sure if you can tell me the label of 10 5-ton pumps.", "cypher": "match (:ENTITY{name:'5-ton water bottle'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 10"}, {"query": "Can you list the messages from the last one you showed me?", "cypher": "match (:ENTITY{name:'same as '}) --(q) return q.name order by q.name limit 1"}, {"query": "Please list the number of people who graduated from a school together with Yayoi and what are the labels of each person?", "cypher": "match (n:ENTITY{name:'Keynote'}) - [:Relationship{name:'Graduate School'}]->(:ENTITY) <- [:Relationship{name:'Graduate School'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you do it with just 5 knowledge?", "cypher": "match (:ENTITY{name:'1 area 212'}) --(x) with x order by x.name return x.name limit 5"}, {"query": "Can you help me find all the 10 fun labels?", "cypher": "match (p:ENTITY{name:'10\u8da3\u7f51'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "The six real estate brokers, where are they located?", "cypher": "match (:ENTITY{name:'real estate broker'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' area to which it belongs'}]->(n) return m.name,n.name limit 6"}, {"query": "Can you tell me five things or information about the Pharaoh's secret?", "cypher": "match (:ENTITY{name:'the Pharaoh's daughter'}) --(q) return distinct q.name limit 5"}, {"query": "Can you recommend a web series that is horror, surprise, suspense, reasoning?", "cypher": "match (h:ENTITY{name:'terror, surprise, suspicion, reasoning'}) <- [:Relationship{name:'type'}]- (p) return p.name"}, {"query": "What books are there that Hu Qingluo has written and what are they classified as?", "cypher": "match (:ENTITY{name:'Hu Qingqing's writing'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Tag{name:'tag'}]->(q) return distinct h.name,q.name"}, {"query": "What are the main categories of DC motors?", "cypher": "match (:ENTITY{name:' direct current motor'}) - [:Relationship{name:' classification'}]-> (m) return distinct m.name"}, {"query": "Can you describe one of the works that have a third-tier label relationship to the attack?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'warlike attack'}) return distinct n.name limit 1"}, {"query": "Help me find two British physicists.", "cypher": "match (:ENTITY{name:'UK'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='physician' return distinct m.name limit 2"}, {"query": "Do you know what Liu Yueping's profession is?", "cypher": "match (q:ENTITY{name:'\u5cb3\u5e73'}) <- [:Relationship{name:' Chinese name'}]-(x),(x) - [:Relationship{name:' profession'}]->(m) return distinct m.name limit 1"}, {"query": "What chemical has a melting point of 207-212\u00b0C?", "cypher": "The name of the function is the same as the name of the function itself."}, {"query": "I wonder what language is used in the 1996 American film 12 Monkeys directed by Terry Gilliam?", "cypher": "match ((:ENTITY{name:'12 Monkeys [American 1996 film directed by Trey Gillam]'}) - [:Relationship{name:'For the White Language'}]-> (m) return m.name"}, {"query": "I'm not sure if you can tell me about the 12 drug networks with no more than three labels?", "cypher": "match (:ENTITY{name:'12 pharmacy'}) - [:Tag{name:'label'}]-> (x) with x order by x.name return x.name limit 3"}, {"query": "Is there a romance novel that is being published on Red Sleeve?", "cypher": "match (n:ENTITY{name:'red sleeve'}) <-[:Relationship{name:'linked website'}]-(m) -[:Relationship{name:'Chinese name'}]->(p) return distinct p.name limit 1"}, {"query": "Do you remember the Chinese awards, tell me one?", "cypher": "match (p:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(q),(q) - [:Relationship{name:'main award'}]->(h) return distinct h.name limit 1"}, {"query": "The article was written by a journalist from Guangdong People's Press, who wrote the three-tiered relationship of Mr. Chen's yearbook.", "cypher": "match (n:ENTITY{name:' Mr. Chen Yang's yearbook'}) - [:Relationship*1..3]->(x) where x.name<>'Guangdong People's Press' return distinct x.name"}, {"query": "Please tell me which award was given on January 16, 2011?", "cypher": "match (:ENTITY{name:'January 16, 2011'}) <- [:Relationship{name:' award time'}]- (m) return distinct m.name"}, {"query": "Help me find three plants in the genus Myrtaceae.", "cypher": "match (:ENTITY{name:' by subfamily'}) <- [:Relationship{name:' by family'}]-(m), (m) - [:Relationship{name:' genus'}]->(n) where n.name='family' return distinct m.name limit 3"}, {"query": "Who is the current principal of your secondary school in Senayan Town?", "cypher": "match ((:ENTITY{name:'Secondary School of Senayan Town'}) - [:Relationship{name:'current principal'}]-> (x) return x.name"}, {"query": "What is the name of the family of tea plants?", "cypher": "Match (:ENTITY{name:' tea pot'}) - [:Relationship{name:' classification'}]->(n) return n.name"}, {"query": "Ask about the five personal profiles of this person in Akreson in the five levels of his relationship.", "cypher": "match (n:ENTITY{name:'Acreston'}) - [*1..5]->(x) where x.name<> 'person' return distinct x.name limit 5"}, {"query": "Can you tell me about the 1-2-level relationship between Datunashvili Levan from Georgia and the Russian government?", "cypher": "match (n:ENTITY{name:'Datunashvili Levan'}) - [*1..2]->(x) where x.name<>'Georgia' return distinct x.name"}, {"query": "How do you explain the small number?", "cypher": "match (:ENTITY{name:'\u5c0f\u6c11\u4e4b\u8ba1'}) --(m) with m order by m.name return m.name"}, {"query": "What are the publications of China Construction and what is the price of the books?", "cypher": "match (:ENTITY{name:'China\u5efa\u5de5'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:'pricing'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know the four main departments of Hunan University of Finance and Industry and Vocational Technology, besides the Department of Accounting and Department of Electronic Information?", "cypher": "match (n:ENTITY{name:'Hunan College of Finance and Industry'}) -[:Relationship{name:'main faculty'}]->(h) where h.name <> 'accounting faculty' and h.name <> 'electronic information faculty' return distinct h.name limit 4"}, {"query": "Can you name five private companies?", "cypher": "match (:ENTITY{name:' private'}) <- [:Relationship{name:' corporate nature'}]- (n) return n.name limit 5"}, {"query": "What is the category of websites with more than 10 million registered users as of the end of February 2012?", "cypher": "match (:ENTITY{name:' as of the end of February 2012, over ten million registered}) <- [:Relationship{name:' user'}]-(n) - [:Relationship{name:' website type'}]->(x) return distinct x.name"}, {"query": "Can you talk about the 2006 North Korean nuclear test in foreign history?", "cypher": "match (:ENTITY{name:'2006 North Korean nuclear test'}) --(q) with q order by q.name where q.name <> 'foreign history' return q.name"}, {"query": "Can you name five professions of this man?", "cypher": "Match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(p) - [:Relationship{name:'profession'}]->(h) return h.name skip 2 limit 10 The name of the match is not shown in the following table:"}, {"query": "What are the professions of singers in Thailand? Name five?", "cypher": "match (:ENTITY{name:'sing'}) <- [:Relationship{name:'special features'}]-(p) - [:Relationship{name:'profession'}]->(h) return distinct h.name limit 5"}, {"query": "Can you list the personal relationships of Lemsalu Marek, an Estonian, in Tier 3?", "cypher": "match (n:ENTITY{name:'Lemsalu Marek'}) - [*1..3]->(x) where x.name <> 'Estonia' return distinct x.name"}, {"query": "Did you know that the five types of relationships are contained within the five layers of the serpentine framework?", "cypher": "The following is a list of all the links in the game."}, {"query": "What is the job of the man from Hunan Province?", "cypher": "match (:ENTITY{name:'Wan Li [Secretary General of the Hunan Province Standing Committee of the City of San'de City]'}) - [:Relationship{name:'profession'}]-> (x) return x.name skip 2"}, {"query": "The organizers of the Asian Volleyball Federation's event, please tell me the name of the event.", "cypher": "match (:ENTITY{name:'Asian Volleyball Federation'}) <- [:Relationship{name:'host unit'}]- (x) return x.name"}, {"query": "The Wolf House depicts a monument to what era?", "cypher": "match (:ENTITY{name:'the wolf's nest'}) - [:Relationship{name:'the event'}]->(n) return n.name as name union all match (:ENTITY{name:'the wolf's nest'}) - [:Relationship{name:'the dynasty'}]->(m) return m.name as name"}, {"query": "I would like to know about the 5 tips for sending a Chinese man to Beijing in the style of the Five Ghosts.", "cypher": "match (n:ENTITY{name:'send you to my home town'}) - [:Relationship*]->(x) where x.name<>'five-year-old' return distinct x.name limit 5"}, {"query": "What is the name of a material with a flame resistance of \u226520?", "cypher": "match (x:ENTITY{name:' a level \u226520'}) <- [:Relationship{name:' fire resistance time'}]- (m) return m.name"}, {"query": "Asteroid 2111 and which asteroids were discovered by one discoverer, what labels did each of those asteroids have? Show them to me in reverse order of number of labels.", "cypher": "The name of the asteroid is given by the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name, the name of the asteroid's name, the name of the asteroid's name, the name, the name of the name of the asteroid, the asteroid, the asteroid, the name of the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid"}, {"query": "Can you tell me about the main works of people born on this date 1976-09-09? Can you tell me about 5 of them?", "cypher": "match (:ENTITY{name:'1976-09-09'}) <- [:Relationship{name:'date of birth'}]-(p) - [:Relationship{name:'main work'}]->(n) return n.name order by n.name limit 5"}, {"query": "I would like to know where is the headquarters of my craft company, Guangzhou Municipal, when was it founded and what is its scope of operations?", "cypher": "match (:ENTITY{name:'Relationship's name:'Relationship's name:'Relationship's name:'Relationship's name:'Relationship's name:'Relationship's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name's name'"}, {"query": "What are the benefits of strawberries?", "cypher": "match (:ENTITY{name:'snowflake'}) - [:Relationship{name:'effect'}]-> (m) return distinct m.name"}, {"query": "Can you tell me about the rainbow below? What are the top 5?", "cypher": "match (:ENTITY{name:'Horse umbrella'}) --(h) return h.name order by h.name limit 5"}, {"query": "Who found the Swan? Can you tell five of them first?", "cypher": "match (:ENTITY{name:'Swan's sign'}) <--(n) return n.name limit 5"}, {"query": "Have you had trouble reading the software introduction for the new English language Advanced English Tutorials with no less than three layers of relationships?", "cypher": "match (n:ENTITY{name:'Newly written English Advanced Tutorial'}) - [:Relationship*1..3]->(x) where x.name <>'English' return distinct x.name"}, {"query": "Can you find me the main characters in Drunken Fist II?", "cypher": "match (p:ENTITY{name:'Drunken Fist II'}) <- [:Relationship{name:'main work'}]- (q) return q.name order by q.name"}, {"query": "The character in the anime series \"A Dream\" is called \"Mike\", who is the voice of the character?", "cypher": "match (:ENTITY{name:'A dreamcatcher series of works'}) <- [:Relationship{name:'Entertainment works'}]-(h),(h) - [:Relationship{name:'sounding'}]->(p) return distinct h.name,p.name"}, {"query": "Can you help me find the senior national artistic identity and her main achievements?", "cypher": "match (:ENTITY{name:'Senior Identifier of National Art'}) <- [:Relationship{name:'Profession'}]-(h),(h) - [:Relationship{name:'Major achievement'}]->(q) return distinct h.name,q.name"}, {"query": "Find out what kind of six virtual characters they are.", "cypher": "match (:ENTITY{name:'virtual person'}) <--(m), (m) - [:Relationship{name:'type'}]->(n) return m.name, n.name limit 6"}, {"query": "The Chinese company accounting fact-finding survey published this publication.", "cypher": "match (:ENTITY{name:'China business accounting fact-finding'}) <- [:Relationship{name:'book name'}]-(p) - [:Relationship{name:'publishing'}]->(n) return distinct n.name"}, {"query": "Tell me who is the star of the family? Name three moms?", "cypher": "match (:ENTITY{name:'\u571f\u5bb6\u65cf'}) <- [:Relationship{name:'\u6c11\u65cf'}]-(x) - [:Relationship{name:'Chinese name'}]->(h) return distinct h.name limit 3"}, {"query": "Talk to me about 2BIC? (not more than five words)", "cypher": "match (:ENTITY{name:'2BIC'}) --(m) with m order by m.name return distinct m.name skip 1 limit 5"}, {"query": "I want to find four Internet products, how many registered members?", "cypher": "match (:ENTITY{name:' Internet product'}) <--(m), (m) - [:Relationship{name:' registered member'}]->(n) return m.name, n.name limit 4"}, {"query": "Do you know what news 12345 Cinema has?", "cypher": "match (:ENTITY{name:'12345 filmnet'}) --(q) with q order by q.name return q.name limit 10"}, {"query": "What are the applications of the dot-com colored cells?", "cypher": "match (:ENTITY{name:'top-pointed coloured unit'}) - [:Relationship{name:'app'}]->(n) return n.name as name union all match (:ENTITY{name:'top-pointed coloured unit'}) - [:Relationship{name:'use'}]->(m) return m.name as name"}, {"query": "Tell me about the two main distribution areas for the chicken, apart from the one in Yangon and Nanjing?", "cypher": "match (n:ENTITY{name:'spoiled'}) - [:Relationship{name:'distribution area'}]->(h) with h order by h.name where h.name <> 'jungle' and h.name <> 'nanjing' return h.name limit 2"}, {"query": "And what do you know of the other name of the aphrodisiac?", "cypher": "match (:ENTITY{name:'sexual hormone'}) <- [:Relationship{name:'name of drug'}]-(x),(x) - [:Relationship{name:'alias'}]->(m) return distinct m.name limit 1"}, {"query": "There was an incident about the death of a person from Long River poisoning, what is the name of it?", "cypher": "match (:ENTITY{name:'Relationship{name:'event'}}) - (m) return m.name"}, {"query": "Can you tell me what year the American Telephone Company was founded?", "cypher": "match (:ENTITY{name:'American Telephone Company'}) <- [:Relationship{name:'company name'}]- ((p) - [:Relationship{name:'time of founding'}]->(n) return distinct n.name"}, {"query": "The five levels of Al-Shamari Emad Aziz's family history?", "cypher": "match (n:ENTITY{name:'Al-Shamari Emad Aziz'}) - [*1..4]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "China 4A Area, help me find 30 of them?", "cypher": "match (:ENTITY{name:'AAAA'}) <--(m), (m) --(n) where n.name='China' return distinct m.name limit 30"}, {"query": "Do you know which ones have a secondary label to medicine? Can you name three?", "cypher": "The name of the game is \"Medicine\" (Medicine)"}, {"query": "I'm looking for a book about the relationship between parents and their children, and I'm looking for a book about the relationship between parents and their children.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'See you later' return distinct x.name"}, {"query": "What are the main departments of the Nantong Industrial and Commercial Technician College (Nantong City Industrial and Commercial High Technician School)?", "cypher": "match (:ENTITY{name:'Nantong Industrial and Commercial Technician College (Nantong City Industrial and Commercial High School) '}) <- [:Relationship{name:' Chinese name'}]- ((x),(x) - [:Relationship{name:' Main Faculty'}]->(q) return distinct x.name"}, {"query": "Kim Sang-ho: Can you tell me his name?", "cypher": "Match (n) return n.name (n) - (n) match (n) - (n) return (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n) - (n"}, {"query": "Can you name 5 schools in the province of Heilongjiang?", "cypher": "match (:ENTITY{name:'China, Central China'}) <- [:Relationship{name:'the region to which it belongs'}]- (mn) - [:Relationship{name:'category'}]->(n:ENTITY{name:'middle school'}) return mn.name"}, {"query": "I'm not sure which historical person was born in 1936 and what is the problem?", "cypher": "match (q:ENTITY{name:'1936'}) <- [:Relationship{name:'date of birth'}]- (m) return distinct m.name limit 5"}, {"query": "What are the three main departments of the Chongqing Master's University's School of Foreign Trade and Trade?", "cypher": "match ((:ENTITY{name:'Chongqing Teachers' University School of Foreign Trade and Trade'}) - [:Relationship{name:'Principal Faculty'}]-> (n) return n.name limit 3"}, {"query": "How do you say child plural?", "cypher": "match (:ENTITY{name:'child[English word]'}) - [:Relationship{name:'plural'}]-> (m) return distinct m.name"}, {"query": "What chemical is ALG-A00683?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "The 2008 F1 2.5L F1 is a luxury diesel version.", "cypher": "match (:ENTITY{name:'2008 flagship F1 2.5L luxury diesel version'}) --(n) with n order by n.name return n.name limit 3"}, {"query": "What are the representative works of writers who are 171 cm tall?", "cypher": "match (:ENTITY{name:'171cm'}) <- [:Relationship{name:'height'}]- ((m) - [:Relationship{name:'represents work'}]->(x) return distinct x.name limit 1"}, {"query": "Tell us about your knowledge of the contemporary historical events of the 10:30 Coal Mine Poisoning in Sichuan Province.", "cypher": "match (:ENTITY{name:'10\u00b730 Sichuan, Taiwan, closed coal seam poisoning incident'}) --(n) with n order by n.name where n.name <> 'contemporary historical event' return n.name"}, {"query": "How should the number 100 be expressed in Arabic, if it is one of the natural numbers?", "cypher": "match ((:ENTITY{name:'100[one of the natural numbers]'}) - [:Relationship{name:' Arabic'}]-> (x) return x.name"}, {"query": "Please tell me the name of the novel that started circulating on November 15, 2015.", "cypher": "match (:ENTITY{name:'15 November 2015 - '}) <- [:Relationship{name:' during reload'}]- (h) return distinct h.name"}, {"query": "Do you know what the relationships are within the three levels of the Boulevard?", "cypher": "The following pages link to The World of the Dead:"}, {"query": "I would like to know 5 facts about Hark Fache in Algeria.", "cypher": "match (n:ENTITY{name:'Harker Fich'}) - [*]->(x) where x.name<>'Algeria' return distinct x.name limit 5"}, {"query": "Tell me who is representing the actors in the film that includes the love story of Beijing?", "cypher": "match (:ENTITY{name:'Beijing love story'}) <- [:Relationship{name:'represents work'}]-(x),(x) - [:Relationship{name:'Chinese name'}]->(h) return distinct h.name"}, {"query": "Can you name a few games that are bilingual in Chinese and English?", "cypher": "match (:ENTITY{name:' Chinese, English'}) <- [:Relationship{name:' game language'}]- (p) return distinct p.name"}, {"query": "I want to know about the 5 knowledge points related to the hydrogen bonding of the hydrogen ring with chemical formula C19H28BrNO3?", "cypher": "match (n:ENTITY{name:'Crystal rings are more stable than crystal'}) - [*]->(x) where x.name<>'C19H28BrNO3' return distinct x.name limit 5"}, {"query": "Where does the Red Water River originate?", "cypher": "match (:ENTITY{name:'Redwater River'}) - [:Relationship{name:'source'}]->(m) return distinct m.name"}, {"query": "Who is the director of Fung Nam Carmen?", "cypher": "match (:ENTITY{name:'\u82b3\u540d\u5361\u95e8'}) <- [:Relationship{name:'representing work'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='director' return distinct m.name"}, {"query": "What else do you know about Sergey Mikhailovich Mironov besides being Russian?", "cypher": "match (:ENTITY{name:'Sergey Mikhailovich Mironov'}) - [:Relationship*1..2]-(p) where p.name <> 'Russia' return p.name limit 20"}, {"query": "What is the name of the dish that contains the sweet potatoes?", "cypher": "The name of the game is \"Relationship\" (Relationship) - [Relationship: [Relationship: [Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: Relationship: R"}, {"query": "The archaeological site of the ruins of Anyang City, Henan Province, lists 20 species of archaeological remains.", "cypher": "match (:ENTITY{name:'Relationship{name:'Relationship'}}) - >(n) where n is not null return distinct n.name limit 20"}, {"query": "Please list at least five of the AIM-120 medium-range air-to-air missile's label attributes.", "cypher": "match (:ENTITY{name:'AIM-120 medium-range air-to-air missile'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 5"}, {"query": "Can you tell me whose work is represented by the song \"Goodbye Mama\"?", "cypher": "match (:ENTITY{name:'Hey Bye Bye'}) <- [:Relationship{name:'Representing work'}]- (q) return q.name skip 1"}, {"query": "Have you heard about the theme park?", "cypher": "match (:ENTITY{name:'Lowlife'}) --(h) return h.name order by h.name"}, {"query": "Can you tell us about the five sports personalities behind the personal profiles of Shiki Adora?", "cypher": "match (n:ENTITY{name:'Sky Adora'}) - [:Relationship*]->(x) where x.name <> 'sportsman' return distinct x.name limit 5"}, {"query": "I need to know the information about the five levels of the facial diagnosis of children under 5 years old? Can you give me five?", "cypher": "match (n:ENTITY{name:'Children's radiation therapy'}) - [*1..5]->(x) where x.name <>'Children's radiation therapy is one of the facial procedures for children under 5 years old."}, {"query": "SKF AOH32/950 bearings model in addition to the removable set and what? 5", "cypher": "match (:ENTITY{name:'SKF AOH32/950 bearing'}) - [:Relationship{name:'model'}]-> (m) with m order by m.name where m.name <> 'removal kit' return m.name limit 5"}, {"query": "What other information do you know about the small fat lady, other than the Golden River Tiger?", "cypher": "match (:ENTITY{name:' small fat lady'}) - [*1..2]-(p) where p.name <> 'Farazis small fat lady, golden river tiger' return p.name limit 10"}, {"query": "What is the most representative work of \u014cta-no-Fumi?", "cypher": "match (:ENTITY{name:'\u306b\u3057\u3060\u307e\u3055\u3075\u307f'}) <- [:Relationship{name:' foreign language name'}]- ((x),(x) - [:Relationship{name:' representing work'}]->(m) return distinct m.name"}, {"query": "The following is a list of Chinese language software relatives that are called calculators.", "cypher": "match (n:ENTITY{name:' Relationship*1..2]->(x) where x.name <> 'Chinese' return distinct x.name"}, {"query": "Does anyone know what Shao Shao's profession is? Can you tell me?", "cypher": "match (:ENTITY{name:' overview of Liu Shaoqi, born in Guizhou, graduated from the Chinese Academy of Fine Arts\u3002'}) <- [:Describe{name:'description'}]-(q),(q) - [:Relationship{name:'profession'}]->(n) return distinct q.name"}, {"query": "Who is the chairman of Hangzhou Tamei Automotive Supplies Co., Ltd.?", "cypher": "match (:ENTITY{name:' Chairman of Hangzhou Taipei Automotive Products Limited'}) --(m) return distinct m.name"}, {"query": "Tell us about a new piece of knowledge about the game 101 Pet Dolphins?", "cypher": "match (:ENTITY{name:'101 pet dolphin'}) --(q) with q order by q.name where q.name <> ' game work' return q.name limit 1"}, {"query": "What are the animals in the sunfish family?", "cypher": "match (:ENTITY{name:'sect'}) <- [:Relationship{name:'family'}]- ((m), (m) - [:Relationship{name:'genus'}]->(n) where n.name='sun beetles of the family Amusium' return m.name"}, {"query": "Share three pieces of information about the 1% rule for tech products?", "cypher": "match (:ENTITY{name:'1% rule'}) --(m) with m order by m.name where m.name <> 'technology product' return m.name limit 3"}, {"query": "Do you know what chemical is C12H10F6O2?", "cypher": "match (:ENTITY{name:'C12H10F6O2'}) <- [:Relationship{name:'chemical formula'}]- (x) return distinct x.name"}, {"query": "What other information can you give me besides the fact that Sun Yat-sen is a businessman?", "cypher": "match (:ENTITY{name:'Sun Li'}) --(m) with m order by m.name where m.name <> 'industry figure' return distinct m.name limit 2"}, {"query": "Who amongst you has a criminal defense expert who graduated from Peking University?", "cypher": "match (:ENTITY{name:'criminal defense expert'}) <- [:Relationship{name:'profession'}]-(m), (m) - [:Relationship{name:'graduate school'}]->(n) where n.name='Beijing University' return distinct m.name"}, {"query": "What are the relationships within the four layers that Christy Goodenough is involved in? Please tell me the names of the five relationships.", "cypher": "The following is a list of all the different ways Christy Gooden is credited in the database:"}, {"query": "What are the basic conditions of the relationship between Erbes Vyacheslav of Kazakhstan and no less than three levels?", "cypher": "match (n:ENTITY{name:'Erbes Vyacheslav'}) - [*1..3]->(x) where x.name<>'Kazakhstan' return distinct x.name"}, {"query": "Can you find out the names of the five military figures and where they graduated from?", "cypher": "match (:ENTITY{name:'military person'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'graduate school'}]->(n) return m.name,n.name limit 5"}, {"query": "The company's business philosophy is happy work, happy learning, what is the name of the company?", "cypher": "match (:ENTITY{name:'pleasant work, pleasant learning'}) <- [:Relationship{name:'business idea'}]- (m) return m.name"}, {"query": "What is the melting point and boiling point of curcumin?", "cypher": "The name of the game is \"Relationship\" (Relationship) - return m.name as name union all match (:"}, {"query": "Can you tell me what the relationships are within the three layers of the Southwest cone?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Southwest Monkey'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the books in Sweden and what are they classified as?", "cypher": "match (:ENTITY{name:'Sweden'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Tag{name:'tag'}]->(q) return distinct h.name,q.name"}, {"query": "Do you have any news on the Calvert Gold Preacher/Shark Baby series, tell me three?", "cypher": "match (:ENTITY{name:'(5VCD) Calvert-style gold early school/shark BABY series'}) --(m) with m order by m.name return m.name limit 3"}, {"query": "Please give me a link to the language/Beiyu New Classroom 2 relationship published by Lianying Education Publishing.", "cypher": "match (n:ENTITY{name:' language/new classroom'}) - [:Relationship*1..2]->(x) where x.name <> 'Leningrad Education Publishing' return distinct x.name"}, {"query": "Can you describe the technology product 000stthk.exe in just five words?", "cypher": "match (:ENTITY{name:'000stthk.exe'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'technology product' return q.name limit 5"}, {"query": "Can you recommend a six-speed manual transmission for me?", "cypher": "match (:ENTITY{name:'6's) <- [:Relationship{name:'s gearbox'}]- (x) return distinct x.name"}, {"query": "What do students who graduated from the Hebei University of Science and Technology do?", "cypher": "match (:ENTITY{name:'Hebei University of Science and Technology'}) <- [:Relationship{name:'Graduate School'}]-(x) - [:Relationship{name:'Profession'}]->(m) return distinct m.name"}, {"query": "What is the shortest path between the two layers of the A-B-C-D-B-C-D-B-C-D-B-C-D-B-C-D-B-C-D-B?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest paths'}) - [:Relationship*..2]-(b:ENTITY{name:'shortest paths'})) return count ((p)"}, {"query": "What are the different labels of the games? Please sort by the number of labels from small to large.", "cypher": "match (n:ENTITY{name:'the red apple of the rhinoceros'}) - [:Relationship{name:'type'}]->(:ENTITY) <-[:Relationship{name:'type'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) BY ORDER c)"}, {"query": "Please tell me who has created the calligraphy of Liu Liang Jiang.", "cypher": "match (:ENTITY{name:'Work by Liu Jing'an'}) --(q) return q.name order by q.name"}, {"query": "Help me find a movie in black and white.", "cypher": "match (:ENTITY{name:' black and white'}) <- [:Relationship{name:' color'}]- (mn) - [:Relationship{name:' white language'}]->(n:ENTITY{name:' slang'}) return mn.name limit 5"}, {"query": "The first is that the person weighing 52 kg has a representative work.", "cypher": "match (:ENTITY{name:'52kg'}) <- [:Relationship{name:'weight'}]-(p) - [:Relationship{name:'represents work'}]->(q) return q.name skip 1 limit 5"}, {"query": "The book is written by Zhang Zhao and is available in two editions: the first is titled \"The Book of the Sun\", and the second is titled \"The Book of the Sun\".", "cypher": "match (n:ENTITY{name:'MBook read with you: zero basic X-book'}) - [:Relationship*1..2]->(x) where x.name <> 'Zhangqi' return distinct x.name"}, {"query": "Which 8 exhibitions were held on June 4, 2013?", "cypher": "match (m:ENTITY{name:'June 4, 2013 at 6 am'}) <- [:Relationship{name:'time'}]- (n) return n.name limit 8"}, {"query": "The reform bureaucracy is a matter of generations and who are the main characters?", "cypher": "match (:ENTITY{name:'reform officialdom'}) - [:Relationship{name:'year of membership'}]->(n) return n.name as name union all match (:ENTITY{name:'reform officialdom'}) - [:Relationship{name:'main person'}]->(m) return m.name as name"}, {"query": "I'm going to be a writer, and I'm going to be a writer, and I'm going to be a writer, and I'm going to be a writer, and I'm going to be a writer, and I'm going to be a writer, and I'm going to be a writer.", "cypher": "match (:ENTITY{name:' Alone in a feathered suit'}) <--(n) return n.name"}, {"query": "Please give me a recipe for the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 4 and a half dollar, the 2 and a half dollar, the 2 and a half dollar, the 2 and a half dollar, the 2 and a half.", "cypher": "match (n:ENTITY{name:'Olivia with yellow pepper's yeast'}) - [*1..2]->(x) where x.name <> 'recipe Olivia with yellow pepper's yeast 4 and a half cents, olivia with yellow pepper 4 and a half cents, and the plaster 4 and a half cents\u201b' return distinct x.name"}, {"query": "Tell me, what are the three categories of Phnom Penh dolls besides fast food and vegetarian?", "cypher": "match (n:ENTITY{name:'Pineman doll dishes'}) -[:Relationship{name:'category'}]->(h) where h.name <> 'quick food dishes' and h.name <> 'vegetarian dishes' return distinct h.name limit 3"}, {"query": "What is the shortest path between the two levels of the Mineral Processing Engineering major and the Metal Materials Engineering major?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' mineral processing engineering'}) - [:Relationship*..2]-(b:ENTITY{name:' metal materials engineering'})) return count ((p)"}, {"query": "What is the exhibition in October 2015?", "cypher": "match (:ENTITY{name:'October 2015'}) <- [:Relationship{name:' Exhibition time'}]- (n) return distinct n.name"}, {"query": "This man was born on February 12, 1987 do you know his three professions?", "cypher": "match (:ENTITY{name:'12 February 1987'}) <- [:Relationship{name:'date of birth'}]-(p) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 3"}, {"query": "You said that 1392 is the year, if you use the branch chronology, what year should it be?", "cypher": "match ((:ENTITY{name:'1392 year'}) - [:Relationship{name:'branch age'}]-> (n) return n.name"}, {"query": "I'm not sure if you can hear the five songs Kay sang without GPS encryption.", "cypher": "match (:ENTITY{name:'Kay'}) <- [:Relationship{name:'foreign language name'}]-(n) - [:Relationship{name:'representative work'}]->(m) where m.name <> 'GPS sealing' return distinct m.name limit 5"}, {"query": "The first tag of 0633 is \"Click to expand\".", "cypher": "match (:ENTITY{name:'0633 hacking'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 1"}, {"query": "What are the models that are available for the Lenovo LeapPad Leather LC200? Can you name a few?", "cypher": "match (:ENTITY{name:' Lenovo Leaf Pad LC200 is a flat protective case/casing with a superfiber cover."}, {"query": "Please find out the two-tier relationship of the company with regard to Hebei Aizu Food Co., Ltd. registered with the Dong County Administration of Commerce and Industry.", "cypher": "match (n:ENTITY{name:'Hebei Aichi Food Co. Ltd'}) - [:Relationship*1..2]->(x) where x.name <> 'District Administration of Commerce and Industry of Dongguan County' return distinct x.name"}, {"query": "How many exhibitions has the People's Government of Harbin organized?", "cypher": "match (:ENTITY{name:'People's Government of Harbin City'}) <- [:Relationship{name:'host unit'}]- (h) return h.name limit 6"}, {"query": "Please tell me which police station is the public security department of the Yangyang District of Qujiang City?", "cypher": "match (:ENTITY{name:'Public Security Division of Liaoning District of Qujiang City'}) <- [:Relationship{name:'Public Security Bureau'}]- (p) return p.name"}, {"query": "Can you give me an example of a label for a 4.2 magnitude earthquake in Camp 1 24 East, Chanuli?", "cypher": "match (:ENTITY{name:'1\u00b724 East Camp Chanuli County 4.2 magnitude earthquake'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "Please list the main departments of Ningbo Elevator School.", "cypher": "match (:ENTITY{name:'Ningjing Elevator School'}) - [:Relationship{name:'Main Faculty'}]-> (p) return p.name skip 1"}, {"query": "Help me find a 5A scenic area in Wuhan, Hubei, China.", "cypher": "match (:ENTITY{name:'Wuhan City, Hubei Province, China'}) <- [:Relationship{name:' city'}]-(m), (m) - [:Relationship{name:'Sightseeing level'}]->(n) where n.name='National AAAAA level tourist attraction' return distinct m.name"}, {"query": "Who among the journalists graduated from Fudan University?", "cypher": "match (:ENTITY{name:'city west secondary school, Fudan University'}) <- [:Relationship{name:'graduate school'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='journalist' return distinct m.name"}, {"query": "The law firm is a subsidiary of the Beijing Xu Xiaoming Law Firm, which is a law firm under the jurisdiction of the Ministry of Justice.", "cypher": "match (n:ENTITY{name:'Beijing Xu Xiao Ming Law Firm'}) - [:Relationship{name:'Department of Justice'}]->(:ENTITY) <-[:Relationship{name:'Department of Justice'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) ORDER BY DESC "}, {"query": "I'm not sure if I should be allowed to do that.", "cypher": "match (:ENTITY{name:' actor'}) <- [:Relationship{name:' profession'}]-(q) - [:Relationship{name:' representing work'}]->(x) return distinct x.name limit 3"}, {"query": "I'm going to list four researchers, where did they all graduate from?", "cypher": "match (:ENTITY{name:'research staff'}) <- [*]-(m), (m) - [:Relationship{name:'graduate school'}]->(n) return m.name, n.name limit 4"}, {"query": "Can you tell me who is the voice of the character in Aquarius? Can you name the top five?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "Can you give me five lines?", "cypher": "match (p:ENTITY{name:'writer'}) <--(x) --> ((q:ENTITY{name:'woman'}) return x.name limit 5"}, {"query": "Who among you has a dual career as an athlete and a teacher?", "cypher": "match (p:ENTITY{name:'athlete'}) <--(x) --> ((q:ENTITY{name:'teacher'}) return x.name"}, {"query": "There is a chemical substance called 1-Dimethylamino-2-propanol, do you know what it is?", "cypher": "The name of the product is not known."}, {"query": "Can you tell me about the social events that happened on August 21st?", "cypher": "match (:ENTITY{name:'society'}) <- [:Tag{name:'tag'}]-(q),(q) - [:Relationship{name:'August 21st'}]->(p) return distinct p.name limit 1"}, {"query": "I'm going to ask you about the literary work in the three-tier relationship.", "cypher": "match (n:ENTITY{name:'filter bridge lake'}) - [*1..3]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "3 knowledge enhanced my understanding of the 2008 World Cup console?", "cypher": "match (:ENTITY{name:'08 World Cup game console'}) --(p) with p order by p.name return p.name skip 1 limit 3"}, {"query": "The following is a list of the top three levels of relationships that industry figures have in their personal lives:", "cypher": "match (n:ENTITY{name:'switch'}) - [*1..3]->(x) where x.name <> 'industry person' return distinct x.name"}, {"query": "And tell me about the dream of all humanity?", "cypher": "match (:ENTITY{name:'the day of the year'}) --(x) with x order by x.name return x.name"}, {"query": "Can you tell me the name of the startup and where is its headquarters?", "cypher": "match (:ENTITY{name:'Senior'}) - [:Relationship{name:'Senior'}]->(n) return n.name as name union all match (:ENTITY{name:'Senior'}) - [:Relationship{name:'Senior'}->(m) return m.name as name"}, {"query": "Can you tell me the 5 basic messages of Tian Silv\u00e8re from Ivory Coast in the 6 levels of relationships?", "cypher": "match (n:ENTITY{name:'Tian Silv\u00e8re'}) - [*1..6]->(x) where x.name <> 'Ivory Coast' return distinct x.name limit 5"}, {"query": "What is the ingredient of the Sendai Kamen Rider?", "cypher": "Match (:ENTITY{name:'Sandy's'}) - [:Relationship{name:'supplies'}]->(m) return distinct m.name"}, {"query": "Do you know the altitude of the natural village of Zanzibar? How much can you say about its area and population?", "cypher": "match (:ENTITY{name:'\u5be8\u81ea\u7136\u6751'}) - [:Relationship{name:'\u5be8\u81ea\u7136\u6751'}]->(n) return n.name as name union all match (:ENTITY{name:'\u5be8\u81ea\u7136\u6751'}) - [:Relationship{name:'\u5be8\u81ea\u7136\u6751'}->(m) return m.name as name union all match (:ENTITY{name:'\u5be8\u81ea\u7136\u6751'}) - [:Relationship{name:'\u5be8\u81ea\u7136\u6751'}->(r) return r.name as name"}, {"query": "Where did the expression \"war without turf\" come from?", "cypher": "match (:ENTITY{name:'relationship'}) - [:Relationship{name:'from'}]-> (m) return distinct m.name"}, {"query": "Can you get me two computer books and tell me their price?", "cypher": "match (:ENTITY{name:' computer books'}) <- [:Tag{name:' tags'}]-(h),(h) - [:Relationship{name:' pricing'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "If an organization has a membership category that divides its members into reserve and full members, what is that?", "cypher": "match (:ENTITY{name:' both reserve and full membership'}) <- [:Relationship{name:' membership category'}]- (n) return n.name"}, {"query": "Where is the Cave of the Sun?", "cypher": "match (:ENTITY{name:'Relationship{name:'geographical location'}]->(m) return distinct m.name"}, {"query": "What are the major works of the people born in Snyderton, Yorkshire, UK?", "cypher": "match (:ENTITY{name:'Snyton, Yorkshire, UK'}) <- [:Relationship{name:'place of birth'}]- ((p) - [:Relationship{name:'main work'}]->(x) return distinct x.name limit 1"}, {"query": "Can you recommend a book for parents and children?", "cypher": "match (:ENTITY{name:'parenthood enlightenment'}) <- [:Relationship{name:'category'}]- (x) return distinct x.name"}, {"query": "Please help me find 10 universities in Liaoning, what are their main departments?", "cypher": "match (:ENTITY{name:'Leningrad University'}) <- [*]-(m), (m) - [:Relationship{name:'main faculty'}]->(n) return distinct m.name, n.name limit 6"}, {"query": "Can you name five people who are 135cm tall and have good names?", "cypher": "match (:ENTITY{name:'135cm'}) <- [:Relationship{name:'height'}]-(m),(m) - [:Relationship{name:'alias'}]->(p) return distinct p.name limit 5"}, {"query": "The incident was reported to be a major accident in the city of Guangzhou, China.", "cypher": "match ((:ENTITY{name:'1.3 Fujian High Speed Special Vehicle'}) - [:Relationship{name:'Casualties'}]-> (x) return x.name"}, {"query": "Which schools have received 2 national awards for teaching excellence and 1 provincial award for teaching excellence?", "cypher": "match (:ENTITY{name:'National level 2nd prize for teaching excellence, provincial 1st prize for teaching excellence'}) <- [:Relationship{name:'main award'}]-(n) - [:Relationship{name:'main faculty'}]->(x) return distinct x.name"}, {"query": "Tell me when the show is broadcast, which is about 45 minutes long?", "cypher": "match (:ENTITY{name:'45 minutes'}) <- [:Relationship{name:'length per episode'}]- ((n) - [:Relationship{name:'time of broadcast'}]->(m) return distinct m.name limit 1"}, {"query": "The 11/3 Hubei kidnapping that is currently being reported happened at what time?", "cypher": "match ((:ENTITY{name:'11\u00b73 Hubei gang-related baby-stealing case'}) - [:Relationship{name:'time'}]-> (x) return x.name"}, {"query": "What are the top 10 places that recommend a 4 hour or so tour?", "cypher": "match (:ENTITY{name:'4 hours'}) <- [:Relationship{name:'recommended playing time'}]- ((q) - [:Relationship{name:'famous attractions'}]->(n) return distinct n.name limit 10"}, {"query": "Which people are as tall as Gasparotto Gabriel and have a tattoo? The total number of tattoos is listed in order of size.", "cypher": "The following is a list of the most commonly used tags for the game of basketball:"}, {"query": "Please tell me what assets Hubei Khimki Library Limited has issued.", "cypher": "match (:ENTITY{name:'Hubei Cold Creek Library Limited'}) <- [:Relationship{name:'Issuing company'}]- (q) return q.name"}, {"query": "Amamizuka recommended three songs to me that are not in the Spring Festival.", "cypher": "match (:ENTITY{name:'Amamizuka'}) <- [:Relationship{name:'foreign language name'}]-(q),(q) - [:Relationship{name:'representative work'}]->(h) where h.name <> '\u6625\u534e\u5e74' return distinct h.name limit 3"}, {"query": "What is the name of a game that was lost and was related to Brazil, Germany?", "cypher": "match (:ENTITY{name:'Brazil team, Germany team'}) <- [:Relationship{name:'team'}]- (m) return distinct m.name"}, {"query": "The Chinese name of this man is Cao Gang-gawa, and his main achievements are:", "cypher": "match (:ENTITY{name:' Cao Ganggawa'}) <- [:Relationship{name:' Chinese name'}]- ((p) - [:Relationship{name:' major achievements'}]->(q) return distinct q.name"}, {"query": "I'm curious to know which of these people have the same tags, and I want you to sort them by the number of tags for each character, from small to large, please?", "cypher": "match (n:ENTITY{name:'\u5141\u559c'}) - [:Relationship{name:'\u519b'}]->(:ENTITY) <- [:Relationship{name:'\u519b'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you list the top 5 achievements of the country?", "cypher": "match (:ENTITY{name:'Thank you for your help'}) <- [:Relationship{name:'Chinese name'}]- ((q),(q) - [:Relationship{name:'main achievement'}]->(m) return distinct m.name limit 5"}, {"query": "Can you tell me which of the six books are in the third tier of the social sciences label?", "cypher": "The following is a list of the most commonly used tags in the world of social science."}, {"query": "Would you make this chicken fried chicken? I only know it's a fried food, please list 6 items in 2 layers", "cypher": "match (:ENTITY{name:'canary chicken rolls'}) - [*1..2]->(p) where p.name <> 'fried' return p.name limit 6"}, {"query": "I'm not sure if you can find me a representative from Ningxia?", "cypher": "match (:ENTITY{name:'Ningxia'}) <- [:Relationship{name:'birthplace'}]-(m),(m) - [:Relationship{name:'representing work'}]->(x) return x.name order by x.name limit 1"}, {"query": "I want to find seven books that are managed by the publisher, how long have they been published?", "cypher": "match (:ENTITY{name:'manage books'}) <- [*]-(m), (m) - [:Relationship{name:'publish time'}]->(n) return m.name, n.name limit 7"}, {"query": "Please tell me which novel is out of print as of March 10, 2013?", "cypher": "match (:ENTITY{name:'March 10, 2013 unfinished'}) <- [:Relationship{name:' during publication'}]- (h) return h.name"}, {"query": "What is the type of cross and what is the format?", "cypher": "The name of the function is the name of the function itself. The name of the function is the name of the function itself."}, {"query": "I need to know what the nickname for crystalline allergic bluish eyes is, and what the English name is?", "cypher": "match (:ENTITY{name:'Relationship{name:'not to be named'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'English name'}]->(m) return m.name as name"}, {"query": "Can you tell us about the advanced collective of the Sichuan Province Youth Palace?", "cypher": "match (:ENTITY{name:'Advanced collective of the Sichuan Province Youth Palace'}) --(h) return distinct h.name"}, {"query": "What are the main responsibilities of the three government agencies?", "cypher": "match (:ENTITY{name:'governmental body'}) <--(m), (m) - [:Relationship{name:'main responsibilities'}]->(n) return m.name, n.name limit 3"}, {"query": "What is cabbage besides cabbage meat?", "cypher": "match (:ENTITY{name:'peanut'}) <- [:Relationship{name:'category'}]-(m) where m.name <> 'peanut flesh' return distinct m.name"}, {"query": "The book of Revelation was written in the year of which? where did the work come from?", "cypher": "match (:ENTITY{name:'sevenfold'}) - [:Relationship{name:'creation date'}]->(n) return n.name as name union all match (:ENTITY{name:'sevenfold'}) - [:Relationship{name:'work origin'}]->(m) return m.name as name"}, {"query": "List the company profiles within the three-tier relationship of Karbo Precision Machinery Limited, a Suzhou industrial park founded in 2007?", "cypher": "match (n:ENTITY{name:'Karabo Precision Machinery Limited, Suzhou Industrial Park'}) - [:Relationship*1..3]->(x) where x.name <>'2007' return distinct x.name"}, {"query": "In addition to being the director of the Microbiology Department, what are the three different jobs that he has?", "cypher": "match (:ENTITY{name:'Penchen, male, 1984 graduated from Henan Agricultural University, obtained Bachelor of Agriculture\u3002'}) <- [:Describe{name:'description'}]-(m),(m) - [:Relationship{name:'profession'}]->(p) where p.name <> 'Director of the Microbiology Department' return distinct p.name limit 3"}, {"query": "Can you recommend my novel with a total of 1737370 words?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "There is a series of topics on the topic of home appliances in rural areas, the topic name is \"What's up?\"", "cypher": "match (:ENTITY{name:' home appliance downtown'}) <- [:Relationship{name:' subject'}]- (p) return p.name"}, {"query": "I wonder what the five rifts are?", "cypher": "match (:ENTITY{name:'five cracks'}) --(h) return h.name skip 3"}, {"query": "The book is published by the publishers of the books by Zhang Zhiyuan.", "cypher": "match (:ENTITY{name:'Zhang'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'publisher'}]->(q) return distinct q.name"}, {"query": "Do you know what chemical is C14H28?", "cypher": "match (:ENTITY{name:'C14H28'}) <- [:Relationship{name:'molecular'}]- (m) return distinct m.name"}, {"query": "Do you know what is the relationship between the 2nd tier label and the 8th tier label?", "cypher": "match (n) <- [:Tag*2{name:'tag'}]- ((p:ENTITY{name:'\u6b66\u4faf\u516b\u9635'}) return distinct n.name"}, {"query": "The main achievement of the romance novel is mentioned, apart from the first place in the 17k novel network of Throne and the member of the NGU.", "cypher": "match (n:ENTITY{name:'love booklet'}) - [:Relationship{name:'main achievement'}]->(h) where h.name <> 'topped the 17k novel network' and h.name <> 'ngu member' return distinct h.name limit 1"}, {"query": "What are the main awards of the Department of Foreign Languages?", "cypher": "match (:ENTITY{name:'foreign language'}) <- [:Relationship{name:' short form'}]-(p) - [:Relationship{name:' main award'}]->(m) return distinct m.name limit 5"}, {"query": "Can you find me three Korean actors and introduce them?", "cypher": "Match (:ENTITY{name:'Korean actor'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 3"}, {"query": "Find the movie starring Thomas Jane.", "cypher": "match (:ENTITY{name:'Thomas Jane'}) <- [:Relationship{name:'star'}]- (mn) return mn.name limit 10"}, {"query": "I'm going to start with a Chinese fantasy novel, please tell me 5 of them.", "cypher": "The following pages link to List of Chinese films:"}, {"query": "I'm going to start with the title of the post, and the main works.", "cypher": "match (:ENTITY{name:'Shakespeare'}) - [:Relationship{name:'Shakespeare'}]->(n) return n.name as name union all match (:ENTITY{name:'Shakespeare'}) - [:Relationship{name:'Major work'}]->(m) return m.name as name"}, {"query": "Can you tell me about two of the best places to visit in the spring and fall for two or three days?", "cypher": "match (:ENTITY{name:' Four seasons, spring and autumn are good'}) <- [:Relationship{name:' Suitable for playing season'}]-(m), (m) - [:Relationship{name:' Recommended playing time'}->(n) where n.name='2-3 days' return m.name limit 2"}, {"query": "The author provided me with the other 5 pieces of information in the second layer of this book, Telayan's Integrated Electronic Design and Practice.", "cypher": "match (:ENTITY{name:' Integrated electronic design and practice'}) - [*1..2]-(p) where p.name <> 'Telangana' return distinct p.name limit 5"}, {"query": "Tell me what folk festivals are there in China? Help me find five, what festivals are they?", "cypher": "match (:ENTITY{name:'folklore'}) <--(m), (m) - [:Relationship{name:'festival'}]->(n) return m.name, n.name limit 5"}, {"query": "Can you find the Chinese name for the river?", "cypher": "match (:ENTITY{name:'Beyond the Sea'}) - [:Relationship{name:'Chinese name'}]-> (x) with x order by x.name return distinct x.name"}, {"query": "What chemical has the CAS number 27625-35-0?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Please tell me what other representative works are there for the second deputy director of the Public Security Bureau of the city of Suzhou?", "cypher": "match (:ENTITY{name:'Deputy Director of the Second Guard Office of the Jinjiang City Public Security Bureau'}) <-[:Relationship{name:'profession'}]-(n),(n) -[:Relationship{name:'representative work'}->(m) return m.name order by m.name limit 3"}, {"query": "Can you tell me which publisher published it?", "cypher": "match (:ENTITY{name:'\u5f20\u4f2f\u7aef'}) <- [:Relationship{name:' author'}]-(h),(h) - [:Relationship{name:' publisher'}]->(q) return distinct h.name,q.name"}, {"query": "Can you please explain the software within the 5 layers of the Nearby Live relationship?", "cypher": "match (n:ENTITY{name:'Nearby Live'}) - [*1..5]->(x) where x.name <> 'English' return distinct x.name"}, {"query": "Do you know any cultural terms related to Japan?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'Country'}]- (h) return distinct h.name"}, {"query": "Do you know the time of the 2013 Health Expo, can you tell me?", "cypher": "match ((h:ENTITY{name:'2013 Healthcare Exhibition'}) - [:Relationship{name:' time'}]-> (x) return x.name"}, {"query": "Can you tell me who has been a singer? and where he graduated from?", "cypher": "match (:ENTITY{name:' singer'}) <- [:Relationship{name:' profession'}]-(h),(h) - [:Relationship{name:' graduate school'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Please help me find the other 7 information in Teacher Renzong Liang 3 layer.", "cypher": "match (:ENTITY{name:'sweet'}) - [:Relationship*1..3]-(p) where p.name <> 'teacher' return p.name limit 7"}, {"query": "Which metal product has the US code 316?", "cypher": "match (:ENTITY{name:'316'}) <- [:Relationship{name:'corresponds to US trademark'}]- (p) return p.name"}, {"query": "The first is the 1060-ton alloy, which is only labeled with three or fewer.", "cypher": "match (:ENTITY{name:'1060 aluminium alloy'}) - [:Tag{name:'label'}]-> (x) with x order by x.name return x.name limit 3"}, {"query": "Can you name three male voice actors?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(q) - [:Relationship{name:'sounding'}]->(n) return distinct n.name limit 3"}, {"query": "The following is a list of Howard Rosenman's personal information.", "cypher": "The name of the game is \"Skip 1\"."}, {"query": "I'm looking for three cellists, which country?", "cypher": "match (:ENTITY{name:'cello player'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'nationality'}]->(n) return m.name,n.name limit 3"}, {"query": "Please help me find three hospitals, where are they all located?", "cypher": "match (:ENTITY{name:' hospital'}) <- [*]-(m), (m) - [:Relationship{name:' geographical location'}]->(n) return m.name, n.name limit 3"}, {"query": "The book is a collection of short stories, including a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a novel, a book, a book, a, a book, a, a book, a, a book, a, a, a book, a, a, a, a book, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a,", "cypher": "match (n:ENTITY{name:' suburbia lyric; Taijing Palace orchestra; true and '}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "The interface is designed to be compatible with 20 pin main power supplies.", "cypher": "match (:ENTITY{name:'interface compatible with 20 pin main power supply'}) <- [:Relationship{name:'feature'}]- (m) return m.name"}, {"query": "What is the content of the next project in the relationship between the 10th and 2nd levels of the Nanchang Mountain?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'\u4ef2\u582a' return distinct x.name"}, {"query": "What is the shortest relationship path between the flesh and the dried fruit in the two layers?", "cypher": "The following is a list of all the different ways A:P (Relationship) is credited in the database:"}, {"query": "Can you tell me about the two-layered relationship involved in the long-term relationship?", "cypher": "The following is a list of all the links in the link:"}, {"query": "How about 10 words to describe 15:23?", "cypher": "match (:ENTITY{name:'15:23'}) --(p) with p order by p.name return distinct p.name skip 1 limit 10"}, {"query": "I am a good English reader and I am a travel marketer, what is the shortest path between the three levels?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'I am the English language shortest path'}) - [*..3]-(b:ENTITY{name:'Tourism market segment'})) return count ((p)"}, {"query": "I'm not sure which ranking list is targeted at obese people.", "cypher": "match (h:ENTITY{name:'fat'}) <-[:Relationship{name:'object'}]- (x) return distinct x.name"}, {"query": "What other labels do you have for the number 14 besides cultural labels?", "cypher": "match (:ENTITY{name:'14'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'culture' return q.name"}, {"query": "Please tell me which exhibitions are on display at the Shanghai New International Expo Center?", "cypher": "match (:ENTITY{name:'Shanghai New International Expo Center'}) <- [:Relationship{name:'Exhibition venue'}]- (p) return p.name limit 2 The name of the exhibition is not available in English"}, {"query": "What is the name of a book adapted from the works of Li Xiaoyang?", "cypher": "Match (:ENTITY{name:'Lee Shin-shing'}) <- [:Relationship{name:'adapted'}]- (m) return m.name"}, {"query": "Can you help me find 10 non-fiction books published by a popular literature publisher?", "cypher": "match (:ENTITY{name:'People's Literature Publishers'}) <--(m), (m) >--(n) where n.name <> 'fantasy' return distinct m.name limit 10"}, {"query": "Tell me about the Estonian Saviauk Erko's profile in the 5 levels of relationships?", "cypher": "match (n:ENTITY{name:'Saviauk Erko'}) - [*1..5]->(x) where x.name<>'Estonia' return distinct x.name limit 5"}, {"query": "A friend told me that Asteroid 8216 was discovered on March 27, 1995 by the space surveillance system, do you know any other information?", "cypher": "match (n:ENTITY{name:' asteroid 8216'}) -->(h) with h order by h.name where h.name <> 'space surveillance' and h.name <> '1995/3/27' return h.name limit 6"}, {"query": "Can you tell me about the three levels of relationships involved in the dark night of the soul?", "cypher": "The following pages link to The Unknown:"}, {"query": "Please provide three summaries of the English dictionary for the fourth level of the university for 10 days.", "cypher": "match (:ENTITY{name:'10 days back in college English fourth level vocabulary'}) --(p) with p order by p.name return p.name limit 3"}, {"query": "Tell me about the relationship between the 6 layers of life, in a little bit of knowledge, in a hot and clear mood.", "cypher": "match (n:ENTITY{name:'drinking in a hot tub'}) - [*1..6]->(x) where x.name <>'life' return distinct x.name limit 5"}, {"query": "Give me two World War II battles, where are the sides?", "cypher": "match (:ENTITY{name:'World War II'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:'participant'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "The first is that the weapons are designed to be used in a way that is not harmful to the environment.", "cypher": "match (n:ENTITY{name:'rectangular-shaped explosive'}) - [:Relationship*1..2]->(x) where x.name <> 'weapons equipment' return distinct x.name"}, {"query": "Can you name three Germans who are professors?", "cypher": "match (:ENTITY{name:'professor'}) <- [:Relationship{name:'degree'}]-(m), (m) - [:Relationship{name:'nationality'}]->(n) where n.name='Germany' return m.name limit 3"}, {"query": "I bet you don't know what the 137 Learning Methods are labeled?", "cypher": "match (:ENTITY{name:'137 learning method'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "What are the major departments of the higher education institutions where Su Rui-ho is the dean?", "cypher": "match (:ENTITY{name:'Sou\u6811\u539a'}) <- [:Relationship{name:'Dean'}]- ((n) - [:Relationship{name:'Main Faculty'}]->(q) return distinct q.name"}, {"query": "I would like to know which works are representative of Chinese citizenship?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(h),(h) - [:Relationship{name:'representative work'}]->(q) return distinct q.name limit 5"}, {"query": "What is the maximum width of the blade used in the FA-MAS rifle knife used in the army?", "cypher": "match ((:ENTITY{name:'FA-MAS rifle sharpshooter'}) - [:Relationship{name:'maximum width of the blade'}]-> (x) return x.name"}, {"query": "Tell me about the five details of the Baohyun Temple in Sichuan.", "cypher": "match (n:ENTITY{name:'Bohumans'}) - [*]->(x) where x.name<>'Bohumans' return distinct x.name limit 5"}, {"query": "What other characteristics of 11 degrees youth apart from entertainment work do you have, tell me one?", "cypher": "match (x:ENTITY{name:'11 degree of youthful delight'}) --(n) with n order by n.name where n.name <> 'entertainment work' return n.name limit 1"}, {"query": "What is the shortest relationship between the two levels of the NEC and the Leipzig match?", "cypher": "Match p=allshortestpaths (((a:ENTITY{name:'Crazy will be fighting'}) - [:Relationship*..2]-(b:ENTITY{name:'Leipzig will be fighting'})) return count ((p)"}, {"query": "What are the signature sites built in the Qing Dynasty?", "cypher": "match (:ENTITY{name:'Ching-Tong's period'}) <- [:Relationship{name:'year of construction'}]- ((p) - [:Relationship{name:'famous attractions'}]->(n) return distinct n.name"}, {"query": "Do you know which villages are located at an altitude of 1620 meters?", "cypher": "match (:ENTITY{name:'1620 m'}) <- [:Relationship{name:'elevation'}]- (n) return n.name limit 5 The name of the match is not known."}, {"query": "Can you give me five words about this guy Kurak Ali?", "cypher": "match (n:ENTITY{name:' in Kurak Ali'}) - [*]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "Can you tell me if one place has a third tier relationship with China's Huangdong?", "cypher": "match (n) - [:Relationship*3{name:' the region'}]->(p:ENTITY{name:' China, China'}) RETURN distinct n.name limit 1"}, {"query": "Have you heard of this work?", "cypher": "match (n:ENTITY{name:'faithful'}) where n is not null return 1"}, {"query": "One of the news clients was an 18-year-old high school student, what's the story?", "cypher": "match (:ENTITY{name:'an 18-year-old female high school student'}) <- [:Relationship{name:'party'}]- (n) return n.name"}, {"query": "Can you recommend five novels that are currently being serialized?", "cypher": "match (:ENTITY{name:'linked'}) <- [:Relationship{name:'category'}]- (n) return n.name limit 5"}, {"query": "Can you list three works that are about the two-tier relationship of romance and hero?", "cypher": "The following pages link to The Unknown:"}, {"query": "I'm not sure if you know where the 4th floor label is related to the Korean family's kitchen.", "cypher": "The name of the game is \"Korean\" (Korean: \u97d3\u5bb6)"}, {"query": "Can you find me a professor of automation at Southwestern University of Technology and his graduate school?", "cypher": "match (:ENTITY{name:'Professor of Automation at Southwestern University of Technology'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'graduate school'}]->(q) return distinct h.name,q.name"}, {"query": "What traffic accident happened on November 27, 2010?", "cypher": "match (:ENTITY{name:'November 27, 2010'}) <- [:Relationship{name:'time of event'}]- (p) return p.name"}, {"query": "I'm looking for 10 state-owned companies, where are they all?", "cypher": "match (:ENTITY{name:'state owned enterprise'}) <- [*]-(m), (m) - [:Relationship{name:'headquarters location'}]->(n) return distinct m.name,n.name limit 10"}, {"query": "Please tell me about the software in the filesoft4 layer relationship in English language.", "cypher": "match (n:ENTITY{name:'filesoft'}) - [*1..4]->(x) where x.name <> 'English' return distinct x.name"}, {"query": "Chat Chat Chuang is not counting the other ten achievements, including the avocado garden, the spring flower, the rose, the star, the little lady.", "cypher": "match (:ENTITY{name:'Chang Chu'}) <- [:Relationship{name:'Chinese name'}]- ((n) - [:Relationship{name:'main achievement'}]->(p) where p.name <> 'Avoid garden spring lily flower star-shaped little lady' return distinct p.name limit 10"}, {"query": "Do you know what the web time protocol works like?", "cypher": "match (:ENTITY{name:'network time protocol'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'principle'}]->(n) return distinct n.name"}, {"query": "The following political figures are in the top 5 of the four-tiered relationships of Zhou Zhou:", "cypher": "match (n:ENTITY{name:'square'}) - [*1..4]->(x) where x.name<>'political figure' return distinct x.name limit 5"}, {"query": "What do i and s represent in the magnetic moment formula?", "cypher": "The name of the function is the name of the function itself."}, {"query": "Can you name some of the marathons?", "cypher": "match (:ENTITY{name:'Marathon'}) <- [:Relationship{name:'event type'}]- (n) return distinct n.name"}, {"query": "Is there a film by Min Lee in the foreign language called Yang? Is his gender male or female?", "cypher": "match (:ENTITY{name:'windy'}) - [:Relationship{name:'foreign name'}]->(n) return n.name as name union all match (:ENTITY{name:'windy'}) - [:Relationship{name:'on-site work'}]->(m) return m.name as name union all match (:ENTITY{name:'windy'}) - [:Relationship{name:'gender'}]-(r>) return r.name as name"}, {"query": "What happened on May 27th? Can you list seven?", "cypher": "match (:ENTITY{name:'May 27'}) <- [:Relationship{name:'time'}]- (n) return n.name limit 7"}, {"query": "I watched the 2011 MTV Music Television Awards, and how many times have you seen the awards?", "cypher": "Match ((:ENTITY{name:'2011 MTV Music Television Awards award ceremony'}) - [:Relationship{name:'number of times'}]-> (q) return q.name"}, {"query": "What are the types of relationships that are in the three layers of Inzaghi?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you tell me what kind of relationship is involved in the two layers of the rabia?", "cypher": "The following is a list of links to links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in this list."}, {"query": "Can you list a representative work written by a Sagittarius author?", "cypher": "match (:ENTITY{name:'Shooting'}) <- [:Relationship{name:'Stopping'}]-(m),(m) - [:Relationship{name:'Representing work'}]->(n) return distinct n.name limit 1"}, {"query": "Friendship is Magic is an English song, translated from Chinese as Friendship is Magic, and tell me 3 of its related information.", "cypher": "match (n:ENTITY{name:'friendship is magic'}) -->(h) with h order by h.name where h.name <> 'friendship is magic' and h.name <> 'English' return h.name limit 3"}, {"query": "I forgot the chemical formula for 3-hydro-4-hydro, so let me think about it.", "cypher": "match ((:ENTITY{name:'3--4-'}) - [:Relationship{name:' chemical formula'}]-> (n) return n.name"}, {"query": "The film is based on the life of a young girl named Shia LaBeouf who was killed in a car accident in the early 2000s.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'seven absolute' return distinct x.name"}, {"query": "What other tags do the social networks have besides the social tags, say three?", "cypher": "match (:ENTITY{name:'01 group shopping'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'social' return x.name limit 3"}, {"query": "What is the point of having a delicious meal made with chicken and pork?", "cypher": "match (:ENTITY{name:'Chicken, pork'}) --(x) return distinct x.name"}, {"query": "What are the characteristics of the label in the B-level?", "cypher": "match (:ENTITY{name:'B-level'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "Can you find me three books published by Shanghai University Press?", "cypher": "The name of the game is \"Shanghai University Press\" (Shanghai University Press) and the name of the game is \"Shanghai University Press\" (Shanghai University Press)."}, {"query": "Is there a tag for August 2, 1914? (give three)", "cypher": "match (:ENTITY{name:'August 2, 1914'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "I wonder what kind of novel is Sword and Destiny?", "cypher": "match ((:ENTITY{name:' sword, turn of fate'}) - [:Relationship{name:' type'}]-> (x) return x.name"}, {"query": "I would like to know which books are related to the third level of the label? can you give me four?", "cypher": "The name of the game is \"Skype\" (Skype) and the name of the game is \"Skype\" (Skype)"}, {"query": "What are the words associated with Southampton Football Club?", "cypher": "match (:ENTITY{name:'Southampton Football Club'}) <--(n) return n.name The match was played at the Southampton Stadium in Southampton, England."}, {"query": "The company known as Family Friend was founded in what year?", "cypher": "match (p:ENTITY{name:'Friendly Company'}) return p.time"}, {"query": "What other works does Anunula Sapna sing besides Love on the Road?", "cypher": "match (:ENTITY{name:'Anslav Sappan'}) - [:Relationship{name:'representative work'}]->(m) where m.name <>'love on the way' return distinct m.name"}, {"query": "Is the 1-aceto-4-hydroxybenzoate you often need a prescription for?", "cypher": "match ((:ENTITY{name:'1-ethylbenzyl-4-butadiene'}) - [:Relationship{name:'is it a prescription drug'}]-> (h) return h.name"}, {"query": "The ten tags that make me understand.com?", "cypher": "match (:ENTITY{name:'.com'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 10"}, {"query": "Can you recommend three movies that were released on January 1, 1999?", "cypher": "The game is played in a single game, with the player's name and the game's name being the same."}, {"query": "What is the shortest relationship path between the two layers of wheat seed 918 and 920?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest paths'}) - [*..2]-(b:ENTITY{name:'shortest paths'})) return count ((p))"}, {"query": "What are the main achievements of CRITTY besides winning the third prize in the 16th annual growth event of the X-Men franchise?", "cypher": "match (:ENTITY{name:'CRITTY'}) - [:Relationship{name:'main achievement'}]-> (m) with m order by m.name where m.name <> 'Relationship's 16th year of growth awarded 'Return m.name'"}, {"query": "I want to know about the three professions of people who are producers, do you have this information?", "cypher": "match (q:ENTITY{name:' producer'}) <- [:Relationship{name:' profession'}]- (h) return distinct h.name limit 3"}, {"query": "I'm going to put a label on this book for the 100 Cent boutique.", "cypher": "match (:ENTITY{name:'100-point essay boutique house'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'books' return p.name"}, {"query": "Can you help me find five Yellow House paintings?", "cypher": "match (:ENTITY{name:'white family'}) <-[:Relationship{name:'fillword'}]-(h) return h.name limit 5"}, {"query": "Do you know who is the third person to be named in the 2013 list of stupid charities?", "cypher": "Match ((:ENTITY{name:'2013 Foolish Charity List'}) - [:Relationship{name:'third name'}]-> (p) return p.name"}, {"query": "In which state are the Gilbert Islands located?", "cypher": "match (:ENTITY{name:'Gilbert Islands'}) - [:Relationship{name:'geographical location'}]->(n) return n.name"}, {"query": "Can you tell us about the types of relationships that are involved in the two layers of the royal family?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'the crown'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me which works have a third-tier label relationship to Chinese literature?", "cypher": "The name of the game is \"The Legend of Zelda: Breath of the Wild\" (Spanish for \"The Legend of Zelda\")"}, {"query": "Can you tell me who Duo Swan is?", "cypher": "match (:ENTITY{name:'Du Swan'}) --(m) return m.name skip 1 The name of the game is the same as the name of the game"}, {"query": "What kind of fish are used for the three fresh de-boned fish?", "cypher": "match (:ENTITY{name:'three fresh de-boned fish'}) - [:Relationship{name:'main ingredient'}]-> (m) return distinct m.name"}, {"query": "I want to find six books on management, who are the authors?", "cypher": "match (:ENTITY{name:'Manage books'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'author'}]->(n) return m.name, n.name limit 6"}, {"query": "How do you find out the name and surname of a Ming Dynasty person?", "cypher": "match (m:ENTITY{name:'min'}) <- [:Relationship{name:'at the time'}]-(n),(n) - [:Relationship{name:'word'}]->(q) return n.name order by n.name,q.name limit 1"}, {"query": "Please find the Hangzhou City Health Unit and list the top 5 articles.", "cypher": "match (:ENTITY{name:'Hangzhou city health unit'}) --(q) return q.name order by q.name limit 5"}, {"query": "Please list the names of the 10 conferences that will be held in a year cycle.", "cypher": "match (:ENTITY{name:' year one'}) <- [:Relationship{name:' cycle'}]- (q) return q.name limit 10"}, {"query": "Can you help me find three Taiwanese singers?", "cypher": "match (:ENTITY{name:'Taiwan'}) <- [:Relationship{name:'place of birth'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='singer' return m.name limit 3"}, {"query": "The following is a list of the three Italian football leagues that exist in the top tier of Italian football, but are not social and sporting.", "cypher": "match (n:ENTITY{name:'Italian Football League'}) - [:Tag{name:'tag'}]->(h) with h order by h.name where h.name <> 'society' and h.name <> 'sport' return h.name limit 3"}, {"query": "Find out what the two alumni of the Siang Cheng Middle School have achieved most.", "cypher": "match (:ENTITY{name:'Shanghai Central High School'}) <- [*]-(m), (m) - [:Relationship{name:'main achievements'}]->(n) return m.name, n.name limit 2"}, {"query": "What is the species of Pan-Clown Turtle and where is it distributed?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'category'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'distribution area'}]->(m) return m.name as name"}, {"query": "The following information is available in the publication Valen Economic Zone Yearbook 2005 No. 17 with no more than three levels of relationships:", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name <>'publication' return distinct x.name"}, {"query": "I wonder when 007 and the Little Nurse will be released?", "cypher": "match ((:ENTITY{name:'007 with a little nurse'}) - [:Relationship{name:'date'}]-> (m) return m.name"}, {"query": "Can you tell me where Shandong Airlines is headquartered?", "cypher": "match ((:ENTITY{name:'Santon Airlines'}) - [:Relationship{name:'HQ location'}]-> (n) return n.name"}, {"query": "Please list the following relevant introduction to the four-tier relationship of Monday Osborne?", "cypher": "match (n:ENTITY{name:'Monday Osborne'}) - [*1..4]->(x) where x.name <> 'foreign name' return distinct x.name limit 5"}, {"query": "What is the difference between the adjective and the adverb for full-face wind?", "cypher": "match (:ENTITY{name:'fullface springwind'}) - [:Relationship{name:'near term'}]->(n) return n.name as name union all match (:ENTITY{name:'fullface springwind'}) - [:Relationship{name:'fullface springwind'}]->(m) return m.name as name"}, {"query": "Do you know what chemical has the CAS number 64419-24-5?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "I'm going to show you a little bit of my work, and I'll show you a little bit of my work.", "cypher": "match (n:ENTITY{name:'see the external object of the poem, because it shows this'}) - [:Relationship*1..3]->(x) where x.name<>'Weichen' return distinct x.name"}, {"query": "Can you give me 5 lines of information? I'm looking for a personal profile in a three-tier relationship related to sports personality Chibelli Enrico.", "cypher": "match (n:ENTITY{name:'Chibelli Enrico'}) - [*1..4]->(x) where x.name <> 'sportsman' return distinct x.name limit 5"}, {"query": "The following is a list of characters who are represented by Lucius Fauci:", "cypher": "match (:ENTITY{name:'Relationship{name:'represents work'}]- (x) return x.name order by x.name"}, {"query": "Can you find two other relevant references in the world besides the comics?", "cypher": "match (:ENTITY{name:' in this world there is no one else but you'}) --(m) with m order by m.name where m.name <> 'comic book' return distinct m.name limit 2"}, {"query": "Where is Sanjay Temple located?", "cypher": "match (:ENTITY{name:'San'ye Temple'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'geographical location'}]->(n) return distinct n.name limit 1"}, {"query": "Do you know where the accident happened in the Meru Mountain Industrial Park?", "cypher": "match (:ENTITY{name:' that is, the Mekong Industrial Park'}) <- [:Relationship{name:'the place of the incident'}]- (q) return q.name"}, {"query": "Do you know about the chemical substance acetate of sodium? What other information besides the chemical formula is Ca ((CH3COO) 2) please find the other 7 information within the 2 layers", "cypher": "match (:ENTITY{name:'acetyl acetate'}) - [:Relationship*1..2]->(p) where p.name <> 'Ca(CH3COO) 2 or ((CH3COO) 2Ca' return p.name limit 7"}, {"query": "The name of the person who died on September 28, 1898 is?", "cypher": "match (x:ENTITY{name:'28 September 1898'}) <- [:Relationship{name:'date of death'}]- ((q),(q) - [:Relationship{name:'alias'}]->(n) return distinct q.name,n.name"}, {"query": "Can you tell me about the company that is a limited liability company and its location?", "cypher": "match (:ENTITY{name:' limited company'}) <- [:Relationship{name:' type'}]- ((q) - [:Relationship{name:' location'}]->(m) return q.name, m.name skip 1 limit 1"}, {"query": "I would like to know which command was established by the Ministry of Defence?", "cypher": "match (:ENTITY{name:'Defense Ministry'}) <- [:Relationship{name:'establishing organization'}]- (m) return distinct m.name"}, {"query": "Can you recommend 10 novels that cross the space shuttle?", "cypher": "match (:ENTITY{name:' crossing shelf class'}) <- [:Relationship{name:' type'}]- (n) return n.name limit 10"}, {"query": "What are the names of the people who graduated from the same university as Liu Xiaobo and what are their labels?", "cypher": "match (n:ENTITY{name:'\u6653\u98ce'}) - [:Relationship{name:' graduate school'}] ->(:ENTITY) <- [:Relationship{name:' graduate school'}] - ((m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "The 2010 Chinese Women and Children's State Statistics, which the book says is aimed primarily at women, are:", "cypher": "match ((:ENTITY{name:'2010 Chinese women and children statistics'}) - [:Relationship{name:' object'}]-> (n) return n.name"}, {"query": "What is Cinnabar?", "cypher": "match (:ENTITY{name:'Cinnabar'}) --(x) return distinct x.name"}, {"query": "Tell me about the three main ingredients of the food, which are the onion, cucumber and other cold-pressed foods.", "cypher": "match (:ENTITY{name:'slice coldface'}) --(m) with m order by m.name where m.name <> 'slice, cucumber' return distinct m.name limit 3"}, {"query": "The first article you gave me about Putin's tagline.", "cypher": "match (:ENTITY{name:'Pudi'}) - [:Tag{name:'tag'}]-> (h) return h.name order by h.name limit 1"}, {"query": "The story of the three layers of relationships that the poet Yuri Yuka created in his work.", "cypher": "match (n:ENTITY{name:'\u8fc7\u5de2\u9091'}) - [:Relationship*1..3]->(x) where x.name<>'\u8fc7\u5de2\u9091' is a poem by the poet Yue Yi."}, {"query": "I would like to know about five or more relationships with Australian citizen Horvat Steve.", "cypher": "match (n:ENTITY{name:'Horvat Steve'}) - [*1..4]->(x) where x.name<>'Australia' return distinct x.name limit 5"}, {"query": "Please tell me what songs are on AKB48's albums?", "cypher": "match (:ENTITY{name:'AKB48'}) <- [:Relationship{name:'album singer'}]- (x) return distinct x.name"}, {"query": "Do you know which of the five books used in literature are on paper?", "cypher": "match (x:ENTITY{name:'canvas paper'}) <- [:Relationship{name:'paper'}]- (p) return distinct p.name limit 5"}, {"query": "Do you know what chemical is CAS number 13115-43-0?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Search for the properties of state-owned Mahjong?", "cypher": "match (:ENTITY{name:'with state mahjong'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'attributes'}]->(m) return distinct m.name"}, {"query": "Do you know what Guo Wei does for a living?", "cypher": "match (:ENTITY{name:'\u5173\u80b2\u4f1f'}) <- [:Relationship{name:' Chinese name'}]-(m),(m) - [:Relationship{name:' profession'}]->(h) return distinct h.name limit 1"}, {"query": "Is there any problem listing 2 items other than the one-man operation of the Tianjin-based company that operates the X-ray instruments in the East Li district?", "cypher": "match (:ENTITY{name:'Stanley Spectrometer Operating Department of Tianjin City's East Li District'}) --(m) with m order by m.name where m.name <> 'individual operating' return distinct m.name limit 2"}, {"query": "Please identify 5 people who have directed in this profession.", "cypher": "match (:ENTITY{name:' director'}) <- [:Relationship{name:' profession'}]- (p) return distinct p.name limit 5"}, {"query": "The book is about 101 stories that reach the heart of a child.", "cypher": "match (:ENTITY{name:'101 stories that reach the heart of the child'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'books' return n.name limit 1"}, {"query": "The 178 graduation thesis web has a fancy label in your mind?", "cypher": "match (:ENTITY{name:'178 graduation thesis web'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you sort out the three label attributes of Project 211?", "cypher": "match (:ENTITY{name:'211 project'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 3"}, {"query": "The website is a product of the Internet, but does it have other label attributes?", "cypher": "match (:ENTITY{name:'136 lawyer's net'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'Internet product' return m.name"}, {"query": "Please list the types of information related to Sichuan Willow Town in 5 levels 3 and 4 .", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' Sichuan Willow Town'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "In which regions are the red beans mainly distributed?", "cypher": "match (:ENTITY{name:'Relationship{name:'distribution area'}]-> (m) return distinct m.name"}, {"query": "I know that Toyota Mirai was launched on December 15, 2014 and has a range of almost 500 km, you can find me more information, find 6 more.", "cypher": "match (n:ENTITY{name:'Toyota Mirai'}) -->(h) with h order by h.name where h.name <> 'nearly 500 kilometers' and h.name <> 'December 15, 2014 ((Japan) ' return h.name limit 6"}, {"query": "Can you recommend two novels that are still in print?", "cypher": "The following pages link to List of Chinese novels by name:"}, {"query": "Do you know how many words the book \"The Holy Eye Warrior\" has reached?", "cypher": "match ((:ENTITY{name:'Relationship{name:'word count'}]-> (m) return m.name"}, {"query": "Who has the most representative work of Odysseus?", "cypher": "match (:ENTITY{name:'Relationship{name:'represents work'}]- (m) return m.name order by m.name limit 10"}, {"query": "Have you heard of .top?", "cypher": "match (:ENTITY{name: '.top'}) --(m) with m order by m.name return m.name"}, {"query": "What books have you translated?", "cypher": "match (:ENTITY{name:'super'}) <- [:Relationship{name:'translator'}]- (q) return distinct q.name"}, {"query": "Please help me find three companies, where are their addresses?", "cypher": "match (:ENTITY{name:' company'}) <- [*]-(m), (m) - [:Relationship{name:' address'}]->(n) return m.name, n.name limit 3"}, {"query": "I was curious to know if the 1st grade - primary school language reading the King's book?", "cypher": "match (:ENTITY{name:'1st grade - Primary language reading King'}) --(n) with n order by n.name where n.name <> ' publication' return n.name"}, {"query": "Do you know any specific information about the Meizu? Can you give me 10?", "cypher": "match (:ENTITY{name:'supplement'}) --(h) return distinct h.name limit 10"}, {"query": "What are the foods that have a sour-sweet taste? Please list 5 of them.", "cypher": "The name of the game is \"Relationship\" (Relationship) - (mn) - (mn) - (Tag: Name: Label) - (n)"}, {"query": "What are the labels of the people who work with Wang Yan in the same profession? Please show them in order of number of labels.", "cypher": "match (n:ENTITY{name:'King's Daughter'}) - [:Relationship{name:'Career'}]->(:ENTITY) <- [:Relationship{name:'Career'}]- ((m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Can you tell me the name of the author of the deaf?", "cypher": "match (:ENTITY{name:'hollow ear'}) <- [:Relationship{name:'author'}]-(q),(q) - [:Relationship{name:'Chinese name'}]->(m) return distinct m.name limit 1"}, {"query": "Tell me, what is a full-size 4.3?", "cypher": "match (:ENTITY{name:'4.3'}) <- [:Relationship{name:'full weight'}]- (p) return distinct p.name"}, {"query": "Please help me find out what the theme of the 2006 Hebei International Environmental Protection Technology Equipment Expo is.", "cypher": "match ((n:ENTITY{name:'2006 Hebei International Environmental Protection Technology Equipment Exhibition'}) - [:Relationship{name:'subject'}]-> (x) return x.name"}, {"query": "Tell me about 1999 - the 10th Annual Congress of the Chinese Archaeological Society, a collection of five articles.", "cypher": "match (p:ENTITY{name:'1999- Tenth Annual Meeting of the Chinese Archaeological Society's Selected Papers'}) --(m) with m order by m.name return distinct m.name skip 1 limit 5"}, {"query": "Please tell me what happened in the United States (local time) on August 5, 2015?", "cypher": "match (:ENTITY{name:'(local time) August 5, 2015'}) <- [:Relationship{name:'occurred time'}]- (q) return distinct q.name"}, {"query": "Who is the leader of the Four Kingdoms?", "cypher": "match (:ENTITY{name:'the head of the four kingdoms'}) <- [:Relationship{name:'status'}]- ((m) return distinct m.name"}, {"query": "Do you know the song by your name?", "cypher": "match (:ENTITY{name:'with his name'}) --(h) return distinct h.name"}, {"query": "The following is a list of articles that have been written about the two layers of the relationship between the Moon and the Moon in the book of Kosan Shammei.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'Luo Linggu' return distinct x.name"}, {"query": "Please help me find 10 albums by Zhang Shijiazhuang", "cypher": "match (:ENTITY{name:'Zhang Shijie'}) <- [:Relationship{name:'album singer'}]-(m) return distinct m.name limit 10"}, {"query": "Do you know which major awards Polish films have won? Name three?", "cypher": "match (p:ENTITY{name:'Polish'}) <- [:Relationship{name:'for the White language'}]- ((q) - [:Relationship{name:'main prize'}]->(x) return distinct x.name limit 3"}, {"query": "I wonder what the name of the financial institution that focuses on serving small micro-enterprises and individual business owners is?", "cypher": "match (:ENTITY{name:' cater to small and micro businesses and individual business owners'}) <- [:Relationship{name:' focus'}]- (p) return p.name"}, {"query": "I wonder what day the incident happened with Swiss rocket scientist, Yves Rossi?", "cypher": "match (:ENTITY{name:'Swiss rocket rocket man Boev Rossi'}) <- [:Relationship{name:'event'}]- (n) return n.name order by n.name"}, {"query": "Is there another name for this thing with the natural label?", "cypher": "match (:ENTITY{name:'natural'}) <- [:Tag{name:'tag'}]-(p),(p) - [:Relationship{name:'alias'}]->(m) return m.name order by m.name limit 5"}, {"query": "What are the main achievements of Dong Silver Flower?", "cypher": "match (x:ENTITY{name:'\u8463\u94f6\u82b1'}) <- [:Relationship{name:'Chinese name'}]- ((m) - [:Relationship{name:'main achievement'}]->(n) return distinct n.name"}, {"query": "The book is a book about the life of a young man named Rudyard Kipling.", "cypher": "match (:ENTITY{name:'Rouchen Jen and Lee Joseph'}) <- [:Relationship{name:' book name'}]- ((n) - [:Relationship{name:' pricing'}]->(q) return distinct q.name"}, {"query": "123 Online Schools have subject tags and what tags?", "cypher": "match (:ENTITY{name:'123 online school'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'discipline' return n.name"}, {"query": "I'm not sure what the novel is about, but I'm not sure what the novel is about.", "cypher": "match (:ENTITY{name:'Jingjiang City'}) <- [:Relationship{name:'connected website'}]- (h) return h.name order by h.name limit 10"}, {"query": "The first five labels for the 2002 Hong Kong concert?", "cypher": "match (q:ENTITY{name:'2002 Hong Kong Concert (s) 1) '}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "The author of the novel, Demon Blue, is nicknamed?", "cypher": "match (:ENTITY{name:'\u5996\u5996\u84dd'}) <- [:Relationship{name:' author'}]-(m),(m) - [:Relationship{name:' Chinese name'}]->(h) return distinct h.name limit 1"}, {"query": "Is there a label for Chan's Chronicles other than fiction and books?", "cypher": "match (n:ENTITY{name:'Cheng's Chronicles'}) - [:Tag{name:'tags'}]->(h) with h order by h.name where h.name <> 'novel' and h.name <> 'book' return h.name limit 1"}, {"query": "Do you know what exhibition was on the day of the event?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "How many people are involved in the underground waterways secret room? What is the estimated time of arrival? What is the first time of arrival?", "cypher": "match (:ENTITY{name:'underground waterway secret room'}) - [:Relationship{name:'number of participants'}]->(n) return n.name as name union all match (:ENTITY{name:'underground waterway secret room'}) - [:Relationship{name:'estimated appearance'}->(m) return m.name as name union all match (:ENTITY{name:'underground waterway secret room'}) - [:Relationship{name:'time of first entry'}->(r) return r.name as name"}, {"query": "Do you know what holiday is 3/3/32023?", "cypher": "match (n:ENTITY{name:'March 3rd'}) <- [:Relationship{name:'Holiday time'}]- (mn) return mn.name"}, {"query": "What is the first Chinese name of Huaxia's son?", "cypher": "match (:ENTITY{name:'Huaxing's Son'}) - [:Relationship{name:'Chinese name'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "I was asked to list a volunteer service station at Northeastern Electricity University.", "cypher": "match (:ENTITY{name:'Northeast Electric University Volunteer Service Station'}) --(m) return distinct m.name limit 1 The name of the station is not known"}, {"query": "The following is a list of the most important things you can find in the world of Albu-Muttair Mokhalad A. Nasser:", "cypher": "match (n:ENTITY{name:'Albu-Muttair Mokhalad A. Nasser'}) - [*1..3]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "Can you list which are the 5th tier label affiliations of Barbarossa Football Club?", "cypher": "Match (n) <- [:Tag*5{name:'tag'}]- ((p:ENTITY{name:'Barbarossa Football Club'}) RETURN distinct n.name"}, {"query": "What do you know about the party of the son of Chen Zhen?", "cypher": "match (:ENTITY{name:'\u9648\u5176\u4e1a'}) <- [:Relationship{name:'father'}]- ((p) - [:Relationship{name:'party'}]->(n) return distinct n.name"}, {"query": "Can you give an example of the main achievements of Grigori Savanna?", "cypher": "match (:ENTITY{name:'Gigandari Sailor'}) - [:Relationship{name:'main work'}]-> (q) return q.name order by q.name limit 1"}, {"query": "Tell me which games are the same size as Escape from the Haunted Mansion? What are the labels for each game? Please sort by the number of labels in each game from small to large.", "cypher": "match (n:ENTITY{name:'escape from weird old house'}) - [:Relationship{name:'game size'}]->(:ENTITY) <-[:Relationship{name:'game size'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "What else is there to say about the name of the liquid white wine?", "cypher": "match (:ENTITY{name:' Liquid French white wine is liquid fermented French white wine\u3002'}) <- [:Describe{name:'describe'}]- ((q) - [:Relationship{name:'alias'}]->(h) return distinct h.name"}, {"query": "The song is from the album of which you might not expect it to be, how long the song is and who is the singer?", "cypher": "match (:ENTITY{name:'unanticipated'}) - [:Relationship{name:'belonging to album'}]->(n) return n.name as name union all match (:ENTITY{name:'unanticipated'}) - [:Relationship{name:'song duration'}->(m) return m.name as name union all match (:ENTITY{name:'unanticipated'}) - [:Relationship{name:'song originalsongs'}]->r) return r.name as name"}, {"query": "Can you find me two Zhejiang dishes and introduce them?", "cypher": "match (:ENTITY{name:'Relationship*]-(m), (m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "How many video apps are running on Android 1.5? Can you name two?", "cypher": "The following is a list of the most commonly used operating systems for Android:"}, {"query": "The Chinese Navy is a global leader in the field of maritime science and technology, with a strong presence in the world's largest maritime industries.", "cypher": "match (n:ENTITY{name:'Yuxinghai Qijian: China's modern naval history novel'}) - [:Relationship*]->(x) where x.name <> 'Sociology of the humanities' return distinct x.name limit 5"}, {"query": "The name of the drug is called what it is, but don't forget about the Sushi Mountain and the Chicken Soup for the Soul.", "cypher": "match (n:ENTITY{name:'Tendamine'}) - [:Relationship{name:'alias'}]->(h) where h.name <> 'Sushibiyama' and h.name <> 'Tenderness' return distinct h.name limit 1"}, {"query": "Do you have any tags for the three Suzhou-based Twitter companies, other than their website and company?", "cypher": "match (n:ENTITY{name:'Suzhou Shuangye Corporation'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'website' and h.name <> 'company' return distinct h.name limit 3"}, {"query": "The 10-step tabletop game, is it paid, do you know?", "cypher": "match ((:ENTITY{name:'10-step chart'}) - [:Relationship{name:'has been paid'}]-> (x) return x.name"}, {"query": "Can you list some of the representative works of ceramic artists?", "cypher": "match (q:ENTITY{name:' ceramic artist'}) <- [:Relationship{name:' profession'}]- ((m) - [:Relationship{name:' representing work'}]->(x) return distinct x.name"}, {"query": "What does the word \"lonely\" mean? Where did it come from?", "cypher": "The name of the game is \"Relationship\" (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relationship) - (Relations) - (Relations) - (Relations) -) - (Relations) - (Relations) - (Relations) - (Relations) - (Relations) -) - (Relations) - (Relations) - (Relations) - (Relations) - (Relations) -) - (Relations) - (Relations) - (Relations) - (Relations) - (Relations) -) - (Relations) - (Relations)"}, {"query": "I'm not sure what other companies have labels for the same place as Beijing Dragon Wrestling and Security Prevention Technology Co., Ltd.", "cypher": "match (n:ENTITY{name:'Beijing Dragon Wrestling and Security Prevention Technology Co. Ltd'}) - [:Relationship{name:'HQ location'}]->(:ENTITY) <- [:Relationship{name:'HQ location'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) BY ORDER c)"}, {"query": "I want to execute the date of the 1980 Ministry of Higher Education Budget Package and other 5 information in the second level of the methodology.", "cypher": "match (:ENTITY{name:'the method of testing the budget package of the higher education institution'}) -[*1..2]-(p) where p.name <> '1980/12/1' return p.name limit 5"}, {"query": "What is the job of the next president?", "cypher": "match (:ENTITY{name:'\u4efb, Sanshi Shouyang, graduated from the Graduate School of Journalism of the Faculty of Social Sciences\u3002'}) <- [:Describe{name:'description'}]-(h) - [:Relationship{name:'profession'}]->(q) return distinct q.name"}, {"query": "Can you tell me the labels of the three little short-legged leather ones besides the two labels of the pets and the movie?", "cypher": "match (n:ENTITY{name:' small short leged leather'}) - [:Tag{name:' tag'}]->(h) where h.name <> 'pet' and h.name <> 'film' return distinct h.name limit 3"}, {"query": "I'm going to go to the movies and I'm going to go to the movies and I'm going to go to the movies and I'm going to go to the movies and I'm going to go to the movies and I'm going to go to the movies and I'm going to go to the movies and I'm going to go to the movies and I'm going to go to the movies and I'm going to go to the movies and I'm going to go to the movies.", "cypher": "match (:ENTITY{name:'actor of the comedy film'}) <-[:Relationship*]-(m),(m) -[:Describe{name:'description'}]->(n) return m.name,n.name limit 1"}, {"query": "There is a technology that has developed non-uniform correction technology and so on, what is this technology?", "cypher": "match (:ENTITY{name:'Non-uniform correction technology etc'}) <- [:Relationship{name:'new technology'}]- (x) return distinct x.name"}, {"query": "Can you tell me which species of Chinese hardwood tree the teacher introduced in class belongs to?", "cypher": "match ((:ENTITY{name:'China Hardware'}) - [:Relationship{name:'\u5c5e'}]-> (p) return p.name"}, {"query": "Can you tell me which books are published on 2001/1/1?", "cypher": "match (:ENTITY{name:'2001/1/1'}) <- [:Relationship{name:' time of publication'}]- ((x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name"}, {"query": "I'm going to have to get two of these, what are the main ingredients?", "cypher": "match (:ENTITY{name:'Hong Kong dishes'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:' main ingredient'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "The first thing I want to do is write down all the information about the other name of the aromatic aluminate.", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name <>'flavor essence' return distinct x.name"}, {"query": "Where are the people who speak Nauruan?", "cypher": "match (:ENTITY{name:'Nauru official language, Central official language, Central official language'}) <- [:Relationship{name:'dialect'}]-(h) return h.name skip 1"}, {"query": "Please help me find the other 7 stories in the movie Undersea Monster 3 .", "cypher": "match (:ENTITY{name:' underwater freak'}) - [:Relationship*1..3]-(p) where p.name <> 'film' return p.name limit 7"}, {"query": "The eight-tier system was used in what era and what did it include?", "cypher": "match (:ENTITY{name:'eight-part match'}) - [:Relationship{name:'time'}]->(n) return n.name as name union all match (:ENTITY{name:'eight-part match'}) - [:Relationship{name:'composition'}]->(m) return m.name as name"}, {"query": "Can you tell me everything you know about the Great Cretaceous?", "cypher": "match (:ENTITY{name:'Big rock lipid'}) - [*1..3]-(p) return p.name limit 10"}, {"query": "I need details on the relationship between the five 2015 RBMs and the 5th level?", "cypher": "match (n:ENTITY{name:'Ripper armored personnel carrier'}) - [*1..5]->(x) where x.name <>'2015' return distinct x.name limit 5"}, {"query": "Do you know when she published this book, The Eight O'Clock Software BD0226 World Cinema Classic vs. White?", "cypher": "match (:ENTITY{name:' eight-point software BD0226 world cinema classic versus white'}) <- [:Relationship{name:' book name'}]- ((x),(x) - [:Relationship{name:' time of publication'}]->(q) return distinct q.name"}, {"query": "What is the name of the web model that was derived from Alex Rampell?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What kind of jobs would people with uncommon personality traits do?", "cypher": "match (:ENTITY{name:' not so ordinary'}) <- [:Relationship{name:' characteristic'}]- ((h) - [:Relationship{name:' profession'}]->(q) return distinct q.name"}, {"query": "The five species and their distribution areas have been identified.", "cypher": "match (:ENTITY{name:'animal'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'distributed area'}]->(n) return m.name, n.name limit 5"}, {"query": "In 10 words, tell me the list of events for the 1987 Spring Festival?", "cypher": "match (:ENTITY{name:'1987 Spring Festival party schedule'}) --(m) with m order by m.name return m.name limit 10"}, {"query": "Do you know which 5 are related to the economy with the 4th tier label?", "cypher": "The following is a list of the most commonly used tags in the world:"}, {"query": "Please tell me which of the following people were the main achievers of the liberation war?", "cypher": "match (:ENTITY{name:'participated in the Liberation War'}) <- [:Relationship{name:'main achievements'}]- (x) return x.name skip 4"}, {"query": "Can you find 10 beauty books? Who are the authors?", "cypher": "match (:ENTITY{name:'beauty books'}) <--(m), (m) - [:Relationship{name:'author'}]->(n) return m.name, n.name limit 10"}, {"query": "Do you know which schools were founded in 1984 in Jilin, China? Can you find two for me?", "cypher": "match (:ENTITY{name:'1984'}) <- [:Relationship{name:'time of founding'}]-(m), (m) - [:Relationship{name:'area to which belongs'}]->(n) where n.name='Chinese shilling' return m.name limit 2"}, {"query": "The following is a list of people who have the same occupation as Holger Baum. What are their labels?", "cypher": "match (n:ENTITY{name:'Holger-Behm'}) - [:Relationship{name:'profession'}]->(:ENTITY) <- [:Relationship{name:'profession'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) BY ORDER c)"}, {"query": "Help me find five sights in Shenyang.", "cypher": "match (:ENTITY{name:'Shenyang City, Liaoning Province'}) <- [:Relationship{name:'City'}]-(m), (m) - [:Tag{name:'Tag'}]->(n) where n.name='Landscape attractions' return distinct m.name limit 5"}, {"query": "When did Russia come to power?", "cypher": "Match (:ENTITY{name:'Russian Empire'}) - [:Relationship{name:'Russian Empire'}]->(m) return distinct m.name"}, {"query": "Do you know which ones have three jump tags to do with the publications?", "cypher": "The following is a list of all the different ways Match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'publications'}) RETURN distinct n.name limit 3"}, {"query": "What is the name of the beauty program based on the hyperbolic dynamic aesthetic curve?", "cypher": "match (:ENTITY{name:'Relationship'}) <- [Relationship{name:'base'}]- (x) return x.name"}, {"query": "The first is the scientific term 1-hydroxybenzyl?", "cypher": "match (:ENTITY{name:'1-methionine'}) --(m) with m order by m.name where m.name <> 'discipline' return m.name"}, {"query": "The publisher is an electronic industry publisher, so please find the 6 information in the 3 layers of this book.", "cypher": "match (:ENTITY{name:'180 cases of practical circuits with 4017 numerical counter}) - [*1..3]-(p) where p.name <> 'electronic industry publisher' return distinct p.name limit 6"}, {"query": "Tell me about 100 heroic role models who have made outstanding contributions to the founding of a new China: Chen Yueyang?", "cypher": "match (:ENTITY{name:'100 heroic role models who made outstanding contributions to the founding of a new China: Chen Yue'}) --(n) with n order by n.name return n.name"}, {"query": "I would like to know if Zhang is a military man, what other personal information is there? Please help me find 10 information on him in 2 layers.", "cypher": "match (:ENTITY{name:'Zhang Mu'}) - [*1..3]-(p) where p.name <> 'military' return distinct p.name limit 10"}, {"query": "I've been using 09 Returns to buy stuff lately, do you know which specific company is affiliated with it?", "cypher": "match ((:ENTITY{name:'09 return net'}) - [:Relationship{name:'affiliated company'}]-> (x) return x.name"}, {"query": "Ask who's main achievement was to become president of Dominica on March 5, 1878 and then on July 6, 1878.", "cypher": "match (:ENTITY{name:'March 5, 1878 - July 6, as President of the Dominican Republic'}) <- [:Relationship{name:'main achievements'}]- (p) return distinct p.name"}, {"query": "Tell me what are the three representative works of the Pearl of Konhai?", "cypher": "match (:ENTITY{name:'Kong's Sea Pearl' ((1942 ): Kong's other frontier chieftainswoman\u3002'}) <- [:Describe{name:'Description'}]-(m),(m) - [:Relationship{name:'represents works'}]->(p) return distinct p.name limit 3"}, {"query": "What documents are there on the thirty-first anniversary of the Republic [1942]?", "cypher": "match (q:ENTITY{name:'Republic of the Thirty-first Year [1942]'}) <- [:Relationship{name:'publication time'}]- (h) return h.name"}, {"query": "Tell me, what is the most dangerous substance to swallow and inhale?", "cypher": "match (m:ENTITY{name:'swallow, inhale highly toxic carcinogenic'}) <- [:Relationship{name:'danger description'}]- (n) return distinct n.name"}, {"query": "The 2nd World Internet Congress was hosted by China, with 10 forums and 22 topics, please find me 5 more for this conference.", "cypher": "match (n:ENTITY{name:'Second World Internet Congress'}) -->(h) with h order by h.name where h.name <> 'People's Republic of China' and h.name <> '10 forums, 22 topics' return h.name limit 5"}, {"query": "What are the Chinese names of people born in November 1979?", "cypher": "match (:ENTITY{name:'November 1979'}) <- [:Relationship{name:'date of birth'}]- ((n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 5"}, {"query": "Can you tell me about Timko Milan, a Slovak citizen, in two different relationships?", "cypher": "match (n:ENTITY{name:'Timko Milan'}) - [*1..2]->(x) where x.name<>'Slovakia' return distinct x.name"}, {"query": "Can you find out the five monarchs and what their respective roles are?", "cypher": "match (:ENTITY{name:' monarch'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' function'}]->(n) return m.name, n.name limit 5"}, {"query": "Where is the village of Zaron?", "cypher": "match (:ENTITY{name:'Zaron's home town'}) - [:Relationship{name:'geographical location'}]-> (m) return distinct m.name"}, {"query": "I want Zhang Zulin and Hu Jintao's book on the process of making electronics to help me find five information in the three layers of the book.", "cypher": "match (:ENTITY{name:' Electronic product manufacturing process'}) - [*1..3]-(p) where p.name <> 'Zhang Zulin Hu Jindong' return distinct p.name limit 5"}, {"query": "Who else in the infantry regiment, besides Colonel Alfred Wood, is there?", "cypher": "match (:ENTITY{name:'infantryman'}) <- [:Relationship{name:'army'}]-(n),(n) - [:Relationship{name:'colonel'}]->(m) where m.name <> 'Alfred Wood' return distinct m.name limit 1"}, {"query": "Can you describe the three types of relationships that are involved in the melancholy of a tennis player?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'the melancholy of a tennis player'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Find me two rivers that flow into the Yellow Sea, where do they all come from?", "cypher": "match (:ENTITY{name:'\u9ec4\u6d77'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'source'}]->(n) return m.name, n.name limit 2"}, {"query": "The book is based on the book of the same name by the author, who is also a writer and author of the book, The Sea of Taboo, which is a book about the myth of the mermaid.", "cypher": "match ((:ENTITY{name:'the fish of the sea; the sea of taboos'}) - [:Relationship{name:'linked website'}]-> (p) return p.name"}, {"query": "What problems can magnetic exploration solve and where can it be applied?", "cypher": "match (:ENTITY{name:'magnetic exploration'}) - [:Relationship{name:'fundamental mission'}]->(n) return n.name as name union all match (:ENTITY{name:'magnetic exploration'}) - [:Relationship{name:'area'}]->(m) return m.name as name"}, {"query": "The website of the trade fair is called \"Sex Trade Network\".", "cypher": "Match (:ENTITY{name:'sex business network'}) <- [:Relationship{name:'collaborative media'}]- (m) return m.name"}, {"query": "What are the streets in Tianjin City?", "cypher": "match (n:ENTITY{name:' Tianjin City'}) <- [:Relationship{name:' City'}]- ((m) return distinct m.name"}, {"query": "Do you know what the predecessor of this school belonging to the public category is?", "cypher": "match (p:ENTITY{name:' public'}) <- [:Relationship{name:' category'}]-(x),(x) - [:Relationship{name:' predecessor'}]->(m) return m.name order by m.name limit 3"}, {"query": "What is the name of a book written by author Huang Wan in 2010 about the emperor?", "cypher": "match (:ENTITY{name:'Relationship{name:'author'}]-(m), (m) -[:Relationship{name:'published time'}]->(n) where n.name='2010-1-1' return distinct m.name"}, {"query": "List three professions that are communist, not including party group members.", "cypher": "match (:ENTITY{name:'Communist Party'}) <- [:Relationship{name:'faith'}]-(h),(h) - [:Relationship{name:'profession'}]->(n) where n.name <> 'party group member' return distinct n.name limit 3"}, {"query": "Can you tell me about the 2010 report of the People's Government of Wuwei?", "cypher": "match (n:ENTITY{name:'2010 Work Report of the People's Government of the City of Wuwei'}) --(x) with x order by x.name return x.name"}, {"query": "I wanted to ask you, what other labels does the Tsakakron Ma have besides comics and characters?", "cypher": "match (n:ENTITY{name:'\u5bfa\u5742\u9f8d\u99ac'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'comic' and h.name <> 'person' return distinct h.name limit 1"}, {"query": "Help me find 10 foods that taste sweet?", "cypher": "match (:ENTITY{name:'sweet'}) <-[:Relationship{name:'flavour'}]->(n) where n is not null return distinct n.name limit 10"}, {"query": "Please help me find one of Terry Lucio's most representative works outside of The Pirates of the Caribbean: On Stranger Tides.", "cypher": "match (n:ENTITY{name:'Tri Lucio'}) - [:Relationship{name:'representative work'}]->(h) where h.name <> 'Caribbean pirates: the surprise wave' return distinct h.name limit 1"}, {"query": "The term \"talent\" is used to describe a group of people who come together to create something that is unique.", "cypher": "match (:ENTITY{name:' the whole word metaphorically brings people together'}) <- [:Relationship{name:' interpretation'}]-(m) return distinct m.name"}, {"query": "Tell me about the reincarnation of the fairy you know?", "cypher": "match (n:ENTITY{name:'Reborn Wonder Woman'}) --(x) return x.name"}, {"query": "Do you know what this person does for a living? Can you tell me five?", "cypher": "match (:ENTITY{name:'\u65b9\u4f20\u82b8'}) <- [:Relationship{name:' Chinese name'}]-(x),(x) - [:Relationship{name:' profession'}]->(n) return n.name order by n.name limit 5"}, {"query": "The film is directed by Sun Li-jung.", "cypher": "Match (:ENTITY{name:'Sun Li Jun'}) <- [:Relationship{name:'producer'}]- (n) return distinct n.name"}, {"query": "Can you tell me what other names you have for the people who are in the industry?", "cypher": "match (:ENTITY{name:'switch into line'}) --(p) return distinct p.name limit 1"}, {"query": "What are the Cervidae species in China?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'distribution area'}]- (mn) - [:Relationship{name:'section'}]->(n:ENTITY{name:'Cervidae deer family'}) return mn.name"}, {"query": "The University of Bologna recommends 10 different departments in addition to the Department of Chemistry.", "cypher": "match (:ENTITY{name:'Relationship{name:'schoolwork'}) <- (Relationship{name:'schoolwork'}) - (n), (n) - (n) - (Relationship{name:'main faculty'}) - (n) where p.name <> 'chemistry' return distinct p.name limit 10"}, {"query": "There is a steel number 30, what steel is it?", "cypher": "match (:ENTITY{name:'30'}) <- [:Relationship{name:'name of material'}]- (x) return distinct x.name"}, {"query": "What are the labels of Beijing SunTang TECHNOLOGY Co., Ltd.? Can you name 10?", "cypher": "match (:ENTITY{name:'Beijing Tianjin Thyscream Technology Co. Ltd'}) - [:Tag{name:'tag'}]-> (p) return distinct p.name limit 10"}, {"query": "What is the shortest distance between the two layers of the cider and the cider tea?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest cider'}) - [*..2]-(b:ENTITY{name:'shortest milk tea'})) return count ((p)"}, {"query": "How do you feel about the 12-year-old on the battlefield?", "cypher": "match (:ENTITY{name:'12 years old battlefield'}) --(h) with h order by h.name return h.name"}, {"query": "Do you know which three major films, besides playing the Alien Family and Detective Deer Hunter, are the main ones that are directed by Hiroyuki Hiroshi?", "cypher": "match (n:ENTITY{name:'Kyu-chan'}) - [:Relationship{name:'main work'}]->(h) with h order by h.name where h.name <> 'external family' and h.name <> 'detective DiRenjer' return h.name limit 3"}, {"query": "Can you list me three places that are open all day and where are the planned amenities?", "cypher": "match (:ENTITY{name:'all day'}) <- [:Relationship{name:'open hours'}]- ((x) - [:Relationship{name:'planning general area'}]->(m) return distinct m.name limit 3"}, {"query": "Do you know the achievements of a man born in Waeyang, South Korea?", "cypher": "match (:ENTITY{name:'Korean Jingdong, Nanchang City, Nanchang Province'}) <- [:Relationship{name:'Born'}]- ((n) - [:Relationship{name:'Major achievement'}]->(h) return distinct n.name"}, {"query": "What is the name of a classic show hosted by a video search engine?", "cypher": "match (:ENTITY{name:'Search video'}) <- [:Relationship{name:'host'}]- (m) return m.name"}, {"query": "What was the magnitude of the 1.5 Riyadh earthquake reported in the newspaper?", "cypher": "match ((:ENTITY{name:'1\u00b715 Lijiang Huangxi earthquake'}) - [:Relationship{name:'level'}]-> (m) return m.name"}, {"query": "Do you know which hotels and markets have a 3rd level label relationship?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'marketplace hotel'}) return distinct n.name"}, {"query": "Please list the games that are held at Golden Bull Football Park, Star Works Stadium and the other football stadiums in the country.", "cypher": "match (:ENTITY{name:'Gymbals Football Park, Starworks Stadium Football Stadium'}) <- [:Relationship{name:'Holding venue'}]- (m) return distinct m.name"}, {"query": "Do you know the nature of the American International Group?", "cypher": "match ((:ENTITY{name:'American International Group'}) - [:Relationship{name:'Company nature'}]-> (n) return n.name"}, {"query": "I'm curious to know what kind of relationships are in the two layers of your villa, sister?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'sister you're not going to get away with it'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you tell me 10 things about this man, who is a national of the People's Republic of China, about his main achievements?", "cypher": "match (:ENTITY{name:'People's Republic of China'}) <- [:Relationship{name:'nationality'}]- ((x) - [:Relationship{name:'main achievements'}]->(p) return p.name skip 2 limit 10"}, {"query": "What else do you know about the striped tiger other than that it is a member of the family?", "cypher": "match (:ENTITY{name:'Relationship*1..2]-(p) where p.name <> 'Gekkonidae' return distinct p.name limit 10"}, {"query": "Can you recommend five novels that are being published in Jinjiang Literature City?", "cypher": "match (:ENTITY{name:'Jingjiang City'}) <- [:Relationship{name:'connecting platform'}]- (x) return distinct x.name limit 5"}, {"query": "What is the shortest relationship path between the contractor and the comparator in the 2 layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'commissioned calculator'}) -[:Relationship*..2]-(b:ENTITY{name:'compared calculator'})) return count ((p)"}, {"query": "Can you tell me what an ice wave is?", "cypher": "match (:ENTITY{name:' ice wave'}) --(h) return distinct h.name limit 1"}, {"query": "Please tell me now one of the representative works of this man whose name is unknown.", "cypher": "match (:ENTITY{name:'wordless'}) <- [:Relationship{name:'alias'}]-(x),(x) - [:Relationship{name:'representing work'}]->(p) return p.name order by p.name limit 1"}, {"query": "Can you tell me about some of the works that Liu Jianling has represented?", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}]-> (p) return p.name skip 1"}, {"query": "Statistics on the 10 occupations of people born in 1964?", "cypher": "match (:ENTITY{name:'July 1964'}) <- [:Relationship{name:'date of birth'}]- ((x),(x) - [:Relationship{name:'occupation'}]->(n) return distinct n.name limit 10"}, {"query": "Please introduce me to the main departments of the University of Tokyo.", "cypher": "match (:ENTITY{name:'Kogei University'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'main faculty'}]->(p) return p.name order by p.name limit 1"}, {"query": "I want to know the profile of Al-Yahri Abdullaziz, weighing 63 kg, in the four levels of relationships?", "cypher": "match (n:ENTITY{name:'Al-Yahri Abdullaziz'}) - [*1..4]->(x) where x.name <>'63 kg' return distinct x.name limit 5"}, {"query": "Which players are used to playing with their right foot?", "cypher": "match (:ENTITY{name:'right foot'}) <- [:Relationship{name:'usual foot'}]- (n) return n.name limit 10"}, {"query": "What are the main achievements of Fujian's elderly?", "cypher": "match (:ENTITY{name:'Fujiang Changyuan'}) <- [:Relationship{name:'birthplace'}]- ((x) - [:Relationship{name:'main achievements'}]->(p) return distinct p.name"}, {"query": "Can you list the 10 books printed on 2011-8-1?", "cypher": "match (:ENTITY{name:'2011-8-1'}) <- [:Relationship{name:' print time'}]- (n) return n.name limit 10"}, {"query": "Help me find the start and end of the artificial river.", "cypher": "match (:ENTITY{name:'artificial river'}) - [:Relationship{name:'begins with '}]->(n) return n.name as name union all match (:ENTITY{name:'artificial river'}) - [:Relationship{name:'stop at '}]->(m) return m.name as name"}, {"query": "What are the famous places in the Taipei-Taiwan dialect? Can you name 10?", "cypher": "match (:ENTITY{name:'guest talk-tabletop'}) <- [:Relationship{name:'dialect'}]-(x) - [:Relationship{name:'famous sights'}]->(q) return q.name order by q.name limit 10"}, {"query": "I'm not sure if you can find any songs sung by Shannon.", "cypher": "match (:ENTITY{name:'Shanghai'}) <- [:Relationship{name:'The song was originally sung'}]- (x) return distinct x.name"}, {"query": "I'm not sure if you're interested in reading the article, but I'm not interested in reading the article, so I'm not interested in reading the article.", "cypher": "match (:ENTITY{name:'17 November Revolutionary Organization'}) --(m) with m order by m.name where m.name <> 'social event' return distinct m.name limit 3"}, {"query": "I would like to know which company was founded on September 3, 2008?", "cypher": "match (:ENTITY{name:'03 September 2008'}) <- [:Relationship{name:'date of foundation'}]- (q) return distinct q.name"}, {"query": "Which production sites are the model for integrating the research, development and production of veterinary medicines?", "cypher": "match (:ENTITY{name:'Relationship'}- ((x),(x) - ((Relationship{name:'base of production'}->(p) return distinct x.name"}, {"query": "Two messages from the Fujian elderly, can you tell us anything besides the music?", "cypher": "match (:ENTITY{name:'Fujiang Old House'}) --(m) with m order by m.name where m.name <> 'Music work' return distinct m.name limit 2"}, {"query": "Who are the people with the same nationality as the Yomiuri? What are their labels? Please list them by number of labels from small to large.", "cypher": "match (n:ENTITY{name:'\u6728\u4f18\u6c11'}) - [:Relationship{name:'\u56fd\u7c4d'}]->(:ENTITY) <- [:Relationship{name:'\u56fd\u7c4d'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "The .NET game programming introduction classic is still available?", "cypher": "match (:ENTITY{name: .NET game programming entry classic'}) --(m) with m order by m.name where m.name <> 'books' return m.name"}, {"query": "Can you give a detailed introduction of the work of Sun Yat-sen / Liu Jiayou in the four layers of the relationship between professional systematic construction practice and research in the application of electronic technology?", "cypher": "match (n:ENTITY{name:'Electronic technology applied professional systematization construction practice and research'}) - [*1..4]->(x) where x.name <>'Soon Hyun//Hong Ji Yu' return distinct x.name"}, {"query": "What is Zhu Shiyang's profession?", "cypher": "match (:ENTITY{name:'Zhu Shinyang'}) <- [:Relationship{name:'Chinese name'}]- ((q) - [:Relationship{name:'profession'}]->(m) return distinct m.name"}, {"query": "What do you know about heavy security in the mountains?", "cypher": "match (:ENTITY{name:'Highly protected in the mountains'}) --(p) return p.name skip 1"}, {"query": "Help me find 10 fungal plants.", "cypher": "match (:ENTITY{name:' fungus'}) <- [:Tag{name:' tag'}]-(m) return distinct m.name limit 10"}, {"query": "What domain names are required to be certified by the company?", "cypher": "match (:ENTITY{name:' company proof'}) <- [:Relationship{name:' request'}]- (p) return p.name"}, {"query": "Do you know what her main works are? She is a purple sandstone artist, ceramicist, artisanal artist of national level, famous ceramicist.", "cypher": "match (:ENTITY{name:'Miao\u6625\u6d2a, purple sandstone artist, ceramic artist, national level artisanal artist, famous ceramicist\u3002'}) <-[:Describe{name:'description'}]-(q) -[:Relationship{name:'representative work'}]->(m) return distinct m.name"}, {"query": "Help me find five volumes of lyric poetry.", "cypher": "match (:ENTITY{name:'\u4e50\u5e9c\u8bd7\u96c6'}) <- [:Relationship{name:' work originated from'}]-(m) return distinct m.name limit 5"}, {"query": "Which five people are considered political figures?", "cypher": "match (:ENTITY{name:' politician'}) <--(n) return n.name limit 5"}, {"query": "I know from others that the train is not allowed to use a cartoon train, it is under the jurisdiction of Beijing Railway Administration, you can find me 5 more of them and give me the relevant information.", "cypher": "match (n:ENTITY{name:'Jinghua commuter train'}) -->(h) with h order by h.name where h.name <> 'Beijing Railway Bureau' and h.name <> 'can't use a carton' return h.name limit 5"}, {"query": "Can you recommend 10 romance novels for me?", "cypher": "Match (:ENTITY{name:'speech novel'}) <- [:Relationship{name:'speech novel'}]- (n) return n.name limit 10"}, {"query": "I'm interested in the game, but I'm not sure if I can get a sense of where Marvel's Future Battle is, what genre it is and what kind of content it's about.", "cypher": "Match (:ENTITY{name:'Marvel Future Battle'}) - [:Relationship{name:'region'}]->(n) return n.name as name union all match (:ENTITY{name:'Marvel Future Battle'}) - [:Relationship{name:'game type'}]->(m) return m.name as name union all match (:ENTITY{name:'Marvel Future Battle'}) - [:Relationship{name:'(content subject'}]->r) return r.name as name"}, {"query": "What songs are as long as the ones I've been able to sing, and what are their labels? Please list them in order of how many labels they have.", "cypher": "match (n:ENTITY{name:'remember you asked me to leave you'}) - [:Relationship{name:'song length'}] ->(:ENTITY) <-[:Relationship{name:'song length'}] -(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "How about reading 10 words for 10 days of modern etiquette?", "cypher": "match (:ENTITY{name:'10 days to learn modern etiquette'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "What is the religion of the people of Yangtze and what is the work that represents it?", "cypher": "match (:ENTITY{name:'\u5927\u901a'}) - [:Relationship{name:'\u4fe1\u4ef0'}]->(n) return n.name as name union all match (:ENTITY{name:'\u5927\u901a'}) - [:Relationship{name:'representative work'}]->(m) return m.name as name"}, {"query": "Do you know which platforms the game is released on? say three?", "cypher": "match (:ENTITY{name:'Wrath of Atlanta'}) <- [:Relationship{name:'Chinese name'}]- ((m) - [:Relationship{name:'game platform'}]->(q) return distinct q.name limit 3"}, {"query": "Can you tell me the name of a traditional ritual activity?", "cypher": "match (:ENTITY{name:' traditional ritual activities'}) <- [:Relationship{name:' type of festival'}]- (p) return p.name"}, {"query": "Do you know what kind of earthquakes are called earthquakes?", "cypher": "match (:ENTITY{name:'structure earthquake'}) <- [:Relationship{name:'type earthquake'}]- (m) return distinct m.name"}, {"query": "See the other 6 articles in this book, which are in the second layer of the book.", "cypher": "match (:ENTITY{name:' luxury items'}) - [:Relationship*1..2]-(p) where p.name <> 'books' return p.name limit 6"}, {"query": "What are the free places to visit in Hangzhou, Zhejiang Province?", "cypher": "match (:ENTITY{name:'Hangzhou City, Zhejiang Province'}) <- [:Relationship{name:' city'}]-(m), (m) - [:Relationship{name:' ticket price'}]->(n) where n.name='free' return distinct m.name"}, {"query": "I'm not sure if you're familiar with the term \"metallic acid\" or \"metallic acid\".", "cypher": "match (:ENTITY{name:'methacrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylate of acrylic acrylic acrylic acrylic acrylic acrylic acrylic acrylic acrylic acrylic of acrylic acrylic acrylic acrylic acrylic acrylic acrylic acrylic acrylic acrylic acrylic ac"}, {"query": "What are the main departments of the university where Professor Nguyen is the current rector? Can you name three?", "cypher": "match (:ENTITY{name:'Professor'}) <- [:Relationship{name:'currently rector'}]- ((q),(q) - [:Relationship{name:'main faculty'}]->(m) return distinct m.name limit 3"}, {"query": "What are the major accomplishments of the Dean of the School of Biomedical Engineering and Health Sciences at WSU?", "cypher": "match (:ENTITY{name:'Director of the School of Biomedical Engineering and Health Sciences at the University of the Pacific'}) <- [:Relationship{name:'profession'}]-(p),(p) - [:Relationship{name:'major achievement'}]->(q) return distinct q.name"}, {"query": "The novel is currently being serialized in Chinese under the title What? Say 3?", "cypher": "The title of the novel is \"The Story of a Girl\" by the author of the novel, which is also the title of the novel."}, {"query": "Can you name two of the main achievements of Juan Demosternes Arrocemena, but not the creation of a police school and a girls' school and the lead of a Panamanian delegation to Montevideo, Uruguay for the Pan American Conference?", "cypher": "match (n:ENTITY{name:'Juan DeMostenes Arosmena'}) - [:Relationship{name:'main achievements'}]->(h) where h.name <> 'organized a police school and a girls' school' and h.name <> 'led a Panamanian delegation to Montevideo, Uruguay to participate in the Pan-American Conference' return distinct h.name limit 2"}, {"query": "Help me find 10 religious figures.", "cypher": "match (:ENTITY{name:' religious figure'}) <- [:Tag{name:' tag'}]-(m) return distinct m.name limit 10"}, {"query": "Tell me about five personal profiles of Fendino Pascal from Guinea in the fourth level of relationships.", "cypher": "match (n:ENTITY{name:'Findorino Pascal'}) - [*1..4]->(x) where x.name<>'Guinea' return distinct x.name limit 5"}, {"query": "I would like you to list 10 representative works of the man who is a doctor.", "cypher": "match (:ENTITY{name:'doctor'}) <- [:Relationship{name:'profession'}]-(q) - [:Relationship{name:'representative work'}]->(m) return m.name order by m.name limit 10"}, {"query": "Do you know the message of the movie \"The Wonder Woman\"?", "cypher": "match (:ENTITY{name:'Mother of the Wonder Woman'}) --(n) return distinct n.name"}, {"query": "Where is the island of Mingan?", "cypher": "match (:ENTITY{name:'Relationship{name:' geographical location'}]->(m) return distinct m.name"}, {"query": "Do you know how many exhibitions are held at the Shanghai World Expo?", "cypher": "match (:ENTITY{name:' Shanghai World Expo'}) <- [:Relationship{name:' The exhibition hall'}]- (x) return x.name limit 5"}, {"query": "How many episodes of \"False Love\" are there?", "cypher": "match (:ENTITY{name:'missing love[2006 Liu Xiaobo, Xu Xian starring in the TV series]'}) - [:Relationship{name:'episode'}]->(n) return n.name as name union all match (:ENTITY{name:'missing love[2006 Liu Xiaobo, Xu Xian starring in the TV series]'}) - [:Relationship{name:'missing love'}]->(m) return m.name as name"}, {"query": "I'm looking for a book published in 2005 by China Power Publishing, can you find me 5 books?", "cypher": "match (:ENTITY{name:'China Electricity Publishing'}) <- [:Relationship{name:'China Electricity Publishing'}]-(m), (m) - [:Relationship{name:'time of publication'}]->(n) where n.name='2005' return m.name limit 3"}, {"query": "The following information is provided in the two-tier relationship of the Note Goddess version of the tech product Xiaomi:", "cypher": "match (n:ENTITY{name:'KomiNote goddess version'}) - [:Relationship*1..2]->(x) where x.name <> 'technology product' return distinct x.name"}, {"query": "Can you find out where the 10 villages are located?", "cypher": "match (:ENTITY{name:' village'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' geographical location'}]->(n) return m.name, n.name limit 10"}, {"query": "I wonder which channel broadcasts the daily program of the sea cruise?", "cypher": "match (:ENTITY{name:'Marine navigation'}) <- [:Relationship{name:' originated from '}]- (p) return p.name"}, {"query": "Can you tell me the dates of the three zodiac signs for the year of the rabbit?", "cypher": "The following is a list of the most commonly used keywords in the world."}, {"query": "I want to know which professors are in China? Please list me 5 of them.", "cypher": "The name of the game is \"X\" (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X) (X"}, {"query": "What happened in the world on December 28, 2014? Can you name four?", "cypher": "match (m:ENTITY{name:'December 28, 2014'}) <- [:Relationship{name:'time'}]- (p) return p.name limit 4"}, {"query": "Can you tell me five things you know about Francisco Bennozzi in the second level besides being a footballer?", "cypher": "match (:ENTITY{name:'Francisco Bennozzi'}) - [*1..2]->(p) where p.name <> 'footballer' return distinct p.name limit 5"}, {"query": "OLAY is a product of which company?", "cypher": "match (:ENTITY{name:'OLAY'}) - [:Relationship{name:'affiliated company'}]-> (m) return m.name"}, {"query": "Can you tell us about the two-tier relationship between the site and the Nanjing Development Zone?", "cypher": "match (n:ENTITY{name:'Southern Cape'}) - [:Relationship*1..2]->(x) where x.name<>'location' return distinct x.name"}, {"query": "Did you have trouble recommending five modern-language TV dramas?", "cypher": "match (:ENTITY{name:' modern speech'}) <- [:Relationship{name:' type'}]- (n) return distinct n.name limit 5"}, {"query": "Can you tell me who is not named Water One?", "cypher": "match (:ENTITY{name:' water'}) <- [:Relationship{name:' alias'}]- (q) return distinct q.name"}, {"query": "What are the tags of 123 Food Network?", "cypher": "match (q:ENTITY{name:'123 food network'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "What are the characteristics of the label of Northeast Binance?", "cypher": "match (:ENTITY{name:'Northeast Secondary'}) - [:Tag{name:'tag'}]-> (h) return h.name skip 1"}, {"query": "What are the famous sights in Daxi?", "cypher": "Match (:ENTITY{name:'Lancey'}) - [:Relationship{name:'Famous attractions'}]->(n) return n.name"}, {"query": "I'm looking for information on a person named Bob Byron who has no more than three levels of relationships.", "cypher": "match (n:ENTITY{name:'Bubb Byron'}) - [*1..3]->(x) where x.name <> 'foreign name' return distinct x.name"}, {"query": "Tell me, what is the name of this Russian guy? Can you tell me three?", "cypher": "match (:ENTITY{name:'Russia'}) <- [:Relationship{name:'nationality'}]-(p),(p) - [:Relationship{name:'profession'}]->(h) return p.name skip 4 limit 3"}, {"query": "What are the main awards that the famous alumnus Liu Yong-hui, Zhu Jun-chang, received?", "cypher": "match (:ENTITY{name:'\u6c38\u6731\u4fca\u5f35\u5fb7\u4fee'}) <- [:Relationship{name:'known alumnus'}]-(h),(h) - [:Relationship{name:'main award'}]->(p) return distinct p.name limit 5"}, {"query": "Can you list the names of the 10 relationships in the 2 layers of the Little Prince?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (R"}, {"query": "I would like to know 6 things about Lama Bay Village in addition to the 2 floors of the farm.", "cypher": "match (:ENTITY{name:'Lama Bay Village'}) - [*1..2]-(p) where p.name <> 'farming' return p.name limit 6"}, {"query": "Please introduce me to the actors who are looking for this movie, the first one will be able to .", "cypher": "match (:ENTITY{name:' looking for Angelina'}) --(h) return h.name order by h.name limit 1"}, {"query": "Tell me, what is the other label of Anhui Jinming Clothing Limited besides the organizing body?", "cypher": "match (:ENTITY{name:'Anhui Jinmei Clothing Co. Ltd'}) - [:Tag{name:'label'}]-> (p) with p order by p.name where p.name <> 'organization' return p.name limit 1"}, {"query": "What is the number one goal of the painter's profession?", "cypher": "match (:ENTITY{name:'painter'}) <- [:Relationship{name:'profession'}]-(p),(p) - [:Relationship{name:'main achievement'}]->(x) return x.name order by x.name limit 1"}, {"query": "What is the latest information on the PT870?", "cypher": "match (n:ENTITY{name:'Philippines PT870'}) --(x) return x.name"}, {"query": "The incident was a big fire in a shop on the street, what's your name?", "cypher": "match (:ENTITY{name:'There is a major fire incident in a street shop'}) <- [:Relationship{name:'content'}]- (q) return q.name"}, {"query": "How do you define a divorcee?", "cypher": "match (:ENTITY{name:'spouse'}) --(x) with x order by x.name return x.name"}, {"query": "Can you tell me if the princess doesn't want this song?", "cypher": "match (:ENTITY{name:'This princess does not want'}) --(x) return distinct x.name"}, {"query": "How much does a book cost for a single book?", "cypher": "match (:ENTITY{name:'snapshot'}) <- [:Relationship{name:'author'}]- ((n) - [:Relationship{name:'pricing'}]->(q) return distinct q.name"}, {"query": "My gangster girlfriend is the main character in this show.", "cypher": "Match (n:ENTITY{name:'My gangster girlfriend'}) - [:Relationship{name:'star'}]-> (h) return distinct h.name"}, {"query": "I want to know the other four information in the second layer of this book, which is an introduction to the electronic process by Zhang Zhang.", "cypher": "match (:ENTITY{name:' Electronic process entry'}) - [*1..2]-(p) where p.name <> 'Chang Chan' return distinct p.name limit 4"}, {"query": "What chemical has a molecular weight of 252.2416?", "cypher": "The name of the function is the same as the name of the function itself."}, {"query": "What is the name of the actress who sang the song \"Melody\" in the second act?", "cypher": "match (:ENTITY{name:'sweet'}) <- [:Relationship{name:'represents work'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='theatre actor' return distinct m.name"}, {"query": "What kind of people are the people with the hair in the wind?", "cypher": "Match (:ENTITY{name:'Relationship{name:'Multiple hair groups'}]->(n) return n.name"}, {"query": "What are the labels of these people, and where was Mineo's birthplace? Please find out how many of them are in order of the number of labels.", "cypher": "The following is a list of all the different ways M.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.E.R.R.E.R.R.E.R.R.E.R.E.R.E.R.R.E.R.E.R.R.E.R.R.E.R.E.R.E.R.R.E.R.R.E.R.R.E.R.R.E.R.R.E.R.R.R.R.E.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R.R."}, {"query": "Could you please list the five most representative works of Timothy Robert DeKay?", "cypher": "match (:ENTITY{name:'Timothy Robert DeKay'}) <- [:Relationship{name:' alias'}]- ((q) - [:Relationship{name:' representing work'}]->(x) return distinct x.name limit 5"}, {"query": "Can you recommend 2 software that are 1.67MB?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Do you know which school's famous alumnus is the deer?", "cypher": "Match (:ENTITY{name:'deer'}) <- [:Relationship{name:'known alumni'}]- (h) return h.name skip 1"}, {"query": "Do you know where the country of Etruria is located?", "cypher": "match (:ENTITY{name:'Etruria'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'located in'}->(q) return distinct q.name"}, {"query": "Speaking of 100 doors, do you know anything about the game?", "cypher": "match (:ENTITY{name:'100 doors'}) --(n) with n order by n.name where n.name <> 'game' return n.name"}, {"query": "I forgot the density of 4-hydroxyethyl diethyl, remember?", "cypher": "match ((:ENTITY{name:'4-hydroxyethyl diethyl'}) - [:Relationship{name:'density'}]-> (p) return p.name"}, {"query": "Can you tell me what the relationship is between Huanggang Education and Beijing Experimental School in the three levels?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Hung Kong Education Beijing Experimental School'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Can you recommend a studio that plans to shoot videos with innovative content?", "cypher": "match (:ENTITY{name:'planning to shoot a video with an innovative meaning'}) <-[:Relationship{name:'purpose'}]- (m) return m.name"}, {"query": "I want to know who is the best actress at the Berlin International Film Festival.", "cypher": "match (:ENTITY{name:'Best Actress'}) --(n) return n.name skip 1 This is the first match between the two films."}, {"query": "In a few words, what is the 110 voice cable?", "cypher": "match (n:ENTITY{name:'110 voice cabling rack'}) --(q) with q order by q.name return q.name skip 1 limit 1"}, {"query": "Do you know the profile of the Croatian Brezovets Josip in the 3rd level relationship?", "cypher": "match (n:ENTITY{name:'Brezovec Josip'}) - [*1..3]->(x) where x.name<>'Croatia' return distinct x.name"}, {"query": "The new Wongsakorn is a representation of the new Wongsakorn, by the way.", "cypher": "match (:ENTITY{name:'newwongsakorn'}) - [:Relationship{name:'representing work'}]-> (h) return h.name skip 2"}, {"query": "What is the name of the TV series produced by KBS 2 TV in South Korea, directed by Lee Byung-woo?", "cypher": "match (:ENTITY{name:'KBS 2TV'}) <- [:Relationship{name:'Production company'}]-(m), (m) - [:Relationship{name:'Director'}]->(n) where n.name='Lee Na-young' return m.name limit 2"}, {"query": "Can you talk about the accounting department at the Business School?", "cypher": "match (:ENTITY{name:'Accounting department of the College of Business and Professional Studies'}) --(p) return p.name skip 3"}, {"query": "I need information on the two-tier relationship between the works of Huang and the poetry of Han Fuchun.", "cypher": "match (n:ENTITY{name:'\u6eaa\u7fc1\u9898\u97e9\u5e9c\u8bd7'}) - [*1..2]->(x) where x.name <> '' return distinct x.name"}, {"query": "Can you list any of the three levels of relationships involved in the 2014 MTV Video Music Awards?", "cypher": "The game is based on the video game series of the same name."}, {"query": "Can you name 10 of the major awards this Brazilian has won?", "cypher": "match (:ENTITY{name:'Brazil'}) <- [:Relationship{name:'nationality'}]-(h),(h) - [:Relationship{name:'main prize'}]->(m) return m.name skip 1 limit 10"}, {"query": "What is the shortest distance between the Shaanxi Province branch of China Construction Bank and Qingdao City branch of China Construction Bank within the two levels?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'China Construction Bank Shanxi Province Branch'}) - [*..2]-(b:ENTITY{name:'China Construction Bank Qingdao City Branch'})) return count ((p)"}, {"query": "What is the story of the reign of Inchon?", "cypher": "Match (:ENTITY{name:'Inherent'}) - [:Tag{name:'tag'}]->(n) return n.name The name of the game is not shown."}, {"query": "Do you have anything for $44.5?", "cypher": "match (:ENTITY{name:'44.5 yuan'}) <--(n) return n.name The name of the match is"}, {"query": "Do you know who the representative of the first 10 best works of art is?", "cypher": "match (p:ENTITY{name:'Relationship{name:'represents work'}) - (x) return x.name order by x.name limit 10"}, {"query": "What is the chemical formula of sodium perchlorate in the many different information?", "cypher": "match ((:ENTITY{name:'sodium nitrate'}) - [:Relationship{name:' chemical formula'}]-> (p) return p.name"}, {"query": "The Shijiazhuang City Council is a social group organization that was founded on December 6, 2011. I would like to know more about the Council, find out and tell me.", "cypher": "match (n:ENTITY{name:'Kazakhstan City Chamber of Commerce'}) -->(h) with h order by h.name where h.name <> '2011/12/16' and h.name <> 'social group organization' return h.name limit 6"}, {"query": "Can you tell me about some of the professions that Paulo Melo has?", "cypher": "match (:ENTITY{name:'Paulo Melo'}) - [:Relationship{name:'profession'}]-> (m) return m.name order by m.name"}, {"query": "The two-tiered relationship between the two is related to the rainfall in the late afternoon in Denpo.", "cypher": "match (n:ENTITY{name:' night in the heart of the city's rain'}) - [*1..2]->(x) where x.name <>'\u4e07\u91cc' return distinct x.name"}, {"query": "Help me find two long novels by Yu Hua.", "cypher": "match (:ENTITY{name:'\u4f59\u534e'}) <- [:Relationship{name:'author'}]-(m), (m) - [:Relationship{name:'literary genre'}]->(n) where n.name='long novel' return distinct m.name limit 2"}, {"query": "What are the main achievements of people born in December 1961?", "cypher": "match (:ENTITY{name:'December 1961'}) <- [:Relationship{name:'date of birth'}]- ((q) - [:Relationship{name:'main achievements'}]->(p) return distinct p.name limit 3"}, {"query": "I want to know who is related to the 4th level of the tag?", "cypher": "The following is a list of the most commonly used tags in the search results."}, {"query": "I want to be a Wuhan University graduate with major achievements.", "cypher": "match (:ENTITY{name:'Wuhan University'}) <- [:Relationship{name:' Graduate School'}]- ((m) - [:Relationship{name:' Major achievements'}]->(x) return distinct x.name limit 1"}, {"query": "Do you know how many hotlines the Ministry of Health has set up?", "cypher": "match (:ENTITY{name:' Ministry of Health'}) <- [:Relationship{name:' established'}]- (q) return distinct q.name"}, {"query": "Can you list the 10 types of phones that were launched in October 2010?", "cypher": "match (:ENTITY{name:'October 2010'}) <- [:Relationship{name:' time of launch'}]-(n) - [:Relationship{name:' type of mobile phone'}]->(x) return distinct x.name limit 10"}, {"query": "Can you tell me about the types of relationships that are involved in the three layers of the classic romance novel?", "cypher": "Match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'European and American classic romance novel selection'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Can you name three representative works by Carlo Montuori?", "cypher": "match (:ENTITY{name:'Carlo Montuori'}) - [:Relationship{name:'represents work'}]-> (p) return distinct p.name limit 3"}, {"query": "Do you know of any exhibitions in the building materials category?", "cypher": "match (:ENTITY{name:' building materials'}) <- [:Relationship{name:' industry'}]- (m) return m.name limit 5"}, {"query": "Could you tell me which year Barzak wrote Eurythmics?", "cypher": "match (:ENTITY{name:'Barzakh written as Euryne Gruntai'}) <- [:Relationship{name:'Great note'}]- (x) return distinct x.name"}, {"query": "Do you have any information about the inner ties between the two groups involved in the village of Dodo?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations"}, {"query": "I know that the term rural water technology is a 200 page book published by Shanghai Cultural Press, please give me 7 more details.", "cypher": "match (n:ENTITY{name:'Rural water technology terms'}) -->(h) with h order by h.name where h.name <> '200 pages' and h.name <> 'Shanghai Cultural Press' return h.name limit 7"}, {"query": "What are the films Jacqueline Caut has been involved in writing? Can you name 10?", "cypher": "match (:ENTITY{name:'Jacqueline Caut'}) --(x) return distinct x.name limit 10"}, {"query": "Five descriptions of the 11/5 murder of his wife in Harbin?", "cypher": "match (:ENTITY{name:'11.5 Harbin City Wife Murder Case'}) --(x) with x order by x.name return distinct x.name skip 1 limit 5"}, {"query": "What is the name of the gaming platform released by Chintoo Traveller Cyber Technology Co., Ltd.?", "cypher": "match (:ENTITY{name:'Chingdu Yinyue Network Technology Co. Ltd'}) <- [:Relationship{name:'developer'}]-(x),(x) - [:Relationship{name:'game platform'}]->(q) return distinct q.name"}, {"query": "Who is the current winner of the AFC Asian Cup?", "cypher": "Match (:ENTITY{name:'AFCON Cup'}) - [:Relationship{name:'Current champion'}]->(n) return n.name"}, {"query": "Do you know anything else about Chinese mushrooms besides plants? Help me find 4 information in 2 layers.", "cypher": "match (:ENTITY{name:' Chinese mushroom'}) - [*1..2]-(p) where p.name <> 'plant' return p.name limit 4"}, {"query": "The three alumni of the Beijing Municipal Committee of the Party School, where are they all from?", "cypher": "match (:ENTITY{name:'Peking City Committee Party School'}) <- [*]-(m),(m) - [:Relationship{name:'Born'}]->(n) return m.name,n.name limit 3"}, {"query": "Manipulating the [2017 SBS Korean TV series] Do you know the time of the TV series?", "cypher": "Match ((:ENTITY{name:' Manipulating [2017 SBS production Korean television series]'}) - [:Relationship{name:' Production time'}]-> (n) return n.name"}, {"query": "I want all the information from Sun Qin [professor at the People's University of China].", "cypher": "match (:ENTITY{name:'Sun Gen [Professor at the People's University of China]'}) --(m) return m.name order by m.name"}, {"query": "You mentioned the other six information in the four layers of the book, which is published by Tsinghua University Press.", "cypher": "match (:ENTITY{name:'Communication principles for learning'}) - [*1..4]-(p) where p.name <> 'Chinghua University Press' return distinct p.name limit 6"}, {"query": "I'm going to label a 3mm remix for...", "cypher": "match (:ENTITY{name:'...3mm remix'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "Please tell me 10 names of films that are about surveillance and surveillance.", "cypher": "match (:ENTITY{name:' daylight tracking, surveillance mission'}) --(m) return distinct m.name limit 10"}, {"query": "The first is the \"How to make 10 women\" by Peter Lindberg.", "cypher": "match (:ENTITY{name:'10 WOMEN BY PETER LINDBERGH'}) --(x) with x order by x.name return x.name skip 1 limit 10"}, {"query": "Tell me about the first three things you said about being intimate with your mother.", "cypher": "match (:ENTITY{name:' close as a feather'}) --(p) return p.name order by p.name limit 3"}, {"query": "Do you know which concert started on November 25, 2012?", "cypher": "match (:ENTITY{name:'25 November 2012'}) <- [:Relationship{name:'time of the concert'}]- (x) return x.name"}, {"query": "Do you know what event was held on November 10, 2013?", "cypher": "match (:ENTITY{name:'November 10, 2013'}) <- [:Relationship{name:' date of holding'}]- (n) return distinct n.name"}, {"query": "Help me find 10 water sports projects", "cypher": "match (:ENTITY{name:'swimming'}) <- [:Tag{name:'tag'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='sports project' return m.name limit 10"}, {"query": "Please tell me which scam happened in April 2017?", "cypher": "match (:ENTITY{name:'April 2017'}) <- [:Relationship{name:'time of occurrence'}]- (x) return distinct x.name"}, {"query": "Find me three films directed by Li Zhensheng", "cypher": "The film was released on DVD in the United States on July 15, 2010, by Columbia Pictures."}, {"query": "What else can be labeled with 45 degrees of low temperature lubricant with scientific labeling?", "cypher": "match (:ENTITY{name:'-45 degree cold-pressure lubricant'}) - [:Tag{name:'label'}]-> (h) with h order by h.name where h.name <> 'science' return h.name"}, {"query": "What do you know about this book? Help me find the other four in the 2nd layer.", "cypher": "match (:ENTITY{name:'Relationship*1..2]-(p) where p.name <> 'books' return p.name limit 4"}, {"query": "What is the shortest relationship path between the two layers of film common alert and murder memory?", "cypher": "Match p=allshortestpaths (((a:ENTITY{name:'Common Guard Area [2000 Korean film directed by Park Chan-young]'}) - [*..2]-(b:ENTITY{name:'Murder Memories [Korean 2003 film directed by Jun Jun-ho]'})) return count ((p))"}, {"query": "Tell me what the ticketing campaign ended on March 3, 2016 was?", "cypher": "match (:ENTITY{name:'March 3, 2016) <- [:Relationship{name:'end time'}]- (x) return distinct x.name"}, {"query": "What is the shortest path between the two levels of Taiyanlu Village and Muhu Mountain Village?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Tanyagu'}) -[:Relationship*..2]-(b:ENTITY{name:'Tanyagu'})) return count ((p)"}, {"query": "Can you tell me about a career that is rooted in war?", "cypher": "match (:ENTITY{name:'war month source'}) - [:Relationship{name:'profession'}]-> (n) return distinct n.name limit 1"}, {"query": "The student of the school, the editor of the literature of the county of Zhizheng, whose son Yang Yan inherited a collection of young acorns, you know who this person is, what is his name?", "cypher": "match (q:ENTITY{name:'(16011681), a student of the University of Tokyo, who is the editor-in-chief of the Qing Dynasty's Zhijiang, whose son, Yang Yan, inherited the Zheng Qing Quong Collection of Zheng He."}, {"query": "What is the Chinese name of the novel that is being published in the Clouds Book City?", "cypher": "match (:ENTITY{name:'cloud city'}) <- [:Relationship{name:'linked website'}]-(h),(h) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 5"}, {"query": "Do you know what company Nana's Green Tea is?", "cypher": "match (q:ENTITY{name:'nanas green tea'}) <- [:Relationship{name:'foreign name'}]- (n) return n.name"}, {"query": "What chemical boils at 114-115\u00b0C?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you name five professions that this French national has?", "cypher": "match (:ENTITY{name:' France'}) <- [:Relationship{name:' nationality'}]-(h),(h) - [:Relationship{name:' profession'}]->(m) return m.name skip 2 limit 5"}, {"query": "Tell me about two new things about Apple besides the industry?", "cypher": "match (:ENTITY{name:'sweatbox'}) --(m) with m order by m.name where m.name <> 'industry figure' return distinct m.name limit 2"}, {"query": "Question 1-What is the chemical name of cyclopropylcarbonylpiperazine in Chinese?", "cypher": "The name of the drug is \"Piperazine\" (Piperazine)"}, {"query": "Do you know the founders of the eSports Association of the same city?", "cypher": "match (:ENTITY{name:'The City of Toronto's Electronic Sports Association'}) - [:Relationship{name:'Founder'}]-> (n) return n.name order by n.name limit 10"}, {"query": "Can you tell us about the types of relationships involved in the four layers of Linguistics?", "cypher": "The following pages link to the list of links in the list of links in the list of links:"}, {"query": "What is the shortest distance between the 4th hospital in Langsha and the 2nd floor of the 1st hospital in Langsha?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Fourth Hospital of Changsha City'}) - [*..2]-(b:ENTITY{name:'First Hospital of Changsha City'})) return count ((p)"}, {"query": "Is the Tai Chi chicken unique to China? Where is it mainly distributed?", "cypher": "match (:ENTITY{name:'Relationship{name:'Is China exclusive'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'Distributed area'}) ->(m) return m.name as name"}, {"query": "Please tell me which one of these works is from Domi?", "cypher": "match (:ENTITY{name:'honey'}) --(x) return x.name order by x.name limit 5"}, {"query": "Do you know what chemical has CAS number 6261-22-9?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "I want to publish the other 8 pieces of information in the 3 layers of this book, which was designed by an electronic filter in 2008.", "cypher": "match (:ENTITY{name:' design of electronic filter'}) - [*1..3]-(p) where p.name <> '2008/9/1' return distinct p.name limit 8"}, {"query": "Can you tell me about the 10/27 roof collapse in Baghdad, Afghanistan?", "cypher": "match (:ENTITY{name:'10\u00b727 Afghanistan Baghlan Province roof collapse'}) --(x) with x order by x.name return x.name"}, {"query": "Where is the location of the 2013 China International Hardware Tools Expo in Tianjin?", "cypher": "match ((p:ENTITY{name:'2013 China International Hardware Tools [Tianjin] Exhibition'}) - [:Relationship{name:' Exhibition location'}]-> (n) return n.name"}, {"query": "What are the medicinal uses of rosehip oil and what are the conditions for which it is used?", "cypher": "match (:ENTITY{name:'pure red flower oil'}) - [:Relationship{name:'type of drug'}]->(n) return n.name as name union all match (:ENTITY{name:'pure red flower oil'}) - [:Relationship{name:'use classification'}]->(m) return m.name as name"}, {"query": "Do you know which novel is in progress of being republished?", "cypher": "match (:ENTITY{name:' in the continuation of the update) }) <- [:Relationship{name:' progress'}]- (n) return n.name"}, {"query": "What are the main achievements of this doctor of law? Can you tell me 10?", "cypher": "match (p:ENTITY{name:'Doctor of Law'}) <- [:Relationship{name:'academic'}]-(x),(x) - [:Relationship{name:'main achievement'}]->(m) return m.name order by m.name limit 10"}, {"query": "Can you list the types of relationships that the Horan Belturi River is involved in in the three layers?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations)"}, {"query": "I want to produce the UK coffin stone and the other 6 pieces of information in the 3rd layer of this thriller.", "cypher": "match (:ENTITY{name:' coffin stone'}) - [*1..3]-(p) where p.name <> 'UK' return distinct p.name limit 6"}, {"query": "Check the following ISBN numbers 7232313013, 9787232313012 for relevant information within the two-layer relationship of mine drainage pressure reduction safe mining technology?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'7232313013, 9787232313012' return distinct x.name"}, {"query": "Do you know how many car shows there are?", "cypher": "match (:ENTITY{name:' car class'}) <- [:Relationship{name:' exhibition category'}]- (m) return m.name limit 3"}, {"query": "What is the Chinese name of the set of cards with the silver letter R and the flashing face SR?", "cypher": "match (q:ENTITY{name:' silver R, face blinking SR'}) <- [:Relationship{name:' rarity'}]-(h),(h) - [:Relationship{name:' Chinese name'}]->(p) return distinct h.name limit 10"}, {"query": "The following is a list of the main achievements of the Yusof Yan family:", "cypher": "match (:ENTITY{name:'\u8bb8\u751f'}) <- [:Relationship{name:'Chinese name'}]- ((q),(q) - [:Relationship{name:'main achievement'}]->(m) return distinct q.name"}, {"query": "Is there such a thing as a circulatory system?", "cypher": "match (n:ENTITY{name:'Hydrate-containing circulator'}) where n is not null return 1"}, {"query": "What are the main achievements of the people who are born in Taurus?", "cypher": "match (:ENTITY{name:'Taurus'}) <- [:Relationship{name:'star'}]-(p),(p) - [:Relationship{name:'main achievement'}]->(m) return distinct m.name limit 1"}, {"query": "Do 007 movies have nicknames?", "cypher": "match (:ENTITY{name:'007[UK series of action films]'}) - [:Relationship{name:'alias'}]-> (p) with p order by p.name return p.name"}, {"query": "Can you help me find out 10 things about Chen Ji, the national-level actor in two-tier relationships, other than the representative work of Liu Xiaobo?", "cypher": "match (:ENTITY{name:' Chen Chi[national first-class actor]'}) - [*1..2]->(p) where p.name <> 'Jinghua' return distinct p.name order by p.name DESC limit 10"}, {"query": "Can you please tell me about the top 10 amateur sports schools for teenagers in the Shijiazhuang Mountain area of Beijing?", "cypher": "match (:ENTITY{name:'Beijing City, Shijiazhuang Mountain Area Junior Children's Amateur Sports School'}) --(p) return p.name order by p.name limit 10"}, {"query": "Please tell me what is http://www.17k.com/?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Find out what labels the four lovers at the end of time own, but other than film and entertainment?", "cypher": "match (n:ENTITY{name:'the lover at the end of time [American film]'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'film work' and h.name <> 'entertainment work' return distinct h.name limit 4"}, {"query": "Do you know what mobile games are? How much memory do these games have in general? Give me five.", "cypher": "match (:ENTITY{name:'mobile game'}) <- [:Tag{name:'tag'}]-(h),(h) - [:Relationship{name:'software size'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you tell me where you were born and what you do?", "cypher": "match (x:ENTITY{name:' yellow source photo'}),(x) - [:Relationship{name:' place of birth'}]-> (m), (x) - [:Relationship{name:' profession'}]->(n) return m.name,n.name"}, {"query": "Which animals belong to the canine family? Find out 5 animals.", "cypher": "match (:ENTITY{name:'dog family'}) <--(m), (m) - [:Relationship{name:'dog family'}]->(n) return distinct m.name limit 5"}, {"query": "The Chinese name for the country is not more than 10 words?", "cypher": "match (:ENTITY{name:'Relationship{name:'Chinese name'}]-> (m) with m order by m.name return m.name limit 10"}, {"query": "Can you find me two books published by Zeru Books?", "cypher": "match (:ENTITY{name:'Ziru Book Company'}) <- [:Relationship{name:'Publishing Company'}]- ((n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "The 14th secondary school in Victory, East Kampong, formerly known as Victory Oilfield, has won what awards?", "cypher": "match (:ENTITY{name:'Tripoli East Camp City Fourteenth Secondary School' originally known as Tripoli Oilfield Fourteenth Secondary School, started in 1973 and merged into the Sixty-second Secondary School in Tripoli in 2007\u3002'}) <-[:Describe{name:'Description'}]-(q),(q)-[:Relationship{name:'Main Award'}]->(m) return distinct m.name limit 5"}, {"query": "What is the name of the incident where the last mobster was killed?", "cypher": "match (:ENTITY{name:'Rought out by the mob'}) <- [:Relationship{name:'consequences'}]- (h) return h.name"}, {"query": "Tell me about the 0377 auction site you know of?", "cypher": "match (:ENTITY{name:'0377}) --(x) with x order by x.name where x.name <> 'website' return x.name"}, {"query": "Please help me find information on the publications on guidelines for further budget implementation of the project, which are not more than five levels of relations.", "cypher": "match (n:ENTITY{name:'Guidelines on further improvement of budget execution'}) - [*1..5]->(x) where x.name<>'China' return distinct x.name"}, {"query": "What is the shortest path between the two layers of the forest and the oak tree?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortestpaths'}) - [*..2]-(b:ENTITY{name:'shortestpaths'})) return count ((p)"}, {"query": "Who has a female police officer in the public security?", "cypher": "match (:ENTITY{name:'Public security officer'}) <--(n) return n.name"}, {"query": "Do you know of any awards that have a public benefit award in their name?", "cypher": "match (:ENTITY{name:'1 item'}) <- [:Relationship{name:'public benefit award'}]- (h) return h.name"}, {"query": "I would like to know the name of the person and the main works of the author.", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship's name:'at the time'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship's name:'name:'word'}->(m) return m.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship's name:'main works'}->(r) return r.name as name"}, {"query": "Do you know which government agencies are in the city of Xiamen?", "cypher": "match (q:ENTITY{name:'Palestine'}) <- [:Relationship{name:'located area'}]- (m) return distinct m.name"}, {"query": "Help me find three representative works of art by Ryu Yayoi", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}]-> (m) return distinct m.name limit 3"}, {"query": "What works of 17K novels are online? Please tell me five.", "cypher": "match (:ENTITY{name:'17K novel network'}) <--(n) return n.name limit 5"}, {"query": "What are the famous sights in the Peninsula?", "cypher": "match (:ENTITY{name:'Relationship{name:'Famous attractions'}]->(m) return distinct m.name"}, {"query": "Please help me find out how many people are currently employed at the Qinghai Oil Field Exploration and Development Institute.", "cypher": "match (:ENTITY{name:'Katyung Oilfield Exploration and Development Institute'}) - [:Relationship{name:' Existing staff'}]-> (m) return distinct m.name"}, {"query": "Is it good to talk about the five states?", "cypher": "match (:ENTITY{name:'Land of the Midnight'}) --(m) return distinct m.name limit 5"}, {"query": "I found a horror camera in the old town of Upper Riyadh, directed by Li Qingshi, and you can find three more and give me the information.", "cypher": "match (n:ENTITY{name:'terrorist camera'}) -->(h) with h order by h.name where h.name <> 'Li Qing City' return h.name limit 3"}, {"query": "I'm looking for a public secondary school in Xi'an.", "cypher": "match (:ENTITY{name:'China Xian City, Xinjiang Province'}) <- [:Relationship{name:'area'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='public secondary school' return distinct m.name"}, {"query": "I need to know about the six types of perverted sweetness that are not entertainment.", "cypher": "match (:ENTITY{name:'perverse sweetness'}) --(m) with m order by m.name where m.name <> 'entertainment work' return distinct m.name limit 6"}, {"query": "Please help me find the year 1872 and who is not a librarian, and which three other professions were born in that year.", "cypher": "match (:ENTITY{name:'1872-'}) <- [:Relationship{name:'date of birth'}]-(h) - [:Relationship{name:'profession'}]->(q) where q.name <> 'Tibetanist' return distinct q.name limit 3"}, {"query": "Can you introduce me to books priced at $31.00 on both sides?", "cypher": "match (:ENTITY{name:'31.00\u5143'}) <- [:Relationship{name:' priced'}]- ((x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name"}, {"query": "I want a Han Chinese and her corresponding job title, give me ten pairs?", "cypher": "match (m:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]- ((q) - [:Relationship{name:'profession'}]->(p) return distinct q.name,p.name limit 10"}, {"query": "I want to know four messages from the two layers of the person who is not a politician.", "cypher": "match (:ENTITY{name:'spoiler'}) - [*1..2]-(p) where p.name <> 'politician' return p.name limit 4"}, {"query": "I don't know the molecular formula of 2-acetylbiphenyl, so I can't calculate its molecular weight, can you tell me directly what its molecular weight is?", "cypher": "match ((:ENTITY{name:'2-ethyl bicarbonate'}) - [:Relationship{name:'molecular mass'}]-> (x) return x.name"}, {"query": "What is the shortest relationship path between a Taoist monk and a Chinese hero in the two layers?", "cypher": "Match p=allshortestpaths (((a:ENTITY{name:'Taedongsan Master's[1997 film directed by Liu Jingming, starring Liu Yi Min]'}) - [*..2]-(b:ENTITY{name:'Chinese Hero's[1999 film directed by Liu Weiqiang]'})) return count ((p))"}, {"query": "List seven political and military books and their authors.", "cypher": "match (:ENTITY{name:'political and military books'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'author'}]->(n) return m.name,n.name limit 7"}, {"query": "Do you know any famous alumni of the Higher Technical School of Railway Police in Yangzhou?", "cypher": "match (:ENTITY{name:'Relationship{name:'known alumni'}}-> (m) return m.name skip 2"}, {"query": "Can you name 10 schools that have won the provincial normative school's main award?", "cypher": "match (:ENTITY{name:' Provincial normative school'}) <- [:Relationship{name:' major award'}]- (q) return distinct q.name limit 10"}, {"query": "Can you tell me about the main achievements of the actresses and models?", "cypher": "match (:ENTITY{name:'childstar, childmodel'}) <- [:Relationship{name:'profession'}]- ((h) - [:Relationship{name:'main achievement'}]->(m) return distinct m.name"}, {"query": "I am a child of the age of 0-3 years, and I am very interested in learning about the health and care of children.", "cypher": "match (:ENTITY{name:'0-3 years old children's health and care'}) --(q) with q order by q.name return q.name limit 1"}, {"query": "Do you know of any relationship types that are named within the two layers that security guard Jamie McDonnell is involved in?", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of the Wild is a game that is played from the perspective of a human."}, {"query": "How to find out the content of the poem in the two-layer relationship between Chen's poem \"The Pond of Green Spring Grass\" and \"The Poetry of Chen's Poetry\".", "cypher": "match (n:ENTITY{name:'Give me the pond of green spring grass [a Chen Tao poem]'}) - [:Relationship*1..3]->(x) where x.name <>'Chen Qu' return distinct x.name"}, {"query": "Do you know which book has the barcode 9787111350873?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "The place is located on the northwest bank of the river, at the foot of the northern mountain in the Yangtze Mountains, and has a three-sided independent mountain town surrounded by water, which is the scenic and historic old town of Kyungkyu.", "cypher": "match (:ENTITY{name:' is a three-sided independent mountain town located at the northwest bank of the Yangtze River, at the foot of the North Mountain in the Yangtze Mountains, which is a scenic, historic city known as the Kyuk-kyu Creek Guard City .'})"}, {"query": "I wonder what Fan Sun-soo is doing? Can you tell me?", "cypher": "match (n:ENTITY{name:'fan shui'}) <- [:Relationship{name:'Chinese name'}]- ((x) - [:Relationship{name:'profession'}]->(q) return distinct q.name"}, {"query": "The other 6 information provided to me in the Panasonic TH-42PZ800C2 layer of the Panasonic series.", "cypher": "match (:ENTITY{name:'Panasonic TH-42PZ800C'}) - [*1..2]-(p) where p.name <> 'Panasonic' return distinct p.name limit 6"}, {"query": "Bernd Schneider is a nickname?", "cypher": "match (:ENTITY{name:'Bernd Schneider'}) <- [:Relationship{name:'foreign name'}]-(h),(h) - [:Relationship{name:'alias'}]->(n) return distinct n.name"}, {"query": "When the Chinese are the chairmen of the company, who is there?", "cypher": "match (p:ENTITY{name:' company chairman'}) <--(x) -->(q:ENTITY{name:' Han Chinese'}) return x.name"}, {"query": "Can you recommend 12 songs with a duration of 4 minutes and 47 seconds?", "cypher": "match (:ENTITY{name:'4 min 47 seconds'}) <- [:Relationship{name:'music length'}]- (x) return x.name limit 12"}, {"query": "What is the shortest distance between the two-level Kamelou Middle School and the Upper Secondary School in the city?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Roda County Camellia High School'}) - [*..2]-(b:ENTITY{name:'Kota's first high school'})) return count ((p)"}, {"query": "I'm not sure which street the three and garden community belongs to.", "cypher": "match ((:ENTITY{name:'three and garden community'}) - [:Relationship{name:'affiliate'}]-> (m) return m.name"}, {"query": "The author of this novel is named after you, naturally?", "cypher": "match (:ENTITY{name:'all in the name of nature'}) <- [:Relationship{name:'author'}]-(q),(q) - [:Relationship{name:'Chinese name'}]->(m) return distinct m.name limit 1"}, {"query": "The following is a list of three professions in which Jiangsu Yangyang can be active apart from being a strategist:", "cypher": "match (:ENTITY{name:'Bianzhou, Jiangsu Province'}) <- [:Relationship{name:'Born'}]- ((q) - [:Relationship{name:'Profession'}]->(x) where x.name <> 'Strategist' return distinct x.name limit 3"}, {"query": "What chemical is CAS number 174669-73-9?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you find me two books published by the Chinese Statistical Publishing House?", "cypher": "The following pages link to List of Chinese newspapers by country:"}, {"query": "Can you list 5 personal information about Vinha V\u00edtor from Portugal?", "cypher": "match (n:ENTITY{name:'Vinha V\u00edtor'}) - [*]->(x) where x.name<>'Portugal' return distinct x.name limit 5"}, {"query": "Help me find five public high schools in Wuhan", "cypher": "match (:ENTITY{name:'Wuhan, Hubei, China'}) <- [:Relationship{name:'the region'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='public high school' return distinct m.name limit 5"}, {"query": "Can you tell me who is the second-tier label for Bridget Boucherlier?", "cypher": "Match (n) <- [:Tag*2{name:'tag'}]- ((p:ENTITY{name:'Bridget Boucherlier'}) return distinct n.name"}, {"query": "The problem is that Lapeyre Benjamin, born in Castell, has all the information in his three-tier relationship.", "cypher": "match (n:ENTITY{name:'Lapeyre Benjamin'}) - [*1..3]->(x) where x.name <> 'Castle' return distinct x.name"}, {"query": "Can you tell me the geographic location of the company in Cape Verde?", "cypher": "match (p:ENTITY{name:'Crowdfunding'}) return p.location"}, {"query": "He has a triple identity of academic, host and actor, do you know his main achievements?", "cypher": "match (:ENTITY{name:'scholar, presenter, actor'}) <-[:Relationship{name:'profession'}]-(h),(h) -[:Relationship{name:'main achievement'}]->(m) return distinct m.name"}, {"query": "What are the public universities in Hunan?", "cypher": "match (:ENTITY{name:'Hunan Long Sand'}) <- [:Relationship{name:' area'}]-(m), (m) - [:Relationship{name:' category'}]->(n) where n.name='public high school' return m.name"}, {"query": "The school was founded in 1229 and has four main faculties.", "cypher": "match (:ENTITY{name:'1229 year'}) <- [:Relationship{name:'time of founding'}]- ((n) - [:Relationship{name:'main faculty'}]->(p) return distinct p.name"}, {"query": "I wonder if anyone has a name like Dwarf?", "cypher": "match (:ENTITY{name:' foreign name of the dwarf's mother}) <--(n) return n.name"}, {"query": "I heard from others that Philippe Soutto is a footballer who weighs 77 kg, please tell me 7 more things about this man.", "cypher": "match (n:ENTITY{name:'Philipe Soutto'}) -->(h) with h order by h.name where h.name <> '77 kg' and h.name <> 'football' return h.name limit 7"}, {"query": "What are the most representative works of people born in December 1937?", "cypher": "match (:ENTITY{name:'December 1937'}) <- [:Relationship{name:'date of birth'}]- ((h) - [:Relationship{name:'representative work'}]->(q) return distinct h.name"}, {"query": "What happened in Austria?", "cypher": "match (:ENTITY{name:'Austria'}) <- [:Relationship{name:'where it happened'}]- (n) return n.name"}, {"query": "What are the 8 books in the open booklet? Can you tell me who wrote them?", "cypher": "match (:ENTITY{name:'8 open'}) <- [:Relationship{name:'disguised'}]-(h),(h) - [:Relationship{name:'author'}]->(q) return distinct h.name,q.name"}, {"query": "What are the 64 books in the open booklet? Can you tell me who wrote them?", "cypher": "match (:ENTITY{name:'64 open'}) <- [:Relationship{name:'disguised'}]-(h),(h) - [:Relationship{name:'author'}]->(q) return distinct h.name,q.name"}, {"query": "The full name of the organization, Yucatec Mining Hospital, in Chinese, is?", "cypher": "match (:ENTITY{name:'\u7389\u6eaa\u77ff\u4e1a\u533b\u9662'}) <- [:Relationship{name:'Chinese name'}]- ((n) return max(n.name)"}, {"query": "The Chinese have a lot of work to do, but they don't have the skills to do it.", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(p) - [:Relationship{name:'profession'}]->(h) where h.name <> 'adjunct professor' return distinct h.name limit 10"}, {"query": "The name of the town is also called Punjab, tell me two?", "cypher": "match (n:ENTITY{name:'punishment not town'}) - [:Relationship{name:'alias'}]-> (h) return h.name limit 2"}, {"query": "Can you tell me what else you have in mind besides the teacher and Chinese nationality?", "cypher": "match (n:ENTITY{name:'\u66f9\u5b88\u548c'}) -->(h) with h order by h.name where h.name <> 'teacher' and h.name <> 'Chinese' return h.name limit 3"}, {"query": "What else do you know about Xiang Linhui besides the author, Lu Xun?", "cypher": "match (:ENTITY{name:'Shyamrin Lee'}) - [*1..2]-(p) where p.name <> 'Rushun Lee' return distinct p.name limit 10"}, {"query": "What are the main achievements of students who graduated from Hangzhou Teachers' University?", "cypher": "match (:ENTITY{name:'Hangzhou Teachers' University'}) <- [:Relationship{name:' Graduate School'}]-(p) - [:Relationship{name:' Major achievements'}]->(h) return distinct h.name limit 4"}, {"query": "What is the GNU General Public License?", "cypher": "match (:ENTITY{name:'GNU General Public License'}) --(x) return distinct x.name"}, {"query": "Can I ask what are the labels of Charles Aranguis?", "cypher": "match (:ENTITY{name:'Charles Aranguis'}) - [:Tag{name:'tag'}]-> (n) return n.name order by n.name"}, {"query": "Do you know what the main achievements of this person with the surname Meisan are?", "cypher": "match (:ENTITY{name:'Mei Yue'}) <- [:Relationship{name:' alias'}]-(h),(h) - [:Relationship{name:' major achievements'}]->(q) return q.name order by q.name limit 10"}, {"query": "What are the symptoms of mechanical bowel obstruction? Is it contagious?", "cypher": "match (:ENTITY{name:' mechanical bowel obstruction'}) - [:Relationship{name:' common symptoms'}]->(n) return n.name as name union all match (:ENTITY{name:' mechanical bowel obstruction'}) - [:Relationship{name:' infectious'}]->(m) return m.name as name"}, {"query": "Can you name another name for the three goats?", "cypher": "match (:ENTITY{name:'monkey'}) --(h) return distinct h.name limit 3"}, {"query": "Help me find the synonyms and antonyms for self-portals.", "cypher": "match (:ENTITY{name:'self-portal'}) - [:Relationship{name:'near term'}]->(n) return n.name as name union all match (:ENTITY{name:'self-portal'}) - [:Relationship{name:'self-portal'}]->(m) return m.name as name"}, {"query": "What is the relationship between the two levels of the French army?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'French Army'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I learned that the love school is a bit interactive and uses simplified Chinese, can you give me 10 more facts about it?", "cypher": "match (n:ENTITY{name:'Amy Primary School'}) -->(h) with h order by h.name where h.name <> 'a little interactive' and h.name <> 'simplified Chinese' return h.name limit 10"}, {"query": "Please help me find the other 6 pieces of information in I Am a Cat 2 .", "cypher": "match (:ENTITY{name:' I am a cat'}) - [:Relationship*1..2]-(p) where p.name <> 'novel' return p.name limit 6"}, {"query": "I'm going to be a little bit more specific about the three layers of relationships between Wang Zhou and the artwork.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name<>'Wangzhou' return distinct x.name"}, {"query": "I need a personal profile of sports personality Steep Kenny in a five-tier relationship?", "cypher": "match (n:ENTITY{name:'Step Kenny'}) - [*1..5]->(x) where x.name <> 'sportsman' return distinct x.name limit 5"}, {"query": "Do you know what the 1927 Gangwon-gu earthquake is called?", "cypher": "match (:ENTITY{name:'Gangzhou tsunami'}) <- [:Relationship{name:'1927'}]- (x) return distinct x.name"}, {"query": "I'm not sure if there are any American horror movies out there.", "cypher": "The film is a remake of the American film of the same name, which was also released in the United States on March 20, 2009."}, {"query": "What kind of game is the game? What is the size of the game? What is the language of the game?", "cypher": "Match (:ENTITY{name:'Relationship's unlocked 2 ratings full open version'}) - [:Relationship's unlocked 2 ratings full open version'}->(n) return n.name as name union all match (:ENTITY{name:'Relationship's unlocked 2 ratings full open version'}) - [:Relationship's unlocked 2 ratings full open version'}-[:Relationship's unlocked 2 ratings full open version'}->(m) return m.name as name union all match (:ENTITY{name:'Relationship's unlocked 2 ratings full open version'}) - [name:Relationship's unlocked 2 ratings full open version'}->(r) return r.name as name"}, {"query": "Can you tell me about the three main achievements of this Chinese person?", "cypher": "match (:ENTITY{name:'Hank'}) <- [:Relationship{name:'ethnicity'}]-(q),(q) - [:Relationship{name:'main achievements'}]->(h) return h.name order by h.name limit 3"}, {"query": "Help me find the five words next to the syllable.", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'the head of the department'}]-(m) return distinct m.name limit 5"}, {"query": "What do you know about the American film Goodbye, Father-in-Law 3? Help me find the other 4 pieces of information in the 2nd layer.", "cypher": "match (:ENTITY{name:'Bye bye father-in-law 3'}) - [:Relationship*1..2]-(p) where p.name <> 'United States' return p.name limit 4"}, {"query": "The alphabetical list of the three types of relationships that Alpha people share is as follows:", "cypher": "The following is a list of all the different ways The Alpha Male is credited in the database:"}, {"query": "What else does director Liu Xiaobo have to do with his work other than work?", "cypher": "match (:ENTITY{name:'Relationship{name:'director'}]-(m) where m.name<>' when it comes to running [1985 film directed by Liu Xiaobo]' return distinct m.name"}, {"query": "Greg Eagles' career, do you know anything about it?", "cypher": "match (:ENTITY{name:'Greg Eagles'}) - [:Relationship{name:'profession'}]-> (m) return m.name order by m.name limit 3"}, {"query": "I need to be classified as a urine pregnancy test in the 2nd level of the relationship?", "cypher": "match (n:ENTITY{name:' pregnancy test'}) - [:Relationship*1..2]->(x) where x.name <> 'urinate' return distinct x.name"}, {"query": "Can you recommend 5 2D games?", "cypher": "match (:ENTITY{name:'2D'}) <- [:Relationship{name:'game screen'}]- (x) return distinct x.name limit 5"}, {"query": "What do you know about the movie \"The Witcher 3\"? Please tell me 10 things.", "cypher": "match (:ENTITY{name:'switch3 ((2006)'}) --(h) return h.name limit 10"}, {"query": "Do you know what the movie is about the mercenaries who cheat?", "cypher": "match (:ENTITY{name:'squad'}) --(h) return distinct h.name"}, {"query": "I asked if any of the American writers represented you?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(x) - [:Relationship{name:'representative work'}]->(p) return distinct p.name limit 5"}, {"query": "What chemical has a surface tension of 63.9?", "cypher": "match (:ENTITY{name:'63.9'}) <- [:Relationship{name:'surface tension'}]- (q) return distinct q.name"}, {"query": "What is the information about the two-layer relationship of Eposylon D with a molecular weight of 291.38?", "cypher": "match (n:ENTITY{name:'Epoxy D'}) - [:Relationship*1..2]->(x) where x.name<>'291.38' return distinct x.name"}, {"query": "What do you know about the 1+X Professional Skills Identification Exam Manual, Computer Installation and Maintenance?", "cypher": "match (:ENTITY{name:'1+X Professional Skills Identification Assessment Manual\u00b7 Computer Installation Deployment and Maintenance'}) --(h) with h order by h.name where h.name <> 'Exam books' return h.name limit 10"}, {"query": "What are the tourist attractions where you can play for free?", "cypher": "match (:ENTITY{name:' free'}) <- [:Relationship{name:' ticket price'}]-(p) - [:Relationship{name:' Chinese name'}]->(n) return distinct n.name limit 2"}, {"query": "Please help me find out 5 other information about the 2 layers of love in the movie Fair Love.", "cypher": "match (:ENTITY{name:'fair love'}) - [*1..2]-(p) where p.name <> 'love movie' return p.name limit 5"}, {"query": "The candy cane is a candy cane. Do you know whose work this is?", "cypher": "match (:ENTITY{name:'Candy cane'}) <- [:Relationship{name:'represents work'}]- (x) return x.name order by x.name"}, {"query": "What is the profession of people born on April 3rd?", "cypher": "match (:ENTITY{name:'04.03'}) <- [:Relationship{name:' date of birth'}]-(p),(p) - [:Relationship{name:' profession'}]->(x) return distinct x.name limit 1"}, {"query": "I'm not sure if you've heard of the musical \"1.825m\", but I'm not sure.", "cypher": "match (:ENTITY{name:'1.825m'}) --(p) with p order by p.name where p.name <> 'musical work' return p.name"}, {"query": "What competition is organized by the School of Business of Tsinghua University?", "cypher": "match (:ENTITY{name:'Chinghua University School of Management'}) <- [:Relationship{name:'host'}]- (q) return q.name"}, {"query": "Can you tell me about the 3 layer relationship of the XTC900 series, which uses multi-zone independent backlight control and HiView graphics engine technology?", "cypher": "match (n:ENTITY{name:'XTC900 series'}) - [*1..3]->(x) where x.name<>'XTC900 series is a LED backlight LCD display released by XTC, using multi-zone independent backlight control and HiView picture-screen engine technology."}, {"query": "What parks are open from 09:00-19:00 for free?", "cypher": "match (:ENTITY{name:'09:00-19:00'}) <- [:Relationship{name:'open hours'}]-(m), (m) - [:Relationship{name:'ticket prices'}]->(n) where n.name='the park is free to enter (some amusement activities in the park are subject to additional charges) ' return m.name"}, {"query": "Can you give me 10 types of e-commerce platforms?", "cypher": "match (:ENTITY{name:' e-commerce platform'}) <- [:Relationship{name:' site type'}]- (h) return h.name limit 10"}, {"query": "Can you recommend some types of web management software?", "cypher": "match (:ENTITY{name:' network management'}) <- [:Relationship{name:' type'}]- (p) return p.name"}, {"query": "Help me find a major international financial market in Germany.", "cypher": "match (:ENTITY{name:' Germany'}) <- [:Relationship{name:' location'}]-(m), (m) - [:Relationship{name:' position'}]->(n) where n.name='one of the major international financial markets' return distinct m.name limit 1"}, {"query": "The following is a list of all the information about Tony Popovic, born in Sydney, in no less than two levels of relationship.", "cypher": "match (n:ENTITY{name:'Popovic Tony'}) - [*1..2]->(x) where x.name<>'Sydney' return distinct x.name"}, {"query": "Do you know what exhibitions were held in 2012/05/16?", "cypher": "match (:ENTITY{name:'2012/05/16'}) <- [:Relationship{name:' time of holding'}]- (x) return distinct x.name"}, {"query": "What are the main departments of the school? Please tell me one. The school is described as one of the leading national comprehensive universities in Japan, located in the city of East Bridge, in the prefecture of Goma. Its predecessor originated from the Goma Teacher's School, founded in 1873, and was established as Goma University in 1949.", "cypher": "match (:ENTITY{name:'Kiroma University is one of Japan's leading national comprehensive universities located in the city of East Bridge, Kiroma Prefecture, with its predecessor originating from the Kiroma Teacher's School founded in 1873 and the establishment of Kiroma University in 1949.'}) <-[:Describe{name:'description'}]-(q),(q) -[:Relationship{name:'main faculty'}->(x) return x.name order by x.name limit 1"}, {"query": "What is the boiling point of DL-3-methyl rings, can you help me check?", "cypher": "match ((:ENTITY{name:'DL-3-methyl ring'}) - [:Relationship{name:'boiling point'}]-> (n) return n.name"}, {"query": "What books are published in 2001/1/1? By which publisher?", "cypher": "match (:ENTITY{name:'2001/1/1'}) <- [:Relationship{name:' time of publication'}]-(h),(h) - [:Relationship{name:' publisher'}]->(q) return distinct h.name,q.name"}, {"query": "Can you tell me about the five types of relationships that Hopkin is involved in in the 3 layers?", "cypher": "The following is a list of all the different ways Unwind is credited in the database:"}, {"query": "Tell me about this man, Ernest Van Pelt, who walks?", "cypher": "match (:ENTITY{name:'Ernest Van Pelt'}) --(p) return p.name order by p.name limit 3"}, {"query": "Looking for a link to the 10/17 Inner Mongolia Ho and Pante Riots escape?", "cypher": "match (:ENTITY{name:'10\u00b717 Inner Mongolia Huang and Qut Riot escape case'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 1"}, {"query": "Can you give me ten facts about 185 years?", "cypher": "match (:ENTITY{name:'185'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "What are the works published by the Electronic Industry Publishers? When are they published? Can you name five?", "cypher": "match (:ENTITY{name:'electronic industry publisher'}) <- [:Relationship{name:'publisher'}]-(h),(h) - [:Relationship{name:'publication time'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "What new technology video products does Flexplay Korea have in store?", "cypher": "match (:ENTITY{name:'Flexplay Korea Company'}) <- [:Relationship{name:' proposer'}]- (h) return h.name"}, {"query": "I'm going to write about the five food information about the five-tier relationship of cheese-roasted corn.", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:' cheese roasted corn'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Can you tell me about the festival of the connecting chickens?", "cypher": "match (:ENTITY{name:'supplement'}) --(h) with h order by h.name where h.name <> 'connected' return h.name"}, {"query": "Trouble Row lists five fantasy novels that are available on the Linx City reading link site.", "cypher": "The following pages link to List of fictional characters in the Marvel Universe: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Z is a Trilled Adventure: The Blade of Zelda: Breath of Zelda: Breath of Zelda: Breath of Z"}, {"query": "How much do you know about the novel Nine of the Zeroes?", "cypher": "match (x:ENTITY{name:'0cancer'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'novel' return q.name"}, {"query": "In the meantime, let's talk about the five people in the five levels of relationship of sports personality Yuki Nakamura.", "cypher": "match (n:ENTITY{name:'Name of the game'}) - [*1..5]->(x) where x.name <> 'Sportsman' return distinct x.name limit 5"}, {"query": "Can you give us a brief overview of the two-tier relationship between the temperate climate of Jiangsu and the Pacific Ocean?", "cypher": "match (n:ENTITY{name:'Guangzhou'}) - [*1..3]->(x) where x.name <>'temperate climate' return distinct x.name"}, {"query": "I want to use all the information in Chinese language [language and literature]?", "cypher": "match (n:ENTITY{name:' language [language and literature]'}) - [:Relationship*]->(x) where x.name <>'Chinese language' return distinct x.name"}, {"query": "Help me find a French composer.", "cypher": "match (:ENTITY{name:'France'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='composer' return distinct m.name limit 2"}, {"query": "What was the name of the website that was launched in September 2010?", "cypher": "match (:ENTITY{name:'September 2010'}) <- [:Relationship{name:'time of operation'}]- (p) return p.name"}, {"query": "Give me three full-time secondary schools and describe them.", "cypher": "match (:ENTITY{name:' Full-time secondary school'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Can you name three types of animals that are used for meat?", "cypher": "Match (:ENTITY{name:'sweet'}) <- [:Relationship{name:'sweet'}]- (m) return m.name limit 3"}, {"query": "Japan is frequently hit by earthquakes, do you know the magnitude of the 10/21 Hokkaido earthquake in Japan?", "cypher": "match ((:ENTITY{name:'10\u00b721 Hokkaido earthquake in Japan'}) - [:Relationship{name:'class'}]-> (p) return p.name"}, {"query": "What are the benefits of white hair?", "cypher": "match (:ENTITY{name:'whiteheaded'}) - [:Relationship{name:'function'}]->(m) return distinct m.name"}, {"query": "The number of companies that have been established in the last 12 years?", "cypher": "match (p:ENTITY{time:'2012'}) return count ((p)"}, {"query": "Can you name five representative works of people who graduated from Hanyang University?", "cypher": "match (q:ENTITY{name:'Hanyang University'}) <- [:Relationship{name:'Graduate School'}]-(h),(h) - [:Relationship{name:'representing work'}]->(m) return m.name order by m.name limit 5"}, {"query": "100 Intellectual Museums looking for the first four tags sent to me?", "cypher": "match (:ENTITY{name:'100 intellectual museums'}) - [:Tag{name:'tags'}]-> (n) with n order by n.name return n.name limit 4"}, {"query": "Why drive to read the 25th Shichikoku?", "cypher": "match (m:ENTITY{name:'(15CD) driving read twenty-five history\u00b7\u4e09\u56fd\u5fd7'}) --(h) with h order by h.name return h.name"}, {"query": "I want three American representative works and the author's name?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(n),(n) - [:Relationship{name:'representative work'}]->(p) return distinct n.name,p.name limit 3"}, {"query": "Do you have the label information for three fish looking for water, but I don't want both music and music?", "cypher": "match (n:ENTITY{name:'fish looking for water'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'musical work' and h.name <> 'musical' return distinct h.name limit 3"}, {"query": "The liver of which animal is used by the lamb?", "cypher": "Match (:ENTITY{name:' liver lamb'}) - [:Relationship{name:' main ingredient'}]-> (m) return distinct m.name"}, {"query": "Please tell me if the three locations and topography are related to the third layer of the label?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'topographic landscape'}) return distinct n.name limit 3"}, {"query": "Do you know which report says that the 2011 Tai Chi Wind construction yearbook and the 2011 Tai Chi tender?", "cypher": "match (:ENTITY{name:'2011 is the year of the typhoon and the typhoon build-up}) <- [:Relationship{name:'content'}]- (p) return p.name"}, {"query": "The two-tiered relationship between the five-tiered system and the state of deportation is described in the article.", "cypher": "match (n:ENTITY{name:' and state of return'}) - [:Relationship*1..2]->(x) where x.name <>'five-line' return distinct x.name"}, {"query": "Can you tell me who Constance Purdy is?", "cypher": "match (:ENTITY{name:'Constance Purdy'}) --(q) return q.name order by q.name"}, {"query": "The following is a detailed introduction of Hu Jinshou's 1000 MW thermal power plant training material: Steam turbine equipment system and operation.", "cypher": "match (:ENTITY{name:'1000MW thermal power plant training material: steam turbine equipment system and operation'}) --(x) with x order by x.name where x.name <> 'Hu Xian Su' return x.name"}, {"query": "As far as I know Moonlight Twilight Night is from the album Spring Again, it is a pure piano song, and I'm looking for 4 more information about this song.", "cypher": "match (n:ENTITY{name:'moonlight twilight night'}) -->(h) with h order by h.name where h.name <> 'spring again' and h.name <> 'pure piano' return h.name limit 4"}, {"query": "I'm not sure if I can understand the Queen's request for me to be silent in more than three words, can you?", "cypher": "match (:ENTITY{name:' Queen's mother let me suck'}) --(m) with m order by m.name return m.name limit 3"}, {"query": "Can you describe the types of relationships within the four layers of the Four Yellow Liaisons?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "Can you list the personal information within the two-tier relationship of the Japanese Kikuyu language?", "cypher": "match (n:ENTITY{name:'space'}) - [*1..2]->(x) where x.name<>'Japan' return distinct x.name"}, {"query": "Do you have any representation of the people who graduated from the Central Party School of Adult Education?", "cypher": "match (:ENTITY{name:'Adult Education College'}) <- [:Relationship{name:'Graduate School'}]-(n),(n) - [:Relationship{name:'represents work'}]->(x) return distinct x.name"}, {"query": "The film is based on the story of the famous Japanese artist, who was born in the city of Tokyo, Japan.", "cypher": "match (n:ENTITY{name:'send floaters to the east'}) - [:Relationship*1..2]->(x) where x.name <>'' return distinct x.name"}, {"query": "How many subspecies of the butterfly are there? Who named them?", "cypher": "match (:ENTITY{name:'Cinnamon Butterfly'}) - [:Relationship{name:'Subspecies'}]->(n) return n.name as name union all match (:ENTITY{name:'Cinnamon Butterfly'}) - [:Relationship{name:'Name and date'}]->(m) return m.name as name"}, {"query": "The story is about the ancient tombs, which are also crazy.", "cypher": "match (:ENTITY{name:'Ancient Tombs are also crazy'}) - [:Relationship*1..2]-(p) where p.name <> 'dialogue' return p.name limit 4"}, {"query": "Who is the founder of elementary number theory and who are its representatives?", "cypher": "match (:ENTITY{name:' primary number theory [mathematical branch]'}) - [:Relationship{name:' pioneer'}]->(n) return n.name as name union all match (:ENTITY{name:' primary number theory [mathematical branch]'}) - [:Relationship{name:' representative person'}]->(m) return m.name as name"}, {"query": "Tell me what the word for today is.", "cypher": "match (:ENTITY{name:'\u672c\u663c'}) <- [:Relationship{name:'\u672c\u540d'}]-(h),(h) - [:Relationship{name:'wordnumber'}]->(m) return distinct m.name limit 1"}, {"query": "Please list the names of the people who have served as the standing committee of the Xionghua District Committee.", "cypher": "match (:ENTITY{name:'Standing Committee of the Xinjiang District Commission'}) --(x) return distinct x.name"}, {"query": "I'm going to be the director of the secondary school chemistry experiment by Yu-Rung Zhang, and I'm going to study the three-tier relationship.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name <> 'Ren Yu-rong Zhang Qu' return distinct x.name"}, {"query": "What types of relationships are involved in the two layers of marriage intelligence do you know about?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'marriage wisdom'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you help me find a representation of a Yale graduate?", "cypher": "match (:ENTITY{name:'Yale University'}) <- [:Relationship{name:'Graduate School'}]-(n),(n) - [:Relationship{name:'Representative work'}]->(p) return distinct p.name limit 3"}, {"query": "What is the nickname of the 2nd generation wireless telephone technology?", "cypher": "match (:ENTITY{name:'2-Generation wireless telephone technology'}) <- [:Relationship{name:'other foreign names'}]- (h) return distinct h.name"}, {"query": "What is the shortest relationship between the two layers of cabinet and the glass bulb?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest'}) -[:Relationship*..2]-(b:ENTITY{name:'shortest'})) return count ((p)"}, {"query": "What is the shortest route between the two levels of the village of Ryujo and the village of White River?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Ryuo Village [lower subdivision of the township of Jiaoyuan City, Jiaoyuan City, Henan Province]'}) - [*..2]-(b:ENTITY{name:'Whiteway River Village'})) return count ((p))"}, {"query": "What is the shortest relationship path between the two layers of the flat thoracic and the squamous?", "cypher": "The following table lists the most commonly used methods of measuring the length of a path."}, {"query": "What is the IPSAN?", "cypher": "match (:ENTITY{name:'IPSAN'}) - [:Relationship{name:'attributes'}]->(m) return distinct m.name"}, {"query": "The following are the main departments of the online education institutions in the category of online schools:", "cypher": "match (:ENTITY{name:'online school'}) <- [:Relationship{name:'category'}]-(m),(m) - [:Relationship{name:'main faculty'}]->(q) return distinct q.name"}, {"query": "I'm not sure if I'm going to be able to do it, but I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to try to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it, and I'm going to do it.", "cypher": "match (n:ENTITY{name:'\u8d39\u76ca\u4e30'}) - [:Relationship{name:'representing work'}]->(h) with h order by h.name where h.name <> 'the mother grows up after the mother' and h.name <> 'the mother grows up after the mother' return h.name limit 1"}, {"query": "The following is a list of the topics covered in the book:", "cypher": "match (n:ENTITY{name:'\u8fd1\u541f'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "Tell me about the three layers of relationships that are involved in wearing asphalt. Can you name three?", "cypher": "The following is a list of all the different ways Unwind is credited in the database:"}, {"query": "What is the name of the classic work of the Western master painter?", "cypher": "match (:ENTITY{name:'Western painting master's classic work'}) <- [:Relationship{name:'spoonful book name'}]- (h) return h.name"}, {"query": "Can you tell me the brands of the five small appliance companies?", "cypher": "match (:ENTITY{name:' small appliance'}) <- [:Relationship{name:' industry'}]- (x) return x.name limit 5"}, {"query": "The film is based on the novel of the same name by the writer, who is also a writer.", "cypher": "match (n:ENTITY{name:'\u83e9\u85a9\u86ee\u00b7\u897f\u98a8\u90fd\u662f\u884c\u4eba\u6068'}) - [:Relationship*1..2]->(x) where x.name <>'\u5357' return distinct x.name"}, {"query": "What books are published by foreign language publishers and who are their authors?", "cypher": "match (:ENTITY{name:' foreign language publisher'}) <- [:Relationship{name:' foreign language publisher'}]-(h),(h) - [:Relationship{name:' author'}]->(q) return distinct h.name,q.name"}, {"query": "I'm wondering where is the area in the southwest of Nanming District?", "cypher": "match (:ENTITY{name:'Southwest Narrow Area of Nanming District'}) <- [:Relationship{name:'Geographical location'}]- (n) return distinct n.name"}, {"query": "The Chinese writer, who is also a writer, has been a key figure in the development of the Chinese language.", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(m) - [:Relationship{name:'main achievements'}]->(h) return h.name order by h.name limit 5"}, {"query": "Which software's tagline is \"I'm here\"?", "cypher": "match (:ENTITY{name:'I'm here'}) <- [:Relationship{name:'software password'}]- (n) return distinct n.name"}, {"query": "Can you find five labels for 11 o'clock poker?", "cypher": "match (:ENTITY{name:'11-point poker card'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "Do you know how many European brands of ceramics there are?", "cypher": "match (:ENTITY{name:'Europe'}) <- [:Relationship{name:'from'}]- (x) return x.name limit 5"}, {"query": "The Intel Mercedes 3 933EB (box) is a Chinese car that was designed by Intel in the late 1980s.", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "Tell me about the five basic relationships in the four layers of a man named Abihazira Shimon.", "cypher": "match (n:ENTITY{name:'Abihazira Shimon'}) - [*1..4]->(x) where x.name <>' foreign name' return distinct x.name limit 5"}, {"query": "0412 is a scientific number and what is the label?", "cypher": "match (:ENTITY{name:'0412'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'science' return m.name"}, {"query": "Do you know what important events happened to this Go player in the game?", "cypher": "match (:ENTITY{name:'gochess'}) <- [:Relationship{name:'sporting project'}]-(n),(n) - [:Relationship{name:'important event'}]->(h) return h.name skip 1 limit 5"}, {"query": "Can you recommend the two novels that are being serialized?", "cypher": "match (h:ENTITY{name:'continued'}) <- [:Relationship{name:'novel progress'}]-(x),(x) - [:Relationship{name:'Chinese name'}]->(p) return distinct p.name limit 2"}, {"query": "Tell me about the stoning?", "cypher": "match (n:ENTITY{name:'drumming'}) --(x) return x.name"}, {"query": "How do you read the script?", "cypher": "match (:ENTITY{name:' cast'}) - [:Relationship{name:' spelling'}]->(n) return n.name"}, {"query": "Can you recommend 20 books or novels related to the Qing Dynasty?", "cypher": "match (:ENTITY{name:'Qing Dynasty'}) <- [:Relationship{name:'belonging to dynasty'}]- (n) return n.name limit 20"}, {"query": "I'm not sure what kind of bridge is 730 meters long.", "cypher": "match (:ENTITY{name:'730 m'}) <- [:Relationship{name:'master across'}]- (h) return distinct h.name"}, {"query": "I'm interested in 5 of her messages.", "cypher": "match (:ENTITY{name:' Xu Min'}) --(h) return distinct h.name limit 5"}, {"query": "The name of the company in Suzhou?", "cypher": "match (p:ENTITY{location:'Suzhou'}) return p.name The name of the game is"}, {"query": "Do you have any idea how many local businesses are doing?", "cypher": "match (p:ENTITY{location:'please'}) return count ((p)"}, {"query": "Please tag the road collapse in Taihuahua on 12.26", "cypher": "match (:ENTITY{name:'12.26 Taih\u014d City road collapse incident'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name"}, {"query": "Can you find me two calligraphers?", "cypher": "match (:ENTITY{name:' calligrapher'}) <- [:Relationship{name:' profession'}]- ((x),(x) - [:Relationship{name:' Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "Tell me five stories about the 11/23 Guangdong Zhujiang New Town fire?", "cypher": "match (:ENTITY{name:'11\u00b723 Guangdong Guangzhou Zhujiang New City Fire'}) --(p) with p order by p.name return p.name limit 5"}, {"query": "Do you know what the other name of The First Kid to Learn English from Mexico is?", "cypher": "match (:ENTITY{name:'The First Kid to Learn English from Mexico'}) <- [:Relationship{name:'other translations of names'}]- (n) return n.name"}, {"query": "Please list the main awards received in the 11th Inning.", "cypher": "match (:ENTITY{name:'Inner City XI'}) - [:Relationship{name:'Main award'}]-> (p) return p.name order by p.name"}, {"query": "Can you find the top 5 most iconic L.U.B. works?", "cypher": "match (:ENTITY{name:'L.U.B'}) - [:Relationship{name:'represents work'}]-> (x) return x.name order by x.name limit 5"}, {"query": "Can you name five of the campaigns that have been running since 1999?", "cypher": "match (:ENTITY{name:'1999'}) <- [:Relationship{name:' start time'}]- (n) return n.name limit 5"}, {"query": "What are the most representative works of people born in December 1966?", "cypher": "match (:ENTITY{name:'December 1966'}) <- [:Relationship{name:'date of birth'}]- ((m) - [:Relationship{name:'representative work'}]->(q) return distinct m.name"}, {"query": "What chemicals are extracted from the thyroid derivatives?", "cypher": "Match (:ENTITY{name:'thrust-containing thyroid derivatives'}) <- [:Relationship{name:'biology'}]- (m) return m.name"}, {"query": "Can you give us a detailed description of the five-layer relationship between the military carrier T-15 heavy infantry fighting vehicle and the T-15 heavy infantry fighting vehicle?", "cypher": "match (n:ENTITY{name:'T-15 heavy infantry fighting vehicle'}) - [*1..5]->(x) where x.name <> 'military' return distinct x.name"}, {"query": "Help me find a fish in the family of the spiny-tailed cuttlefish.", "cypher": "match (:ENTITY{name:'sparrow'}) <- [:Relationship{name:'sparrow'}]-(m), (m) - [:Relationship{name:'family'}]->(n) where n.name='species' return distinct m.name limit 1"}, {"query": "Can you tell me three things about Angela Curran?", "cypher": "match (m:ENTITY{name:'Angela Curran'}) --(x) return distinct x.name limit 3"}, {"query": "Does anyone know what Pan's major achievements are?", "cypher": "match (q:ENTITY{name:'Pan Mi-Gong, graduated from Carnegie Mellon University, Pennsylvania, USA, Vanderbilt University, Tennessee, Chongqing, China, Fujian) Ltd. Executive Vice Chairman, President of Eastern Golf International Group, Special Vice Chairman and Chairman of the Chinese Golf Association, and founder of the Chinese Golf Chain Operations."}, {"query": "I'm not sure if I should be doing this, but I'm not sure I should be doing this.", "cypher": "match (:ENTITY{name:'January cover'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "I accidentally learned about Zhang Lianying's ball-throwing incident at the World Table Tennis Championships in Yokohama, and in order to make the game more enjoyable, you can give me three more details about it.", "cypher": "match (n:ENTITY{name:'Chang Liening's ball incident'}) -->(h) with h order by h.name where h.name <> 'Yokohama World Table Tennis Championships' and h.name <> 'In order to make the match more spectacular' return h.name limit 3"}, {"query": "How many points of interest do the data show for the substitute?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "Can you tell me about the software in the 4-layer relationship related to the DMG file format software LRTimelapse?", "cypher": "match (n:ENTITY{name:'LRTimelapse'}) - [*1..4]->(x) where x.name <>'DMG' return distinct x.name"}, {"query": "Which academic conference is hosted by Sichuan University Hong Kong Tech University?", "cypher": "match (p:ENTITY{name:' Sichuan University of Hong Kong University of Technology'}) <- [:Relationship{name:' Hosted Unit'}]- (h) return distinct h.name"}, {"query": "Help me find a Japanese painter.", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='painter' return distinct m.name limit 1"}, {"query": "What is the XSLT when element?", "cypher": "match (:ENTITY{name:'XSLT when element'}) --(p) with p order by p.name return p.name limit 3"}, {"query": "The song is sung by a group of musicians from the city of Turku, who are the songwriters, composers and lyricists of the song.", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "The author of the poem, who wrote the book, wrote the poem in a way that was very interesting and interesting.", "cypher": "match (n:ENTITY{name:'return to the original directory table'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "Can you list some of the main works of SNH48?", "cypher": "match (:ENTITY{name:'SNH48'}) <- [:Relationship{name:' group'}]- ((q) - [:Relationship{name:' main work'}]->(m) return distinct q.name"}, {"query": "I need to know the details of five 1.85m tall Aszberg Heinz?", "cypher": "match (n:ENTITY{name:'Asberg Heinz'}) - [*]->(x) where x.name <>'1.85 m' return distinct x.name limit 5"}, {"query": "What about the work of five women?", "cypher": "match (:ENTITY{name:' female'}) <- [:Relationship{name:' gender'}]-(n),(n) - [:Relationship{name:' representing work'}]->(q) return q.name order by q.name limit 5"}, {"query": "What happened on December 15, 2014 in the world?", "cypher": "match (p:ENTITY{name:'December 15, 2014'}) <- [:Relationship{name:'time'}]- (x) return distinct x.name"}, {"query": "I wonder what kind of jobs people weighing 70kg would choose?", "cypher": "match (:ENTITY{name:'70kg'}) <- [:Relationship{name:'weight'}]-(p) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 5"}, {"query": "The following is a list of 5 profiles of Bilro, born in Borba.", "cypher": "match (n:ENTITY{name:'Bilro'}) -[:Relationship*]->(x) where x.name<>'Borba' return distinct x.name limit 5"}, {"query": "Can you explain the top ten brand attributes of the 2006 Pepsi brand list?", "cypher": "match (:ENTITY{name:'2006 Hocus Pocus brands'}) - [:Tag{name:'tags'}]-> (m) with m order by m.name return m.name limit 10"}, {"query": "Help me find three films by director Wouter.", "cypher": "match (:ENTITY{name:'Wo\u4ed5'}) <- [:Relationship{name:'director'}]-(m) return distinct m.name limit 3"}, {"query": "Do you know when Chen Da Kai was founded?", "cypher": "match (p:ENTITY{name:'Chen Da Ka Company'}) return p.time The match is a match between two matches."}, {"query": "The date of birth and nationality of Wang Rin Sung.", "cypher": "match (x:ENTITY{name:'\u738b\u4ec1\u5b97'}),(x) - [:Relationship{name:' date of birth'}]-> (m), (x) - [:Relationship{name:' ethnicity'}]->(n) return m.name, n.name"}, {"query": "Please tell me what games are available in Chinese for the game language?", "cypher": "match (:ENTITY{name:' in Chinese'}) <- [:Relationship{name:' game language'}]-(m) - [:Tag{name:' tag'}]->(n) return distinct n.name limit 1"}, {"query": "Tell me the name of someone born in 1898?", "cypher": "match (:ENTITY{name:'1898'}) <- [:Relationship{name:'date of birth'}]-(p),(p) - [:Relationship{name:'alias'}]->(h) return distinct h.name limit 1"}, {"query": "I want to know about the next rebirth novel, \"Jumen Yang Killing Two\".", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'rebirth' return distinct x.name"}, {"query": "Do you remember the 10/29 Lanzhou railway overturn, when exactly it happened?", "cypher": "match ((:ENTITY{name:'10\u00b729 Lanang Railway rollover accident'}) - [:Relationship{name:'time of occurrence'}]-> (p) return p.name"}, {"query": "Do you have any information about Hauman Petrus, who is not in more than three relationships and has South African nationality?", "cypher": "match (n:ENTITY{name:'Hauman Petrus'}) - [*1..3]->(x) where x.name<>'South Africa' return distinct x.name"}, {"query": "Please tell me 5 things about the third layer of the publication's label relationship.", "cypher": "The following is a list of the most commonly used tags in the search results."}, {"query": "Help me find five plants that are in the seed-plant-gate-twin-leaf-plant schedule.", "cypher": "match (:ENTITY{name:'seed plant gate'}) <- [:Relationship{name:'gate'}]-(m), (m) - [:Relationship{name:'gram'}]->(n) where n.name='twin leaf plant gate' return m.name limit 5"}, {"query": "I need the first three.", "cypher": "match (:ENTITY{name:'Andrew Osborn'}) --(h) return h.name order by h.name limit 3"}, {"query": "Can you tell me five of them?", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnicity'}]- ((h) - [:Relationship{name:'profession'}]->(m) return m.name skip 2 limit 5"}, {"query": "Can you find me two books published in 1989?", "cypher": "match (:ENTITY{name:'1989'}) <- [:Relationship{name:' time of publication'}]- ((x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know which statistics show that road freight in Jinzhou is 173.98 million tons?", "cypher": "match (:ENTITY{name:'17398 million tons'}) <- [:Relationship{name:'road freight'}]- (x) return distinct x.name"}, {"query": "What are the works that these people have been involved in creating?", "cypher": "match (:ENTITY{name:'??'}) <--(n) return n.name The name of the match is"}, {"query": "What novels are published on Jinjiang Literary Network?", "cypher": "match (p:ENTITY{name:'novel'}) <--(x) --> ((q:ENTITY{name:'Jingjiang Literary Network'}) return x.name"}, {"query": "What chemical is the molecular formula HOCH2CHCHCH2OH?", "cypher": "match (:ENTITY{name:'HOCH2CHCHCHCH2OH'}) <- [:Relationship{name:'molecular'}]- (n) return distinct n.name"}, {"query": "Please tell me what chemical CAS NO is: 81-55-0?", "cypher": "The following is a list of the most commonly used and used codes for the C++ programming language."}, {"query": "The first three messages from the administration of calm please tell us.", "cypher": "match (:ENTITY{name:'consolidated'}) --(n) return n.name order by n.name limit 3"}, {"query": "Do you know what metal hardness is the delivery hardness?", "cypher": "match (:ENTITY{name:' delivery hardness'}) <- [:Relationship{name:' hardness'}]- (q) return distinct q.name"}, {"query": "What is the job of a person who believes in the Chinese Communist Party?", "cypher": "match (n:ENTITY{name:'CPC'}) <- [:Relationship{name:'faith'}]-(h),(h) - [:Relationship{name:'profession'}]->(m) return m.name skip 2 limit 5"}, {"query": "What are some of the articles in the book Chinese Discipline - The World of Ink Painting?", "cypher": "match (:ENTITY{name:'China's discipline - the world of ink painting'}) - [:Relationship{name:'the book collection'}]-> (h) return distinct h.name"}, {"query": "Do you remember the name of the novel called \"The One-Paper Plush\"?", "cypher": "match (:ENTITY{name:' a paper full of stuff'}) <- [:Relationship{name:' a book full of stuff'}]- (h) return distinct h.name"}, {"query": "Do you know about the water dragon character Baek Seong? What other information is there besides the 106th General of Liangsan, please find the other 10 information in the 2nd layer", "cypher": "match (:ENTITY{name:'white'}) - [:Relationship*1..2]->(p) where p.name <> '106' return p.name limit 10"}, {"query": "Look at the publication Engine of the Modern World - Industrial Revolution/World History through the Look at all the relevant information?", "cypher": "match (n:ENTITY{name:' The engine of the modern world - Industrial Revolution/World History Overview'}) - [:Relationship*]->(x) where x.name <> 'publication' return distinct x.name"}, {"query": "I want to publish the other 6 pieces of information in the third layer of this 2008 IMS book based on cellular systems.", "cypher": "match (:ENTITY{name:'IMS based on cellular system'}) - [*1..3]-(p) where p.name <> '2008/9/1' return distinct p.name limit 6"}, {"query": "I was focusing on the 10th Shenzhen Mobile World Congress 2010 but forgot the exact launch date, you know?", "cypher": "match ((:ENTITY{name:'2010 Tenth Shenzhen International Mobile Phone Industry Expo's workshop on the subject of the phone}) - [:Relationship{name:'Demonstration time'}]-> (x) return x.name"}, {"query": "What else do you know about the alliance besides the fact that it is designed to meet the needs of investment financing?", "cypher": "match (:ENTITY{name:'investment alliance'}) -[*1..2]-(p) where p.name <> ' satisfies the investment financing needs of the implementation,' return distinct p.name limit 5"}, {"query": "Can you tell me which of these works are representative of this male celebrity? Can you give me 10?", "cypher": "match (q:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(n) - [:Relationship{name:'representing work'}]->(h) return h.name order by h.name limit 10"}, {"query": "Find information on the two-tier relationship between Chinese painting in simplified Chinese/Chinese art in classified Chinese?", "cypher": "match (n:ENTITY{name:'Chinese painting full collection/Chinese art classification full collection'}) - [:Relationship*1..2]->(x) where x.name <>'simplified Chinese' return distinct x.name"}, {"query": "Can you share with me the types of relationships within the three layers of the \"Pyramid Revolution\" saga?", "cypher": "The following pages link to The Unknown:"}, {"query": "What is the genre of the Stone Age novel and how is it connected now, please tell me?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'type'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'connected state'}]->(m) return m.name as name"}, {"query": "What is the name of the variable set that can be used in the entire scope of a PHP script?", "cypher": "match (:ENTITY{name:' in the full scope of a PHP script'}) <- [:Relationship{name:' adaptation conditions'}]- (m) return m.name"}, {"query": "What does the nickname read? What does it mean?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "Besides the name of an ingredient, can you tell me five things you know about the Chendol 2 layer?", "cypher": "match (:ENTITY{name:'Chendol'}) - [*1..2]->(p) where p.name <> ' a name of an ingredient' return distinct p.name limit 5"}, {"query": "In addition to Bruno Bertoldo, the director of this great historical animation, please find 6 messages in the 3 layers of this animated short film.", "cypher": "match (:ENTITY{name:'great historical animation'}) - [*1..3]-(p) where p.name <> 'Bruno Bertsdor' return distinct p.name limit 6"}, {"query": "What do the Turks have in common? What do you know about their religion?", "cypher": "match (:ENTITY{name:'Turkish people'}) <- [:Relationship{name:'ethnicity'}]-(h),(h) - [:Relationship{name:'faith'}]->(q) return distinct h.name,q.name"}, {"query": "What are the matches that are held at the same time as the Andalusian Football Super League? What are the respective labels of these matches? Please sort by the number of labels of each match from small to large.", "cypher": "match (n:ENTITY{name:'Andalusian Football Super League'}) - [:Relationship{name:'time of holding'}]->(:ENTITY) <- [:Relationship{name:'time of holding'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Give me an example of one of Ted Elliott's most iconic works besides Pirates of the Caribbean 2: The Soul Reaper and The Golden Gate Bridge.", "cypher": "match (n:ENTITY{name:'Ted Elliott'}) - [:Relationship{name:'representative work'}]->(h) where h.name <> 'Pirates of the Caribbean 2: Ark of the Covenant' and h.name <> 'The Golden City of the Brave' return distinct h.name limit 1"}, {"query": "I know about Chinese national cultural tourism in Hengmun Town, Ancon, Xinjiang Province, which is part of the North Asian tropical continental monsoon climate, please tell me four more details about it.", "cypher": "match (n:ENTITY{name:'Chinese National Cultural Park'}) -->(h) with h order by h.name where h.name <> 'Henggong Township, Ancon City, Shanxi Province' and h.name <> 'North Asia Tropical Continental Monsoon Climate' return h.name limit 4"}, {"query": "What is the shortest path between Alganon and the crater within the two layers?", "cypher": "The following is a list of all the different ways A:P (Relationship) is credited in the database:"}, {"query": "Please tell me the name of a person born in Jiangsu and his main achievements.", "cypher": "match (:ENTITY{name:'Jiangsu Yanzhou'}) <- [:Relationship{name:'place of birth'}]-(h) - [:Relationship{name:'main achievements'}]->(n) return h.name,n.name skip 3 limit 1"}, {"query": "I want to know what conflict has caused 34 deaths?", "cypher": "match (:ENTITY{name:'34 people killed'}) <- [:Relationship{name:'personally injured'}]- (p) return distinct p.name"}, {"query": "What is the slogan of the 1688 Logistics Network?", "cypher": "match ((:ENTITY{name:'1688 logistics network'}) - [:Relationship{name:'password'}]-> (n) return n.name"}, {"query": "The author, who was born in Ichuan City, Helorong Province, is a representative of the EDA Technology Coordinator, and what other works does he have?", "cypher": "match (:ENTITY{name:'Ichun City, Helanggang Province'}) <- [:Relationship{name:'Birthplace'}]-(h),(h) - [:Relationship{name:'Representing work'}]->(q) where q.name <> 'EDA technology pump' return distinct q.name limit 5"}, {"query": "I want to ask you, which school is Huang Qing a famous alumnus of?", "cypher": "match (:ENTITY{name:'Huang Qing'}) <- [:Relationship{name:'known alumni'}]- (m) return m.name order by m.name"}, {"query": "Can you tell me about the iconic work of Phil Lewis?", "cypher": "match (:ENTITY{name:'Phil Lewis'}) - [:Relationship{name:'represents work'}]-> (x) return x.name order by x.name"}, {"query": "What are the novels that are being published in Jinjiang Literature City? Can you tell me seven?", "cypher": "match (:ENTITY{name:'Jingjiang City'}) <- [:Relationship{name:'connecting platform'}]- (m) return m.name limit 7"}, {"query": "Who can tell me that the pump is a 1000 MW super super-critical fire engine-grade construction project?", "cypher": "match (:ENTITY{name:'1000MW super supercritical fire engine level construction heat control engineering construction'}) --(n) with n order by n.name return n.name"}, {"query": "Did you have trouble listing the five most representative works of art in the city?", "cypher": "match (:ENTITY{name:'Yung Liang'}) <- [:Relationship{name:'Chinese name'}]-(h) - [:Relationship{name:'representing work'}]->(x) return distinct x.name limit 5"}, {"query": "List the personal profiles of no less than three people who have a relationship with the basketball player Morency Jean-Fr\u00e9d\u00e9ric?", "cypher": "match (n:ENTITY{name:'Morency Jean-Fr\u00e9d\u00e9ric'}) - [*1..3]->(x) where x.name<> 'basketball' return distinct x.name"}, {"query": "What are the characteristics of the APS-C specification digital microelectronics?", "cypher": "The following is a list of the most commonly used tags in the APS-C specification:"}, {"query": "Can you tell me the main award that Desperate Housewives MP4 Season 1-4 has won?", "cypher": "Match (:ENTITY{name:' Desperate Housewives' season1-4 MP4}) - [:Relationship{name:'main award'}]-> (m) return distinct m.name"}, {"query": "I heard that 18 Rewards Network has a communications label, so is there another label?", "cypher": "match (:ENTITY{name:'18 rebate net'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'propagation' return h.name"}, {"query": "He has worked as an actor/singer/dance teacher and represented his other five works as a rising star.", "cypher": "match (:ENTITY{name:' actor/singer/dance teacher'}) <- [:Relationship{name:' profession'}]-(n) - [:Relationship{name:' representing work'}]->(q) where q.name <> 'starry dream' return distinct q.name limit 5"}, {"query": "Can you list 11 areas with an area of 1.3 square kilometers?", "cypher": "match (:ENTITY{name:'1.3 square kilometers'}) <- [:Relationship{name:' occupies area'}]- (q) return q.name limit 11"}, {"query": "Besides being inorganic salts, can you tell me 6 things you know about the chloride of titanium in the 2nd layer?", "cypher": "match (:ENTITY{name:'chloride chloride'}) - [:Relationship*1..2]->(p) where p.name <> 'inorganic salt' return p.name limit 6"}, {"query": "Who is the person who has won a special award, three national first prize and several provincial awards?", "cypher": "match (:ENTITY{name:'One special award, three national first class awards, several provincial awards'}) --(x) return distinct x.name"}, {"query": "Please help me find 5 books for $13 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'13.00\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can anyone list 20 of the revolutionary fighters in China?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Rela"}, {"query": "Please find me two songs with perfume lyrics, which album are they from?", "cypher": "match (:ENTITY{name:'sweet'}) <- [*]-(m), (m) - [:Relationship{name:' belongs to album'}]->(n) return m.name, n.name limit 2"}, {"query": "Please show me a picture of a stamp from Science Publications that describes the relationship between canoes and aircraft carriers.", "cypher": "match (n:ENTITY{name:'stamp art says from canoe to aircraft carrier'}) - [:Relationship*1..2]->(x) where x.name <> 'Scientific dissemination publisher' return distinct x.name"}, {"query": "Can you find me five varieties with microbial labels?", "cypher": "The name of the microbe is the same as the name of the microbe."}, {"query": "The subject is \"Does any animal in Armenia have a snout?\" Can you list 13?", "cypher": "match (:ENTITY{name:'Relationship{name:'Yemen'}}) - (q) return q.name limit 13"}, {"query": "Please tell me about the main department of the School of Architecture and Construction in Zhuzhou District, Taizhou City.", "cypher": "match (:ENTITY{name:'District of Zhengzhou's Construction Training School in Zhengzhou, Zhejiang City'}) - [:Relationship{name:'Major Faculty'}]-> (x) return distinct x.name limit 3"}, {"query": "Can you describe in detail the man who is the father of the Buddha?", "cypher": "match (:ENTITY{name:'Boe Aetius, late Roman philosopher, politician\u3002'}) <-[:Describe{name:'describe'}]-(n) return distinct n.name limit 1"}, {"query": "What kind of relationship is involved in the two levels of Yangzhou Yongsheng?", "cypher": "The following pages link to The Unknown:"}, {"query": "The school has been awarded the national top ten modern schools in Xilong, please tell me which 10 other awards he has received.", "cypher": "match (:ENTITY{name:'Six Way River Secondary School'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'Main award'}]->(h) where h.name <> 'National top ten modern school' return distinct h.name limit 10"}, {"query": "Please help me find 5 places with subtropical monsoon climate, where are they located?", "cypher": "match (:ENTITY{name:'subtropical monsoon climate'}) <- [*]-(m),(m) - [:Relationship{name:'geographical location'}]->(n) return m.name,n.name limit 5"}, {"query": "What awards have been won by the school at the Yuming Missionary Base in Kunming City, Yunnan Province?", "cypher": "match (:ENTITY{name:'Yunming City, Kunming, Yunnan Province, Yueqing's teaching base'}) <- [:Relationship{name:'School address'}]- ((m) - [:Relationship{name:'Major award'}]->(h) return distinct h.name"}, {"query": "Can you tell me what this Chinese person does for a living?", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnic'}]-(q),(q) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 10"}, {"query": "Help me find 10 national key cultural relics protection units", "cypher": "match (:ENTITY{name:'National key cultural relics protection unit'}) --(x) return distinct x.name limit 10"}, {"query": "Help me find the three up-and-down letters.", "cypher": "match (:ENTITY{name:'up and down structure'}) <- [:Relationship{name:'structure'}]-(m), (m) - [:Relationship{name:'spelling'}]->(n) where n.name='b\u00ec' return distinct m.name limit 3"}, {"query": "Besides the location in Beijing's West Gate, can you tell me six things you know about the blood feud in the second floor of the Chen family?", "cypher": "match (:ENTITY{name:'Blood War Chen Family'}) - [:Relationship*1..2]->(p) where p.name <> 'Humzhou City's lower Yangtze River (now Beijing West Gate) ' return p.name limit 6"}, {"query": "Who is a professional and what are their respective labels? Please list them in order of number of labels.", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "Can you recommend a client that is 132MB?", "cypher": "The name of the client is the same as the name of the client."}, {"query": "The shortest name for content with a cultural label is?", "cypher": "The following is a list of the most commonly used tags in the world:"}, {"query": "I want 5 social events 5-1 Link to the incident at the Windsor Amusement Park high-flying accident?", "cypher": "match (n:ENTITY{name:'5\u00b71 Windsor Park high-flying accident'}) - [*]->(x) where x.name <> 'social event' return distinct x.name limit 5"}, {"query": "Do you know how much hard drive capacity NAS network memory has?", "cypher": "match (:ENTITY{name:'NAS network storage'}) <- [:Relationship{name:' product type'}]-(x) - [:Relationship{name:' hard drive capacity'}]->(q) return distinct q.name"}, {"query": "What is the concentration of 4-trimethan-3-methylamide?", "cypher": "match ((:ENTITY{name:'4-triethyl methacrylate-3-methylamide'}) - [:Relationship{name:'focal point'}]-> (n) return n.name"}, {"query": "I would like to know the details of the relationship between the math teacher and the 4th level?", "cypher": "match (n:ENTITY{name:'Yun's'}) - [*1..4]->(x) where x.name<> 'Yun's, math teacher, graduated from Beijing Teachers' University\u3002' return distinct x.name"}, {"query": "I want to know 5 things about a person named Paduretu Lezwan in Chinese, in a two-tier relationship?", "cypher": "match (n:ENTITY{name:'Paduto Lezwan'}) - [*]->(x) where x.name <>'Paduto Lezwan' return distinct x.name limit 5"}, {"query": "Roo lists 5 game rooms to find out the details of the different 6 levels of relationships.", "cypher": "match (n:ENTITY{name:'Look for different in the living room'}) - [*1..6]->(x) where x.name<>'game' return distinct x.name limit 5"}, {"query": "What are the main works and achievements of Li Si Lun?", "cypher": "match (:ENTITY{name:' Lee Si Moon'}) - [:Relationship{name:' major works'}]->(n) return n.name as name union all match (:ENTITY{name:' Lee Si Moon'}) - [:Relationship{name:' major achievements'}]->(m) return m.name as name"}, {"query": "The Buddenbrooks are a group of young musicians who have been working together for over a decade.", "cypher": "match (:ENTITY{name:'The Buddenbrooks'}) <- [:Relationship{name:'represents work'}]- (p) return p.name order by p.name limit 3"}, {"query": "I want to know what the two layers of the relationship are that the Jodo family is involved in?", "cypher": "The following is a list of all the different ways The Wire is credited in the database:"}, {"query": "Do you know what Kim Jong-un's main achievements are?", "cypher": "match (:ENTITY{name:'Kim Yuhun, Party member of Zhejiang District Planning Bureau of Chongqing City, Deputy Director: Department of Law Enforcement Supervision, Law and Order Publicity, Planning Implementation Supervision, Inspection, Administrative and Criminal Proceedings, Liability, Interview Stability, Security Defence work.))"}, {"query": "Tell me about the 5 things Spiteri Kenneth, who plays football in a 1-4 relationship, told me.", "cypher": "match (n:ENTITY{name:'Spiteri Kenneth'}) - [*1..4]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "I'm looking for a book that can help me find all the information about the publication 04:32 Primary Maths.", "cypher": "match (:ENTITY{name:'04 three-point primary math'}) --(x) with x order by x.name where x.name <> 'publication' return x.name"}, {"query": "What other accomplishments did the person who died on August 14, 2000 have besides being the commander of the Eastern Camp Municipal Military District?", "cypher": "match (:ENTITY{name:'August 14, 2000'}) <- [:Relationship{name:'date of death'}]-(x),(x) - [:Relationship{name:'main achievements'}]->(h) where h.name <> 'Commander of the Eastern Camp District' return distinct h.name limit 3"}, {"query": "Please tell me 5 things about Jaulhac Adam.", "cypher": "match (n:ENTITY{name:'Jaulhac Adam'}) - [*]->(x) where x.name<>'person' return distinct x.name limit 5"}, {"query": "What are the attributes of the tags that can be associated with the .NET Framework eCommerce Site Builder Guide?", "cypher": "match (:ENTITY{name: .NET Framework for building e-commerce sites'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "What are the positions of people who are employed at the Northern National University?", "cypher": "match (m:ENTITY{name:'Northern National University'}) <- [:Relationship{name:'regularity'}]-(h),(h) - [:Relationship{name:'position'}]->(q) return distinct q.name"}, {"query": "The Chinese National Standards Management Committee has developed a two-tiered inspection protocol for import and export of instant coffee.", "cypher": "match (n:ENTITY{name:'Inport and export instant coffee inspection protocols'}) - [:Relationship*1..2]->(x) where x.name <> 'China National Standards Management Committee' return distinct x.name"}, {"query": "Can you find me the time of publication of the books by the Chinese Audio Video Publishers?", "cypher": "match (:ENTITY{name:'China recording video'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:'publication time'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Who wrote the song \"My Daughter Is So Terrible\" ?", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}) - ((m) return distinct m.name)"}, {"query": "Two sentences that sum up the combination of 1 + 3?", "cypher": "match (:ENTITY{name:'1+3 combinations'}) --(p) with p order by p.name return distinct p.name skip 1 limit 2"}, {"query": "What plants belong to the family of the toothpick? Name 20 species?", "cypher": "match (:ENTITY{name:'cinnamon group'}) <- [:Relationship{name:'group'}]- (q) return q.name limit 20"}, {"query": "Which hotels have TVs, gardens, pets, cots, etc?", "cypher": "match (:ENTITY{name:'TV, garden, carrying pets, child bed'}) <- [:Relationship{name:'facility services'}]- (x) return distinct x.name"}, {"query": "What ancient books have been unearthed in Loyang City, Henan Province?", "cypher": "match (:ENTITY{name:'Loiyang City, Henan Province}) <- [:Relationship{name:'Location'}]->(n) where n is not null return distinct n.name"}, {"query": "What is Kipchoge's most representative work?", "cypher": "match (:ENTITY{name:'Kip Hart'}) - [:Relationship{name:'representing work'}]-> (m) return distinct m.name"}, {"query": "Help me find 10 AAAAA-rated sites", "cypher": "match (:ENTITY{name:'AAAAA level'}) <- [:Relationship{name:'destination level'}]-(m) return distinct m.name limit 10"}, {"query": "The incident in which 21 people were injured was caused by a car accident.", "cypher": "match (:ENTITY{name:'21 people injured'}) <- [:Relationship{name:'casualty situation'}]- (q) return distinct q.name"}, {"query": "What tourist cities are there in the Peninsula?", "cypher": "match (:ENTITY{name:'Thailand'}) - [:Relationship{name:'Tourist city'}]->(m) return distinct m.name"}, {"query": "What is the name of the accident that happened in the Lido district of Liyuan City, Liyuan City, on the street of the pit mouth?", "cypher": "match (:ENTITY{name:'Lindu District Liyuan City Liyuan City Street Pit Gate Village'}) <- [:Relationship{name:'Location'}]- (x) return distinct x.name"}, {"query": "Do you know which novels are available in the Chinese language?", "cypher": "match (:ENTITY{name:' starting point Chinese web'}) <- [:Relationship{name:' website'}]- (p) return distinct p.name"}, {"query": "Tell me what are the two types of relationships between animals in the 3 layers and animal techniques?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' Experimental animals and animal experimental technology'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "Can you tell me about Huang Shan, the senior COSER in China, what is his profession?", "cypher": "match (:ENTITY{name:'\u9ec4\u5c71, domestic senior COSER\u3002'}) <- [:Describe{name:'description'}]-(h),(h) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 10"}, {"query": "I'm wondering if you can tell me which controller has humidity between 20 and 95%?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Please help me find the other 5 information about actress Zheng Lin in the 2nd floor.", "cypher": "match (:ENTITY{name:'Zhiqinglin'}) -[*1..2]-(p) where p.name <> 'actor' return p.name limit 5"}, {"query": "Who gave the name to the red belt?", "cypher": "match (:ENTITY{name:' red belt'}) - [:Relationship{name:' names and dates'}]-> (m) return distinct m.name"}, {"query": "Can you tell me about the 009 Super Rescue in one sentence?", "cypher": "match (:ENTITY{name:'000 machine confrontation'}) --(h) with h order by h.name return h.name limit 1"}, {"query": "Do you have any content about the types of relationships within the five levels of foreign language schools in cities?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'city foreign language secondary school'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the major awards of this school, founded in 1938? Do you know 10 of them?", "cypher": "match (:ENTITY{name:'1938'}) <- [:Relationship{name:'time of founding'}]-(x),(x) - [:Relationship{name:'main award'}]->(h) return h.name order by h.name limit 10"}, {"query": "What are the names of the films with the same date of filming as the New Wenshan film? What are the individual labels of these films? Please sort them by the number of labels in each of them from small to large.", "cypher": "match (n:ENTITY{name:'New Wenzhou man'}) - [:Relationship{name:'date of filming'}]->(:ENTITY) <-[:Relationship{name:'date of filming'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "What is the name of the state of Zhejiang? When was it created? What is the classification of Zhejiang?", "cypher": "The name of the game is the same as the name of the game itself. The name of the game is the same as the name of the game itself."}, {"query": "Besides the weapons, can you tell me five things you know about the British Westerland Fighter II?", "cypher": "match (:ENTITY{name:' British Westland Flying Fortress'}) - [*1..2]->(p) where p.name <> 'weapons equipment' return p.name limit 5"}, {"query": "How can I find the attribute tags for 0377?", "cypher": "match (:ENTITY{name:'0377 group shopping'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you help me find 5 information about the 097 class nuclear submarine?", "cypher": "match (h:ENTITY{name:'097 tons class nuclear submarine'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 5"}, {"query": "Can you explain to me three things about the International Silk Road Conference?", "cypher": "match (:ENTITY{name:'International Silk Road Congress'}) --(x) return distinct x.name limit 3 The name of the game is the same as the name of the game itself."}, {"query": "The total distance travelled in which sport is 3178 km?", "cypher": "Match (:ENTITY{name:'3178 km'}) <- [:Relationship{name:'all journeys'}]- (n) return n.name"}, {"query": "What is the skill of the Dominguez monk?", "cypher": "Match (:ENTITY{name:'Dawing demon monk'}) - [:Relationship{name:'skill'}]-> (x) return x.name skip 2"}, {"query": "Help me find a dish made with tofu and shrimp.", "cypher": "match (:ENTITY{name:'tofu drying, curry'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Relationship{name:'categorized'}]->(n) where n.name='chayanese' return distinct m.name"}, {"query": "Please tell me which people have the same nationality as Yukiyama, and what other labels they have. Please order the number of labels from small to large by each character.", "cypher": "match (n:ENTITY{name:'\u5ddd\u9ebb\u5f25'}) - [:Relationship{name:'\u56fd\u7c4d'}]->(:ENTITY) <- [:Relationship{name:'\u56fd\u7c4d'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "How do you find out about the five foreign universities and when they were founded?", "cypher": "match (:ENTITY{name:'foreign university'}) <--(m), (m) - [:Relationship{name:'time of founding'}]->(n) return m.name, n.name limit 5"}, {"query": "And what have you done with the half-Lara and how it is written?", "cypher": "match (:ENTITY{name:'half-Lara'}) - [:Relationship{name:'outcome'}]->(n) return n.name as name union all match (:ENTITY{name:'half-Lara'}) - [:Relationship{name:'spelling'}]->(m) return m.name as name"}, {"query": "What are the theories proposed by Apollo Neos that apply to the field of study?", "cypher": "match (q:ENTITY{name:'Apollo Neos'}) <- [:Relationship{name:'proponent'}]- ((m) - [:Relationship{name:'scale of application'}]->(h) return distinct h.name limit 2"}, {"query": "I especially want to know when the 2012 Saudi Jeddah International Hotel and Hotel Supplies Show will be held, do you know?", "cypher": "match ((m:ENTITY{name:'2012 Saudi Arabia Jeddah International Hotel and Hotel Supplies Show'}) - [:Relationship{name:' Exhibition time'}]-> (q) return q.name"}, {"query": "List five web games and describe their game types.", "cypher": "match (:ENTITY{name:'web game'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'game type'}]->(n) return m.name,n.name limit 5"}, {"query": "The longest ISBN of Hitchcock's work is?", "cypher": "The following pages link to List of articles on the list of articles in the ISBN: [Relationship: [name: ISBN: [name: ISBN: [name: ISBN: [name: ISBN: [name: ISBN: [name: ISBN: [name: ISBN: [name: ISBN: [name: ISBN: [name: ISBN: [name: ISBN: [name: ISBN: [name]]]]]]]]]]"}, {"query": "Can you recommend a few lines of the novel that are being re-published?", "cypher": "match (:ENTITY{name:'in the link'}) <- [:Relationship{name:'updated status'}]- (n) return distinct n.name"}, {"query": "Can you tell me about the three layers of relationships that are contained in a male love song?", "cypher": "The following pages link to The Unknown:"}, {"query": "Public Health and Preventive Medicine is the main school of medicine you know?", "cypher": "match (:ENTITY{name:'Public health and preventive medicine'}) <- [:Relationship{name:'main faculty'}]- (n) return distinct n.name"}, {"query": "I'm looking for two low-toxic herbicides, any other names?", "cypher": "match (:ENTITY{name:' belongs to low toxic herbicides'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:' other name'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "What chemical is the cas number 335-27-3?", "cypher": "The name of the game is \"Relationship\" (m:ENTITY{name:'335-27-3'})"}, {"query": "Please tell me what kind of shows are there for the Barley Network? Can you list 10?", "cypher": "match (:ENTITY{name:'barley net'}) <- [:Relationship{name:'ticketing agent'}]- (p) return p.name limit 10"}, {"query": "Can you help me find out if there is a Chinese name for this guy named WangXun? (under 5)", "cypher": "match (:ENTITY{name:'Wang Xun'}) <- [:Relationship{name:' foreign language name'}]-(h),(h) - [:Relationship{name:' major works'}]->(n) return distinct n.name limit 5"}, {"query": "123 returns net is a website that can bet on tagging?", "cypher": "match (:ENTITY{name:'123 return net'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'website' return n.name"}, {"query": "Do you know what the main achievements of the graduates of Nanjing University are?", "cypher": "match (:ENTITY{name:'Nanjing University'}) <- [:Relationship{name:'Graduate School'}]- ((q) - [:Relationship{name:'Major achievement'}]->(h) return distinct h.name limit 5"}, {"query": "What is the name of the music video directed by Tabitha Denholm, Peter Williams, Alex Koch?", "cypher": "The game is based on the video game series of the same name."}, {"query": "Help me find three other representative works of Liu Jing, other than the Wolf of War.", "cypher": "match (n:ENTITY{name:'Relationship{name:'representative work'}]->(h) with h order by h.name where h.name <> 'Wolf' and h.name <> 'Wolf II' return h.name limit 3"}, {"query": "Do you know which monument is about 5 meters high?", "cypher": "match (:ENTITY{name:'about 5 meters high'}) <- [:Relationship{name:'sign'}]- (q) return q.name"}, {"query": "Can you tell us about the following five information about the organization Tianjin Power Technology Development Co., Ltd.?", "cypher": "match (n:ENTITY{name:' Tianjin Electrical Engineering and Technology Development Co. Ltd'}) - [*]->(x) where x.name <> 'organizing entity' return distinct x.name limit 5"}, {"query": "Do you know which books are available for the exam? Can you give me five examples?", "cypher": "The following is a list of the most commonly used tags for the test:"}, {"query": "Please help me find out which album this song is from.", "cypher": "match (:ENTITY{name:'Heroes of the Burial'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'of the album'}]->(q) return distinct q.name"}, {"query": "The man who is nominated as the secretary of the Party Committee of the Yup'e County, what other profession does he have?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(x) - [:Relationship{name:'profession'}]->(n) where n.name <> 'township president, to be nominated as the secretary of the Party Committee of Lambung county etc. ' return distinct n.name limit 1"}, {"query": "What is the most recent novel you have seen about the seven fairies in the underworld?", "cypher": "match ((:ENTITY{name:'Seven Fairies in the Otherworld'}) - [:Relationship{name:' Novel category'}]-> (x) return x.name"}, {"query": "I want to hear about the two layers of relationship names that middle school students have to use in a poem.", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' Middle schoolers must be backing up poetry'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Three words to introduce me to the first snow of 2006?", "cypher": "match (:ENTITY{name:'first snow of 2006'}) --(n) with n order by n.name return n.name limit 3"}, {"query": "What is the chemical formula and density of titanium?", "cypher": "match (:ENTITY{name:' titanium silver ore'}) - [:Relationship{name:' chemical composition'}]->(n) return n.name as name union all match (:ENTITY{name:' titanium silver ore'}) - [:Relationship{name:' density'}]->(m) return m.name as name"}, {"query": "Can you give me five AAAA-level sights?", "cypher": "match (:ENTITY{name:'AAAA'}) <- [:Relationship{name:'site level'}]-(p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "Can you recommend some 2012 edition textbooks?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "I'm not sure how many of these devices you know about that don't have a display.", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Can you tell me about the type of relationship that the new openers are involved in in 5 layers?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'new opening man'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you find out what ingredients are used in the 10 Ways of Cooking?", "cypher": "match (:ENTITY{name:'\u5ddd\u83dc'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'main ingredient'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Can you quickly say the three labeling points of 5-amino acids?", "cypher": "match (:ENTITY{name:'5-amino acid'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 3"}, {"query": "What are the other names for the Lanning order?", "cypher": "match (:ENTITY{name:'Relationship{name:' alias'}-> (m) return m.name order by m.name"}, {"query": "Can you list any of the nine international games that are good?", "cypher": "match (:ENTITY{name:'9 ball international match'}) <- [:Relationship{name:'type of event'}]- (m) return distinct m.name"}, {"query": "Which companies are in the mobile internet industry? Can you name 10?", "cypher": "match (:ENTITY{name:' mobile internet'}) <- [:Relationship{name:' business scope'}]- (n) return n.name limit 10"}, {"query": "Do you know what regulations were issued on November 9, 2011?", "cypher": "match (:ENTITY{name:'November 9, 2011'}) <- [:Relationship{name:' release date'}]- (n) return distinct n.name"}, {"query": "The game is a game of the 108th birthday tag.", "cypher": "match (:ENTITY{name:'108th birthday'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'game work' return q.name"}, {"query": "Can you help me find two books by the authors of Autumn Rain?", "cypher": "match (:ENTITY{name:'\u4f59\u79cb\u96e8'}) <- [:Relationship{name:' author'}]-(x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name limit 2"}, {"query": "What are the nicknames of people with B blood type?", "cypher": "The following is a list of the most commonly used names in the world:"}, {"query": "What is the nature of Jinan Wangchun He Enterprise Management Consulting Limited? When was it founded?", "cypher": "match (:ENTITY{name:'Jinan Jinan Chan Chan Chan Chan Enterprise Management Consulting Limited'}) - [:Relationship{name:'Company nature'}]->(n) return n.name as name union all match (:ENTITY{name:'Beijing's bar'}) - [:Relationship{name:'establishment time'}]->(m) return m.name as name union all match (:ENTITY{name:'Beijing's bar'}) - [:Relationship{name'}}->(r) return r.name as name:'"}, {"query": "Can you name three main achievements of students?", "cypher": "match (:ENTITY{name:' student'}) <- [:Relationship{name:' profession'}]-(n),(n) - [:Relationship{name:' major achievement'}]->(h) return distinct h.name limit 3"}, {"query": "I read a book that had a summary that said that mom is the best doctor for children.", "cypher": "match (:ENTITY{name:'Mother is the best doctor of children'}) <- [:Relationship{name:' generalized'}]- (n) return n.name"}, {"query": "What are the representative works of the Chinese literati?", "cypher": "match (p:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]- ((q) - [:Relationship{name:'representative work'}]->(n) return distinct n.name limit 1"}, {"query": "Did you have trouble telling me about the personal information in Dgani Orel 3 from Israel?", "cypher": "match (n:ENTITY{name:'Dgani Orel'}) - [*1..3]->(x) where x.name<>'Israel' return distinct x.name"}, {"query": "What is the name of the academic paper directed by Liu, the anti-Santa Fe?", "cypher": "match (:ENTITY{name:'Please, please, please, please, please, please'}) <- [:Relationship{name:'Mentor'}]- (q) return distinct q.name"}, {"query": "Tell me about the three levels of relationship of this person?", "cypher": "match (n:ENTITY{name:'\u5fd7\u6751'}) - [*1..3]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "I'm going to find three private research universities for me.", "cypher": "The name of the university is a combination of the words \"Relationship\" and \"Relationship\" in Chinese."}, {"query": "What is the story behind the fantasy novel Sword of the Wombat?", "cypher": "match (:ENTITY{name:'sword domain'}) --(m) with m order by m.name where m.name <> ' fantasy novel' return m.name"}, {"query": "I'm wondering what chemical has the CAS number 196597-78-1?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What is the shortest relationship path between the three layers of the greenhouse and the greenhouse?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortestleaf green beans'}) - [*..3]-(b:ENTITY{name:'shortestleaf green beans'})) return count ((p)"}, {"query": "Can you see the 5 articles by Grima Dylan from Malta?", "cypher": "match (n:ENTITY{name:'Grima Dylan'}) - [:Relationship*]->(x) where x.name <>'Malta' return distinct x.name limit 5"}, {"query": "The .NET and design patterns are known as computer books, but are there other tag features?", "cypher": "match (:ENTITY{name: .NET with design pattern'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'computer books' return m.name"}, {"query": "What does the guy who came out on May 23, 2017 represent?", "cypher": "match (:ENTITY{name:'May 23, 2017'}) <- [:Relationship{name:'date of release'}]-(m),(m) - [:Relationship{name:'representing work'}]->(x) return distinct x.name"}, {"query": "Do you know what combination of music represents the work of the Knighthood, You're So Good After 00?", "cypher": "match (:ENTITY{name:'Cavalry Junior, goodbye 00'}) <- [:Relationship{name:'Music representing work'}]- (m) return distinct m.name"}, {"query": "The book is about the development of physics education and is called What's Your Name?", "cypher": "match (:ENTITY{name:'s development'}) <- [:Relationship{name:'s education in physics'}]- (p) return p.name"}, {"query": "What is the name of the Korean dish made with brown fish meat?", "cypher": "match (:ENTITY{name:'fish'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='Korean dish' return distinct m.name"}, {"query": "What are the main achievements of Chinese citizens?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]- ((n) - [:Relationship{name:'main achievements'}]->(m) return distinct m.name limit 5"}, {"query": "Can you tell me what kind of relationships are involved in 91 express cars in 3 levels?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "The information provided to me by Good Luck Transportation Services Limited is 6 information in 3 tiers apart from AA level enterprises in China.", "cypher": "match (:ENTITY{name:'Good luck to transport services limited'}) - [*1..3]-(p) where p.name <> 'China AA logistics enterprise' return distinct p.name limit 6"}, {"query": "Can you tell me about the famous sights in the old town of Chiang Mai?", "cypher": "Match (:ENTITY{name:'Relationship{name:'Famous attractions'}]-> (p) return p.name skip 1"}, {"query": "Please help me find three romance novels, where are all the links?", "cypher": "match (:ENTITY{name:'speech novel'}) <--(m), (m) - [:Relationship{name:'linked website'}]->(n) return m.name, n.name limit 3"}, {"query": "Help me find a six-piece band from the UK.", "cypher": "match (:ENTITY{name:'UK'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'number of members'}]->(n) where n.name='6 people' return distinct m.name"}, {"query": "What are the other three names of the film besides Love Copper Blow and Sweet Man Blow?", "cypher": "match (n:ENTITY{name:' clari sand's taste'}) - [:Relationship{name:' other translated name'}]->(h) where h.name <> 'love copper broth' and h.name <> 'sweet man's beauty' return distinct h.name limit 3"}, {"query": "What are the 10 other jobs that Jia Jia held besides the position of Chairman and General Manager of Sichuan South Filling Patent Gas Engineering Limited?", "cypher": "match (:ENTITY{name:' had been working'}) <- [:Relationship{name:' Chinese name'}]-(p),(p) - [:Relationship{name:' profession'}]->(x) where x.name <> ' Chairman and General Manager of Sichuan South Gas Additive Patent Engineering Limited' return distinct x.name limit 10"}, {"query": "I want to know about the copper reserves.", "cypher": "match (:ENTITY{name:'excess copper'}) --(m) return m.name skip 3"}, {"query": "Give me 5 people you know who are not a deputy chief doctor but have other professions.", "cypher": "match (:ENTITY{name:'Hennan Xuquan'}) <- [:Relationship{name:'birthplace'}]-(h) - [:Relationship{name:'profession'}]->(m) where m.name <> 'Deputy chief physician' return distinct m.name limit 5"}, {"query": "How did you introduce me to Charles Gilibert's information?", "cypher": "match (p:ENTITY{name:'Charles Gilibert'}) --(n) return n.name skip 1 This is a list of all the different ways Charles Gilibert is credited in the database."}, {"query": "Can you provide information on Jerrelle Benimon in two other languages besides English?", "cypher": "match (:ENTITY{name:'Jerrelle Benimon'}) --(m) with m order by m.name where m.name <> 'Jerrelle Benimon' return distinct m.name limit 2"}, {"query": "What are the occupations of this zodiac sign, Taurus?", "cypher": "The following is a list of all the characters that appear in the game:"}, {"query": "Please tell me about the five main departments of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education and Science of the Faculty of Education.", "cypher": "match (:ENTITY{name:'Faculty of Education and Science of the Faculty of Education and Science of the University of Hsinchu'}) - [:Relationship{name:'Faculty of Education and Science of the University of Hsinchu'}]-> (h) return distinct h.name limit 5"}, {"query": "The following is a detailed introduction to the two-tier relationship between the high-tech company, which integrates mobile Internet software development and entrepreneurship, and the company, which is a subsidiary of the company, which is a subsidiary of the company, which is a subsidiary of the company.", "cypher": "match (n:ENTITY{name:'\u7389\u697c\u6625\u00b7\u7626\u5026\u4f5c\u767b\u9ad8\u53bb'}) - [:Relationship*1..2]->(x) where x.name <> 'return x.name'"}, {"query": "Can you tell me how many series of 13 episodes you know?", "cypher": "match (:ENTITY{name:'13'}) <- [:Relationship{name:'set'}]- (p) return p.name limit 5"}, {"query": "What do you think about the publications for babies aged 0-2 years old?", "cypher": "match (n:ENTITY{name:'0-2 years old baby book; color shape'}) --(h) with h order by h.name where h.name <> ' publication' return h.name"}, {"query": "What are some of the main achievements of Kim Mei-young? Please tell me one.", "cypher": "match (:ENTITY{name:'\u7f8e'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'main achievement'}]->(q) return q.name order by q.name limit 1"}, {"query": "Do you know what buildings are in California, what happened?", "cypher": "match (n:ENTITY{name:'U.S. State of California'}) <- [:Relationship{name:' location'}]- (x) return distinct x.name"}, {"query": "What is the name of a Chinese surname?", "cypher": "Match (:ENTITY{name:'swinging'}) - [:Relationship{name:'swinging'}]-> (n) return n.name limit 1"}, {"query": "I would like to know what the foreign name of the Pet Lineage Management Association of China is?", "cypher": "match (:ENTITY{name:'Pet lineage Management Association of China'}) <- [:Relationship{name:'foreign name'}]- (q) return q.name order by q.name limit 1"}, {"query": "Can you name the works of which people are called \"Star of the Sun\"?", "cypher": "match (:ENTITY{name:'Earthstar'}) --(n) return distinct n.name"}, {"query": "Does the list of 1211 fire extinguishers include no more than 5 categories of tags in addition to the rest of the life tags?", "cypher": "match (:ENTITY{name:'1211 fire extinguisher'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'life' return q.name limit 5"}, {"query": "The first three tags for 000stthk?", "cypher": "match (:ENTITY{name:'000stthk'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 3"}, {"query": "Do you know of any towns in Tibet? I need 10 more information in addition to the 2 levels outside Tibet.", "cypher": "match (:ENTITY{name:'eighty-one township [township where the capital of Linyi City, Tibet is located]'}) - [*1..2]->(p) where p.name <> 'Baei City, Linyi City, Tibet Autonomous Region of China' return p.name limit 10"}, {"query": "The book is available in the review material for the 2011-2012 Securities Investment Analysis on-boarding exam question book.", "cypher": "match ((:ENTITY{name:'2011-2012 Securities Investment Analysis on-board exam question book'}) - [:Relationship{name:' pricing'}]-> (n) return n.name"}, {"query": "What is the voltage at 450/750 V and below for AC voltage?", "cypher": "match (m:ENTITY{name:'450/750V and below'}) <- [:Relationship{name:'Applicable to AC voltage'}]- (q) return distinct q.name"}, {"query": "What is Shen Yun's job?", "cypher": "match (:ENTITY{name:'Shayn's'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'profession'}]->(p) return distinct p.name"}, {"query": "Can you tell us more about the 2004 Swiss Women's Elite Volleyball Championship?", "cypher": "match (:ENTITY{name:'2004 Swiss Women's Elite Championship'}) --(n) with n order by n.name return n.name"}, {"query": "What is the English name of the novel called The Kid Killer?", "cypher": "match (:ENTITY{name:' minor male killer'}) <- [:Relationship{name:' Chinese name'}]- (x) return x.name"}, {"query": "Please list ten schools with IT departments.", "cypher": "match (:ENTITY{name:' IT department'}) --(p) return distinct p.name limit 10"}, {"query": "Can you summarize the journey to happiness in five words?", "cypher": "match (:ENTITY{name:' together towards happiness'}) --(n) with n order by n.name return n.name limit 5"}, {"query": "The book, \"The Magic of Skin Energy 2: The Little Secrets of Glowing Skin\", was published by New World Publishing.", "cypher": "match (n:ENTITY{name:'Magical Skin Energy Book 2: The Little Secret to Glowing Skin'}) - [:Relationship*1..3]->(x) where x.name <> 'New World Publishers' return distinct x.name"}, {"query": "Who is Hoodie Allen? Do you know him?", "cypher": "match (:ENTITY{name:'Hoodie Allen'}) --(p) return distinct p.name The name of the game is Hoodie Allen."}, {"query": "What do people born in July 1965 do? What are the 5 good ones?", "cypher": "match (:ENTITY{name:'July 1965 born'}) <- [:Relationship{name:'date of birth'}]-(n),(n) - [:Relationship{name:'occupation'}]->(h) return distinct h.name limit 5"}, {"query": "What is the scope of application of the academic theory proposed by Descartes?", "cypher": "match (:ENTITY{name:'descar'}) <- [:Relationship{name:'proponent'}]- ((x),(x) - [:Relationship{name:'scale of application'}]->(m) return distinct m.name"}, {"query": "I'm going to be talking to this guy in 10 sentences.", "cypher": "match (:ENTITY{name:'Chu Tianwal[spoiler: the fictional character]'}) --(m) with m order by m.name return m.name limit 10"}, {"query": "Can you tell me the names of the 10 actors?", "cypher": "match (:ENTITY{name:' actor'}) <- [:Relationship{name:' profession'}]- (q) return q.name limit 10"}, {"query": "This encyclopedia on the care of children aged 0-5 years is useful. Do you know the nationality of the author?", "cypher": "match ((:ENTITY{name:'0~5 years old Infant and toddler disease care encyclopedia'}) - [:Relationship{name:'author nationality'}]-> (n) return n.name"}, {"query": "What is the name of the original work by STELLA?", "cypher": "The name of the game is STELLA."}, {"query": "What is the size of the main screen of this GSM, CDMA2000 network mode?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "I would like to know if any of you have any links to the third tier label in Li Zhongqing?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'Lee Tsung City'}) return distinct n.name limit 4"}, {"query": "Can you tell me the first article about the camp?", "cypher": "match (:ENTITY{name:'space'}) --(n) return n.name order by n.name limit 1"}, {"query": "Remember one of the major achievements of Japan?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'nationality'}]-(n) - [:Relationship{name:'main achievements'}]->(q) return n.name order by n.name limit 1"}, {"query": "Help me find the next distribution area of the Big Dipper.", "cypher": "match (:ENTITY{name:'Dawg'}) - [:Relationship{name:'Distributed area'}]->(m) return distinct m.name"}, {"query": "Who knows what Van Yarin does for a living?", "cypher": "match (:ENTITY{name:'Fan Yalin'}) <- [:Relationship{name:'Chinese name'}]- ((p),(p) - [:Relationship{name:'profession'}]->(q) return distinct q.name"}, {"query": "Can you find 5 personal profiles of Iantsis from Greece in the 4 levels of relationships?", "cypher": "match (n:ENTITY{name:'Iantsis'}) - [*1..4]->(x) where x.name<>'Greek' return distinct x.name limit 5"}, {"query": "Can you please list the different places in Jiangsu Village and the same area, what are the labels and please list the number of labels in each location from small to large?", "cypher": "match (n:ENTITY{name:'\u6c5f\u6843\u6751'}) - [:Relationship{name:'the area'}]->(:ENTITY) <- [:Relationship{name:'the area'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, ((r.name) OR collect BY cDER"}, {"query": "Do you know the top five names in Danang province?", "cypher": "match (:ENTITY{name:'Dangdong Province'}) - [:Relationship{name:'alias'}]-> (p) with p order by p.name return p.name limit 5"}, {"query": "Do you understand the eight relationships that are included in the three-layer triad?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'three-string romance'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 8"}, {"query": "In the past, which calendar year was the year of the leopard?", "cypher": "match (:ENTITY{name:'B' year'}) <- [:Relationship{name:'Lunar calendar'}]- (x) return x.name limit 9"}, {"query": "Do you know you're my Alice?", "cypher": "match (:ENTITY{name:' you are my Alice'}) --(p) with p order by p.name return p.name"}, {"query": "I wanted to see what modern revisionist novels Cha Chao-ching has written.", "cypher": "match (p:ENTITY{name:' modern truth'}) <--(x) --> ((q:ENTITY{name:' diligence'}) return x.name"}, {"query": "In addition to his male poetry, he was given three different professions.", "cypher": "match (:ENTITY{name:'man'}) <-[:Relationship{name:'gender'}]-(x),(x) -[:Relationship{name:'profession'}]->(h) where h.name <> 'poet' return distinct h.name limit 3"}, {"query": "Check out what the rare foreign name in the past is called and where it originated.", "cypher": "match (:ENTITY{name:'Relationship{name:'foreign language name'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'work originated'}) ->(m) return m.name as name"}, {"query": "What chemical is CAS number 528-29-0?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What is the difference between a close-up and a counter-clockwise?", "cypher": "The name of the game is \"Relationship\" (Relationship) - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - [Relationship] - ["}, {"query": "Do you know how many Chinese-written works are representative?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(x),(x) - [:Relationship{name:'representative work'}]->(p) return distinct p.name limit 5"}, {"query": "I wonder who will be performing at the 2012 Goku Kin Naning Concert?", "cypher": "Match (s) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) ("}, {"query": "How to find the 5 most unlikely cat-mocking works in the 6th level of relationships?", "cypher": "match (n:ENTITY{name:'mocking cat'}) - [*1..6]->(x) where x.name <>'square' return distinct x.name limit 5"}, {"query": "The ancient tombs are also crazy and what is the shortest path to the two levels of the village?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Ancient Tombs are also crazy'}) - [:Relationship*..2]-(b:ENTITY{name:'Zodiac Legend'})) return count ((p)"}, {"query": "Which exhibitions are organized by Beijing Global Bowie International Exhibition Co., Ltd?", "cypher": "match (:ENTITY{name:'Beijing Global Bowie International Exhibition Co. Ltd'}) <- [:Relationship{name:' organizational unit'}]- (n) return n.name"}, {"query": "What can be made with pork rind and potatoes?", "cypher": "match (:ENTITY{name:' pork rind, potatoes, oatmeal'}) <- [:Relationship{name:' main ingredient'}]-(m) return distinct m.name"}, {"query": "Can you tell me who the representative of the Dream Sky Turtles is?", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}}) - (x) return x.name skip 4"}, {"query": "What is the name of the beach in the easternmost corner of Shenzhen?", "cypher": "match (:ENTITY{name:'the easternmost tip of the Shenzhen Peninsula'}) <- [:Relationship{name:'geographical location'}]- ((m) return m.name"}, {"query": "What is the shortest connection path between the two levels of the Tianjin Zhenjiang Anhui Football Club and the Tianjin Xiangyang Park Football Club?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Tangjiang Central An Football Club'}) - [*..2]-(b:ENTITY{name:'Shian An Park Football Club'})) return count ((p) The match was played at the same venue as the match."}, {"query": "Do you know of any accidents where one person died? Can you name five?", "cypher": "match (:ENTITY{name:'1 dead'}) <- [:Relationship{name:'casualty'}]- (q) return q.name limit 5"}, {"query": "The width of the car is 1695 mm, is that a brake?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What are the main departments of the National Higher Education Institution? Can I list 3 categories?", "cypher": "match (:ENTITY{name:'National Higher Education Institution'}) <- [:Relationship{name:'category'}]- ((x),(x) - [:Relationship{name:'main faculty department'}]->(q) return distinct q.name limit 3"}, {"query": "What country is Song Won-Pah-Sung an actor from?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'\u56fd\u7c4d'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'representative work'}]->(m) return m.name as name"}, {"query": "I need two copies of the summer paperback Bamboo boutique, other than Chongqing Press, please.", "cypher": "match (:ENTITY{name:'Summer ink bamboo boutique book'}) --(m) with m order by m.name where m.name <> 'Chongqing Publishing' return distinct m.name limit 2"}, {"query": "What company was founded by Matthew Prince?", "cypher": "match (:ENTITY{name:'Matthew Prince'}) <- [:Relationship{name:'founder'}]- (p) return distinct p.name"}, {"query": "What chemical has a flash point at 230\u00b0F?", "cypher": "match (:ENTITY{name:'&gt;230\u00b0F'}) <- [:Relationship{name:'flashpoint'}]- (h) return distinct h.name"}, {"query": "I would like to know about the other 8 articles published by Yellow River Water Press, the dam and the dam station on the second floor.", "cypher": "match (:ENTITY{name:' pump and pump station'}) - [*1..2]-(p) where p.name <> 'Yellow River Hydro Publishing' return distinct p.name limit 8"}, {"query": "Do you have any other information besides the organizing body? Help me find 4 information in 2 layers.", "cypher": "match (:ENTITY{name:'official road junction'}) -[*1..2]-(p) where p.name <> 'organization' return p.name limit 4"}, {"query": "Can you name a ceremony for the Olympic Games?", "cypher": "match (:ENTITY{name:'Olympic award ceremony'}) <- [:Relationship{name:'event'}]- (n) return distinct n.name"}, {"query": "Do you know three famous alumni of Tanjung Primary School?", "cypher": "Match (:ENTITY{name:'Tang's Primary School'}) - [:Relationship{name:'Known Alumni'}]-> (n) return distinct n.name limit 3"}, {"query": "Can you tell me about a movie about politics, economics, military, technology?", "cypher": "match (:ENTITY{name:'political, economic, military, scientific and technological'}) <- [:Relationship{name:'about'}]-(p) - [:Relationship{name:'film'}]->(n) return distinct n.name limit 1"}, {"query": "What companies are open in Fujairah?", "cypher": "match (p:ENTITY{location:'Fuzhou'}) return p.name"}, {"query": "What books are priced at 58 dollars? Can you help me find three?", "cypher": "match (:ENTITY{name:'58\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' book name'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Do you have any information on the names of the five people who are behind the attack?", "cypher": "match (:ENTITY{name:'\u91d1\u6cf0'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'alpha name'}]->(x) return x.name order by x.name limit 5"}, {"query": "How many lines are the shortest paths between K208 and K128 for all levels not exceeding 5?", "cypher": "match?p=allshortestpaths (((a:ENTITY{name:'step by step K208'}) - [*..5]-(b:ENTITY{name:'step by step K128'}))?return?count(p)"}, {"query": "Who are the founders of the company that was founded in August 2014?", "cypher": "match (h:ENTITY{name:'August 2014'}) <- [:Relationship{name:'time of creation'}]-(n) - [:Relationship{name:'founder'}]->(p) return distinct p.name limit 3"}, {"query": "Can you describe the three-tiered relationships that are associated with the term \"belly yellow\" for me?", "cypher": "match (n:ENTITY{name:'same as the name of the game}) - [*1..3]->(x) where x.name <> 'life term' return distinct x.name"}, {"query": "Can you tell me some nicknames for Camaro TF4?", "cypher": "match (:ENTITY{name:'Camaro TF4'}) - [:Relationship{name:' alias'}]-> (x) return x.name order by x.name"}, {"query": "What is the shortest relationship path between athlete Francois Mungo and Vila Bospislova in the 3rd level?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Fran\u00e7ois Mbongo'}) - [*..3]-(b:ENTITY{name:'Vila Bospislova'})) return count ((p) The number of paths that are returned is the number of paths that are returned."}, {"query": "Do you have any Chinese novels, can you find 10?", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Z"}, {"query": "The ZF10*42 is a wide-angle telescope with a wide-angle lens.", "cypher": "match (:ENTITY{name:'ZF10*42 type telescopic viewfinder'}) --(p) with p order by p.name return p.name"}, {"query": "Can you tell me which novels are published in Jinjiang Literary City?", "cypher": "match (:ENTITY{name:'Jingjiang City'}) <- [:Relationship{name:'connecting platform'}]- (p) return p.name limit 10"}, {"query": "Can you find me two publications published by Beijing Koh Hai Group?", "cypher": "match (:ENTITY{name:'Beijing Koh Hai Group Co. Ltd'}) <- [:Relationship{name:'publishing house'}]-(x),(x) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 2"}, {"query": "Please list the top three representative works of this person with type A blood.", "cypher": "match (:ENTITY{name:'A'}) <- [:Relationship{name:'Blood type'}]-(h) - [:Relationship{name:'represents work'}]->(n) return n.name skip 1 limit 3"}, {"query": "The Shandong University (Weihai) Chess Society has won 10 honors in addition to winning the second Shandong Provincial University Chess Championship.", "cypher": "match (m:ENTITY{name:'Santongo University ((Weihai) Association of Chess Friends, a college student society of Santongo University ((Weihai) emerged in the 21st century\u3002'}) <-[:Describe{name:'description'}]-(q),(q) -[:Relationship{name:'main award'}]->(h) where h.name <> ' Second Santongo University Chess Championship, Go group first place\u3002' return distinct h.name limit 5"}, {"query": "I would like to know who the pig in the zodiac is and what his main works are. Can you list five?", "cypher": "match (:ENTITY{name:' pig'}) <- [:Relationship{name:' zodiac sign'}]- ((n) - [:Relationship{name:' main work'}]->(x) return n.name,x.name skip 1 limit 5"}, {"query": "Can you name the main departments of the Royal Military College of Sunchester?", "cypher": "match (:ENTITY{name:'Sunchester Royal Military College'}) <- [:Relationship{name:'Chinese name'}]-(q),(q) - [:Relationship{name:'main faculty'}]->(n) return n.name order by n.name limit 1"}, {"query": "I'm curious if any of the authors born on August 28, 1993 have a great work?", "cypher": "match (:ENTITY{name:'August 28, 1993)) <- [:Relationship{name:'date of birth'}]-(n),(n) - [:Relationship{name:'represents work'}]->(h) return distinct n.name"}, {"query": "The school in Guangzhou, which won the 2008 China Beauty Top 10 Gold Medal Makeup School, will introduce another award.", "cypher": "match (:ENTITY{name:'China Guangzhou'}) <- [:Relationship{name:'area'}]-(n) - [:Relationship{name:'main award'}]->(m) where m.name <> '2008 China-America top ten gold medalist makeup school' return distinct m.name limit 1"}, {"query": "Do you know who is the current secretary of the Board of Directors of the Institute of Accountancy?", "cypher": "match (:ENTITY{name:' current secretary of the departmental committee of the Institute of Accountancy...'}) <--(n) return n.name"}, {"query": "Check out the 5 pieces of information about the Ryu-Zen mythology in the article below.", "cypher": "match (n:ENTITY{name:' small over the square'}) - [*]->(x) where x.name <> '' return distinct x.name limit 5"}, {"query": "Can you find me two doctors from the first people's hospital in Sundar and tell me their job title?", "cypher": "match (:ENTITY{name:'Sundem I People's Hospital'}) <- [:Relationship{name:'Hospital'}]-(h),(h) - [:Relationship{name:'official title'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Can you help me find three literary people, a poet, a writer and her school?", "cypher": "match (:ENTITY{name:' literature  poet  writer'}) <- [:Relationship{name:' profession'}]-(h),(h) - [:Relationship{name:' graduate school'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Can you find the five professional attributes of men?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(h),(h) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 5"}, {"query": "The 2012 China International Web Printing Industry Expo in Shenzhen, which approval unit can you find?", "cypher": "match ((:ENTITY{name:'2012 China [Shenzhen] International Internet Printing Industry Exhibition'}) - [:Relationship{name:' Approved Unit'}]-> (h) return h.name"}, {"query": "Can you give me five links to this person Laoufi in the 2nd level of relationships?", "cypher": "The following is a list of all the different ways Laoufi is credited in the database:"}, {"query": "Do you know what the work of Shannepyeong is?", "cypher": "match (:ENTITY{name:'\u5c71\u5185 \u862d\u300f\u3084\u307e\u3046\u3061 \u3059\u305a\u3089\u3093, born December 8, 1994) is a member of the Japanese idol girl group SKE48 Team s."}, {"query": "Can you tell me what a profession is for a Liang Wen Zhen?", "cypher": "match (:ENTITY{name:'Liang Wenling'}) <- [:Relationship{name:'Chinese name'}]-(n) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 1"}, {"query": "I'm wondering which companies are headquartered in Beijing? Can you tell me 19?", "cypher": "match (:ENTITY{name:'Beijing'}) <- [:Relationship{name:'Hall of Residence'}]- (n) return n.name limit 19"}, {"query": "Susie Susira What kind of jobs did this person have? Name three.", "cypher": "match (:ENTITY{name:'Susie Susira'}) - [:Relationship{name:'profession'}]-> (n) with n order by n.name return n.name limit 3"}, {"query": "I would like to know what are the main ingredients of the Leche Crown Pound cake besides egg yolk and sour cream?", "cypher": "match (n:ENTITY{name:'Legume crown mold pound cake'}) - [:Relationship{name:'main ingredient'}]->(h) where h.name <> 'egg yolk' and h.name <> 'sour cream' return distinct h.name limit 2"}, {"query": "What else do you know about the thermal design quick reference manual for electronic equipment, other than that published by the Electronic Industry Publishing House?", "cypher": "match (:ENTITY{name:' Electronic device thermal design quick search manual'}) - [*1..3]-(p) where p.name <> 'electronic industry publisher' return distinct p.name limit 6"}, {"query": "What is the name of the Korean dish made with pork tenderloin?", "cypher": "match (:ENTITY{name:'Korea'}) <- [:Relationship{name:'category'}]-(m), (m) - [:Relationship{name:'main ingredient'}]->(n) where n.name='pig five-sided flowery' return distinct m.name"}, {"query": "What is the name of the new TV series directed by Zhu Jian, starring Mak Chul-shan and Chen Daoming?", "cypher": "match (:ENTITY{name:'Ma Kisan, Chen Daoming, Lee Hye, Yellow Sea Ice, Guo Jinglin, Ho Sei Fei, Lin Sheng, Liu Jun, Liu Chunje, Fuan Shu'}) <-[:Relationship{name:'starring'}]-(m), (m) -[:Relationship{name:'director'}]->(n) where n.name='Ju Jian New, Zhou Zhou' return distinct m.name"}, {"query": "The following is a list of the top 10 most popular Chinese political figures in the world:", "cypher": "match (n:ENTITY{name:'\u5cb3\u58eb\u660e'}) - [*1..4]->(x) where x.name <> 'political figure' return distinct x.name"}, {"query": "Can anyone tell me what kind of jobs he has in the past?", "cypher": "match (:ENTITY{name:'Zhang Longwan'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 3"}, {"query": "Where is the location of the Shanghai IoT Technology and Applications Expo 2011 that was reportedly held?", "cypher": "match ((m:ENTITY{name:'2011 Shanghai IoT Technology and Applications Exhibition'}) - [:Relationship{name:' Location'}]-> (n) return n.name"}, {"query": "What is the origin of the name Apple Cider Vinegar?", "cypher": "Match (:ENTITY{name:'Apple clam beef slices'}) - [:Relationship{name:'category'}]->(m) return distinct m.name"}, {"query": "What do you know about the alias of Enrikon?", "cypher": "Match (:ENTITY{name:'Relationship{name:'alias'}]-> (p) return p.name skip 4"}, {"query": "Do you know how much hydrogen is in the 1Cr5Mo oil-cracking tube used by the plant?", "cypher": "match ((:ENTITY{name:'1Cr5Mo oil shale pipeline'}) - [:Relationship{name:'nitrogen content'}]-> (x) return x.name"}, {"query": "Can you tell me what else is related to the second tier of the oil palm sub-family?", "cypher": "Match (n) <- [Relationship*2{name:'subspecies'}]- ((p:ENTITY{name:'subspecies'}) RETURN distinct n.name"}, {"query": "What is the chemical formula of C25H30N3-Cl?", "cypher": "match (:ENTITY{name:'C25H30N3-Cl'}) <- [:Relationship{name:'molecular'}]-(m) return distinct m.name"}, {"query": "Can you recommend two songs in Mandarin for me?", "cypher": "match (:ENTITY{name:'Mandarin'}) <- [:Relationship{name:'Language of the song'}]- (q) return q.name limit 2"}, {"query": "I can't find the chemical formula for 4-amino-1-cholesterol-hydroxyacetate, can you tell me?", "cypher": "match ((x:ENTITY{name:'4-amino-1-cholesterol-oxygen-based chlorophyll salts'}) - [:Relationship{name:'chemical formula'}]-> (q) return q.name"}, {"query": "The two-tiered relationship between the sweet and salty water and the East Asian pickled vegetables?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'sweet to sweet to sweet' return distinct x.name"}, {"query": "How many A-level sites are there in Sofia Cathedral?", "cypher": "match (:ENTITY{name:'Sofia Church [Harbin Architecture and Art Museum]'}) - [:Relationship{name:'Sightseeing level'}]->(n) return n.name as name union all match (:ENTITY{name:'Sofia Church [Harbin Architecture and Art Museum]'}) - [:Relationship{name:'Ticket price'}]->(m) return m.name as name"}, {"query": "Please tell me what the name of the exhibition that will be held in March 2012 in other countries?", "cypher": "match (:ENTITY{name:'March 2012'}) <- [:Relationship{name:' Exhibition time'}]- (m) return m.name"}, {"query": "Which law firms and Beijing Hengto Law Firm are under the jurisdiction of a competent judicial authority, and what are their respective labels?", "cypher": "match (n:ENTITY{name:'Beijing Hengto Law Firm'}) - [:Relationship{name:'Department of Justice'}]->(:ENTITY) <-[:Relationship{name:'Department of Justice'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC "}, {"query": "When was the start of the multi-cloud company?", "cypher": "match (p:ENTITY{name:'multi-cloud company'}) return p.time"}, {"query": "Do you know what kind of accident happened on October 3, 2010?", "cypher": "match (:ENTITY{name:'October 3, 2010'}) <- [:Relationship{name:' time of occurrence'}]- (q) return q.name"}, {"query": "Did you know that yoga is a million-person game?", "cypher": "match (:ENTITY{name:'Million people's game'}) --(q) with q order by q.name return q.name limit 10"}, {"query": "Share your story about the award.", "cypher": "match (n:ENTITY{name:'s) --(m) return m.name skip 5"}, {"query": "Please tell me what company is this in Beijing, Beijing, Beijing, Beijing, Shanghai, Shanghai, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, Beijing, and other places.", "cypher": "match (:ENTITY{name:'4th floor of B6 Road, North East, Beijing, in the Beijing area of the Daegu District)"}, {"query": "What is the shortest path between the two layers of the relationship you want and the one you want from your heart?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'You want it for'}) - [*..2]-(b:ENTITY{name:'You want it from [Chinese pronunciation]'})) return count ((p))"}, {"query": "The first three labels describe the Type 03 automatic rifle in the automatic long-barreled rifle?", "cypher": "match (:ENTITY{name:'03 type automatic rifle]'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 3"}, {"query": "The children of the school are being taught to be kind and to be kind.", "cypher": "match (:ENTITY{name:'Kindergarten'}) --(n) return n.name skip 2 This is a list of all the different ways Kindergarten is credited in the database."}, {"query": "The three mercury-white streak viruses are given nicknames, but be careful not to mention silver streak or silver virus disease.", "cypher": "match (:ENTITY{name:'Mercury virus'}) <- [:Relationship{name:'Chinese name of the pathogen'}]-(m) - [:Relationship{name:'alias'}]->(h) where h.name <> 'Silver stripe or silver virus disease' return distinct h.name limit 3"}, {"query": "Can you help me check the magnitude of the earthquake in Jiangsu?", "cypher": "match ((n:ENTITY{name:'1\u00b71 Jiangsu Xinjiang Lake earthquake'}) - [:Relationship{name:'seismic grade'}]-> (x) return x.name"}, {"query": "I want to know what is the relationship between the two layers of the work of Zhou Zhou's Dong Lianmen?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'showdown' return distinct x.name"}, {"query": "Do you know what kind of relationships are involved in the three levels of Guangdong's Shaanmei Street?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' Guangdong Shaanmei Street'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What are the locations in Li Yuanmu and the area of Li Tai City? What are the labels for each location? Please list the labels in order from small to large by number of points.", "cypher": "match (n:ENTITY{name:'Li Yuan\u6751'}) - [:Relationship{name:'the area'}]->(:ENTITY) <-[:Relationship{name:'the area'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "What are the three representative works of Jean-Pierre Danney?", "cypher": "match (:ENTITY{name:'Jean-Pierre-Danie'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'represents work'}]->(x) return distinct x.name limit 3"}, {"query": "Please tell me the name of the exhibition that you are participating in from October 27 to 29, 2015.", "cypher": "match (:ENTITY{name:'October 27, 2015-29th'}) <- [:Relationship{name:'attendance time'}]- (n) return distinct n.name"}, {"query": "Do you know which tournament is being held in Basel?", "cypher": "match (:ENTITY{name:'Basel'}) <- [:Relationship{name:'Running city'}]- (m) return distinct m.name"}, {"query": "What are the works of the national publishers? When are they published? Can you tell me five lines?", "cypher": "match (:ENTITY{name:'national publisher'}) <- [:Relationship{name:'publisher'}]-(h),(h) - [:Relationship{name:'publication time'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "What information do you know about the two-tier relationship between Southwest Agricultural University and other universities outside Chongqing?", "cypher": "match (:ENTITY{name:'Southwest Agricultural University'}) - [*1..2]->(p) where p.name <> 'Chongqing city' return distinct p.name limit 10"}, {"query": "What is the category of pork chops and what ingredients are needed?", "cypher": "match (:ENTITY{name:'chicken pork'}) - [:Relationship{name:'category'}]->(n) return n.name as name union all match (:ENTITY{name:'chicken pork'}) - [:Relationship{name:'main ingredient'}]->(m) return m.name as name"}, {"query": "List the relationship between the two layers of the book called China Packaging Yearbook 1993?", "cypher": "match (n:ENTITY{name:'China Packaging Yearbook 1993'}) - [:Relationship*1..2]->(x) where x.name <>'China Packaging Yearbook 1993' return distinct x.name"}, {"query": "The doctor's office is located in the city of San Francisco, California.", "cypher": "match (:ENTITY{name:''}) -[:Relationship*1..3]-(p) where p.name <> 'doctor' return p.name limit 7"}, {"query": "Do you have the label information of the two Chinese Meteorological Service Associations, but not the organizing and scientific research organizations?", "cypher": "match (n:ENTITY{name:'China Meteorological Service Association'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'organizing agency' and h.name <> 'scientific research agency' return distinct h.name limit 2"}, {"query": "Do you know what kind of events the Ministry of Publicity, the Press Office, the Press Association and the Women's Union have organized?", "cypher": "match (:ENTITY{name:'propaganda ministry, media outlet, media union, women's union'}) <- [:Relationship{name:'organizing unit'}]- (q) return distinct q.name"}, {"query": "What is the shortest path between the two floors of the village of Longtai and the village of Bamboo Mountain?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Relationship*..2]-(b:ENTITY{name:'Bamboo Mountain Village'})) return count ((p)"}, {"query": "Does anyone know what Hal Needham does for a living?", "cypher": "match (:ENTITY{name:'Hal Needham'}) <- [:Relationship{name:'foreign language name'}]-(m),(m) - [:Relationship{name:'profession'}]->(p) return distinct p.name"}, {"query": "Where can I find the Ericsson Company?", "cypher": "match (p:ENTITY{name:' Achebe Corporation'}) return p.location The name of the company is a reference to the name of the company."}, {"query": "Can you find the 10 species of shrimp in the family?", "cypher": "match (:ENTITY{name:'seagull family Nephropidae'}) <- [*]-(m), (m) - [:Relationship{name:' distribution area'}]->(n) return distinct m.name,n.name limit 10"}, {"query": "What is the nationality of Yang Pao Rong? What is his nationality? Where was he born?", "cypher": "Match (:ENTITY{name:'Relationship{name:'nationality'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'ethnicity'}) ->(m) return m.name as name union all match (:ENTITY{name:'Relationship{name:'birthplace'}) ->(r) return r.name as name"}, {"query": "What other career can Jiangsu Nantung people do if they don't want to be entrepreneurs?", "cypher": "match (:ENTITY{name:'Jiangsu Nantoung'}) <- [:Relationship{name:'birthplace'}]-(m) - [:Relationship{name:'profession'}]->(x) where x.name <> 'entrepreneur' return distinct x.name limit 1"}, {"query": "Do you have any information about the novel 3 and the third level of the label?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'cloudsword and evil knife'}) return distinct n.name limit 3"}, {"query": "I would like to know what are the main achievements of Cao Lei Yu, can you list three?", "cypher": "match (:ENTITY{name:' Cao\u4e50\u4f59'}) <- [:Relationship{name:' Chinese name'}]-(m),(m) - [:Relationship{name:' major achievements'}]->(n) return distinct n.name limit 3"}, {"query": "What is the name of the company Beijing Co-Germany Technology Limited?", "cypher": "match (q:ENTITY{name:'Beijing and Germany Technology Co. Ltd'}) - [:Relationship{name:' abbreviated '}]-> (x) return distinct x.name"}, {"query": "The following is a list of the three levels of relationship in the work of the artist.", "cypher": "match (n:ENTITY{name:' and \u5143\u660e\u96ea\u4e2d\u89c1\u793c'}) - [:Relationship*1..2]->(x) where x.name <> '' return distinct x.name"}, {"query": "Can you tell me which teams this player born on April 13, 1987 has played for?", "cypher": "match (:ENTITY{name:'1987-04-13'}) <- [:Relationship{name:'date of birth'}]- ((q) - [:Relationship{name:'former team'}]->(h) return h.name order by h.name limit 3"}, {"query": "Do you know what the Beatles' original songs are?", "cypher": "Match (:ENTITY{name:'The Beatles'}) <- [Relationship{name:'The song was originally performed by The Beatles'}]- (n) return distinct n.name"}, {"query": "Find out where the six Chinese restaurants are located.", "cypher": "match (:ENTITY{name:'Chinese restaurant'}) <- [*]-(m), (m) - [:Relationship{name:'address'}]->(n) return m.name, n.name limit 6"}, {"query": "Can you name five facts about British athlete Watkins Murray?", "cypher": "match (n:ENTITY{name:'Wotkins Murray'}) - [*]->(x) where x.name <>'Wotkins Murray, English footballer\u3002' return distinct x.name limit 5"}, {"query": "What are the two labels of Roberto Santa Maria besides football and sports?", "cypher": "match (n:ENTITY{name:'Roberto Santa Maria'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'football' and h.name <> 'sports' return distinct h.name limit 2"}, {"query": "What is the plant Phoebebournei (Hemsl.) Yang?", "cypher": "match (:ENTITY{name:'Phoebebournei ((Hemsl.) Yang'}) --(x) return distinct x.name"}, {"query": "Can you name a show in the tech category?", "cypher": "match (:ENTITY{name:'technology'}) <- [:Relationship{name:'exhibition category'}]- (x) return distinct x.name"}, {"query": "Can you tell me what kind of relationships the Little White Rats novel covers in the three layers?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' experimental white rat'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "I want to tell you some news about HB.", "cypher": "match (:ENTITY{name:'HB'}) --(p) return p.name skip 3 is not possible"}, {"query": "Do you have a five-line rhyme for the morning? Help me find ten.", "cypher": "match (:ENTITY{name:'\u671d'}) <- [:Relationship{name:'creation year'}]- (mn) - [:Relationship{name:'literary genre'}]->(n:ENTITY{name:'five-word string'}) return mn.name limit 10"}, {"query": "When did the bombs become popular?", "cypher": "match (n:ENTITY{name:' explosion head [hair type]'}) - [:Relationship{name:' pop era'}]-> (h) return h.name"}, {"query": "Can you list 11 companies that were photographed on July 08, 2016?", "cypher": "match (q:ENTITY{name:'08 July 2016'}) <- [:Relationship{name:'Shot time'}]- (m) return m.name limit 11"}, {"query": "Where are the people of Seri Shikoku and what are their main achievements?", "cypher": "match (:ENTITY{name:'Serious'}) - [:Relationship{name:'Born'}]->(n) return n.name as name union all match (:ENTITY{name:'Serious'}) - [:Relationship{name:'Major achievement'}]->(m) return m.name as name"}, {"query": "List the other three-day properties besides the natural ones?", "cypher": "match (:ENTITY{name:'(S) -(-)-4-\u53d4\u4e01\u57fa-2-\u6076'}) --(h) with h order by h.name where h.name <> 'natural' return h.name limit 3"}, {"query": "I'm not sure if this is a good idea, but I'm not sure if it's a good idea to write a motorcycle skill contest as a label other than entertainment.", "cypher": "match (:ENTITY{name:'Motorcycle skill contest'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'entertainment work' return p.name limit 1"}, {"query": "I would like to ask what is the EINECS registration number for 2-hydroxybutyric acid?", "cypher": "match ((n:ENTITY{name:'2-ethylkethionine'}) - [:Relationship{name:'EINECS log-in number'}]-> (p) return p.name"}, {"query": "Please name some of the major awards that have been given to works in the White language.", "cypher": "match (m:ENTITY{name:'hello'}) <- [:Relationship{name:'for white language'}]- ((q),(q) - [:Relationship{name:'main prize'}]->(h) return h.name skip 3 limit 10"}, {"query": "Tell me the story of 100 boys?", "cypher": "match (x:ENTITY{name:'The Story of 100 Boys'}) --(m) with m order by m.name return m.name"}, {"query": "I'm not sure if you can help me with the geological data of the various companies.", "cypher": "match (p:ENTITY{name:'square company'}) return p.location"}, {"query": "What is the full name of Han Yasan Teachers' College?", "cypher": "match (:ENTITY{name:'Khan Yasan Teacher's College'}) <- [:Relationship{name:' short form'}]- ((h) return h.name"}, {"query": "Can you find me a song sung by Hu Yanqiang?", "cypher": "match (:ENTITY{name:'\u80e1\u5f66'}) <- [:Relationship{name:' original song'}]-(x),(x) - [:Relationship{name:' Chinese name'}]->(q) return distinct q.name limit 1"}, {"query": "Can you list five of the most representative works by Chinese writers?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(m),(m) - [:Relationship{name:'representative work'}]->(n) return distinct n.name limit 5"}, {"query": "What is the nickname of the people who graduated from the Institute of Performing Arts?", "cypher": "match (:ENTITY{name:'Acting Institute'}) <- [:Relationship{name:'Graduate School'}]-(m),(m) - [:Relationship{name:'alias'}]->(x) return distinct x.name"}, {"query": "Please tell me about some of Alison Martin's most representative works.", "cypher": "match (:ENTITY{name:'Alison Martin'}) - [:Relationship{name:'representing work'}]-> (m) return distinct m.name"}, {"query": "I'm looking for three pieces of artwork for a 85kg man.", "cypher": "match (:ENTITY{name:'85 kg'}) <- [:Relationship{name:'weight'}]-(h),(h) - [:Relationship{name:'main work'}]->(q) return h.name order by q.name limit 3"}, {"query": "Which country was the host of the 2008 Olympic women's volleyball tournament?", "cypher": "match ((:ENTITY{name:'2008 Olympic women's volleyball tournament'}) - [:Relationship{name:'hostess'}]-> (n) return n.name"}, {"query": "I would like to ask who are the members of the prosecution committee?", "cypher": "match (:ENTITY{name:'the member of the audit committee'}) --(q) return q.name skip 1"}, {"query": "Help me find an astronomer from the North Pole.", "cypher": "match (:ENTITY{name:'Northern Eagle'}) <- [:Relationship{name:'date of birth'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='astronomer' return distinct m.name"}, {"query": "Can you tell me which games have a level 3 label relationship with the six games of intelligence?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'wisdom game'}) return distinct n.name limit 6"}, {"query": "Can you tell me if anyone has a representative piece called Taste the Feeling?", "cypher": "match (:ENTITY{name:'Taste the Feeling'}) <- [:Relationship{name:'represents the work'}]- (m) return distinct m.name"}, {"query": "What is the main use of mangoes?", "cypher": "match (:ENTITY{name:'Apple'}) - [:Relationship{name:'main use'}]->(m) return distinct m.name"}, {"query": "The project is a collaboration between the two authors, who have been working on the project since the beginning of the year.", "cypher": "match (n:ENTITY{name:'self-attributed minor'}) - [:Relationship*1..3]->(x) where x.name<>'literary work' return distinct x.name"}, {"query": "What chemical is CAS number 75-68-3?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Which song was composed by YUICHI HAMAMATSU?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "I would like to know what kind of job is offered to people who have been a marshal and a warlord?", "cypher": "match (:ENTITY{name:'marshal'}) <- [:Relationship{name:'marshal'}]- ((h) - [:Relationship{name:'profession'}]->(p) return distinct p.name"}, {"query": "What is the longest description of the Golden Bell?", "cypher": "match (:ENTITY{name:'golden bell'}) --(q) return max ((q.name) is the name of the game"}, {"query": "Do you remember who won the 2008 China Red Song Contest?", "cypher": "Match (s) (m) return m.name (s) (m) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s) (s)"}, {"query": "The lead actress of the boy who lies and the girl who is broken, who is the voice of the housewife?", "cypher": "match (:ENTITY{name:'\u5fa1\u5712\u9ebb\u7531, the girl who lied to the boy who broke up with the girl who broke up with the girl who broke up with the girl who broke up with the girl who lied to the boy who broke up with the girl who broke up with the girl who broke up with the girl who broke up with the girl who broke up with the boy who lied.\u202c'}) <- [:Describe{name:'describe'}]-(q) - [:Relationship{name:'sounding'}]->(x) return distinct q.name"}, {"query": "What are the names of the people who graduated from the same university as Wang Zi? What are the labels of these people? Please list them in order of their number of labels from small to large.", "cypher": "match (n:ENTITY{name:'\u6cfd\u699c'}) - [:Relationship{name:'graduate school'}]->(:ENTITY) <- [:Relationship{name:'graduate school'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Check out the two most representative works of Jam Meng Yixun, but can you do anything other than the Gang Chun 22 and Gang Chun 23?", "cypher": "match (n:ENTITY{name:'Meng Yashi'}) - [:Relationship{name:'representative work'}]->(h) where h.name <> 'Kan Chun 22' and h.name <> 'Kan Chun 23' return distinct h.name limit 2"}, {"query": "The 2011 China Energy Efficiency Emissions Reduction Development Report has been published, do you know the exact date of publication?", "cypher": "match ((:ENTITY{name:'2011 China Energy Saving and Emission Reduction Development Report'}) - [:Relationship{name:' time of publication'}]-> (p) return p.name"}, {"query": "Can you tell me about the 10 books printed on 2010-01-01?", "cypher": "match (:ENTITY{name:'2010-01-01'}) <- [:Relationship{name:'print time'}]- (n) return n.name limit 10"}, {"query": "Do you know what kind of games are held in Chengdu, China?", "cypher": "match (:ENTITY{name:'Chenzhen, China'}) <- [:Relationship{name:'location'}]- (x) return distinct x.name"}, {"query": "Who are the three notable alumni of the school founded in 1948?", "cypher": "match (:ENTITY{name:'1948'}) <- [:Relationship{name:'time of founding'}]-(h),(h) - [:Relationship{name:'known alumni'}]->(n) return distinct n.name limit 3"}, {"query": "The 154 is a representative work of whom?", "cypher": "match (:ENTITY{name:'Figure 154 aircraft'}) <- [:Relationship{name:'represented works'}]- (p) return p.name order by p.name"}, {"query": "What are the benefits of a career in the oil industry?", "cypher": "match (:ENTITY{name:'Beyond the Sea'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'Career'}]->(n) return distinct n.name"}, {"query": "Help me find two thin meat dishes.", "cypher": "match (:ENTITY{name:' lean meat'}) <- [:Relationship{name:' main ingredient'}]-(m) return distinct m.name limit 2"}, {"query": "Can you identify the problems and difficulties of deforestation and the increase in harvests for farmers?", "cypher": "match (x:ENTITY{name:'return to cultivation and to grassland and to farmers' crops'}),(x) - [:Relationship{name:'problem'}]-> (m), (x) - [:Relationship{name:'difficulty'}]->(n) return m.name,n.name"}, {"query": "I'm not sure if I'm a good person or not.", "cypher": "match (:ENTITY{name:'16 years old thought'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Remember the 1994 Taiwan Strait earthquake, it was so terrible, do you know how big it was?", "cypher": "match ((:ENTITY{name:'1994 Taiwan Strait earthquake'}) - [:Relationship{name:'seismic grade'}]-> (h) return h.name"}, {"query": "Can you list the five Chinese people Xu Chunming has five levels of personal relationships with?", "cypher": "match (n:ENTITY{name:'XuanZhi'}) - [*1..5]->(x) where x.name<>'China' return distinct x.name limit 5"}, {"query": "The famous person who taught you to write a cookbook 3 layers of relationships?", "cypher": "match (n:ENTITY{name:'specification of writing to post descriptions; celebrity taught you to write cookbooks'}) - [*1..3]->(x) where x.name<>'20 pages' return distinct x.name"}, {"query": "What does the water of the tribute taste like when it is cooked?", "cypher": "match (:ENTITY{name:'Relationship{name:'taste'}]->(m) return distinct m.name"}, {"query": "The first is the one that is a representative work of water in the beginning of the game, tell me, don't be a ghost face, the channel of the ghost face, the wife and mother when love is in the game, can they both?", "cypher": "match (n:ENTITY{name:'Relationship{name:'representative work'}]->(h) where h.name <> 'The channel wife of the demon-faced culprit' and h.name <> '\u5f53\u7231\u5df2\u7ecf\u5165\u620f' return distinct h.name limit 1"}, {"query": "Do you know what year the company was founded?", "cypher": "match ((:ENTITY{name:'reachable'}) - [:Relationship{name:'established time'}]-> (n) return n.name order by n.name"}, {"query": "What is the representative work of ????", "cypher": "match (x:ENTITY{name:'???'}) <- [:Relationship{name:' foreign language name'}]- ((q),(q) - [:Relationship{name:' representing work'}]->(p) return distinct p.name"}, {"query": "Do you know where Casir was born?", "cypher": "match (:ENTITY{name:'Casil'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'birthplace'}]->(n) return distinct n.name"}, {"query": "The 2011 Yangzhou Yue Nanjing Concert is about to start, I'm so excited, do you know when it's going to be?", "cypher": "The song was released on the album of the same name on November 8, 2011."}, {"query": "Can you list the personal information of Zhang Ziyi Sipeng, a Chinese national, in the two levels of his relationship?", "cypher": "match (n:ENTITY{name:'Zhang Shih-Sipeng'}) - [*1..2]->(x) where x.name <> 'China' return distinct x.name"}, {"query": "I'm going to give you five Korean actors to name their representative works.", "cypher": "match (:ENTITY{name:'Korean actor'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'representing work'}]->(n) return m.name,n.name limit 5"}, {"query": "1+1 hip fracture is a symptom of a disease, what other labels are there, to name 10?", "cypher": "match (:ENTITY{name:'1+1\u8170\u7a81\u5802'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> ' disease symptoms' return n.name limit 10"}, {"query": "Do you know of any novels that have a single-page volume of six volumes?", "cypher": "match (:ENTITY{name:'6\u5377'}) <- [:Relationship{name:'single-line book number'}]- (x) return x.name limit 8"}, {"query": "I heard that 10088 is a culture, do you know anything about him in other directions?", "cypher": "match (:ENTITY{name:'10088'}) --(q) with q order by q.name where q.name <> 'culture' return q.name"}, {"query": "What is the shortest path between the three levels of the new Zhu Men Ryu and the evil Grand Master?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'new Ju-men rant'}) - [*..3]-(b:ENTITY{name:'the evil wizard'})) return count ((p)"}, {"query": "What is the latest book you have seen, The Angel's Parrot, which book category does it belong to?", "cypher": "Match ((:ENTITY{name:'Relationship{name:'novel category'}}) -> (h) return h.name"}, {"query": "What is the name of the language that comes out of the tunnel and says that it is killing like a beast?", "cypher": "match (:ENTITY{name:'like a beast'}) <-[:Relationship{name:'explained'}]-(m), (m) -[:Relationship{name:'from where'}]->(n) where n.name='tunnel difficulty' return distinct m.name limit 1"}, {"query": "What is the name of the dish made from chicken breast and pork soap?", "cypher": "match (:ENTITY{name:'Sandwich, pork soap'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='sandwich' return distinct m.name"}, {"query": "Can you recommend a platform that supports multiplayer games?", "cypher": "match (:ENTITY{name:'many people'}) <- [:Relationship{name:'number of players'}]- ((x) - [:Relationship{name:'game platform'}]->(p) return distinct p.name limit 1"}, {"query": "Can you tell us about the two most representative works of Italy besides the Yoga Health Reactors and the Yoga Gift Yoga?", "cypher": "match (n:ENTITY{name:'Thailand'}) - [:Relationship{name:'representing work'}]->(h) where h.name <> 'reactive mother' and h.name <> 'reactive mother' return distinct h.name limit 2"}, {"query": "I would like to know what happened to the 11/22 South Fuzhou shutdown, can you tell me?", "cypher": "match ((:ENTITY{name:'11\u00b722 South Charleston closure case'}) - [:Relationship{name:'cause of occurrence'}]-> (h) return h.name"}, {"query": "The article also highlights the importance of Chinese language education for foreigners.", "cypher": "match (n:ENTITY{name:'foreigners learning Chinese'}) - [:Relationship*1..2]->(x) where x.name<>'artwork' return distinct x.name"}, {"query": "What else do you know about Harald V besides that he was born in Norway?", "cypher": "match (:ENTITY{name:'Harald V'}) - [:Relationship*1..2]-(p) where p.name <> 'Norway' return p.name limit 10"}, {"query": "Can you tell me what the GDP per capita of the city where the Taipei City Government is located is?", "cypher": "match (:ENTITY{name:'Taipei City'}) <- [:Relationship{name:'Government residence'}]-(p),(p) - [:Relationship{name:'GDP'}->(m) return m.name order by m.name limit 3"}, {"query": "Can you give me one information about the San Miguel High School besides the organization?", "cypher": "match (:ENTITY{name:'I like Saint-Sylvestre'}) --(m) with m order by m.name where m.name <> 'organization' return distinct m.name limit 1"}, {"query": "The chipset is based on the AMD 790GX, which is the first in a series of five chipsets.", "cypher": "match (x:ENTITY{name:'AMD'}) <- [:Relationship{name:'chip manufacturer'}]-(p) - [:Relationship{name:'main chipset'}]->(h) where h.name <> 'AMD 790GX' return distinct h.name limit 5"}, {"query": "Besides being a public secondary school, can you tell me about the six things you know about the second level of the Gujarat Central High School?", "cypher": "match (:ENTITY{name:'\u6210\u90fd\u5e02\u901a\u9526\u4e2d\u5b66'}) - [:Relationship*1..2]->(p) where p.name <> 'public secondary school' return p.name limit 6"}, {"query": "The first is that the political figures who give gifts to the people of Akisama are people who are in the two-tier relationship.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'political figure' return distinct x.name"}, {"query": "The following is a summary of the Dolphin Publishing House's English diary: Primary English Writing Guide for Primary School Students with no less than 3 layers of relationship material.", "cypher": "match (n:ENTITY{name:'Easy English diary: Primary English writing guide'}) - [:Relationship*1..2]->(x) where x.name<>'Dolphin Publishing' return distinct x.name"}, {"query": "What is the difference between the adjective and the adverb for a group and a mood?", "cypher": "match (:ENTITY{name:' a group and a mood [Chinese pronunciation]'}) - [:Relationship{name:' a close-up'}]->(n) return n.name as name union all match (:ENTITY{name:' a group and a mood [Chinese pronunciation]'}) - [:Relationship{name:' a close-up'}]->(m) return m.name as name"}, {"query": "I need five personal profiles of Nocchintini Zambrotta in no less than five levels of relationships?", "cypher": "match (n:ENTITY{name:'Nochintini Zambrotta'}) - [*1..5]->(x) where x.name<>'Nochintini Zambrotta' return distinct x.name limit 5"}, {"query": "1-2 years old - What are the top five attributes of early childhood intelligence upgrading training?", "cypher": "match (:ENTITY{name:'1-2 years - early childhood intelligence upgrading training'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 5"}, {"query": "I would like to ask you what is Lu Yexiang's main achievement?", "cypher": "match (:ENTITY{name:'Lu Yexiang'}) <- [:Relationship{name:'foreign language name'}]-(n),(n) - [:Relationship{name:'main achievement'}]->(h) return distinct h.name limit 3"}, {"query": "I recommend 10 songs similar to my boy in Korean language.", "cypher": "match (:ENTITY{name:'North Korean'}) <- [:Relationship{name:'ethnicity'}]-(h),(h) - [:Relationship{name:'representative work'}]->(x) where x.name <> 'my boy' return distinct x.name limit 10"}, {"query": "Besides culture, what other two labels does Wang Yujun have?", "cypher": "match (:ENTITY{name:'\u7384\u6b66\u771f\u541b'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'culture' return p.name limit 2"}, {"query": "Do you know what the lessons are at Xing An Lu Elementary School?", "cypher": "match (:ENTITY{name:'Hing An Road Primary School is located at 12 Rongji Avenue, Peace Zone, Tianjin City, with 45 full-time teachers and 343 students, a school area of 3100 square meters, a building area of 6500 square meters\u3002'}) <-[:Describe{name description:''}]-(m),(m) -[:Relationship{name:'curriculum'}]->(x) return distinct x.name limit 1"}, {"query": "What are the names of the six animals in the family of the crocodile?", "cypher": "match (:ENTITY{name:'subclass'}) <- [*]-(m), (m) - [:Relationship{name:'other name'}]->(n) return m.name, n.name limit 6"}, {"query": "Check out the content related to the four levels of relationship of this guy Ndayishimiye Jean Luc?", "cypher": "match (n:ENTITY{name:'Ndayishimiye Jean Luc'}) - [*1..4]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "Can you describe the three dishes that are in the second tier of Chinese food?", "cypher": "The following is a list of the most commonly used names in the world:"}, {"query": "Where are the polar bears mainly distributed?", "cypher": "match (:ENTITY{name:' small bear [animal: small bear]'}) - [:Relationship{name:' distribution area'}]-> (m) return distinct m.name"}, {"query": "The song is about the death of a child, and the death of a child.", "cypher": "match (:ENTITY{name:' depending on torture'}) --(p) return p.name order by p.name limit 1"}, {"query": "I'm going to take you to the next meeting of the J. Grierson Project.", "cypher": "match (p:ENTITY{name:'Grilson, J\u00b7'}) - [:Relationship{name:'profession'}]-> (n) return n.name order by n.name"}, {"query": "Do you know what meetings were held on October 19-21, 2014?", "cypher": "match (:ENTITY{name:'October 19, 2014-21'}) <- [:Relationship{name:' held date'}]- (n) return distinct n.name"}, {"query": "I want to ask, whose work is the unnatural death?", "cypher": "match (:ENTITY{name:'natural death'}) <- [:Relationship{name:'representative work'}]- (q) return q.name order by q.name"}, {"query": "Help me find two East Han generals.", "cypher": "match (:ENTITY{name:'Tochang'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='Wohrang' return distinct m.name limit 2"}, {"query": "The Swedish government has announced that the Swedish government will be closing down the Swedish cooking industry in the coming months.", "cypher": "match (:ENTITY{name:'Stockholm'}) <- [:Relationship{name:'place of birth'}]-(x),(x) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 4"}, {"query": "Can you give me some information about this person?", "cypher": "match (:ENTITY{name:'\u4f55\u5b87\u6210'}) --(x) return x.name skip 2 is the first match of the match."}, {"query": "Give me four pop rock bands and their slogans.", "cypher": "match (:ENTITY{name:'pop rock'}) <--(m), (m) - [:Relationship{name:'password'}]->(n) return m.name, n.name limit 4"}, {"query": "How to describe early childhood and potential development in 3 sentences for 0-3 year olds?", "cypher": "match (:ENTITY{name:'0-3 years old baby early childhood and potential development'}) --(m) with m order by m.name return distinct m.name skip 1 limit 3"}, {"query": "Name the total number of companies founded in 99 years.", "cypher": "match (p:ENTITY{time:'1999'}) return count ((p)"}, {"query": "Can you name three novels that combine other genres?", "cypher": "match (:ENTITY{name:' other'}) <- [:Relationship{name:' novel type'}]- (q) return q.name limit 3"}, {"query": "Can you list some of the events and landmarks in the Democratic People's Republic of Korea?", "cypher": "match (:ENTITY{name:'Democratic People's Republic of Korea'}) <- [:Relationship{name:'location'}]- (n) return distinct n.name"}, {"query": "Help me find 10 plants that are classified as sub-plants.", "cypher": "match (:ENTITY{name:' by the sub-plant gate Angiospermae'}) <- [:Relationship{name:' gate'}]-(m) return distinct m.name limit 10"}, {"query": "What is the shortest path between the plate's surface and the plate's hard surface?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest paths'}) - [:Relationship*..2]-(b:ENTITY{name:'shortest paths'})) return count ((p)"}, {"query": "Can you provide information on the 5 levels of relationships related to the development of the International Recreational Industry Association of the King's Own?", "cypher": "match (n:ENTITY{name:' International Leisure Industry Association'}) - [*1..5]->(x) where x.name <> 'Wang Joon' return distinct x.name limit 5"}, {"query": "Who was the first writer of A Song of Ice and Fire?", "cypher": "match (:ENTITY{name:'Relationship{name:'writer'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "Can you name five songs that you can sing about the freedom of running?", "cypher": "match (:ENTITY{name:'Fly free running'}) --(p) return distinct p.name limit 5"}, {"query": "Can you list the names of the relationships in the two layers of the 10 pieces of paper?", "cypher": "The following is a list of all the links in the list of links in the list of links:"}, {"query": "Can you name three ships that were built in 1957?", "cypher": "match (:ENTITY{name:'1957'}) <- [:Relationship{name:'development time'}]- (n) return n.name limit 3"}, {"query": "Do you know what the relationship is between the food and the things that are on the 6th level of the label?", "cypher": "The following is a list of the most commonly used tags in the world:"}, {"query": "Zhu Qian is the king of which dynasty?", "cypher": "match (:ENTITY{name:'Zhu Qianlong [11th emperor of the Ming Dynasty]'}) - [:Relationship{name:'at the time'}]->(m) return distinct m.name"}, {"query": "What is the shortest path between the two levels of the village of Yug and the village of Shaan?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'then\u9091\u6751'}) - [*..2]-(b:ENTITY{name:'\u65bd\u5bbd\u6751'})) return count ((p)"}, {"query": "The article on the progress of human rights in China in 2009 was published on the website of the Ministry of Human Rights of China.", "cypher": "match ((:ENTITY{name:'2009 China Human Rights Progress'}) - [:Relationship{name:'release date'}]-> (q) return q.name"}, {"query": "Do you think that writers with type O blood are representative of your work?", "cypher": "match (:ENTITY{name:'O'}) <- [:Relationship{name:'blood type'}]-(m) - [:Relationship{name:'represents work'}]->(p) return distinct p.name limit 1"}, {"query": "Can you give me an example of what the relationship between the third tier labels and the legal regulations is?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'legal regulation'}) return distinct n.name"}, {"query": "Please tell me the nationality of Mr. Ikeda and the date of birth and death.", "cypher": "Match (:ENTITY{name:'\u6c60\u7530\u4ef2\u6f84'}) - [:Relationship{name:'\u56fd\u7c4d'}]->(n) return n.name as name union all match (:ENTITY{name:'\u6c60\u7530\u4ef2\u6f84'}) - [:Relationship{name:'date of birth'}]->(m) return m.name as name union all match (:ENTITY{name:'\u6c60\u7530\u4ef2\u6f84'}) - [:Relationship{name:'date of death'}]->(r) return r.name as name"}, {"query": "What kind of company is a company with 600 employees?", "cypher": "match (:ENTITY{name:'600'}) <- [:Relationship{name:'number of employees'}]- ((h) - [:Relationship{name:'type'}]->(q) return distinct q.name"}, {"query": "What is the shortest distance between the University of Bonn and the Industrial University of Berlin within the two levels?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Bonn University'}) - [:Relationship*..2]-(b:ENTITY{name:'Berlin University of Technology'})) return count ((p) The number of paths is calculated by the following formula:"}, {"query": "Please tell me which exhibition will be the opening ceremony on September 23, 2011 at 09:00?", "cypher": "match (:ENTITY{name:'September 23, 2011 at 09:00'}) <- [:Relationship{name:'Opening Ceremony'}]- (p) return p.name"}, {"query": "Can you tell me the alias of this thing with the scientific label?", "cypher": "match (:ENTITY{name:' science'}) <- [:Tag{name:' tag'}]-(p) - [:Relationship{name:' alias'}]->(h) return h.name order by h.name limit 1"}, {"query": "I'm wondering what chemical has the CAS number 207226-02-6?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Please tell me that there is a quake with a magnitude of 36.0 degrees north latitude and a magnitude of 140.1 degrees east longitude, which is nicknamed?", "cypher": "match (n:ENTITY{name:'Northeast 36.0\u00b0, east 140.1\u00b0'}) <- [Relationship{name:'Quake source'}]- (p) return p.name"}, {"query": "I'm not sure if I can get the statistics from the Samsung U20s.", "cypher": "match (n:ENTITY{name:' Samsung U20'}) --(x) return x.name"}, {"query": "I want to find six writers and where they were born.", "cypher": "match (:ENTITY{name:'writer'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name,n.name limit 6"}, {"query": "What happened on November 19, 2013?", "cypher": "match (:ENTITY{name:'November 19, 2013'}) <- [:Relationship{name:' time of occurrence'}]- (q) return q.name"}, {"query": "Do you know anything that has to do with the layer 3 tag?", "cypher": "The following is a list of all the different ways Match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'volunteer cloud'}) RETURN distinct n.name"}, {"query": "Do you know which government officials graduated from Nanjing University?", "cypher": "Match (:ENTITY{name:'Nanjing University'}) <- [:Relationship{name:' Graduate School'}]- (n) return n.name limit 14 This is a list of all the different ways Nanjing University is credited in the database."}, {"query": "What are the main ingredients of the three kinds of sandwiches?", "cypher": "match (:ENTITY{name:'sandwich'}) - [:Relationship{name:'main ingredient'}]->(n) return n.name as name union all match (:ENTITY{name:'sandwich'}) - [:Relationship{name:'category'}]->(m) return m.name as name"}, {"query": "Please, who has ever been the president of Panama? Name the top 5 people.", "cypher": "match (:ENTITY{name:' acting as President of Panama'}) --(h) return h.name order by h.name limit 5"}, {"query": "I'm not sure if you can list the names of the people who are like you, but I'm not sure if you can list the names of the people who are like you, but I'm not sure if you can list the names of the people who are like you, but I'm not sure if you can list the names of the people who are like you, but I'm not sure if you can list the names of the people who are like you, but I'm not sure if you can list the names of the people who are like you, but I can list the names of the people who are like you, and then sort them in order from small to large.", "cypher": "match (n:ENTITY{name:''}) - [:Relationship{name:'political appearance'}]->(:ENTITY) <- [:Relationship{name:'political appearance'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "What are the wristbands made of plastic? Can you recommend 10?", "cypher": "match (:ENTITY{name:' plastic'}) <- [:Relationship{name:' wristband material'}]- (m) return m.name limit 10"}, {"query": "What material is 5038 aluminum plate?", "cypher": "match (:ENTITY{name:'5083 table'}) <- [:Relationship{name:'brand'}]- (h) return distinct h.name"}, {"query": "What is the main responsibility of the construction sector?", "cypher": "match (:ENTITY{name:'working area'}) - [:Relationship{name:'responsible'}]->(m) return distinct m.name"}, {"query": "Find the 5 music introductions that pop music has thrown away for your dignity?", "cypher": "match (n:ENTITY{name:'Dignity for you'}) - [:Relationship*]->(x) where x.name<>'Pop music' return distinct x.name limit 5"}, {"query": "When did the single-board skiing competition at the 2006 Winter Olympics end?", "cypher": "match ((:ENTITY{name:'2006 Winter Olympics single-board skiing competition'}) - [:Relationship{name:' end'}]-> (h) return h.name"}, {"query": "Find out about the three-tiered relationship of Croatian footballer Gregurina Mario.", "cypher": "match (n:ENTITY{name:'Gregurina Mario'}) - [*1..3]->(x) where x.name <>'Croatia' return distinct x.name"}, {"query": "Can you please list 5 unlimited electronic settings?", "cypher": "match (:ENTITY{name:'unlimited'}) <- [:Relationship{name:' applicable to product'}]- (q) return q.name limit 5"}, {"query": "Help me find two classic fairy tales.", "cypher": "match (:ENTITY{name:'Classic Fairy'}) <- [:Relationship{name:'type'}]-(m) return distinct m.name limit 2"}, {"query": "Can you tell me the Chinese name of the windmill?", "cypher": "match (:ENTITY{name:'\u767e\u70bc\u98ce\u6d41'}) - [:Relationship{name:'Chinese name'}]-> (n) with n order by n.name return distinct n.name"}, {"query": "What is the name of the company founded by Little Grass, Memba Dance?", "cypher": "match (:ENTITY{name:' small grass, Meruwa\u821e'}) <- [:Relationship{name:' founder'}]- (n) return n.name"}, {"query": "What events have you organized in Shanghai? Can you name 10?", "cypher": "match (:ENTITY{name:' Shanghai'}) <- [:Relationship{name:' Host city'}]- (p) return p.name limit 10"}, {"query": "What is the shortest distance between Henan German Electrical Equipment Co. Ltd. and Beijing Air Lighting Engineering Co. Ltd.", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' Henan German name Mechanical and Electrical Equipment Co. Ltd'}) - [*..2]-(b:ENTITY{name:' Beijing Air Lifting Engineering Co. Ltd'})) return count ((p)"}, {"query": "3 pieces of information for 0-3 year olds - Animals and the environment - You guessed it - Fun cognitive - Rainbow Folding Book - Volume 2", "cypher": "match (:ENTITY{name:'0~3 years old - animal and environment - you'll guess the hobby cognition - rainbow folding book - 2nd edition'}) --(m) with m order by m.name return distinct m.name skip 1 limit 3"}, {"query": "What are the public highways in the Jinping District of Guangdong Province?", "cypher": "match (:ENTITY{name:'Public High School'}) <- [Relationship{name:'Relationship'}]-(m), (m) - [Relationship{name:'category'}]->(n) where n.name='public high school' return distinct m.name"}, {"query": "Please tell me the name of the movie starring Liu Yiu, Matsusaka Michili, Yuyun Mi-Li, Murakami Yuming and others is Liu Yi?", "cypher": "match (:ENTITY{name:'Yun Yu, Matsusaka Michili, Yuki, and Yuki's name}) <- [:Relationship{name:'starring'}]- (p) return p.name"}, {"query": "Which five publishers publish all the medical books?", "cypher": "match (:ENTITY{name:' medical books'}) <- [:Tag{name:' labels'}]-(x),(x) - [:Relationship{name:' publishing house'}]->(q) return distinct q.name limit 5"}, {"query": "Please list the white-tailed eagles in France.", "cypher": "match (:ENTITY{name:' French'}) <- [:Relationship{name:' distribution area'}]- (mn) - [:Relationship{name:' species'}]->(n:ENTITY{name:' white frog'}) return mn.name"}, {"query": "Can you list three other descriptions of Tang Yifu, including Jingdong, and the Han Chinese?", "cypher": "match (n:ENTITY{name:'Tong's'}) - [:Describe{name:'description'}]->(h) with h order by h.name where h.name <> 'Jilin Dong-Tong' and h.name <> 'Han' return h.name limit 3"}, {"query": "What is the 1-bit EINECS login number?", "cypher": "The following is a list of all the different ways The Winner is credited in the database:"}, {"query": "What are the 10 areas of application of substances in medical science?", "cypher": "match (:ENTITY{name:'medicine'}) <- [:Relationship{name:'applied discipline'}]-(x),(x) - [:Relationship{name:'scale of application'}]->(p) return x.name order by x.name,p.name limit 10"}, {"query": "Tell me, what are the awards that people who are 185 have won?", "cypher": "match (n:ENTITY{name:'185cm'}) <- [:Relationship{name:'height'}]- ((q) - [:Relationship{name:'main award'}]->(x) return distinct x.name limit 5"}, {"query": "Do you know which songs are composed by Guo Shi? Can you tell me 10 songs?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "There is a game that is entirely in English called 101-in-1 Games, what is its name in Chinese?", "cypher": "Match (:ENTITY{name:'101-in-1 Games'}) <- [:Relationship{name:'other names'}]- (n) return n.name"}, {"query": "In addition to Sun Liong, the author of this book provides me with six pieces of information in the second layer of the book, which is a study of the international trend of accounting standards under economic globalization.", "cypher": "match (:ENTITY{name:' Research on international convergence under accounting standards under economic globalization'}) - [*1..2]-(p) where p.name <> 'Sun Liyong' return distinct p.name limit 6"}, {"query": "Do you know the types of relationships within the five levels of the two Jiangsu City Prisons in Jilin?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'Jilin City Jiang City Prison'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "What is the music composed by Chow Chow?", "cypher": "match (:ENTITY{name:'sweet'}) <- [:Relationship{name:'sweet'}]- (x) return x.name"}, {"query": "Do you know the name of the combination where Joan Gr\u00e0cia is located?", "cypher": "match (:ENTITY{name:'Joan Gr\u00e0cia'}) <- [:Relationship{name:' member'}]- (x) return x.name"}, {"query": "I want three of you to be human April Day: Lin Feng, because of this work, information in the two-tier relationship?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' you are human April Fools'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "What language teachers do you know?", "cypher": "match (:ENTITY{name:' language teacher'}) <--(n) return n.name"}, {"query": "Do you know what chemical formula is C3H6Br2?", "cypher": "match (:ENTITY{name:'C3H6Br2'}) <- [:Relationship{name:'chemical formula'}]- (h) return distinct h.name"}, {"query": "I remember a case involving three miners, what was the name of it?", "cypher": "match (:ENTITY{name:'3 miners'}) <- [:Relationship{name:'person'}]- (n) return n.name"}, {"query": "I want to know what are the characteristics of textile primary school?", "cypher": "match (:ENTITY{name:'Textile first secondary school'}) - [:Relationship{name:'attributes'}]-> (p) return p.name skip 2"}, {"query": "And what will explain to you the time of the cold-blooded?", "cypher": "match (:ENTITY{name:'Cold War'}) - [:Relationship{name:'Author'}]->(n) return n.name as name union all match (:ENTITY{name:'Cold War'}) - [:Relationship{name:'Year'}]->(m) return m.name as name"}, {"query": "Which TV series won the BAFTA Award for Best Television Series? Name one.", "cypher": "match (:ENTITY{name:' British Academy of Film and Television Arts BAFTA Award for Best Television Series'}) --(m) return m.name order by m.name limit 1"}, {"query": "The recent Guangzhou International Food Expo 2011 was good, do you know which supporting unit?", "cypher": "match ((:ENTITY{name:'2011 Guangzhou International Food Fair'}) - [:Relationship{name:'support unit'}]-> (m) return m.name"}, {"query": "Do you have any information about some of the major achievements of Lin Qian? Can you give me 5?", "cypher": "match (:ENTITY{name:' in the link'}) <- [:Relationship{name:' in Chinese name'}]- ((q) - [:Relationship{name:' major achievements'}]->(n) return n.name order by n.name limit 5"}, {"query": "Can you tell me what kind of relationships are covered in the three layers of the novel?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Santa Muerte'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3 This is a list of all the different ways REL is credited in the database."}, {"query": "Can you list the three competitions that are controlled by Huynh?", "cypher": "match (:ENTITY{name:'Hoon'}) <- [:Relationship{name:'regulation'}]- (m) return m.name limit 3 The name of the game is the same as the name of the game itself"}, {"query": "Can you tell me about the three-tiered relationship in the Chinese border travel map published by Haitian Press?", "cypher": "match (n:ENTITY{name:'China's border crossing map'}) - [:Relationship*1..3]->(x) where x.name <>'Hai Tian Publishing' return distinct x.name"}, {"query": "The following is a detailed description of the three-tier relationship of the 80.24 square kilometers of Lode Ark:", "cypher": "match (n:ENTITY{name:'Ludiarch'}) - [*1..3]->(x) where x.name <>'80.24 sq km' return distinct x.name"}, {"query": "Please help me find out 5 other information about the horror movie killer girls in the second floor of the dormitory.", "cypher": "match (:ENTITY{name:'murdered girl's dorm'}) - [:Relationship*1..2]-(p) where p.name <> 'surprise movie' return p.name limit 5"}, {"query": "How about a 10,000-word English dictionary?", "cypher": "match (:ENTITY{name:'10000 common English words'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "Please tell me what exhibition dates are available for 2012-12-22 - 2012-12-24?", "cypher": "The following is a list of the most popular games on the Wii U."}, {"query": "Please list the 10 principals who are the main departments of Chen's school.", "cypher": "match (:ENTITY{name:'Chen Zhen'}) <- [:Relationship{name:'currently rector'}]-(n),(n) - [:Relationship{name:'main faculty'}]->(q) return q.name order by q.name limit 10"}, {"query": "What are the publications published by the Central Literature Publishing House and what is his price range?", "cypher": "match (:ENTITY{name:'Central Literature Publishers'}) <- [:Relationship{name:'Publishers'}]-(h),(h) - [:Relationship{name:'Pricing'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know that the book literature is published by Electronic Industries Publishing?", "cypher": "match (:ENTITY{name:'electronic industry publisher'}) <- [:Relationship{name:'publisher'}]- (x) return x.name limit 10"}, {"query": "What are the categories of skating and what equipment is required?", "cypher": "match (:ENTITY{name:'Skiing'}) - [:Relationship{name:'Classification'}]->(n) return n.name as name union all match (:ENTITY{name:'Skiing'}) - [:Relationship{name:'Skiing equipment'}]->(m) return m.name as name"}, {"query": "What songs are sung by Lin Xie, Liang Wenhong and Lin Xie?", "cypher": "The song is also known as \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Rela"}, {"query": "What is the name of the chicken?", "cypher": "match (:ENTITY{name:'': 1950), born in Hunan, Hunan, No. black bean, National level artist, member of Chinese calligraphers association, member of China Union of Writers' Book Painting Center, member of the Helangyang calligraphers association, member of the Chinese Academy of Sciences, member of the World Organization of UNESCO."}, {"query": "What other labels does the CDC have besides publications? (list no more than ten)", "cypher": "match (:ENTITY{name:'0-3 years old Infant and toddler disease prevention and care overall'}) - [:Tag{name:'label'}]-> (m) with m order by m.name where m.name <> 'publication' return m.name limit 10"}, {"query": "Please tell me when the 1946 Copa Am\u00e9rica Argentina starts, I'm afraid I won't be able to come.", "cypher": "match ((q:ENTITY{name:'1946 Copa Am\u00e9rica Argentina'}) - [:Relationship{name:'start time'}]-> (h) return h.name"}, {"query": "I would like to know the full contents of the 121-page classic literature called Treasury: Education of Love?", "cypher": "match (n:ENTITY{name:'Classical literature named Treasury: Education of Love'}) - [:Relationship*]->(x) where x.name <>'121 pages' return distinct x.name"}, {"query": "What are the types of relationships that are involved in the two layers of the shopping cart?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'shopping cart'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "The question is, how do you do it in the three-layer relationship of the single-cooking green leather steamer that breaks freeze?", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name<>'breaking the gas freeze' return distinct x.name"}, {"query": "Look at the software information within the three-layer relationship of a 2MB software-sized GPS thermometer.", "cypher": "match (n:ENTITY{name:'GPS thermometer'}) - [:Relationship*1..3]->(x) where x.name <>'2 MB' return distinct x.name"}, {"query": "Please help me find 5 books for $18.80 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'18.80\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Tell me about the three-layered relationship between the reborn computer clouds of midnight smoking creators and the fictional information bubble.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name <>'midnight smoking' return distinct x.name"}, {"query": "Find me 7 places to see in the Khothai Desert, besides 100 tickets and the address in Nanchang City, Jiangxi Province.", "cypher": "match (n:ENTITY{name:'Kuta Desert Scenic Area'}) -->(h) with h order by h.name where h.name <> '100\u5143' and h.name <> 'Jiangxi Province Nanchang City' return h.name limit 7"}, {"query": "Do you know which school is the main achievement of the National School of Advanced Research in Education and Science in Hohhot and the Advanced School of Educational Science and Research in Hont City?", "cypher": "match (:ENTITY{name:'National Institute of Advanced Studies in Education and Research in Germany and the University of Kent's School of Education and Research'}) <- [:Relationship{name:'main award'}]- (p) return distinct p.name"}, {"query": "What website sells such cheap snacks?", "cypher": "match (:ENTITY{name:'thing cheap snacks'}) <- [:Relationship{name:'provided'}]- (m) return m.name"}, {"query": "Can I get three books on management to read?", "cypher": "The following is a list of the most commonly used tags in the database:"}, {"query": "The Chinese language name of the Beijing-based company is Liu Xiaobo.", "cypher": "match (:ENTITY{name:'Beijing Liu Shandjian Da Technology Books Ltd'}) <- [:Relationship{name:'brand'}]-(n) - [:Relationship{name:'foreign language name'}]->(x) return distinct x.name limit 1"}, {"query": "The college was founded in 2004 and its five main departments are in addition to the E-IT.", "cypher": "match (m:ENTITY{name:'2004'}) <- [:Relationship{name:'time of founding'}]-(q) - [:Relationship{name:'main faculty'}]->(h) where h.name <> 'electronic information technology' return distinct h.name limit 5"}, {"query": "Find out 5 personal details about footballers that are also on the list.", "cypher": "match (n:ENTITY{name:' upper force also'}) - [*]->(x) where x.name <> 'footballer' return distinct x.name limit 5"}, {"query": "What is the shortest distance between Shenyang City College and Dalian University of Technology?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Shenyang City College'}) - [*..2]-(b:ENTITY{name:'Dalyane University of Technology'})) return count ((p)"}, {"query": "Show me the two books in plain text and tell me who wrote them.", "cypher": "match (:ENTITY{name:'plain'}) <- [:Relationship{name:'plain'}]-(h),(h) - [:Relationship{name:'author'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Do you know what the label attributes are about the historic 12/24 library jumping in the Great Western District of China?", "cypher": "match (:ENTITY{name:'12\u00b724 Central Central District Library West Tower Jump Event'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> ' historical event' return m.name"}, {"query": "Can you say that a representative work is someone you meet?", "cypher": "match (:ENTITY{name:'meet'}) <- [:Relationship{name:'represent the work'}]- (x) return x.name limit 1"}, {"query": "Help me find the 10 species of molluscs", "cypher": "match (:ENTITY{name:' soft animal'}) <- [:Relationship{name:' gate'}]-(m) return distinct m.name limit 10"}, {"query": "Can you tell me about three types of electronic parts that work at -10\u00b0C plus +60\u00b0C?", "cypher": "The name of the function is \"Relationship\" (Relationship)"}, {"query": "What is the name of the old-time song sung by Liu Shaofeng and Liu Yifei?", "cypher": "match (:ENTITY{name:'Shang Shao's'}) <- [:Relationship{name:'song originally sung'}]-(m), (m) - [:Relationship{name:'song style'}]->(n) where n.name='Goldwind' return distinct m.name"}, {"query": "What is this thing called 1-Kestose?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What are the main achievements of Pyotr Vladimir Mitrofanovich?", "cypher": "match (:ENTITY{name:'Petrov Vladimir Mitrofanovich--1920 born in Astrakhan\u3002'}) <- [:Describe{name:'description'}]-(m) - [:Relationship{name:'main achievements'}]->(n) return distinct n.name"}, {"query": "Is it true that people born in the Hebei province of T\u014dky\u014d are dry?", "cypher": "match (:ENTITY{name:'Todoga, Hebei Province'}) <- [:Relationship{name:'Born'}]-(m),(m) - [:Relationship{name:'Profession'}]->(n) return distinct n.name"}, {"query": "What are the works of the Chinese language and literature publishing house?", "cypher": "match (:ENTITY{name:'Chinese pronunciation: like publishing house'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:'publication time'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know what the name of the relationship is that involves the essential elements of entrepreneurship in the three layers?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' business essential'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "The date of death of the official from Nanchang, Kang Yong-ho, is written in the history books?", "cypher": "match ((:ENTITY{name:'\u5eb7\u690d'}) - [:Relationship{name:'date of death'}]-> (x) return x.name"}, {"query": "I want to know what the relationship is between the three levels of the Royal University of Cavendish?", "cypher": "The following pages link to The University of the Pacific:"}, {"query": "Can you help me find 10 free tickets to the sights?", "cypher": "Match (n:ENTITY{name:' free'}) <- [:Relationship{name:' ticket'}]- (mn) return mn.name limit 10"}, {"query": "Please tell us about the personal information of the third level relationship of Qatar's Dorzadeh Valid Nahng.", "cypher": "match (n:ENTITY{name:'Dorzadeh Valid Nahng'}) - [*1..3]->(x) where x.name<>'Qatar' return distinct x.name"}, {"query": "What events and exhibitions have been held in Shanghai, China? Can you name six?", "cypher": "match (:ENTITY{name:'China Shanghai'}) <- [:Relationship{name:'location'}]- (h) return h.name limit 6"}, {"query": "Did you know that the 1983 Panda Gold, Silver and Bronze commemorative coin was issued in a few sets?", "cypher": "match ((:ENTITY{name:'1983 Panda Gold and Silver Bronze Commemorative Coin'}) - [:Relationship{name:' quantity'}]-> (x) return x.name"}, {"query": "Can you tell me what the most popular profession is?", "cypher": "match (x:ENTITY{name:'\u7f72\u6e10\u95fb'}) <- [:Relationship{name:' alias'}]- ((p) - [:Relationship{name:' profession'}]->(m) return distinct m.name"}, {"query": "Can you name three species of plants in the family Parrots?", "cypher": "match (x:ENTITY{name:'Crow's nest'}) <-[:Relationship{name:'Crow's nest'}]- (h) return h.name limit 3 This is a list of all the different ways Crow's nest is credited in the database."}, {"query": "Which company makes the A-5 attack aircraft?", "cypher": "match (:ENTITY{name:'A-5 attacker'}) - [:Relationship{name:'production unit'}]->(m) return distinct m.name"}, {"query": "What else is there besides the gift of the white horse king?", "cypher": "match (:ENTITY{name:'Five-word classic'}) <- [:Relationship{name:'Literary genre'}]-(m), (m) - [:Relationship{name:'Author'}]->(:ENTITY{name:' Cao\u690d'}) where m.name <>'gifted white horse king' return m.name limit 3"}, {"query": "On the advanced worker, the third grade of memory, awarded the best secondary school language teacher in Shandong province, his representative is the language characteristics of the practical language of the language.", "cypher": "match (:ENTITY{name:' advanced worker, third grade credential, awarded as the best secondary school language teacher in Shandong Province'}) <- [:Relationship{name:' major achievement'}]-(x),(x) - [:Relationship{name:' representative work'}->(h) where h.name <> 'linguistic characteristics of the tang tang tang' return distinct h.name limit 5"}, {"query": "Help me find a soup made with golden needles.", "cypher": "match (:ENTITY{name:'soup'}) <- [:Relationship{name:'main ingredient'}]- ((m), (m) - [:Relationship{name:'category'}]->(n) where n.name='soup' return distinct m.name"}, {"query": "Please help me check out the simple Chinese for grain oil machinery: Leaf turret windshield 2 layer relationship?", "cypher": "match (n:ENTITY{name:'grain oil machinery: leaf wheel closed winder'}) - [:Relationship*1..2]->(x) where x.name <>'simplified Chinese' return distinct x.name"}, {"query": "Can you find a tag for June 24?", "cypher": "match (:ENTITY{name:'June 24'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 1"}, {"query": "Can you recommend 5 books weighing 798g?", "cypher": "The following is a list of the most commonly used parameters for the calculation of the mass of a particle."}, {"query": "The relationship that is involved in the death assumption is also related to the three levels of relationships.", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' simultaneously presumed dead'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Are you looking for a career in attending a Genghis Khan?", "cypher": "match (:ENTITY{name:'\u5e2d\u6052'}) <- [:Relationship{name:'Chinese name'}]- ((m) - [:Relationship{name:'profession'}]->(h) return distinct h.name"}, {"query": "Can you help me find two schools that have been awarded the Sichuan Provincial School of Experimental Teaching Model Award?", "cypher": "match (:ENTITY{name:'School of experimental teaching in Sichuan Province'}) <- [*]-(m), (m) - [:Relationship{name:' category'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "What is the meaning of the word 1976 apart from economic?", "cypher": "match (:ENTITY{name:'1976'}) --(m) with m order by m.name where m.name <> 'economy' return m.name limit 5"}, {"query": "Can you find me someone who has been a net singer, a radio host, and his school?", "cypher": "match (:ENTITY{name:' network singer, radio host\u3002'}) <- [:Describe{name:' description'}]-(h),(h) - [:Relationship{name:' graduate school'}]->(q) return distinct h.name,q.name"}, {"query": "You said 21 Days of Happiness: What is the label of my other life?", "cypher": "match (:ENTITY{name:'21 days of happiness: my other life'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "0375 Capital, is there a rubber tag in this place?", "cypher": "match (:ENTITY{name:'0375 capital'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'location' return n.name"}, {"query": "Do you have a nickname for someone who has been a member of the party, a librarian, a national level screenwriter, etc.?", "cypher": "match (:ENTITY{name:'party member, director, national level screenwriter etc'}) <- [:Relationship{name:'profession'}]-(n),(n) - [:Relationship{name:'alias'}]->(p) return distinct p.name"}, {"query": "Can you ask me about the nature of the 100 Christmas gifts?", "cypher": "match (:ENTITY{name:'100 Christmas presents'}) - [:Tag{name:'tags'}]-> (p) with p order by p.name return p.name"}, {"query": "I'm going to be a techie, and I'm going to be a techie, and I'm going to be a techie, and I'm going to be a techie, and I'm going to be a techie, and I'm going to be a techie, and I'm going to be a techie, and I'm going to be a techie, and I'm going to be a techie, and I'm going to be a techie.", "cypher": "match (n:ENTITY{name:'friendly'}) - [*1..4]->(x) where x.name <> 'technology product' return distinct x.name"}, {"query": "Which of the Magic Blue Svanes is rock music?", "cypher": "match (p:ENTITY{name:'Mother of Magic Blue Swan'}) <--(x) -->(q:ENTITY{name:'rock'}) return x.name"}, {"query": "What are the items or places that are related to the building materials?", "cypher": "match (:ENTITY{name:' building material'}) <- [:Relationship{name:' attribute'}]- (h) return h.name limit 5"}, {"query": "In five words, tell me what is the first album?", "cypher": "match (:ENTITY{name:'1st Album'}) --(n) with n order by n.name return n.name limit 5"}, {"query": "Can you find three characters in the story and help me introduce them?", "cypher": "match (:ENTITY{name:'Relationship*]-(m), (m) - [:Describe{name:'description'}]->(n) return m.name, n.name limit 3"}, {"query": "What else do you know about the M110 203mm self-propelled grenade besides the weaponry?", "cypher": "match (:ENTITY{name:'M110 type 203mm self-propelled grenade gun'}) - [*1..3]-(p) where p.name <> 'weapon equipment' return distinct p.name limit 5"}, {"query": "What are the events in Seattle, USA? Can you name six?", "cypher": "match (:ENTITY{name:' Seattle, USA'}) <- [:Relationship{name:' location'}]- (n) return n.name limit 6"}, {"query": "What are the types of relationships within the three layers of the problem you talk about Zhang Xiaoming?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) ("}, {"query": "How does 139 PushEmail understand?", "cypher": "match (:ENTITY{name:'139 PushEmail'}) --(q) with q order by q.name return q.name"}, {"query": "Help me find three senior agricultural experts, where are they from?", "cypher": "match (:ENTITY{name:' senior agricultural expert'}) <- [*]-(m), (m) - [:Relationship{name:' place of birth'}]->(n) return m.name, n.name limit 3"}, {"query": "Can you show me a representative work of this man who died in 1989?", "cypher": "match (:ENTITY{name:'1989'}) <- [:Relationship{name:'date of death'}]-(m) - [:Relationship{name:'represented work'}]->(x) return x.name order by x.name limit 1"}, {"query": "What Bronze Age artifacts have been found in Henan Province?", "cypher": "match (:ENTITY{name:' Henan Province'}) <- [:Relationship{name:'Outland Province'}]-(m), (m) - [:Relationship{name:'Dynasty'}]->(n) where n.name='Bronze Age' return distinct m.name"}, {"query": "Can you say that the three representative works are the characters of the mineral crystal () () (1906)?", "cypher": "match (:ENTITY{name:'Crystalline mineral clay ((1906) '}) <- [:Relationship{name:'represents work'}]- (p) return distinct p.name limit 3"}, {"query": "I want to know which publisher is the science fiction show Hello Aliens?", "cypher": "match ((:ENTITY{name:'Hi Aliens'}) - [:Relationship{name:'Issuing company'}]-> (m) return m.name"}, {"query": "Who has a list of five-letter words?", "cypher": "match (:ENTITY{name:' word count\u3002'}) <- [:Describe{name:' description'}]-(q) return distinct q.name limit 5"}, {"query": "Can you say one more label about the horror movie 13 Monsters Island?", "cypher": "match (:ENTITY{name:'13 weird island'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'surprise movie' return h.name limit 1"}, {"query": "The following 1100-ton alloy?", "cypher": "match (:ENTITY{name:'1100 ton alloy'}) --(h) with h order by h.name return h.name"}, {"query": "Help me find two 5A tourist spots in Nanjing.", "cypher": "match (:ENTITY{name:'Nanjing'}) <- [:Relationship{name:'city'}]-(m), (m) - [:Relationship{name:'attraction level'}]->(n) where n.name='national tourist attraction of level 5A' return distinct m.name limit 2"}, {"query": "Do you know which earthquake was the one that struck on October 23, 2004 at 17:56 (JST)?", "cypher": "match (p:ENTITY{name:'2004-10-23 17:56(JST) '}) <- [:Relationship{name:'moment of the quake'}]- (h) return distinct h.name"}, {"query": "Can you tell me 5 of the 5 people in a relationship that are related to Clements Chris who is 1.75m tall?", "cypher": "match (n:ENTITY{name:'Clements Chris'}) - [*1..5]->(x) where x.name <>'1.75 m' return distinct x.name limit 5"}, {"query": "The 11th Degree Children's series has a drama film label and what other labels?", "cypher": "match (:ENTITY{name:'11 degree children's series microfilm'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'drama film' return n.name"}, {"query": "Where is the Shanghai Botanical Garden? How much are the tickets?", "cypher": "match (:ENTITY{name:'Shanghai Botanical Garden'}) - [:Relationship{name:'Location'}]->(n) return n.name as name union all match (:ENTITY{name:'Shanghai Botanical Garden'}) - [:Relationship{name:'Ticket price'}]->(m) return m.name as name"}, {"query": "Can you list five Japanese anime films?", "cypher": "The game is based on the manga series of the same name by Hiroaki Nakamura."}, {"query": "Tell me about how many businesses have been started in 96 years?", "cypher": "match (p:ENTITY{time:'1996'}) return count ((p)"}, {"query": "10 Corso Como is the world's first fashion design concept store, do you know where it was founded?", "cypher": "match ((:ENTITY{name:'10 Corso Como'}) - [:Relationship{name:'place of creation'}]-> (x) return x.name"}, {"query": "Do you know of any earthquakes that have a depth of 12 kilometers?", "cypher": "match (:ENTITY{name:'12 km'}) <- [:Relationship{name:'depth of the quake'}]- (m) return distinct m.name"}, {"query": "Give me a list of Venezuelan footballers, I want five, okay?", "cypher": "match (p:ENTITY{name:'Venezuela'}) <--(x) -->(q:ENTITY{name:'footballer'}) return x.name limit 5"}, {"query": "I wonder which book's ISBN is 9787308054591?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database."}, {"query": "I'm wondering if you can tell me which sub-type/class of aircraft is E-Fan 4.0?", "cypher": "match (:ENTITY{name:'E-Fan4.0'}) <- [:Relationship{name:'subtype'}]- (p) return distinct p.name"}, {"query": "A travel strategy that is all about the daily life in East Africa, with specific themes and expresses the spirit of hospitality, regional unity and spiritual experience, is called \"What's Up?\"", "cypher": "match (:ENTITY{name:'Hospitality, spiritual experience of regional unity\u3002'}) <- [:Relationship{name:'East African daily life has a specific theme'}]- (q) return distinct q.name"}, {"query": "The game is a game that offers a little game of memory stone in three layers of relationships.", "cypher": "match (n:ENTITY{name:' memory stone'}) - [:Relationship*1..3]->(x) where x.name <> 'wisdom game' return distinct x.name"}, {"query": "Do you know the company brands that were founded in 2014?", "cypher": "match (:ENTITY{name:'2014'}) <- [:Relationship{name:'time of establishment'}]- (x) return x.name limit 2"}, {"query": "Where is the address of Guangdong Postal and Telecommunication Vocational Technical College? What are the major departments?", "cypher": "match (:ENTITY{name:'Canton Postal and Telecommunications Vocational College'}) - [:Relationship{name:'School address'}]->(n) return n.name as name union all match (:ENTITY{name:'Canton Postal and Telecommunications Vocational College'}) - [:Relationship{name:'Main Faculty'}]->(m) return m.name as name"}, {"query": "Do you know what kind of activity has 13,000 volunteers?", "cypher": "match (:ENTITY{name:'13000+ volunteers'}) <- [:Relationship{name:'number'}]- (q) return q.name"}, {"query": "Check out when 123 is coming online.", "cypher": "match ((:ENTITY{name:'123 computed navigation'}) - [:Relationship{name:'online time'}]-> (h) return h.name"}, {"query": "Is there another Chinese name for the Klingon word for \"hate\"?", "cypher": "match (h:ENTITY{name:'Relationship{name:'Chinese name'}]-> (m) with m order by m.name where m.name <> 'Relationship{name:'Chinese name'} return m.name"}, {"query": "Can you recommend a game for Android (version 2.1 and above)?", "cypher": "match (n:ENTITY{name:'Android (versions 2.1 and above) '}) <- [:Relationship{name:' applicable'}]- (m) return distinct m.name"}, {"query": "Do you know which earthquake had a magnitude of 31.54 degrees north latitude and 100.48 degrees east longitude?", "cypher": "match (:ENTITY{name:'Northeast 31.54 degrees, East 100.48 degrees'}) <- [:Relationship{name:'Earthquake in the Nebula'}]- (h) return distinct h.name"}, {"query": "Can you list the five places where 92 Yangtze scholars have their PhDs?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "Do you know which novels are available on the free novel online?", "cypher": "match (:ENTITY{name:' free novel network'}) <- [:Relationship{name:' connecting platform'}]- (p) return distinct p.name"}, {"query": "I want to know the five links of the social events in the water bath triangle.", "cypher": "match (n:ENTITY{name:' water bath three-hole event'}) - [*]->(x) where x.name <> 'social event' return distinct x.name limit 5"}, {"query": "Can you list 10 of the major awards that retired sports teams have won?", "cypher": "match (:ENTITY{name:' has been retired'}) <- [:Relationship{name:' belongs to sports team'}]-(x),(x) - [:Relationship{name:' main award'}]->(h) return distinct h.name limit 10"}, {"query": "I wonder if the relationship names within the two layers covered by the grandson image are possible?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' grandson like'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you check out five amazing movies? How long is the movie?", "cypher": "match (:ENTITY{name:'surprise movie'}) <- [*]-(m), (m) - [:Relationship{name:'long film'}]->(n) return m.name, n.name limit 5"}, {"query": "Please help me find the synonyms and antonyms for the word \"dragon\"", "cypher": "match (:ENTITY{name:'Relationship{name:'next term'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'next term'}) ->(m) return m.name as name"}, {"query": "The book of the Book of the Book of Solomon is a collection of books written by the famous author of the Book of Solomon.", "cypher": "match (:ENTITY{name:'Relationship{name:'\u5e74\u4ee3'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'author'}) ->(m) return m.name as name"}, {"query": "I'm not sure if you can tell me what are the main achievements of Huang Zhenzhen?", "cypher": "match (:ENTITY{name:'Hung Sinh-ching, enlisted in December 1992, member of the Communist Party of China, current head of the Guangdong Provincial Border Guard Corps, Zhejiang City Border Guard Branch, political instructor at the leading Sand Border Guard Mission."}, {"query": "Can you find me a video that was released in 2000?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "What is the interaction between magnetic fields and things?", "cypher": "match (:ENTITY{name:'interaction between magnetic field and object'}) --(x) return distinct x.name"}, {"query": "I'm sorry, but you mentioned that the label of the village under the rock is not a village.", "cypher": "match (:ENTITY{name:'\u5927\u5ca9\u4e0b\u6751'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'village' return p.name limit 1"}, {"query": "What is the definition of watermelon?", "cypher": "match (:ENTITY{name:' water-filled flower'}) <- [:Relationship{name:' Chinese name'}]- ((m) - [:Relationship{name:'\u7eb2'}]->(q) return distinct q.name"}, {"query": "Can you find out who is the producer of the 11th Degree Children's mini-series?", "cypher": "match ((:ENTITY{name:'11 degree children's series microfilm'}) - [:Relationship{name:'producer'}]-> (m) return m.name"}, {"query": "Can you find me two Chinese literature publications published by the Chinese Union of Literary Publishers?", "cypher": "match (:ENTITY{name:' Chinese character pronounced like 'publisher'}) <- [:Relationship{name:' publisher'}]-(x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name limit 2"}, {"query": "Can you describe the product features of the Bedi detergent?", "cypher": "match (:ENTITY{name:'Bedi cleaning product'}) <- [:Relationship{name:'Chinese name'}]- ((m),(m) - [:Relationship{name:'product characteristics'}]->(h) return distinct h.name"}, {"query": "Can you tell me the name of the relationship between the two layers of the red clover?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' red-shouldered weed'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Do you know what the other name for the electronic thunderbolt is?", "cypher": "match (:ENTITY{name:'electronic thunderbolt'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'alias'}]->(n) return distinct n.name"}, {"query": "What else do you know about insulating aluminum resistors? Find out 5 information in 2 layers.", "cypher": "match (:ENTITY{name:' isolated explosive electron resistor'}) - [*1..2]-(p) where p.name <> ' Various flammable, explosive, and other chemical gases ' return p.name limit 5"}, {"query": "What are the names of the relationships on the three floors of the Atlanta hotel?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "Do you know anything about the 5-1-4 relationship with the Maltese footballer Agius Andrei?", "cypher": "match (n:ENTITY{name:'Agius Andrei'}) - [*1..4]->(x) where x.name <>'Agius Andrei, Maltese footballer\u3002' return distinct x.name limit 5"}, {"query": "What are the five titles that Jigme Singye has besides being a professor of surgery?", "cypher": "match (:ENTITY{name:'Crystal'}) <- [:Relationship{name:'Chinese name'}]-(h) - [:Relationship{name:'Profession'}]->(x) where x.name <> 'Professor of External Science' return distinct x.name limit 5"}, {"query": "I want to know his name and important achievements.", "cypher": "match (:ENTITY{name:'\u627f\u4e49\u4faf\u2192\u5974\u4faf'}) <- [:Relationship{name:'\u7235\u4f4d'}]- ((n) - [:Relationship{name:'main achievement'}]->(m) return distinct n.name, m.name"}, {"query": "Did you know that two or three generations of people are still talking about the two-year anniversary of the show?", "cypher": "match (:ENTITY{name:'(3DVD) 2 3rd generation audio link to see two-year anniversary show'}) --(n) with n order by n.name return n.name"}, {"query": "Can you recommend a website where you can update movies and TV shows daily?", "cypher": "match (:ENTITY{name:' Daily updates of movies and TV series'}) <- [:Relationship{name:' Site features'}]- (p) return p.name"}, {"query": "Which works are classified as the same as Loja, and which are labeled with them?", "cypher": "match (n:ENTITY{name:'\u6d1b\u4e0b\u4f4f\u5c45'}) - [:Relationship{name:'work style'}]->(:ENTITY) <- [:Relationship{name:'work style'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) BY ORDER c"}, {"query": "What is the main prize that Marcus Mariota has won?", "cypher": "match (:ENTITY{name:'Marcus Mariota'}) <- [:Relationship{name:'Chinese name'}]-(q) - [:Relationship{name:'main award'}]->(h) return distinct h.name limit 3"}, {"query": "I wonder what Chinese representatives of the Qing Dynasty have to say about the Chinese?", "cypher": "match (n:ENTITY{name:'China(Qing Dynasty) '}) <-[:Relationship{name:'nationality'}]-(x) -[:Relationship{name:'representative work'}]->(h) return distinct x.name,h.name"}, {"query": "Where is the perfume company?", "cypher": "match (p:ENTITY{name:'color perfume company'}) return p.location"}, {"query": "Do you know about Hang Ki Group?", "cypher": "match (n:ENTITY{name:'hangke group'}) --(x) return distinct x.name"}, {"query": "The first is the question of the quantum theory of the universe, which is the problem of the quantum theory of the universe.", "cypher": "match (n:ENTITY{name:'Conflicts of ideas in quantum theory and development of epistemology'}) - [:Relationship*1..2]->(x) where x.name <>'9787030394439' return distinct x.name"}, {"query": "I would like to know about the situation of Italian footballer Di Roberto Nunzio in a two-tier relationship.", "cypher": "match (n:ENTITY{name:'Diroberto Nuenzio'}) - [*1..2]->(x) where x.name<>'Diroberto Nuenzio, Italian footballer\u3002' return distinct x.name"}, {"query": "Can you tell me what kind of relationship Wang Xingyu included in the 3 layers?", "cypher": "The following is a list of all the different ways The King of Kings is credited in the database:"}, {"query": "What else do you know about the Da Ming Palace site besides the fact that it took eight years to build?", "cypher": "match (:ENTITY{name:'Damming Palace site'}) - [:Relationship*1..2]-(p) where p.name <> 'Damming Palace eight years ((634 years) ' return distinct p.name limit 10"}, {"query": "Can you tell me the name of the relationship between the two layers of the Jiangxi border watershed?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Jiangxi border water village'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Do you know how many movies are made in Canada? Can you name 11?", "cypher": "match (:ENTITY{name:'Canada'}) <- [:Relationship{name:'producer area'}]- (q) return q.name limit 11"}, {"query": "How to find company information within the three-tier relationship of this organization, Shanghai Yangyang Trading Co. Ltd.?", "cypher": "match (n:ENTITY{name:'Shanghai Xianyang Trading Co. Ltd'}) - [*1..3]->(x) where x.name <> 'organizing entity' return distinct x.name"}, {"query": "What is the name of the Chinese medicine book that costs 49 dollars?", "cypher": "match (:ENTITY{name:' priced: \u00a549.00 yuan'}) <- [:Relationship{name:' priced'}]- (p) return distinct p.name"}, {"query": "Find information about the game 4 Deadly Night 2 Unbeatable for other platforms besides PC?", "cypher": "match (:ENTITY{name:'Night of the Dead 2 Unparalleled'}) --(m) with m order by m.name where m.name <> 'PC' return distinct m.name limit 4"}, {"query": "Can you find me two music teachers at their graduate schools?", "cypher": "match (:ENTITY{name:' music professor'}) <- [:Relationship{name:' profession'}]- ((x),(x) - [:Relationship{name:' graduate school'}]->(q) return distinct q.name limit 2"}, {"query": "The IMDB code is nm0878756 and the name of the person is Kim, what does it stand for?", "cypher": "match (:ENTITY{name:'nm0878756'}) <- [:Relationship{name:'IMDb number'}]-(p),(p) - [:Relationship{name:'represents work'}]->(m) return distinct p.name,m.name"}, {"query": "What games are developed by Greenbreir Games?", "cypher": "Match (:ENTITY{name:'Greenbreir Games'}) <- [:Relationship{name:'developer'}]- (p) return p.name This is a list of games that are currently in development by Greenbreir Games."}, {"query": "I only remember him speaking verbatim, can you find his representation?", "cypher": "match (:ENTITY{name:'right'}) <- [:Relationship{name:'word'}]-(q) - [:Relationship{name:'representing work'}]->(n) return distinct n.name"}, {"query": "What does the word \"abhor\" mean? Where did it come from?", "cypher": "match (:ENTITY{name:'Relationship{name:' interpretation'}) - >(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'outcome'}) - >(m) return m.name as name"}, {"query": "Speaking of four music albums, when will they be released?", "cypher": "match (:ENTITY{name:'musical work'}) <- [*]-(m), (m) - [:Relationship{name:'release time'}]->(n) return m.name, n.name limit 4"}, {"query": "Can you find me two plants in the family of the Orchidaceae and describe them?", "cypher": "match (:ENTITY{name:'mouth'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "I'm going to tell you about this book, the Golden Book of Emotional Development for 3-year-olds that you know of.", "cypher": "match (:ENTITY{name:'0 3 year old baby's love story'}) --(m) with m order by m.name where m.name <> 'books' return m.name"}, {"query": "Can you give me three keywords for information about the other three ambassadors of the Republic of Malta in China?", "cypher": "match (:ENTITY{name:'Kyufu'}) --(m) with m order by m.name where m.name <> 'Ambassador of the Republic of China to China' return distinct m.name limit 3"}, {"query": "Many compounds have nicknames, do you know the Chinese nickname for 2-methylphenidate?", "cypher": "match ((:ENTITY{name:'2-metformin'}) - [:Relationship{name:'Chinese alias'}]-> (n) return n.name"}, {"query": "What year did the decomposition code appear?", "cypher": "match (:ENTITY{name:'parse code'}) - [:Relationship{name:' appear'}]-> (m) return distinct m.name"}, {"query": "Can you ask the following three Ruan for personal information other than nationality Brazil?", "cypher": "match (:ENTITY{name:'Vertinio'}) --(m) with m order by m.name where m.name <> 'Brazil' return distinct m.name limit 3"}, {"query": "Do you know the Silk Road sign and the Great Wall commemorative stamp? Tell me what you know.", "cypher": "match (x:ENTITY{name:'silk road markings; monumental stamps of the Great Tower'}) --(q) return q.name order by q.name"}, {"query": "What is the shortest relationship between the two layers of consular arbitration and consular immunity?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'consular refereeing rights'}) - [*..2]-(b:ENTITY{name:'consular immunity'})) return count ((p)"}, {"query": "Which book has the uniform number 10094-568?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Do you know the English name of the first secondary school in Changsha City, Hunan Province?", "cypher": "match (:ENTITY{name:'First secondary school in Changsha City, Hunan Province'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'English name'}]->(n) return distinct n.name"}, {"query": "Where is Pirate Andy's debut film? What is the gender of Pirate Andy? What is his foreign name?", "cypher": "Match (:ENTITY{name:'Pirate Andy'}) - [:Relationship{name:'Entry into the game'}]->(n) return n.name as name union all match (:ENTITY{name:'Pirate Andy'}) - [:Relationship{name:'Gender'}]->(m) return m.name as name union all match (:ENTITY{name:'Pirate Andy'}) - [:Relationship{name:'Foreign language name'}]-(r>return r.name as name"}, {"query": "The app is developed by which developer and is it free?", "cypher": "match (m:ENTITY{name:'Backup'}),(m) - [:Relationship{name:'developer'}]->(n), (m) - [:Relationship{name:'is there a charge'}]->(h) return n.name,h.name"}, {"query": "Can you tell me what the third level of the labels have to do with the business premises?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'place of business'}) return distinct n.name"}, {"query": "What reports or declarations were issued on December 1, 2004? Can you name four?", "cypher": "match (:ENTITY{name:'September 7, 2011'}) <- [:Relationship{name:' release date'}]- (n) return n.name limit 4"}, {"query": "Can you tell me what kind of resistor cabinet is very hot, the kind that we have a lot of in our country?", "cypher": "match (p:ENTITY{name:' currently, there are a lot of electricity distribution'}) <- [:Relationship{name:' product overview'}]- (q) return q.name"}, {"query": "Can you explain to me the technology behind the 100 Vengeance Gates?", "cypher": "match (:ENTITY{name:'100 Gate of Revenge'}) --(h) with h order by h.name where h.name <> 'technology product' return h.name"}, {"query": "What is the official position of the head of state?", "cypher": "match (:ENTITY{name:'high'}) - [:Relationship{name:'official'}]->(m) return distinct m.name"}, {"query": "Do you know what the title of an artist is that was created by the Chinese Union of Literature and the China Drama Association?", "cypher": "match (:ENTITY{name:'China Literature Union, China Theatre Association'}) <- [:Relationship{name:'established unit'}]- (n) return distinct n.name"}, {"query": "The book is a collection of Chongqing Publishing Group's boutique books, written by Moon Chun and Shih-Wai, and I would like to know more about the book, please find me three.", "cypher": "match (n:ENTITY{name:'\u590f\u58a8\u7af9\u7cbe\u54c1\u5377'}) -->(h) with h order by h.name where h.name <> 'Chongqing Publishing Group' and h.name <> '\u8499\u4e2d\u667a\u822a' return h.name limit 3"}, {"query": "Can you tell me about the collapse of a construction site on Line 12 of the Shanghai Metro at 12.31 am on the Golden Gate Road in Pudong New Area?", "cypher": "match (:ENTITY{name:'12.31 Shanghai Metro Line 12 one-building collapse accident'}) --(q) with q order by q.name where q.name <> 'Pudong New Area Gold Seed Road' return q.name"}, {"query": "Do you have any other tags for Liu Xiaobo besides the person?", "cypher": "match (:ENTITY{name:'\u7965\u5fe0'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'person' return p.name limit 1"}, {"query": "Did you know that Chinese people with talent do yoga?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(m),(m) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 1"}, {"query": "The author of the book, who is a Chinese writer, wrote about the five representative works of this Ming Dynasty figure.", "cypher": "match (:ENTITY{name:'\u660e\u671d'}) <- [:Relationship{name:'\u56fd\u7c4d'}]-(n),(n) - [:Relationship{name:'representing work'}]->(h) return h.name order by h.name limit 5"}, {"query": "The film, which runs for 96 minutes, features Wang Vijun and Lee Ji-hye.", "cypher": "match (p:ENTITY{name:'96 minutes'}) <--(x) --> ((q:ENTITY{name:'Wang Vi Chong Li Li River'}) return x.name"}, {"query": "Help me find two other movies with FAMA farmers in addition to Hurricane Irma", "cypher": "match (:ENTITY{name:'FAMA farmer'}) - [:Relationship{name:'represented works'}]->(n) where n.name <>'Hurricane rises (feat. wheat) ' return n.name limit 2"}, {"query": "The car is a small, lightweight, compact, and lightweight vehicle.", "cypher": "match (:ENTITY{name:'4255mm/1799mm/1452mm'}) <- [:Relationship{name:'model size'}]-(p),(p) - [:Relationship{name:'axle distance'}]->(x) where x.name <> '2637 mm' return distinct x.name limit 5"}, {"query": "Can you find me two dishes made from yellowfin and introduce them?", "cypher": "match (:ENTITY{name:' yellow flowerfish'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 2"}, {"query": "I wonder what novels the novelist Four Little Swans has written?", "cypher": "match (:ENTITY{name:'four little swans'}) <- [:Relationship{name:'author'}]-(p) - [:Relationship{name:'Chinese name'}]->(m) return distinct m.name"}, {"query": "What are the five main achievements of Daye Lin?", "cypher": "match (:ENTITY{name:'Daye Lin'}) <- [:Relationship{name:'foreign language name'}]-(h),(h) - [:Relationship{name:'main achievement'}]->(q) return distinct q.name limit 5"}, {"query": "The school is ZUNYI HANGTIAN MIDDLE SCHOOL, located in Guangzhou's middle section of Guangzhou's Shenzhen district.", "cypher": "match (:ENTITY{name:'Relationship:'main award'}->(p) return p.name order by p.name limit 10"}, {"query": "Can you recommend four songs released by Banner Entertainment?", "cypher": "Match (:ENTITY{name:'Banna Entertainment'}) <- [:Relationship{name:'record company'}]- (x) return x.name limit 4 This is a list of all the different ways Banna Entertainment is credited in the database."}, {"query": "Can you help me find three Taiwanese pop singers?", "cypher": "match (:ENTITY{name:'Taiwan'}) <- [:Relationship{name:'place of birth'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='pop singer' return m.name limit 3"}, {"query": "Write the information of the work in the four-layer relationship between two analytical techniques and operations: chemical analysis and basic operations.", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:' Analytical techniques and operations 2: chemical analysis and basic operations'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "I'm not sure if I can get my black card.", "cypher": "match (n:ENTITY{name:' arrange'}) --(x) return x.name"}, {"query": "What is the shortest relationship path between a Ka-29 and a Ka-50 helicopter in 2 layers?", "cypher": "The number of return paths is calculated by the number of return paths."}, {"query": "Help me find three songs sung by the Oasis.", "cypher": "match (:ENTITY{name:'Relationship{name:'songwriter'}]-(m) return distinct m.name limit 3"}, {"query": "What is the shortest relationship path between the two layers of the word \"capture\" and \"capture\"?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest paths'}) - [:Relationship*..2]-(b:ENTITY{name:'shortest paths'})) return count ((p)"}, {"query": "And what do you know what the ants are called?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'alias'}]- (x) return x.name order by x.name"}, {"query": "The film is based on the book of the same name by the writer and director of the film, A.S.S.S.", "cypher": "match (:ENTITY{name:' Midnight rose glass'}) --(p) with p order by p.name where p.name <> 'connected' return p.name"}, {"query": "What is the problem with green tea from Taiwan?", "cypher": "match (:ENTITY{name:'Thaian'}) <- [:Relationship{name:'origin'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='asphalt green tea' return distinct m.name"}, {"query": "Which games and Pocket Miner 2 are of the same game type, and what are the respective labels of these games? Please sort by the number of labels for each game from small to large.", "cypher": "match (n:ENTITY{name:'pocket miner2'}) - [:Relationship{name:'game type'}]->(:ENTITY) <-[:Relationship{name:'game type'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you name a Buddha that is popularly believed and loved in the folk?", "cypher": "match (h:ENTITY{name:'Vision is the most trusted and most intimate of the Bodhisattvas, each one of whom is the Buddha, and rarely interacts with other living beings."}, {"query": "Help me find the most common synonyms and antonyms", "cypher": "match (:ENTITY{name:'relate to [word definition]'}) - [:Relationship{name:'near term'}]->(n) return n.name as name union all match (:ENTITY{name:'relate to [word definition]'}) - [:Relationship{name:'relate to'}]->(m) return m.name as name"}, {"query": "What is the chemical formula of CH6N2?", "cypher": "match (:ENTITY{name:'CH6N2'}) <- [:Relationship{name:'chemical formula'}]- ((m) return distinct m.name"}, {"query": "Tell me the top 10 Chinese names for a happy life in a small group of 2Bs?", "cypher": "match (:ENTITY{name:'Happy Life of a Group of 2B'}) - [:Relationship{name:'Chinese Name'}]-> (n) with n order by n.name return distinct n.name limit 10"}, {"query": "The following is a list of links to articles on Rucugoza Aimable, a Rwandan man who was involved in a two-tiered relationship.", "cypher": "match (n:ENTITY{name:'Rucugoza Aimable'}) - [*1..2]->(x) where x.name<>'Rwanda' return distinct x.name"}, {"query": "Can you tell me all the information you know about Lao-Mushengland nationwide?", "cypher": "match (:ENTITY{name:'Shenzhen [national labour model]'}) - [:Relationship*1..2]-(p) return distinct p.name limit 10"}, {"query": "One word about the year 1248?", "cypher": "match (:ENTITY{name:'1248 year'}) --(m) with m order by m.name return distinct m.name skip 1 limit 1"}, {"query": "I would like to know where this unknown person has worked, do you have 5 articles?", "cypher": "match (:ENTITY{name:' not known'}) <- [:Relationship{name:' ethnicity'}]-(n),(n) - [:Relationship{name:' used to be active'}->(p) return p.name skip 2 limit 3"}, {"query": "What is the nickname of the cigarette factory in China's capital, Lu'an?", "cypher": "match (:ENTITY{name:'China's capital of Rusein; Tobacco City'}) - [:Relationship{name:'other name'}]-> (x) return distinct x.name"}, {"query": "What is the name of the '07 dress?", "cypher": "match (:ENTITY{name:'07 style pink suit'}) --(p) with p order by p.name return p.name limit 1"}, {"query": "What are the benefits of paralyzed beef?", "cypher": "match (:ENTITY{name:'Lumpy beef'}) - [:Relationship{name:'effect'}]->(m) return distinct m.name"}, {"query": "What are the types of relationships in the three layers that Guo Zhongwen is talking about?", "cypher": "The following pages link to The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns"}, {"query": "What about the natural number 1?", "cypher": "match (:ENTITY{name:'1[one of the natural numbers]'}) --(h) with h order by h.name return h.name"}, {"query": "The first three tags for 18 are:", "cypher": "match (:ENTITY{name:'18 connected'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 3"}, {"query": "Which people have the same date of birth as Th\u00f3risson Gudmann, and what labels do they have?", "cypher": "The following is a list of all the different ways Th\u00f3risson Gudmann is credited in the database:"}, {"query": "Please help me find the information of five Serbian people, Mirda Kovacic and Milian.", "cypher": "match (n:ENTITY{name:'Mirdakovi\u0107 Milian'}) - [*]->(x) where x.name <>'Serbia' return distinct x.name limit 5"}, {"query": "Please list which schools are designated as Experimental Schools of Modern Education Technology.", "cypher": "match (:ENTITY{name:' Experimental School of Modern Education Technology'}) --(m) return m.name order by m.name"}, {"query": "What are the different labels of the works that belong to the same period as the one-offs? Can you please list them in order of number of labels?", "cypher": "match (n:ENTITY{name:'solo marked with a person's name'}) - [:Relationship{name:'s age'}]->(:ENTITY) <- [:Relationship{name:'s age'}-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect ((r.name) ORDER BY c"}, {"query": "Can you give me three exhibitions of the automotive parts industry?", "cypher": "match (:ENTITY{name:'Automotive parts'}) <- [:Relationship{name:' industry'}]- (x) return x.name limit 3"}, {"query": "Find out about five people in the four-tier relationship of sports personality Khrushchev Ant?", "cypher": "match (n:ENTITY{name:'Kru\u0161i\u0107 Ant'}) - [*1..4]->(x) where x.name <> 'sportsman' return distinct x.name limit 5"}, {"query": "Please tell me that three of my occupations are Japanese words?", "cypher": "match (q:ENTITY{name:'word writer'}) <-[:Relationship{name:'profession'}]- (p) return distinct p.name limit 3"}, {"query": "What are the prerequisites for opening a sale?", "cypher": "match (:ENTITY{name:' open listing [real estate term]'}) - [:Relationship{name:' necessary condition'}]->(n) return n.name"}, {"query": "What are some of the books by Zheng He and what are they classified as?", "cypher": "match (:ENTITY{name:'Zhu Hengfu'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Tag{name:'tag'}]->(q) return distinct h.name,q.name"}, {"query": "What are the top 5 achievements of students who graduated from Harbin Teachers' University?", "cypher": "match (:ENTITY{name:'Harvard Teachers College'}) <- [:Relationship{name:'Graduate School'}]-(h),(h) - [:Relationship{name:'Main achievements'}]->(p) return distinct p.name limit 5"}, {"query": "What is the musical style of the song 2 BE FREE by Twins?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "What are the Chinese names for a sparkling? (list ten)", "cypher": "match (:ENTITY{name:' a little bit of a joke'}) - [:Relationship{name:' Chinese name'}]-> (x) with x order by x.name return distinct x.name limit 10"}, {"query": "I'm not sure if I should be the first to send you the top five male achievements.", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(p) - [:Relationship{name:'main achievement'}]->(m) return m.name order by m.name limit 5"}, {"query": "The compound is 1-DNJ, and its molecular formula is 1-DNJ.", "cypher": "match ((:ENTITY{name:'1-DNJ'}) - [:Relationship{name:'molecular'}]-> (m) return m.name"}, {"query": "How many people live in your village now?", "cypher": "match ((:ENTITY{name:'Mengzhi Village'}) - [:Relationship{name:'population'}]-> (x) return x.name"}, {"query": "Instantly search for 0-2 year old dolls book B link tags?", "cypher": "match (:ENTITY{name:'0-2 years old doll book B'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "What do you know about the Red Dust Scroll? Help me find the other four pieces of information in the second layer.", "cypher": "match (:ENTITY{name:' red dust roll'}) - [:Relationship*1..2]-(p) where p.name <> 'books' return p.name limit 4"}, {"query": "Find out about the inner workings of French footballer Zeghdane Lehit's two-tiered relationship.", "cypher": "match (n:ENTITY{name:'Zeghdane Lehit'}) - [:Relationship*1..2]->(x) where x.name<>'Zeghdane Lehit, French football player\u3002' return distinct x.name"}, {"query": "I'm curious to know what the theme of the 2011 Mid-Autumn TV show is, can you help me find out?", "cypher": "match ((:ENTITY{name:'2011 Central Television Mid-Autumn Evening Meeting'}) - [:Relationship{name:'subject'}]-> (m) return m.name"}, {"query": "Can you tell me about the main works of this Chinese man? Can you tell me 10 lines?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(p) - [:Relationship{name:'main works'}]->(h) return h.name order by h.name limit 10"}, {"query": "What is the price of Romy Rich's books?", "cypher": "match (:ENTITY{name:'Romy Rich'}) <- [:Relationship{name:'author'}]- ((n) - [:Relationship{name:'pricing'}]->(q) return distinct q.name"}, {"query": "Can you find me five books priced at $100 and when they will be published?", "cypher": "match (:ENTITY{name:'100\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you list the works published by Jiangsu Sheng Science and Technology Publishing?", "cypher": "match (:ENTITY{name:'Relationship{name:'publishing'}}) - (n) return distinct n.name"}, {"query": "What is the shortest distance between Dingqing County and Zhongguan County in the 2nd tier?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Dingqing County'}) - [*..2]-(b:ENTITY{name:'Shongguan County'})) return count ((p)"}, {"query": "Do you know how many pens there are for that word?", "cypher": "match (:ENTITY{name:'\u7f18'}) <- [:Relationship{name:'Chinese name'}]- ((n) - [:Relationship{name:'pencil'}]->(q) return distinct q.name"}, {"query": "What important events happened in the life of Tomomi Hosoda? Can you tell me five?", "cypher": "match (:ENTITY{name:'Oshumi'}) <- [:Relationship{name:' Chinese name'}]- ((q),(q) - [:Relationship{name:' important event'}]->(x) return x.name order by x.name limit 5"}, {"query": "What are the major achievements of students graduating from the Chinese University of Media (Beijing Broadcasting Academy)?", "cypher": "match (:ENTITY{name:'China University of Media and Communication'}) <- [:Relationship{name:'Graduate School'}]- ((n) - [:Relationship{name:'Major achievements'}]->(q) return distinct q.name"}, {"query": "What are the types of kilobots and what are their main applications?", "cypher": "match (:ENTITY{name:'Kilograms of [mechanical equipment]'}) - [:Relationship{name:'common type'}]->(n) return n.name as name union all match (:ENTITY{name:'Kilograms of [mechanical equipment]'}) - [:Relationship{name:'Applications'}]->(m) return m.name as name"}, {"query": "Can you give me a list of the names of the relationships that Ai Weiwei is involved in?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'in the loop'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "How do you understand 17 days of losing weight?", "cypher": "match (:ENTITY{name:'17 days thin one round'}) --(m) with m order by m.name return m.name"}, {"query": "I found three recipes made with five flower meats and the ingredients used helped me find them.", "cypher": "match (:ENTITY{name:'five-piece'}) <- [*]-(m), (m) - [:Relationship{name:'additional'}]->(n) return distinct m.name, n.name limit 3"}, {"query": "Please find me five literary works published by Guangdong Education Publishing, who are the authors?", "cypher": "match (:ENTITY{name:' Guangdong Education Publishing'}) <- [*]-(m), (m) - [:Relationship{name:' author'}]->(n) return distinct m.name, n.name limit 5"}, {"query": "Do you know what software can run on Android 1.6?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What do you mean, -40\u00b0C cold storage?", "cypher": "match (x:ENTITY{name:'-40\u00b0C cold storage box'}) --(m) with m order by m.name return m.name"}, {"query": "What is the name of the long novel by Swiss author Johanna Spyri?", "cypher": "match (:ENTITY{name:'swiss-born Johanna Spyri'}) <- [:Relationship{name:'author'}]-(m), (m) - [:Relationship{name:'literary genre'}]->(n) where n.name='long novel' return distinct m.name"}, {"query": "Social Activities 111. What are the labels for the Yukon Song Festival?", "cypher": "match (:ENTITY{name:'111\u00b7Oceanese Song Festival'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'social activity' return q.name"}, {"query": "I'm now curious about Kawai Namori's whole story.", "cypher": "match (:ENTITY{name:'Kuwaina's name'}) --(x) return x.name skip 3"}, {"query": "MarineKing is a professional eSports player in StarCraft 2, do you know what his main achievements are?", "cypher": "match (:ENTITY{name:'MarineKing is a professional eSports player, formerly known as Lee Jong-hoon, and a top Korean player. \u25b2'})"}, {"query": "What kind of aircraft is the B-17 bomber?", "cypher": "match (:ENTITY{name:'B-17 bomber'}) <- [:Relationship{name:'former type'}]- (p) return distinct p.name"}, {"query": "Do you know what the mint brain is also called?", "cypher": "match (:ENTITY{name:'mint brain'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'other name'}]->(q) return distinct q.name"}, {"query": "Can you recommend a service-based software for me?", "cypher": "match (h:ENTITY{name:' service'}) <- [:Relationship{name:' software property'}]- (q) return q.name"}, {"query": "Can you tell me which film and TV series have Kenji Kobayashi and Hiroyuki Hiroyuki as main voices?", "cypher": "match (:ENTITY{name:'Relationship{name:'main voice'}}) - (h) return distinct h.name"}, {"query": "Have you been to the 0.8 Live Live site?", "cypher": "match (:ENTITY{name:'0.8 live'}) --(p) with p order by p.name where p.name <> 'website' return p.name"}, {"query": "Help me find a condensed antonym.", "cypher": "match (:ENTITY{name:'consolidate'}) <- [:Relationship{name:'anti-word'}]-(m) return distinct m.name"}, {"query": "Can you list the top 10 achievements of Jia Yuliu?", "cypher": "match (:ENTITY{name:'Jia Yuliu'}) <- [:Relationship{name:'Chinese name'}]- ((h) - [:Relationship{name:'main achievements'}]->(p) return distinct p.name limit 10"}, {"query": "I want to know when the Big Star Company opened.", "cypher": "match (p:ENTITY{name:'Pai Da Star Company'}) return p.time The name of the match is"}, {"query": "Can anyone explain the main achievements of Wang Xiaolu?", "cypher": "match (:ENTITY{name:'Wang Xiaoyu'}) <- [:Relationship{name:'Chinese name'}]- ((h) - [:Relationship{name:'main achievements'}]->(n) return distinct h.name"}, {"query": "Can you recommend a tablet with 1GB of DDR3 cache in 2 systems?", "cypher": "match (:ENTITY{name:'1GB DDR3 cache'}) <- [:Relationship{name:'system memory'}]- (x) return x.name limit 2 The name of the file is not available"}, {"query": "Find out 310 pages of high school political basics and breakthroughs/how to get started in the three-tiered relationship.", "cypher": "match (n:ENTITY{name:'high school political basics and breakthroughs'}) - [:Relationship*1..3]->(x) where x.name <>'310 pages' return distinct x.name"}, {"query": "Is there any business called Beijing Xiangda Fire Engineering Co., Ltd?", "cypher": "match (n:ENTITY{name:'Beijing Xianganda Fire Engineering Co. Ltd'}) where n is not null return 1"}, {"query": "Did you know that Liu Jian is a cook by profession?", "cypher": "match (x:ENTITY{name:'Relationship{name:'profession'}]-> (p) return p.name order by p.name"}, {"query": "Can you recommend 7 games for $1.29?", "cypher": "match (:ENTITY{name:'$1.29'}) <- [:Relationship{name:' game current price'}]- (x) return x.name limit 7"}, {"query": "Do you want to know the 5 elements of the 4 layer relationship that are related to the Chinese work titled \"Shanghai Shifu\"?", "cypher": "match (n:ENTITY{name:'Schools are not used to teaching'}) - [*1..4]->(x) where x.name<> 'Schools are not used to teaching' return distinct x.name limit 5"}, {"query": "Do you know where the 10 Tibetan-speaking regions are?", "cypher": "match (:ENTITY{name:' in Tibetan'}) <- [*]-(m), (m) - [:Relationship{name:' geographical location'}]->(n) return m.name, n.name limit 10"}, {"query": "Can you name one person other than Anna Chapman and Sergey Sobyanin?", "cypher": "match (n:ENTITY{name:'Costorrom National University'}) - [:Relationship{name:'known alumni'}]->(h) where h.name <> 'Anna Chapman' and h.name <> 'Sergei Sobyanin' return distinct h.name limit 1"}, {"query": "A list of 1+1 easy wins; Optimized training: 7th grade math book labels?", "cypher": "match (:ENTITY{name:'1+1 easily crowned; optimized training: 7th grade math'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'books' return n.name"}, {"query": "How long is the entire journey on Shenzhen Expressway?", "cypher": "match (:ENTITY{name:'Shenzhen Highway'}) - [:Relationship{name:'full length'}]->(n) return n.name as name union all match (:ENTITY{name:'Shenzhen Highway'}) - [:Relationship{name:'passage date'}]->(m) return m.name as name"}, {"query": "What is the common name of the sea water cliff? Can you name three?", "cypher": "match (:ENTITY{name:'Heavy River Cliff'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'Local name'}]->(h) return h.name order by h.name limit 3"}, {"query": "One incident occurred in a student dormitory building in the Xuehui campus of Shanghai Business School, and the accident was called \"What's up?\"", "cypher": "match (:ENTITY{name:' Student dormitory building at Xu Hui Campus of Shanghai Business School'}) <- [:Relationship{name:' event address'}]- (p) return p.name"}, {"query": "What job is responsible for the daily updates and content editing of the app?", "cypher": "match (x:ENTITY{name:'APP daily updates, content editing etc. '}) <- [:Relationship{name:' content'}]- (q) return distinct q.name"}, {"query": "What is Diana Tomlinder's profession?", "cypher": "match (:ENTITY{name:'Diana Tomlind'}) <- [:Relationship{name:'Chinese name'}]- ((q) - [:Relationship{name:'profession'}]->(n) return distinct n.name"}, {"query": "What is the name of the county civil affairs office at 2 Longqing Street in Lower Temple Town, Khejiang County?", "cypher": "match (:ENTITY{name:'Kembang County Lower Temple Town Lungqing Street 2'}) <- [:Relationship{name:'residence'}]-(p),(p) - [:Relationship{name:'abbreviated'}]->(m) where m.name <> 'County Civil Affairs' return distinct m.name limit 1"}, {"query": "Who are the players?", "cypher": "match (:ENTITY{name:' current player'}) <--(n) return n.name"}, {"query": "I was asked to provide 20 relevant information about the Liaoning Institute of Technology in three layers, and the results were sorted in descending order.", "cypher": "match (:ENTITY{name:'Leningrad Polytechnic University'}) - [*1..3]-(p) return p.name order by p.name DESC limit 20"}, {"query": "Do you know what other major accomplishments Xu Ma Ting has besides being a deputy fire department investigator and the commander of the Shandong Provincial Fire Brigade?", "cypher": "match (n:ENTITY{name:'\u8bb8\u5146\u4ead'}) - [:Relationship{name:'main achievements'}]->(h) with h order by h.name where h.name <> 'Deputy-level investigator of the Department of Fire Protection' and h.name <> 'Captain of the Shandong Provincial Fire Protection' return h.name limit 2"}, {"query": "Please give me 5 tips for romance novels.", "cypher": "match (:ENTITY{name:'speech novel'}) --(n) return n.name order by n.name limit 5"}, {"query": "What is the name of the game made by Sierra Attraction?", "cypher": "match (:ENTITY{name:'Sierra Attraction'}) <- [:Relationship{name:'game making'}]- (p) return distinct p.name"}, {"query": "The school at 186 South Tai-Shan Street in Rincun, Sichuan province, belongs to which school?", "cypher": "match (:ENTITY{name:'186 South Street, Taizhan, Sichuan, Sichuan Province) <- [:Relationship{name:'school address'}]- ((x),(x) - [:Relationship{name:'attributes'}]->(p) return distinct p.name limit 1"}, {"query": "Can anyone tell me who wrote the long-winded wind chimes?", "cypher": "match (q:ENTITY{name:'the rainbow'}) --(n) return n.name order by n.name"}, {"query": "Is there anyone who calls upon the name of the Most Merciful?", "cypher": "match (n:ENTITY{name:'Wang Fu Min'}) where n is not null return 1"}, {"query": "Help me find a floor that absorbs less water, is wear resistant, has a good material and color balance on both sides", "cypher": "match (:ENTITY{name:'lower water absorption, better wear resistance'}) <- [:Relationship{name:'advantages'}]-(m), (m) - [:Relationship{name:'named'}]->(n) where n.name='matching material and shade of the positive and negative sides' return distinct m.name"}, {"query": "I'm not sure if you're familiar with the topic.", "cypher": "match (n:ENTITY{name:'read the sky'}) --(x) return x.name"}, {"query": "What does the ancestral culture symbolize?", "cypher": "match (:ENTITY{name:'ancestral culture'}) - [:Relationship{name:'symbol'}]->(m) return distinct m.name"}, {"query": "Can you help me find two books by Liu Xiaobo?", "cypher": "match (:ENTITY{name:'\u798f\u7965'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 2"}, {"query": "I bet you that this song was written for the military department of the new district of Zhejiang, sung by Zhao Yan, and I want 4 more information about this song.", "cypher": "match (n:ENTITY{name:'\u4e1c\u6253'}) -->(h) with h order by h.name where h.name <> '\u5e06' and h.name <> 'The song was written for the Military Department of the New Territory of the Pacific Ocean."}, {"query": "This question is about the English name for tubular bowel cancer, would you?", "cypher": "match ((:ENTITY{name:'tubal gland tumor [colon]'}) - [:Relationship{name:' English name'}]-> (h) return h.name"}, {"query": "Can you name some of Peng Jiabi's most representative works?", "cypher": "match (p:ENTITY{name:'Peng Jiabi'}) <- [:Relationship{name:'English name'}]- ((q) - [:Relationship{name:'represents work'}]->(h) return distinct h.name"}, {"query": "What is the shortest relationship path between the two layers of the sea turtle and the tide turtle?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'seahorse family'}) -[:Relationship*..2]-(b:ENTITY{name:'seahorse family'})) return count ((p)"}, {"query": "Did you have trouble recommending a few free-to-play games?", "cypher": "match (:ENTITY{name:'free to operate'}) <- [:Relationship{name:'free to operate'}]- (m) return distinct m.name"}, {"query": "Do you know who is the head of urology?", "cypher": "match (p:ENTITY{name:'urology'}) <--(x) -->(q:ENTITY{name:'physician in charge'}) return x.name"}, {"query": "Can you recommend a software that has photo storage, diary keeping, music uploading?", "cypher": "match (:ENTITY{name:' photo storage, diary writing, music upload'}) <- [:Relationship{name:' service'}]- (q) return distinct q.name"}, {"query": "What exhibition is on view from 06/09/2011 to 06/11/2011?", "cypher": "match (:ENTITY{name:'2011/6/9 to 2011/6/11'}) <- [:Relationship{name:'exhibition time'}]- (x) return distinct x.name"}, {"query": "Do you know which accident killed two people and injured three?", "cypher": "match (:ENTITY{name:'2 killed, 3 wounded'}) <- [:Relationship{name:'death'}]- (q) return distinct q.name"}, {"query": "Can you find out the names of 10 alumni of Guangxi Master's University? Please help me introduce them.", "cypher": "match (:ENTITY{name:'Cantonese Teachers' University'}) <- [*]-(m), (m) - [:Describe{name:'description'}]->(n) return distinct m.name, n.name limit 10"}, {"query": "What is a watercolor dam? You told me about the first eight articles.", "cypher": "match (:ENTITY{name:' ink tank'}) --(h) return h.name order by h.name limit 10"}, {"query": "What are the four main ingredients of the cook besides the cooked chicken and the bean soup?", "cypher": "match (n:ENTITY{name:'Lon's Three and His Seven's Party'}) - [:Relationship{name:'starred'}]->(h) where h.name <> 'Fujir\u014d Y\u014d' and h.name <> 'Yajiro Saken' return distinct h.name limit 4"}, {"query": "What kind of work does Jinliang do? Can you tell me no?", "cypher": "match (:ENTITY{name:'Jinliang'}) <- [:Relationship{name:'foreign language name'}]- ((x) - [:Relationship{name:'profession'}]->(h) return distinct h.name limit 1"}, {"query": "What earthquakes have a magnitude of 39.5?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Give me three principles for the design and application of interest rate derivatives: case analysis, and other relevant information besides the mechanical industry publisher.", "cypher": "match (:ENTITY{name:'Design and application of interest rate derivatives: case analysis'}) --(m) with m order by m.name where m.name <> 'Machinery industry publisher' return distinct m.name limit 3"}, {"query": "What is the basic information about the three levels of relationship of Nitzan Nitamar?", "cypher": "match (n:ENTITY{name:'Nitzan Nitamar'}) - [*1..3]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "I'm going to give you a brief introduction to two of the most powerful contemporary oil painters.", "cypher": "match (:ENTITY{name:'painter'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 2"}, {"query": "Who are the representative works of the puppetry of Bobby Pope?", "cypher": "match (:ENTITY{name:'Bobby Pope High School's mother's name'}) <- [:Relationship{name:'represents work'}]- (x) return x.name order by x.name limit 5"}, {"query": "Do you know which list Gautam Ganguly won?", "cypher": "match (:ENTITY{name:'Kachin'}) <- [:Relationship{name:'champion'}]- (q) return distinct q.name"}, {"query": "Do you know of any places that have a two-link link to the organization?", "cypher": "match (n) - [:Tag*2{name:'tag'}]->(p:ENTITY{name:'organization'}) RETURN distinct n.name limit 3"}, {"query": "Do you know what kind of relationships are in the three layers?", "cypher": "The following is a list of all the different ways The Winner is credited in the database:"}, {"query": "I'm going to tell you about one of the famous places in Danyang eight.", "cypher": "match (:ENTITY{name:'Danyang eight'}) <- [:Relationship{name:'foreign language name'}]-(p) - [:Relationship{name:'famous attractions'}]->(q) return q.name order by q.name limit 1"}, {"query": "What are the 70 minute movies you can recommend?", "cypher": "match (:ENTITY{name:'70 minutes'}) <- [:Relationship{name:'long'}]- (h) return h.name limit 3 The game is played in a single round-robin format."}, {"query": "The Chinese name is Li, and what is his profession?", "cypher": "match (:ENTITY{name:'\u674e\u6743'}) <- [:Relationship{name:' Chinese name'}]- ((h) - [:Relationship{name:' profession'}]->(m) return distinct m.name"}, {"query": "Can you help me find out about the 29th secondary school in Jiko City?", "cypher": "match (:ENTITY{name:'Jokogawa City Secondary School'}) - [*1..2]-(p) return p.name limit 5"}, {"query": "What are the publications published by Yunnan People's Press? What is the price? Please list 5 for me.", "cypher": "match (:ENTITY{name:'Yunnan People's Press'}) <- [:Relationship{name:'Publish'}]-(h),(h) - [:Relationship{name:'Pricing'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Help me find 10 species of seagulls", "cypher": "match (:ENTITY{name:'seahorse family'}) <- [:Relationship{name:'seahorse family'}]-(m) return distinct m.name limit 5"}, {"query": "I'm going to be a little bit more specific about the subject of the post, but I'm going to be more specific about the subject of the post, which is the subject of the post.", "cypher": "match (n:ENTITY{name:' and the next after the spring'}) - [*1..2]->(x) where x.name <>'seven-line' return distinct x.name"}, {"query": "What other people are there in the labels of Deng Xiaoping besides martyrs and figures?", "cypher": "match (n:ENTITY{name:'Tag'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'martyr' and h.name <> 'person' return distinct h.name limit 2"}, {"query": "I'm interested in the 100 ton forest puzzle, can you tell me about it?", "cypher": "match (:ENTITY{name:'100 tonnes of forest puzzle'}) --(m) with m order by m.name return m.name"}, {"query": "Please help me find all the information about the KF-9-AMP assault rifle.", "cypher": "match (n:ENTITY{name:'KF-9-AMP assault rifle'}) --(x) return distinct x.name"}, {"query": "Who is the director, writer and lead actor of the film Perfect Guy for me?", "cypher": "Match (:ENTITY{name:'perfect guy'}) - [:Relationship{name:'director'}]->(n) return n.name as name union all match (:ENTITY{name:'perfect guy'}) - [:Relationship{name:'writer'}]->(m) return m.name as name union all match (:ENTITY{name:'perfect guy'}) - [:Relationship{name:'actor'}]-(r>) return r.name as name"}, {"query": "What is the name of this drug called horseweed?", "cypher": "The name of the drug is \"Relationship\" (Relationship) and the name of the drug is \"Relationship\" (Relationship)."}, {"query": "The company's profile is listed in the three-tier organization of Hangzhou Hangzhou Liu Yun Technology Co., Ltd.", "cypher": "match (n:ENTITY{name:'Hangzhou Hangzhou Cloud Technologies Co., Ltd'}) - [*1..3]->(x) where x.name <> 'organization' return distinct x.name"}, {"query": "I am going to the 2010 Guangzhou International Home Decorations and Furniture Exhibition in China, can you tell me where it is?", "cypher": "match ((:ENTITY{name:'2010 China Guangzhou International Home Decorations, Home Decorating Exhibition'}) - [:Relationship{name:' Exhibition Location'}]-> (q) return q.name"}, {"query": "Can you find 10 plants with sub-plant lines, twin-leafed plants?", "cypher": "match (:ENTITY{name:' by sub-plant gate'}) <- [:Relationship{name:' gate'}]- (mn) - [:Relationship{name:' programme'}->(n:ENTITY{name:' by twin leaf plant gate'}) return mn.name order by mn.name limit 10"}, {"query": "Please tell me 10 things you know about the Ujian-Zhongshan Strait.", "cypher": "match (:ENTITY{name:'Ujiangjiang Dragon Gorge'}) --(p) return p.name limit 10 The name of the game is \"Ujiang Dragon Gorge\""}, {"query": "Can you name three types of chemicals with the EINECS registration number 000-000-0?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "I'm not sure what kind of job I can sell, but I'm not sure what kind of job I can sell.", "cypher": "match (n:ENTITY{name:'\u590f\u4e0d\u51e1'}) <- [:Relationship{name:'Chinese name'}]- ((x) - [:Relationship{name:'profession'}]->(h) return distinct x.name"}, {"query": "Help me find three southern lions.", "cypher": "match (:ENTITY{name:'Southpaw'}) <- [:Relationship{name:'at the time'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='artist' return distinct m.name limit 3"}, {"query": "Who won the award for the best TV show in 2003?", "cypher": "match (:ENTITY{name:'2003 Best Television Show Creative Award'}) --(x) return distinct x.name"}, {"query": "Can you name 10 exhibitions in Quanzhou, China?", "cypher": "match (:ENTITY{name:'China's Spring Valley'}) <- [:Relationship{name:'Exhibition city'}]- (n) return n.name limit 10"}, {"query": "Tell me about the top 10 labels for the Encyclopedia of babies aged 0-6 years old?", "cypher": "match (:ENTITY{name:'0-6 years old baby encyclopedia'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 10"}, {"query": "Please find the vocabulary shortcuts at level 1-4 and the annotation labels in addition to the publications.", "cypher": "match (:ENTITY{name:'1-4 level vocabulary library'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'publication' return m.name"}, {"query": "Please help me find the other 6 pieces of information in the 2 layers of this cliffhanger musical piece.", "cypher": "match (:ENTITY{name:' cliff face'}) - [:Relationship*1..2]-(p) where p.name <> 'musical work' return p.name limit 6"}, {"query": "What are the names of the objects with the same label as asteroid 9931? Please list them in order of their number from small to large.", "cypher": "The name of the asteroid is given by the name of the asteroid's name (s) and the name of the asteroid (s) is given by the name of the asteroid (s) and the name of the asteroid (s) is given by the name of the asteroid (s)."}, {"query": "Tell me one of the iconic works of Miyamoto Gao that doesn't include Survivors and Lifesaving, please.", "cypher": "match (n:ENTITY{name:'Michelle Gauss'}) - [:Relationship{name:'representative work'}]->(h) where h.name <> 'survivor' and h.name <> 'life-saving solution' return distinct h.name limit 1"}, {"query": "Can you tell me which relationships are covered in the second issue of the Heat Diary in the two layers?", "cypher": "The following pages link to The Unknown:"}, {"query": "I'm wondering what kind of chemical is CAS No. 1076-38-6?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "The main protagonists of the game are Senkawa-chan and Qin Yusaku, but who are the other two?", "cypher": "match (n:ENTITY{name:'Wolf Game 2: Beast Camp'}) - [:Relationship{name:'starred'}]->(h) where h.name <> 'Senshagawa-chan' and h.name <> 'Ainami-chan' return distinct h.name limit 2"}, {"query": "The following is a list of all the different ways Fernandes Bruno, a Lisbon-born, is credited in the database:", "cypher": "match (n:ENTITY{name:'Fernandes Bruno'}) - [:Relationship*1..3]->(x) where x.name<>'Lisbon' return distinct x.name"}, {"query": "Do you know what Sebastian James stands for?", "cypher": "match (:ENTITY{name:'Sebastian James'}) - [:Relationship{name:'represents work'}]-> (p) return p.name skip 2"}, {"query": "Can you name a year in which Tsing Tzu is in office?", "cypher": "Match (:ENTITY{name:'Relationship{name:'Dynasty'}) - (h) return h.name"}, {"query": "Can you help me find out about the 5 levels of relationships and the novelist's novel about the cheap barbaric wife?", "cypher": "match (n:ENTITY{name:'spouse of a downtrodden man'}) - [*1..5]->(x) where x.name <>'please' return distinct x.name limit 5"}, {"query": "What are the main awards that this independent high school has won? Can you name 5?", "cypher": "match (:ENTITY{name:' independent high school'}) <- [:Relationship{name:' category'}]-(p) - [:Relationship{name:' major award'}]->(h) return h.name order by h.name limit 5"}, {"query": "I'm going to be a little bit more specific about this, but I'm going to be a little more specific about this, because I'm going to be a little bit more specific about this.", "cypher": "match (n:ENTITY{name:' and bamk-khyun\u00b7efet-yin a song'}) - [:Relationship*1..2]->(x) where x.name <> 'jack-john' return distinct x.name"}, {"query": "Do you know what projects are being paid for by WEBLCC?", "cypher": "match (:ENTITY{name:' undertaken by WEBLCC entity'}) <- [:Relationship{name:' fees and costs'}]- (x) return x.name"}, {"query": "Please share with me all the information about the relationship between the two levels of Ho Chi Minh City Primary School.", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Hoi-chan Primary School'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What are the top five achievements of Chinese talents?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]- ((q),(q) - [:Relationship{name:'main achievements'}]->(n) return distinct n.name limit 5"}, {"query": "The question is, what are the three categories of dry bread besides bread and breakfast?", "cypher": "match (n:ENTITY{name:'peeled grape bread'}) -[:Relationship{name:'categorized'}]->(h) where h.name <> 'bread' and h.name <> 'breakfast' return distinct h.name limit 3"}, {"query": "Can you recommend 15 Japanese variety shows and dramas?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'country area'}]- (x) return x.name limit 15"}, {"query": "The Amber Year China Network Radio Association was founded by Deng Dong on December 12, 2014.", "cypher": "match (n:ENTITY{name:'Amber Year China Network Radio Association'}) -->(h) with h order by h.name where h.name <> '2014/12/12' and h.name <> 'Bei Dong' return h.name limit 5"}, {"query": "How can you change yourself when the world cannot change?", "cypher": "match (:ENTITY{name:'15 Change yourself when the world can't change'}) --(q) with q order by q.name return q.name"}, {"query": "The compound called sodium chloride. Do you know its chemical formula?", "cypher": "match ((:ENTITY{name:'regular phosphate salts'}) - [:Relationship{name:'chemical formula'}]-> (q) return q.name"}, {"query": "Can you give me the top five marks in chemistry at the Autumn Class of '05?", "cypher": "match (:ENTITY{name:'05 autumn subject person senior secondary high school chemistry'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "What chemical is C9H19NaO3S?", "cypher": "The name of the function is the name of the function itself."}, {"query": "How much do you know about this man's occupation? Can you name 10?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(p),(p) - [:Relationship{name:'profession'}]->(q) return q.name order by q.name limit 10"}, {"query": "Do you know anything about Xiaoao's nationality and where she was born?", "cypher": "match (:ENTITY{name:' in Xiaoyua'}) - [:Relationship{name:' nationality'}] ->(n) return n.name as name union all match (:ENTITY{name:' in Xiaoyua'}) - [:Relationship{name:' place of birth'}) ->(m) return m.name as name"}, {"query": "The book is published by which publisher?", "cypher": "match (:ENTITY{name:'Keyword'}) <- [:Relationship{name:'book'}]- ((p) - [:Relationship{name:'publisher'}]->(n) return distinct n.name"}, {"query": "Do you know which organizations are hosting the 2011 China International Entrepreneurship Expo in Guangzhou?", "cypher": "match ((:ENTITY{name:'2011 China [Guangzhou] International Entrepreneurship Fair'}) - [:Relationship{name:'host entity'}]-> (h) return h.name"}, {"query": "What are the three categories of fast food soap apart from fast food and soap?", "cypher": "match (n:ENTITY{name:'fast-food soap'}) -[:Relationship{name:' classified'}]->(h) where h.name <> 'fast-food' and h.name <> 'soap' return distinct h.name limit 3"}, {"query": "Do you know the meaning of the word \"sick and tired\"? What kind of literary genre is it?", "cypher": "match (:ENTITY{name:'spanish'}) <- [*]-(m), (m) - [:Relationship{name:'spanish'}]->(n) return m.name, n.name limit 5"}, {"query": "Who is the creator of the Guinness World Record for the largest canopy?", "cypher": "match (:ENTITY{name:'Relationship' name:'Originator'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship' name:'Release time'}) ->(m) return m.name as name"}, {"query": "Do you know the name of the military college where Admiral Shavranov is stationed?", "cypher": "match (m:ENTITY{name:'Admiral Shavranov'}) <- [:Relationship{name:'known alumni'}]- (x) return x.name"}, {"query": "I'm curious to know which novels are being re-released?", "cypher": "The title of the novel is \"The Story of a Girl\" by the author of the novel, which is also the title of the novel."}, {"query": "What is the name of the person born on Christmas Day?", "cypher": "match (:ENTITY{name:'Christmas'}) <- [:Relationship{name:'birthday'}]- ((m) - [:Relationship{name:'alias'}]->(q) return distinct m.name"}, {"query": "Can you give me a list of the top 10 artists in the video?", "cypher": "match (:ENTITY{name:' art direction'}) --(q) return q.name order by q.name limit 10"}, {"query": "Can you tell me about the three professions of this Chinese person?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(q) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 3"}, {"query": "Can you give me three pieces of information about the small-act counterattack?", "cypher": "match (:ENTITY{name:' small character counterattack'}) --(m) with m order by m.name return m.name limit 3"}, {"query": "Do you know of any hotels that have facilities and services with extra beds?", "cypher": "match (n:ENTITY{name:'child bed'}) <- [:Relationship{name:' facilities and services'}]- (h) return h.name limit 10"}, {"query": "What are the main achievements and representative works of Kenneth David Kaunda?", "cypher": "match (:ENTITY{name:'Kenneth David Kaunda'}) - [:Relationship{name:' Major achievements'}]->(n) return n.name as name union all match (:ENTITY{name:'Kenneth David Kaunda'}) - [:Relationship{name:'representing work'}]->(m) return m.name as name"}, {"query": "Do you know what football has to do with the second tier sporting program?", "cypher": "match (n) - [:Relationship*2{name:' sporting project'}]->(p:ENTITY{name:' football'}) RETURN distinct n.name"}, {"query": "What companies are in Shenzhen?", "cypher": "match (p:ENTITY{location:' deep'}) return p.name"}, {"query": "Can you find the 5 colleges that offer medical courses?", "cypher": "match (:ENTITY{name:'pharmaceutical class'}) <- [*]-(m), (m) - [:Relationship{name:'region'}]->(n) return distinct m.name, n.name limit 5"}, {"query": "Can you name the relationships within the three layers that Jos\u00e9 Padilha covers?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "The monotypic brown-browed mulberry belongs to what family and is mainly distributed in which regions?", "cypher": "match (:ENTITY{name:'Relationship{name:'subclass'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'distribution area'}) ->(m) return m.name as name"}, {"query": "I wonder if there are people who were born in Taiwan? Can you give me five examples?", "cypher": "match (:ENTITY{name:' Taiwan'}) <- [:Relationship{name:' place of birth'}]-(p) - [:Relationship{name:' Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "I would like to know about five historical figures and their personal details related to Ma Zhenzhen.", "cypher": "match (n:ENTITY{name:'Mary'}) - [*]->(x) where x.name <> 'historical person' return distinct x.name limit 5"}, {"query": "Please provide information on the two-tier relationship related to the management of the Shenzhen Municipal Basic Agricultural Reserve (MAPR) issued by the Shenzhen Municipal Government.", "cypher": "match (n:ENTITY{name:'Shenzhen City Basic Farmland Reserve Management Measures'}) - [*1..2]->(x) where x.name<>'Shenzhen City Government' return distinct x.name"}, {"query": "Can you tell me about the five Chinese names of the most representative works of deaf musicians?", "cypher": "match (:ENTITY{name:'ears'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'representative work'}]->(h) return h.name order by h.name limit 5"}, {"query": "What is the name of the county?", "cypher": "match (:ENTITY{name:'Canton of the Philippines'}) <- [:Relationship{name:'alias'}]-(m) return distinct m.name"}, {"query": "Help me find 10 physicists.", "cypher": "match (:ENTITY{name:'physician'}) <- [:Tag{name:'tag'}]-(m) return distinct m.name limit 10"}, {"query": "What are the major achievements of people born in 1971?", "cypher": "match (:ENTITY{name:'1971'}) <- [:Relationship{name:'date of birth'}]- ((x),(x) - [:Relationship{name:'main achievement'}]->(q) return q.name order by q.name limit 1"}, {"query": "Can you tell me what reports the UNDP has published?", "cypher": "match (p:ENTITY{name:'UNDP'}) <- [:Relationship{name:' unit'}]- (q) return q.name"}, {"query": "Do college students have names in Chinese?", "cypher": "match (p:ENTITY{name:'Death of a college student'}) - [:Relationship{name:'Chinese name'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you name the year of the 14 Horse signs?", "cypher": "Match (m:ENTITY{name:'Horse year'}) <- [:Relationship{name:'Zodiac'}]- (h) return h.name limit 14"}, {"query": "I would like to know the other 4 information about the singer Asher Book 2 layer.", "cypher": "match (:ENTITY{name:'Asher Book'}) -[:Relationship*1..2]-(p) where p.name <> 'singer' return p.name limit 4"}, {"query": "Have you heard of the Suzhou MBA Teaching Center at Jilin University?", "cypher": "match (:ENTITY{name:'MBA Teaching Center of Suzhou, Jilin University'}) --(p) return distinct p.name"}, {"query": "Can you tell me about the three-layer relationship that the brown-bearded willow is involved in?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Pink-bearded willow'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I would like to know the content of the 5 tier relationship in Chinese called Jiangsu Province High-Tech Products Implementation Rules?", "cypher": "match (n:ENTITY{name:'Guidelines for the implementation of high-tech products in Jiangsu Province'}) - [*1..5]->(x) where x.name<>'Guidelines for the implementation of high-tech products in Jiangsu Province' return distinct x.name"}, {"query": "What are the main ingredients used to make vanilla cream foam?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'main ingredient'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [Relationship'}->(m) return m.name as name"}, {"query": "The hero of the prison, the fearless prisoner, is the symbol of the lion, what else is he representing besides this one?", "cypher": "match (h:ENTITY{name:'Relationship{name:'Chinese name'}]-(n) -[:Relationship{name:'representative work'}]->(x) where x.name <> 'Relationship{name:' in Chinese} return distinct x.name limit 1"}, {"query": "What are the main awards for the institution in the Lake Tekapo district of East Kampong, Shandong province?", "cypher": "match (q:ENTITY{name:'New District of Lake Tang District, East Kampung City, Shandong Province'}) <- [:Relationship{name:'New School address'}]- ((x),(x) - [:Relationship{name:'Main award'}]->(h) return distinct h.name"}, {"query": "Can you tell me how many times you have been hit by a car?", "cypher": "match (:ENTITY{name:'stepping accident'}) <- [:Relationship{name:' event'}]- (h) return h.name"}, {"query": "What is the name of the game in Japanese (English)?", "cypher": "match (:ENTITY{name:' in Japanese (English) '}) <- [:Relationship{name:' game language'}]- (m) return m.name"}, {"query": "Do you know any of his representative works, who performed between 1951 and 1957?", "cypher": "match (:ENTITY{name:'1951 to 1957'}) <- [:Relationship{name:'time of performance'}]-(p) - [:Relationship{name:'represented work'}]->(m) return m.name order by m.name limit 1"}, {"query": "Do you know how many villages have an area of 4.01 square kilometers? Can you name three?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "The following is a list of the top 5 life skills that you can learn about relationships within the 5 layers of the Bigfoot Law:", "cypher": "match (n:ENTITY{name:'The law of the insect'}) - [*1..5]->(x) where x.name <>'life' return distinct x.name limit 5"}, {"query": "The film is 130 minutes long and you recommend 10 movies?", "cypher": "match (n:ENTITY{name:'130 minutes'}) <- [:Relationship{name:'long'}]- (mn) return mn.name limit 10"}, {"query": "What is pv flow?", "cypher": "match (:ENTITY{name:'pv flow'}) - [:Relationship{name:'substance'}]->(m) return distinct m.name"}, {"query": "Li Jiehua is a member of the Association of Guangxi Fine Artists.", "cypher": "match (:ENTITY{name:'Li Jiehua is a member of the Association of Guangxi Artists, painting Chinese pen-colored flower birds, writing flower birds, mountain watercolors\u3002'}) <-[:Describe{name:'description'}]-(x),(x) -[:Relationship{name:'represents works'}]->(h) return distinct x.name"}, {"query": "Can you tell me what kind of relationship is involved in the four layers of the article?", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:'\u9ad8\u82b3'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1 The name of the match path is not known."}, {"query": "The following is a list of some of the best Chinese language courses for preschoolers:", "cypher": "match (n:ENTITY{name:'pre-school children must see the whole picture: happy learning'}) - [:Relationship*1..2]->(x) where x.name <>'simplified Chinese' return distinct x.name"}, {"query": "Please share Pan's representative work with me.", "cypher": "match (:ENTITY{name:'Panzhu Lin'}) - [:Relationship{name:'representing work'}]-> (p) return p.name order by p.name"}, {"query": "What does it mean to be blunt?", "cypher": "match (:ENTITY{name:' frankly'}) <- [:Relationship{name:' Chinese name'}]- ((p) - [:Relationship{name:' explained'}]->(n) return distinct n.name"}, {"query": "I would like information on the interim arrangements for some issues of employment training from the Ministry of Labour and Human Resources.", "cypher": "match (n:ENTITY{name:'Provisional measures on some issues of employment training'}) - [:Relationship*1..3]->(x) where x.name <> 'Labour and Human Resources' return distinct x.name"}, {"query": "What is the profession of Devon Cameron besides being an actor?", "cypher": "match (:ENTITY{name:'Devon Cameron'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'profession'}]->(q) where q.name <> 'actor' return distinct q.name limit 1"}, {"query": "Please tell me the name of the concert at Candy Tango.", "cypher": "Match (:ENTITY{name:' candyTANGO'}) <- [:Relationship{name:' location'}]- (n) return n.name"}, {"query": "I would like to know which meeting China was represented by the Vice Minister of Foreign Affairs of China, Li Baodong.", "cypher": "match (:ENTITY{name:'Deputy Foreign Minister of China Li Baodong'}) <- [:Relationship{name:'China representative'}]- (x) return x.name"}, {"query": "Please tell me what is the installation method for a 16CTQ100 type of direct current diode?", "cypher": "The following is a list of the most commonly used types of data:"}, {"query": "Do you have any information about the name of this Chinese person and his representative works?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(x) - [:Relationship{name:'representative work'}]->(h) return x.name,h.name skip 1 limit 3"}, {"query": "Do you know what Goldman Sachs' main achievements are?", "cypher": "match (:ENTITY{name:'Former Chief Economist at Goldman Sachs, currently Professor Emeritus of Economics at the University of Manchester, UK}) <- [:Relationship{name:'profession'}]-(m),(m) - [:Relationship{name:'main achievements'}]->(h) return distinct h.name limit 5"}, {"query": "The article also points out that Lemos Tiago, a Portuguese national, has no personal profile above two levels of relationship.", "cypher": "match (n:ENTITY{name:'Lemos Tiago'}) - [:Relationship*1..2]->(x) where x.name <>'Portugal' return distinct x.name"}, {"query": "Do you know how many conferences are held in China?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'location'}]- (x) return x.name limit 4"}, {"query": "I'm looking for a book about the 13 National Judicial Examinations: Theory of Law and Relationships.", "cypher": "match (n:ENTITY{name:' National Judicial Examination School of Law Lecture 8: Theoretical Law'}) - [:Relationship*1..3]->(x) where x.name <>'13' return distinct x.name"}, {"query": "I want to find software that can be installed on 5 Apple devices?", "cypher": "match (:ENTITY{name:'IOS'}) <--(n) return n.name limit 5 is the name of the game"}, {"query": "What are the main departments and major awards of the Zhengzhou Academy?", "cypher": "match (:ENTITY{name:'Oregon Academy'}) - [:Relationship{name:'main faculty'}]->(n) return n.name as name union all match (:ENTITY{name:'Oregon Academy'}) - [:Relationship{name:'main award'}]->(m) return m.name as name"}, {"query": "What other professions does this person who won the Best Actress award at the 5th China Long Spring Film Festival have?", "cypher": "match (:ENTITY{name:'Best Actress Award at the 5th China Longcheng Film Festival'}) <- [:Relationship{name:'representative work'}]- ((n) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 10"}, {"query": "Have you seen the 1000 people who have been encouraging this comic and mentioning its three labels?", "cypher": "match (:ENTITY{name:'1000 pulses'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'comic' return p.name limit 3"}, {"query": "Can you tell me 10 companies that are headquartered in Beijing?", "cypher": "match (p:ENTITY{name:'Beijing'}) <- [:Relationship{name:'Hall of Residence'}]- (m) return m.name limit 10"}, {"query": "The classification of the Santa Torreta willow is based on the following two categories:", "cypher": "match (n:ENTITY{name:'Lily of the Valley'}) - [:Relationship{name:'categorized'}]->(h) where h.name <> 'chick' and h.name <> 'dessert' return distinct h.name limit 2"}, {"query": "Can you list 5 of the 19th session of the 6th People's Congress of Hanoi, chaired by Huang Shaoqian?", "cypher": "match (n:ENTITY{name:'The nineteenth meeting of the Sixth People's Congress of the City of River River Valley'}) - [*]->(x) where x.name <>'Huang Xiaolang' return distinct x.name limit 5"}, {"query": "The novel that was called The Night of the Long Knives is called \"Yue\" in Chinese.", "cypher": "match (:ENTITY{name:' that night's whore'}) <- [:Relationship{name:' author'}]- ((h) - [:Relationship{name:' Chinese name'}]->(m) return distinct m.name limit 1"}, {"query": "Help me find three politicians with college degrees.", "cypher": "match (:ENTITY{name:'college officer'}) <-[:Relationship{name:'main achievement'}]-(m), (m) -[:Tag{name:'tag'}]->(n) where n.name='political figure' return m.name limit 3"}, {"query": "Can you find fresh, refreshing cabbage?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "I'm not sure if you're familiar with the name of the artist, but I'm not sure if you're familiar with the name of the artist.", "cypher": "match (:ENTITY{name:'\u4e01\u6653'}) - [:Relationship{name:'representing work'}]-> (x) return distinct x.name"}, {"query": "Can you recommend a representative work by someone in the industry?", "cypher": "match (:ENTITY{name:'industry figure'}) <- [:Tag{name:'tag'}]-(p) - [:Relationship{name:'represented work'}]->(q) return distinct q.name limit 1"}, {"query": "Can you tell me who is the director of this drama, and what is the plot?", "cypher": "match (:ENTITY{name:'Red-crowned night heron'}) --(n) return n.name order by n.name"}, {"query": "The film is based on the life of the famous Chinese artist, who was born in the city of Chongqing, China.", "cypher": "match (:ENTITY{name:'Relationship'}) <- [:Relationship{name:'represented works'}]- (m) return m.name skip 2"}, {"query": "What songs are included in the album The Great Escape?", "cypher": "match (:ENTITY{name:' The Great Escape'}) <--(n) return n.name"}, {"query": "Do you know what are the benefits of drinking red wine?", "cypher": "match (:ENTITY{name:' red wine'}) <- [:Relationship{name:' Chinese name'}]- ((p) - [:Relationship{name:' mainly consumed potency'}]->(n) return distinct n.name"}, {"query": "Tech product 16GL DC meter has other labels?", "cypher": "match (:ENTITY{name:'16GL DC meter'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'technology product' return x.name"}, {"query": "Can you name five jobs that Li has been working in?", "cypher": "match (:ENTITY{name:'Lee Kwon Hoon'}) <--(n),(n) - [:Relationship{name:'profession'}]->(h) return distinct h.name limit 5"}, {"query": "Can you provide a description of the spirit of community of the 128th Student Development Alliance?", "cypher": "match ((:ENTITY{name:'128 College Students' Union'}) - [:Relationship{name:'Society spirit'}]-> (p) return p.name"}, {"query": "The following is a list of some of the topics that are covered in this blog:", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name<>'literary work' return distinct x.name"}, {"query": "Can you find the five performers? What are their representative works?", "cypher": "match (:ENTITY{name:'performer'}) <- [*]-(m), (m) - [:Relationship{name:'representing work'}]->(n) return m.name, n.name limit 5"}, {"query": "Internet lecturer at Tsinghua University Research Institute, China E-Commerce Association Certified Trainer, Founder of Shenzhen Longlin Group, WeChat Marketing Lecturer, 2013 Micro-marketing Newcomer of the Year Award, participated in the 2013 New Media Micro-marketing Development Report.", "cypher": "match (:ENTITY{name:'Chinghua University Research Institute Internet Lecturer Certified Trainer by the Chinese E-Commerce Association Founder of Shenzhen Shaolin Group WeChat Marketing Lecturer Certified by Shenzhen Shaolin Group 2013 Micro-marketing Newcomer of the Year Award Participant in the 2013 New Media Micro-marketing Development Report by writing and publishing...'}) <-[:Describe{name:'description'}]-(h) -[:Relationship{name:'main achievements'}->(q) return distinct h.name,q.name"}, {"query": "Tell me about the football player Poldrugac Dalibor, who is in a two-tiered relationship.", "cypher": "match (n:ENTITY{name:'Poldrugac Dalibor'}) - [*1..2]->(x) where x.name <> 'football' return distinct x.name"}, {"query": "I wonder what the relationship is between the three tiers that the Shard is involved in?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Shared side'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "The 2012 JSWB Home Buying Conference was held in Guangzhou, where did you say the venue is?", "cypher": "match ((p:ENTITY{name:'2012 JSWB [Guangzhou] Home Buying Conference'}) - [:Relationship{name:'Meeting venue'}]-> (h) return h.name"}, {"query": "What are the Chinese names of the novels that are being published on 3G?", "cypher": "match (:ENTITY{name:'3G book city'}) <- [:Relationship{name:'connected website'}]-(p),(p) - [:Relationship{name:'Chinese name'}]->(x) return distinct x.name limit 3"}, {"query": "Who is the author of the Pedantic Principle and what are its applications?", "cypher": "The following is a list of all the games that are available on the App Store:"}, {"query": "Who was the winner of the 1903 Nobel Prize in Physiology or Medicine in Denmark?", "cypher": "match (:ENTITY{name:'Denmark'}) <- [:Relationship{name:'nationality'}]-(m), (m) - [:Relationship{name:'main achievements'}]->(n) where n.name='winner of the 1903 Nobel Prize in Physiology or Medicine' return distinct m.name"}, {"query": "The first is that the people born in remote areas are all cooking?", "cypher": "match (:ENTITY{name:'defined'}) <- [:Relationship{name:'place of birth'}]-(h) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 3"}, {"query": "List six vehicles and their year of manufacture.", "cypher": "match (:ENTITY{name:' Vehicle'}) <--(m), (m) - [:Relationship{name:' Year of manufacture'}]->(n) return m.name, n.name limit 6"}, {"query": "The article was written by a journalist from the local newspaper, \"The Military Network\".", "cypher": "match (:ENTITY{name:'119 military network'}) --(x) with x order by x.name where x.name <> 'professional military website' return x.name"}, {"query": "How many tactical software are running on Android 2.1? Can you name 4?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you give me some information about the myth of the Yuki [film]?", "cypher": "match (:ENTITY{name:'Mother of the Bride'}) --(h) return h.name order by h.name limit 5"}, {"query": "Please describe which player's main award is 1st Regular Season Scoring King (in 1968).", "cypher": "match (:ENTITY{name:'1st regular season scoring king ((1968) '}) <- [:Relationship{name:'main prize'}]- (x) return distinct x.name"}, {"query": "What are the names of the actors and the models?", "cypher": "match (:ENTITY{name:'model, actor'}) <- [:Relationship{name:'profession'}]-(m) - [:Relationship{name:'alias'}]->(n) return distinct n.name limit 5"}, {"query": "Help me find 10 different types of lettuce.", "cypher": "match (:ENTITY{name:'ru\u83dc'}) <-[:Relationship{name:'category'}]-(m) return m.name limit 10 The name of the match is not specified"}, {"query": "Do you know what the fair was called from 11/18/2011 to 11/20/2011?", "cypher": "match (:ENTITY{name:'2011/11/18 to 2011/11/20'}) <- [:Relationship{name:'season'}]- (p) return p.name"}, {"query": "Is there a narrow striped whale in this genus?", "cypher": "match (n:ENTITY{name:' narrow striped lemurs'}) where n is not null return 1"}, {"query": "In which regions of our country are the red nettles mainly distributed?", "cypher": "match (:ENTITY{name:' red scallopes'}) - [:Relationship{name:' distribution area'}]-> (m) return distinct m.name"}, {"query": "When was the School of Mechanical Engineering in Xuzhou founded?", "cypher": "match (:ENTITY{name:'Xuzhou City Mechanical Industrial School'}) - [:Relationship{name:'Time of founding'}]->(n) return n.name as name union all match (:ENTITY{name:'Xuzhou City Mechanical Industrial School'}) - [:Relationship{name:'Category'}]->(m) return m.name as name"}, {"query": "Did you know that 5 and comics are the fourth layer of the label relationship?", "cypher": "The following is a list of characters that appear in the game."}, {"query": "Can you tell me 10 companies registered with the Baoshan Market Supervision Authority?", "cypher": "match (:ENTITY{name:'Bohasan District Market Supervision Authority'}) <- [:Relationship{name:'Registration authority'}]- (h) return h.name limit 10"}, {"query": "What are the most representative works of talent born in California, USA? Name 5?", "cypher": "match (:ENTITY{name:'U.S. State of California'}) <- [:Relationship{name:'place of birth'}]- ((n) - [:Relationship{name:'representative work'}]->(h) return distinct h.name limit 5"}, {"query": "What is the name of the place where the Fukuoka school was founded and the place where it was established in the same year? Tell me what the labels are for each place. Please list the number of labels for each place in small to large order.", "cypher": "match (n:ENTITY{name:'Fudai area ash school'}) - [:Relationship{name:'time of foundation'}]->(:ENTITY) <-[:Relationship{name:'time of foundation'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Look who is the legal representative of Shanghai Yonglei Logistics Limited.", "cypher": "match ((:ENTITY{name:'Shanghai Yongfeng Logistics Limited'}) - [:Relationship{name:'Legal representative'}]-> (q) return q.name"}, {"query": "Listed below are the topics of high school English in the simplified Chinese River English language.", "cypher": "match (n:ENTITY{name:' High school English Subject Extension Reading: High school year one'}) - [:Relationship*1..2]->(x) where x.name <>' simplified Chinese, English ' return distinct x.name"}, {"query": "Can you tell me the label of the three 2-hydro-4-acids right away?", "cypher": "match (:ENTITY{name:'2-metha-4-methyl'}) - [:Tag{name:'label'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "Please share with me what you know about Zhang Gongyuan.", "cypher": "match (:ENTITY{name:' Zhang Guoqi'}) --(h) return h.name skip 3 The name of the game is \"Skip 3\"."}, {"query": "Can you tell me the top 5 other names for congenital erectile dysfunction syndrome?", "cypher": "match (:ENTITY{name:' Congenital erectile dysfunction syndrome'}) --(x) return x.name order by x.name limit 5"}, {"query": "What is the status of Sun Yat-sen?", "cypher": "match (:ENTITY{name:'Sun\u8d44'}) - [:Relationship{name:'gentleman'}]-> (m) return distinct m.name"}, {"query": "Where are the two non-profit international member organizations headquartered?", "cypher": "match (:ENTITY{name:' non-profit international membership organization'}) <- [*]-(m), (m) - [:Relationship{name:' headquarters'}]->(n) return m.name, n.name limit 2"}, {"query": "Can you name five representative works by Sophia Kony?", "cypher": "match (:ENTITY{name:'Sophia'}) <- [:Relationship{name:'represents work'}]- (m) return distinct m.name limit 5"}, {"query": "Help me find the 10 generals of the East Han.", "cypher": "match (:ENTITY{name:'Tohhan'}) <- [:Relationship{name:'at the time'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='general' return distinct m.name limit 10"}, {"query": "What is the shortest path between the two layers of semiconductor physics and the manufacturing process of devices and electronics?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'semiconductor physics and devices'}) - [*..2]-(b:ENTITY{name:'electronic product manufacturing process'})) return count ((p)"}, {"query": "What other work should be removed besides this one?", "cypher": "match (:ENTITY{name:'Kyu-chan, born 6 August 1989 in Zhejiang, graduated from Central Academy of Drama, mainland China, actor\u3002'}) <-[:Describe{name:'description'}]-(n),(n) -[:Relationship{name:'main work'}->(m) where m.name <> '\u6b22\u00b7\u7231' return distinct m.name limit 1"}, {"query": "What are the works of the Shanghai-like publishers and when are they published?", "cypher": "match (:ENTITY{name:'Shanghai sounds like'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:'publication time'}]->(q) return distinct h.name,q.name"}, {"query": "What is the beauty code for a woman to wash her face and sweat on her neck when she gets married?", "cypher": "match (:ENTITY{name:'Women get married to clean their face and sweat hairs'}) <-[:Relationship{name:'derived'}]-(m), (m) -[:Relationship{name:'attributes'}]->(n) where n.name='beauty law' return distinct m.name"}, {"query": "Do you know the nationality of Kobe Jones?", "cypher": "match (:ENTITY{name:'Coby Jones'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'nationality'}]->(n) return distinct n.name"}, {"query": "When was Sichuan Sichuan Shijiazhuang Industries Limited founded?", "cypher": "match (:ENTITY{name:' Sichuan Sichuan Wang Industrial Limited'}) - [:Relationship{name:' time of establishment'}]->(n) return n.name"}, {"query": "The following is a list of the works translated by the Julan Painting Gallery: How do you describe the relationship between my new clothes and my new clothes?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'Relationship' return distinct x.name"}, {"query": "What are the business aspects of your Shanghai Keio Clothing Co., Ltd.?", "cypher": "match ((q:ENTITY{name:' Shanghai Keio Clothing Co. Ltd'}) - [:Relationship{name:' Scope of operations'}]-> (p) return p.name"}, {"query": "What is the shortest relationship path between the two layers of the inner bean sub-leaf and the sweet spinach nightingale?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'sweet bean sub-leafy shell'}) -[:Relationship*..2]-(b:ENTITY{name:'sweet bean sub-leafy shell'})) return count ((p)"}, {"query": "What is the status of the relationship between Robert Palikuca, born in B\u00fcckeburg, and the two?", "cypher": "match (n:ENTITY{name:'Palicka Robert'}) - [*1..2]->(x) where x.name <>'B\u00fcckeburg' return distinct x.name"}, {"query": "What records have been released by the 7th Beijing Cultural Company?", "cypher": "match (:ENTITY{name:'Beijing's Seventh City'}) <- [:Relationship{name:'record company'}]-(m) return distinct m.name"}, {"query": "The contest is open to all participants, including the top 10 countries and regions.", "cypher": "match (:ENTITY{name:'164'}) <- [:Relationship{name:'contest country area'}]- (n) return distinct n.name"}, {"query": "Can you list me the three main achievements of the man who opened the screen of the statue of the man who is the representative of the statue of the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man who is the man is the man who is the man who is the man who is the man is the man who is the man is the man who is the man is the man who is the man who is the man who is the man who is", "cypher": "match (:ENTITY{name:'square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-square-squ"}, {"query": "What is the academic theory proposed by Kohonen?", "cypher": "match (:ENTITY{name:'Kohonen'}) <- [:Relationship{name:'proponent'}]- (q) return distinct q.name"}, {"query": "Please help me find two CDs for $82 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'82.0\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Help me find 10 species of fungus in the genus M. porcupine.", "cypher": "match (:ENTITY{name:' fungal family'}) <- [:Relationship{name:' fungal family'}]-(m), (m) - [:Relationship{name:' genus'}]->(n) where n.name='phylum of fungal species' return m.name limit 10"}, {"query": "The following is a list of songs that are in the genre of rock music:", "cypher": "match (n:ENTITY{name:'Sweet Things'}) - [:Relationship*1..2]->(x) where x.name <>'rock' return distinct x.name"}, {"query": "I want to know about the information about the 1.85m Kratochv\u00edl Roman, which is not less than 3 levels of relationship?", "cypher": "match (n:ENTITY{name:'Kratochv\u00edl Roman'}) - [*1..3]->(x) where x.name <>'1.85 m' return distinct x.name"}, {"query": "Can you name 10 chemicals with a purity \u2265 98%?", "cypher": "The following is a list of the most commonly used parameters for the calculation of the p-value of a data structure:"}, {"query": "I was wondering how much capacity is a 3.7V lithium battery (~1100mAh)?", "cypher": "match (:ENTITY{name:'3.7V lithium battery ((1100mAh) '}) <- [:Relationship{name:' use battery'}]- ((p) - [:Relationship{name:' storage capacity'}]->(q) return distinct p.name"}, {"query": "I'm going to introduce you to a 13 book series of interesting stories about the two layers of the relationship between old Jiangsu and the presentation of the work.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'13' return distinct x.name"}, {"query": "Please tell me what are the names of the places that belong to the city of Samsun? Please give me 5 names.", "cypher": "match (:ENTITY{name:'city'}) <- [:Relationship{name:'area'}]- ((q) - [:Relationship{name:'other name'}]->(x) return x.name order by x.name limit 5"}, {"query": "The following is a list of the topics covered by the National Health Care Education Innovation Materials: Information within the two-tier relationship of gynecological and obstetric nursing.", "cypher": "match (n:ENTITY{name:'National Health Care Professional Education Innovation Materials: Gynecological and Obstetrical Nursing'}) - [:Relationship*1..2]->(x) where x.name <>'Oregon University Press' return distinct x.name"}, {"query": "Who is the one who has the strength to fight the enemy?", "cypher": "match (:ENTITY{name:'Lovely city's candy'}) --(x) return x.name order by x.name"}, {"query": "And what will explain to you what the profession of the Jinn is?", "cypher": "match (:ENTITY{name:'songlist'}) <- [:Relationship{name:'songlist'}]- ((m),(m) - [:Relationship{name:'songlist'}]->(h) return distinct h.name limit 1"}, {"query": "Born in August 1955, he was a deputy minister of the Department of Organization of the Haryana County Commission, giving other occupations he may have been doing.", "cypher": "match (:ENTITY{name:'August 1955'}) <- [:Relationship{name:'date of birth'}]-(n),(n) - [:Relationship{name:'profession'}]->(m) where m.name <> 'Deputy Minister of the Department of the Haryana County Commission' return distinct m.name limit 1"}, {"query": "The report also highlights the importance of the oil spill in the Dalyans, which is a major cause of the oil spill in the country.", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'China oil spill in the Dalyans' sea area'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Please find me 10 Zhejiang dishes, what are the main ingredients?", "cypher": "match (:ENTITY{name:'Zhejiang bean'}) <- [*]-(m), (m) - [:Relationship{name:'main ingredient'}]->(n) return distinct m.name, n.name limit 10"}, {"query": "Do you know what the main achievements of this Chinese personage are? Can you explain three?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(x),(x) - [:Relationship{name:'main achievements'}]->(p) return p.name skip 5 limit 3"}, {"query": "The cause of the gas explosion in the 11:30 Gilin Fourth Floor residential building has been determined.", "cypher": "match ((:ENTITY{name:'11\u00b730 Jilin Quarantine residential building sky gas explosion'}) - [:Relationship{name:'cause of accident'}]-> (m) return m.name"}, {"query": "Recently learned the nature of wintering herbal acetate, do you know its molecular formula?", "cypher": "match ((:ENTITY{name:'wintergrass acetate'}) - [:Relationship{name:'molecular'}]-> (n) return n.name"}, {"query": "Curious 1209 KTV bearings correspond to what label?", "cypher": "match (:ENTITY{name:'1209KTV bearing'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "The following is a list of some of the public health activities that are being done to help children with pre-existing heart conditions.", "cypher": "match (:ENTITY{name:'pre-heart disease child'}) <- [:Relationship{name:'rescue object'}]- (q) return distinct q.name"}, {"query": "What are the labels associated with the 11/26 Wuhan bombings?", "cypher": "match (:ENTITY{name:'11\u00b726 Wuhan bombing'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "Do you know what major departments are in the university in Guangxi?", "cypher": "match (h:ENTITY{name:'Guangxi Jilin City'}) <- [:Relationship{name:'the area'}]-(m),(m) - [:Relationship{name:'the major department'}]->(x) return distinct x.name limit 1"}, {"query": "Help me find out 7 other things about Ash Booker III.", "cypher": "match (:ENTITY{name:'Ash Booker'}) - [:Relationship*1..3]-(p) where p.name <> 'American actor' return p.name limit 7"}, {"query": "Please help me find out who the author of this book is who is smiling you to death without paying for it.", "cypher": "match ((:ENTITY{name:'You are not worth your life'}) - [:Relationship{name:'author'}]-> (n) return n.name"}, {"query": "Who is the author of the Mirror Garden Puzzle?", "cypher": "match (:ENTITY{name:'mirror garden'}) - [:Relationship{name:'author'}]->(m) return distinct m.name"}, {"query": "What do you achieve when you are a professor, a PhD student, a graduate tutor?", "cypher": "match (:ENTITY{name:' professor, PhD graduate advisor'}) <- [:Relationship{name:' profession'}]- ((m) - [:Relationship{name:' major achievement'}]->(x) return distinct x.name"}, {"query": "What is the name of the school where the first principal is named Li Huang?", "cypher": "match (:ENTITY{name:'\u674e\u66f0'}) <- [:Relationship{name:'first principal'}]- ((m) - [:Relationship{name:'abbreviated'}]->(h) return distinct h.name limit 3"}, {"query": "I would like to know all the information about the weekly workshop.", "cypher": "match (:ENTITY{name:'showdown'}) --(p) return distinct p.name"}, {"query": "What are the famous sights in the city of Dragon King?", "cypher": "Match (:ENTITY{name:'Long Wang countryside'}) - [:Relationship{name:'Famous attractions'}]->(m) return distinct m.name"}, {"query": "Can you get me five books for $25.80?", "cypher": "match (:ENTITY{name:' books'}) <- [:Tag{name:' labels'}]-(m), (m) - [:Relationship{name:' pricing'}]->(n) where n.name='25.80\u5143' return m.name limit 5"}, {"query": "Which two writers' books have been published by the Chinese Youth Press?", "cypher": "match (:ENTITY{name:'China Youth Publishing'}) <- [:Relationship{name:'China Youth Publishing'}]-(x),(x) - [:Relationship{name:'author'}]->(q) return distinct q.name limit 2"}, {"query": "Can you find the five species of bony fish? Can you help me introduce them?", "cypher": "match (:ENTITY{name:'Relationship*]-(m), (m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 5"}, {"query": "Do you know who is in the same profession as Yang Yong-jun? What are the labels of each person and please list them in order of the number of labels of each person?", "cypher": "match (n:ENTITY{name:'\u8363\u519b'}) - [:Relationship{name:'profession'}]->(:ENTITY) <- [:Relationship{name:'profession'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you please tell me about a Southern gravedigger case?", "cypher": "match (:ENTITY{name:'Relationship'}) <- [Relationship{name:'Tomb Raider'}]- (q) return distinct q.name"}, {"query": "Can you tell me who are the actors and columnists? Please tell me the first three.", "cypher": "match (:ENTITY{name:' performance  columnist'}) --(n) return n.name order by n.name limit 3"}, {"query": "I would like to know what is the model of DVD.VCD.SVCD distributor?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Can the word \"d\" be summarized in no more than 10 words?", "cypher": "match (:ENTITY{name:'.dk'}) --(h) with h order by h.name return distinct h.name skip 1 limit 10"}, {"query": "Which institution is the host of the 2012 China Football Association Cup?", "cypher": "match ((:ENTITY{name:'2012 Chinese Football Association Cup'}) - [:Relationship{name:'host'}]-> (h) return h.name"}, {"query": "I'm not sure if you're familiar with the game, but I'm not sure if you're familiar with the game, but I'm not sure if you're familiar with the game.", "cypher": "match (:ENTITY{name:' edible vegetable salad'}) --(m) with m order by m.name where m.name <> 'leisure' return distinct m.name limit 3"}, {"query": "What are the names of the schools that belong to the New Library category?", "cypher": "match (:ENTITY{name:'new library'}) <- [:Relationship{name:'category'}]- ((q),(q) - [:Relationship{name:'known alumni'}]->(p) return distinct q.name,p.name"}, {"query": "What is the representative work of the Catholic Church?", "cypher": "match (:ENTITY{name:' Catholic'}) <- [:Relationship{name:' faith'}]- ((h) - [:Relationship{name:' representing work'}]->(q) return distinct q.name limit 1"}, {"query": "Help me find 10 politicians, where are they all from?", "cypher": "match (:ENTITY{name:'political figure'}) <- [*]-(m),(m) - [:Relationship{name:'place of birth'}]->(n) return m.name,n.name limit 3"}, {"query": "The first thing I want to say is, is that the people who are in the middle of the story, the people who are in the middle of the story, the people who are in the middle of the story, the people who are in the middle of the story, the people who are in the middle of the story, the people who are in the middle of the story.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'Meng Xue' return distinct x.name"}, {"query": "What is Sky Tracking?", "cypher": "match (:ENTITY{name:' sky price tracking'}) --(n) with n order by n.name where n.name <> 'entertainment work' return n.name"}, {"query": "Do you know what CDC stands for?", "cypher": "The name of the game is \"Crypt\""}, {"query": "I want to find seven novels, what are their types?", "cypher": "match (:ENTITY{name:'novel'}) <- [*]-(m), (m) - [:Relationship{name:'type'}]->(n) return m.name, n.name limit 7"}, {"query": "What other major accomplishments did Choi have besides being the head of the boiler plant from 2000 to 2014 and the current vice chief engineer (and head of the steel plant) of Nanjing Steel Shares Limited?", "cypher": "match (n:ENTITY{name:' on the small side'}) - [:Relationship{name:' major achievements'}]->(h) where h.name <> 'director of the boiler plant from 2000 to 2014' and h.name <> 'currently vice chief engineer (and director of the steel plant) of Nanjing Steel Shares Limited' return distinct h.name limit 1"}, {"query": "What is the Chinese name of Crash N Burn?", "cypher": "match (:ENTITY{name:'Crash N Burn'}) --(x) return distinct x.name"}, {"query": "Show me some information about Jia Jiang's paintings/artworks in the name of famous school names?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'Jadejiang' return distinct x.name"}, {"query": "The game is based on the popular video game series 123 Labyrinth.", "cypher": "match (:ENTITY{name:'123 labyrinth'}) --(p) with p order by p.name where p.name <> ' game work' return p.name"}, {"query": "Find the personal profile of sports personality Mazak Ares in the second level of relationships.", "cypher": "match (n:ENTITY{name:'Mazak Aras'}) - [*1..2]->(x) where x.name <> 'sportsman' return distinct x.name"}, {"query": "Help me find the other 7 pieces of information in the 3 layers of the Ideal World of John Lennon.", "cypher": "match (:ENTITY{name:'The ideal world of John Lennon'}) - [:Relationship*1..3]-(p) where p.name <> 'film' return p.name limit 7"}, {"query": "I want to ask you, which high school alumnus is Wang Yi Moon?", "cypher": "match (:ENTITY{name:'Wang Xuan Moon'}) <- [:Relationship{name:'known alumni'}]- (m) return distinct m.name"}, {"query": "Give me 10 relevant information about the stress coefficients in the 3 layers, other than the way they are expressed in CP?", "cypher": "match (:ENTITY{name:' stress coefficient'}) - [*1..3]-(p) where p.name <> 'Cp' return distinct p.name limit 10"}, {"query": "Search for 5 major achievements of August 1966?", "cypher": "match (:ENTITY{name:'August 1966'}) <- [:Relationship{name:'date of birth'}]-(m),(m) - [:Relationship{name:'main achievements'}]->(n) return n.name order by n.name limit 5"}, {"query": "Do you know if the flute is a stringed instrument, or if it is a stringed instrument? Help me find 10 information in 3 layers.", "cypher": "match (:ENTITY{name:'flute and harpsichord'}) - [*1..3]->(p) where p.name <> 'stringed stringed instrument' return p.name limit 10"}, {"query": "What is the shortest path between the two layers of the relationship between the force attack and the force attack frequency?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'highest free path'}) - [*..2]-(b:ENTITY{name:'highest free path'})) return count ((p)"}, {"query": "Tell us about five personal details about the four-tier relationship of sports personality DeVoe.", "cypher": "match (n:ENTITY{name:'Dawg's'}) - [*1..4]->(x) where x.name <> 'Sportsman' return distinct x.name limit 5"}, {"query": "Can you find out the online time of 159dnf search service?", "cypher": "match ((:ENTITY{name:'159dnf search engine'}) - [:Relationship{name:'online time'}]-> (n) return n.name"}, {"query": "How about a minute of 10 messages and fall in love with this book on management?", "cypher": "match (q:ENTITY{name:'1 minute in love with management'}) --(m) with m order by m.name return m.name limit 10"}, {"query": "I wonder what comedy shows are there in the UK?", "cypher": "match (p:ENTITY{name:'UK'}) <--(x) --> ((q:ENTITY{name:'comedy'}) return x.name"}, {"query": "Who among the politicians has won a university diploma?", "cypher": "match (:ENTITY{name:'college officer'}) <-[:Relationship{name:'main achievement'}]-(m), (m) -[:Tag{name:'tag'}]->(n) where n.name='political figure' return m.name"}, {"query": "Who is the principal of the Xuzhou City Yue Star Middle School? How many students are there?", "cypher": "match (:ENTITY{name:'Relationship{name:'former principal'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'in the university'}->(m) return m.name as name"}, {"query": "The 12/11 Yunnan Chu-Chiang student dormitory disaster in the newspaper, does it include any victims?", "cypher": "match ((h:ENTITY{name:'12\u00b711 Yunnan Chu-Chiang student dormitory disaster'}) - [:Relationship{name:'victim'}]-> (x) return x.name"}, {"query": "What are the 10 most common labels for new clothes for the fall of 2006?", "cypher": "match (x:ENTITY{name:'06 autumn new outfit'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 10"}, {"query": "Can you tell me who this Claude Lecomte is?", "cypher": "match (:ENTITY{name:'Claude Lecomte'}) --(n) return distinct n.name"}, {"query": "I'm not sure if you know what I mean, but I'm not sure if you know what I mean.", "cypher": "match (:ENTITY{name:'Meng was caught'}) --(x) return x.name limit 5"}, {"query": "Please tell me what kind of relationship is involved in a non-principled dispute in the three levels?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'no principle disputes'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "I'm not sure where the publishers are, let alone the four publications.", "cypher": "match (:ENTITY{name:'publication'}) <- [*]-(m), (m) - [:Relationship{name:'publication'}]->(n) return m.name, n.name limit 4"}, {"query": "I wonder if you can introduce me to the two-tier relationship that Rwandan Sadou Boubakary has with the country.", "cypher": "match (n:ENTITY{name:'Sadou Boubakary'}) - [*1..2]->(x) where x.name<>'Rwanda' return distinct x.name"}, {"query": "Please tell me about a cosmic god architect, who rose up, who wishes to be with the eternal god.", "cypher": "match (:ENTITY{name:'architect of the universe, god of the rising, god of the sun'}) <-[:Relationship{name:'god of the sun'}]-(p) -[:Relationship{name:'god of the sun'}]->(x) return x.name order by x.name limit 1"}, {"query": "Do you know which chemical has a boiling point of 47.4?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "I'm not sure what the third level of the label is with the youth revolution.", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'Youth Revolution'}) return distinct n.name"}, {"query": "Can you recommend 30 free tickets to the scenic spots?", "cypher": "The following is a list of all the different ways The Great Wall of China is credited in the database:"}, {"query": "Can you name a chemical that is shaped like a white or pale yellow crystalline powder?", "cypher": "match (:ENTITY{name:' white or light yellow crystalline powder'}) <- [:Relationship{name:' properties'}]- (q) return distinct q.name"}, {"query": "Can you introduce yourself to the guy who infiltrated C?", "cypher": "match (:ENTITY{name:'C\u541b'}) --(p) return p.name order by p.name"}, {"query": "Who is the author of the whole of the tongue?", "cypher": "match (:ENTITY{name:'s) - [:Relationship{name:'s author'}]-> (m) return distinct m.name"}, {"query": "I want to know the three main ingredients of the tomato sauce besides the tomato and the grapefruit sauce.", "cypher": "match (n:ENTITY{name:'Tuberculosis salad'}) - [:Relationship{name:'main ingredient'}]->(h) with h order by h.name where h.name <> 'Tuberculosis' and h.name <> 'Tuberculosis' return h.name limit 3"}, {"query": "I would like to know about the London Fashion Week in the fall and winter of 2005-06?", "cypher": "match (:ENTITY{name:'05~06 autumn-winter Paris London high fashion release'}) --(q) with q order by q.name return q.name"}, {"query": "What is the shortest path between the two levels of the cabinet, the common people and Liu Hongzhi?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'\u666e\u901a\u6c11'}) -[:Relationship*..2]-(b:ENTITY{name:'\u5b8f\u5fd7'})) return count ((p)"}, {"query": "Did you have trouble listing the five organizations that were founded in 2013?", "cypher": "match (:ENTITY{name:'2013'}) <- [:Relationship{name:'time of establishment'}]- (h) return distinct h.name limit 5"}, {"query": "What are the types of relationships that are involved in the two layers of polytechnics?", "cypher": "The following pages link to the list of UNWIND relationships:"}, {"query": "Do you know anything about the military, like the 032 Type 201 Combined Experimental Submarine?", "cypher": "match (n:ENTITY{name:'032 Type 201 Integrated Experimental Submarine'}) --(h) with h order by h.name where h.name <> 'military' return h.name"}, {"query": "Do you know which chords make up the #1, #3, #5, or #6?", "cypher": "match (:ENTITY{name:'#1\u3001#3\u3001#5'}) <- [:Relationship{name:'composite sound'}]- (m) return distinct m.name"}, {"query": "Do you know what programs CCTV-1 and CCTV-4 have been broadcasting?", "cypher": "match (:ENTITY{name:'CCTV-1\u3001CCTV-4'}) <- [:Relationship{name:' broadcast channel'}]- (x) return distinct x.name"}, {"query": "Can you give me the information of the 5 companies of the cultural company Dalian Hai Star Violin Bands Limited?", "cypher": "match (n:ENTITY{name:'Dalyane Sea's Star Harp Playing Instrument Sales Limited'}) - [*]->(x) where x.name <>'culture' return distinct x.name limit 5"}, {"query": "I want to know the six main works of the actors in this industry?", "cypher": "match (n:ENTITY{name:' actor'}) <- [:Relationship{name:' profession'}]- ((h) - [:Relationship{name:' major works'}]->(p) return distinct p.name limit 6"}, {"query": "There is a word family, the one that says monkey, do you know his name?", "cypher": "match (:ENTITY{name:' word family, \u66f0 \u5b50\u3002'}) <--(n) return n.name"}, {"query": "What are some of the representations of Stefan Maram\u00e9?", "cypher": "match ((:ENTITY{name:'Steveng Maramey'}) - [:Relationship{name:'representing work'}]-> (n) return n.name"}, {"query": "The story of Carmen Tudela is a story of love and love.", "cypher": "The game is called \"The Game of Life\" and is played by two players."}, {"query": "Please tell me about the Peaches Island in the Sanctuary.", "cypher": "match (:ENTITY{name:'Pink Island'}) --(m) return distinct m.name"}, {"query": "Can you tell me the name of the relationship in the three layers that Ai Weiwei is involved in?", "cypher": "The following is a list of all the links in the search results for Unwind relationships."}, {"query": "The word \"Yay\" is a Chinese word that means \"to be\".", "cypher": "match (:ENTITY{name:'Relationship{name:'from'}]->(m) return distinct m.name"}, {"query": "The Chinese Air Force has been involved in many battles.", "cypher": "match (p:ENTITY{name:'CNAF'}) <- [:Relationship{name:'the warring parties'}]- (h) return distinct h.name"}, {"query": "Do you know the name of the Economic and Trade Forum organized by the Ministry of Commerce of the People's Republic of China?", "cypher": "match (:ENTITY{name:' Ministry of Commerce of the People's Republic of China'}) <- [:Relationship{name:' Host'}]- (x) return x.name"}, {"query": "What is the position of the company that was awarded the title of Zhejiang New Venture Management Limited in 2016?", "cypher": "match (:ENTITY{name:'2016 founded Zhejiang New Venture Management Limited'}) <- [:Relationship{name:'main achievements'}]- ((m) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 1"}, {"query": "What is the name of your idol Jordan Archer and what team is he on?", "cypher": "match ((:ENTITY{name:'Jordan Archer'}) - [:Relationship{name:'Relationship team'}]-> (q) return q.name"}, {"query": "What chemical has a mole volume of 143.1?", "cypher": "match (:ENTITY{name:'143.1'}) <- [:Relationship{name:'Moor volume'}]- (h) return distinct h.name"}, {"query": "What chemical is C7H5N?", "cypher": "The name of the function is the same as the name of the function itself."}, {"query": "The city of Tianjin is a major tourist destination, with a number of tourist attractions and a number of tourist attractions.", "cypher": "match ((:ENTITY{name:'shing huang [Tianjin City Peace Zone Huasan Road Mansion]'}) - [:Relationship{name:'suitable for play season'}]-> (n) return n.name"}, {"query": "The main characters of the game are the devil, the demon, the fairy godmother, the dragon, etc.", "cypher": "match (:ENTITY{name:'devil, demon, fairy, fairy godmother, fairy godmother'}) <- [:Relationship{name:'main character'}]- (n) return n.name"}, {"query": "Can you list some of the noble professions that you can do?", "cypher": "match (:ENTITY{name:'Zhang Chong's}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'profession'}]->(m) return m.name order by m.name limit 1"}, {"query": "I wonder what Zhang Huiyuan does for a living? Can you list five jobs she does?", "cypher": "match (:ENTITY{name:'\u5f20\u6167'}) <- [:Relationship{name:' Chinese name'}]- ((p) - [:Relationship{name:' profession'}]->(x) return distinct x.name limit 5"}, {"query": "Tell me about the personal relationship of football player Mejibel Samal in the 5th level?", "cypher": "match (n:ENTITY{name:'Mejibel Samal'}) - [*1..5]->(x) where x.name <> 'football' return distinct x.name limit 5"}, {"query": "Can anyone give me a list of magnitude 4.0 earthquakes?", "cypher": "match (:ENTITY{name:'4.0 level'}) <- [:Relationship{name:'seismic level'}]- (p) return distinct p.name"}, {"query": "Please tell me if there are any tags that are Google's Node.js tag.", "cypher": "The name of the file is not available in the URL."}, {"query": "The news is that the company is now offering a new version of the service.", "cypher": "match (:ENTITY{name:'106 channel'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'technology product' return q.name"}, {"query": "Please find the two main awards of Hunan Financial Industry Professional Technology College, but apart from the Hunan Province's only finance-oriented, literate and blended higher education institution and Hunan Province's exemplary higher education institution, Hunan Province's Excellence Higher Education Institute.", "cypher": "match (n:ENTITY{name:'Hunan Institute of Finance and Industry'}) -[:Relationship{name:'main award'}]->(h) where h.name <> 'Hunan Province's only finance, literature and education-oriented higher education institution' and h.name <> 'Hunan Province's exemplary higher education institution, Hunan Province's excellent higher education institution' return distinct h.name limit 2"}, {"query": "What weapons does the PLA have?", "cypher": "match (:ENTITY{name:'People's Liberation Army of China'}) <- [:Relationship{name:'Equipment condition'}]- (p) return distinct p.name"}, {"query": "What games are similar to the 1950s art game? What are the different labels? Please list them in order of number of labels, from small to large.", "cypher": "The game is also known as the \"Game of Thrones\" (Game of Thrones) and the \"Game of Thrones\" (Game of Thrones)."}, {"query": "Can you tell me the Chinese name of the first 10 hadiths of the Euripides?", "cypher": "match (:ENTITY{name:'Eri Rios of Hadith'}) - [:Relationship{name:'Chinese name'}]-> (n) with n order by n.name return distinct n.name limit 10"}, {"query": "I would like to know what the relationship is between the five levels involved in the Ryong Village in Ningxia County?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "You said look at where Christina Girelli is in the stadium.", "cypher": "match ((:ENTITY{name:'Christina Girelli'}) - [:Relationship{name:'Platform location'}]-> (q) return q.name"}, {"query": "Can you name the top 10 news stories for 2006?", "cypher": "match (:ENTITY{name:'2006 all new Hokage'}) --(n) with n order by n.name return n.name limit 5"}, {"query": "How many classes are there in the girls' class? Who is the main character?", "cypher": "Match (:ENTITY{name:'Relationship{name:'main character'}}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'episode'}}) ->(m) return m.name as name"}, {"query": "What are the different labels of people born on the same day as Th\u00f3risson Gudmann? Give me the number of labels in reverse order.", "cypher": "The following is a list of all the different ways Th\u00f3risson Gudmann is credited in the database:"}, {"query": "The 20km long distance race, when did it start, do you remember?", "cypher": "match ((:ENTITY{name:'20 km running away'}) - [:Relationship{name:'origin time'}]-> (p) return p.name"}, {"query": "What is the most representative work of the writer born in 1927?", "cypher": "match (:ENTITY{name:'1927'}) <- [:Relationship{name:'date of birth'}]-(p),(p) - [:Relationship{name:'representative work'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know anything else besides rock music? Help me find 6 information in 3 layers.", "cypher": "match (:ENTITY{name:'want my life'}) - [*1..3]-(p) where p.name <> 'rock music' return p.name limit 6"}, {"query": "What is the name of the relationship between the three levels of the Japanese Embassy in the UK?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Embassy of Japan to the United Kingdom'}) UNWIND relations(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Can you get me two books for $150?", "cypher": "The following is a list of the most commonly used keywords in the search results."}, {"query": "Please tell me the top 10 articles about Zhang Jianming.", "cypher": "match (:ENTITY{name:'Zhang Family'}) --(n) return n.name order by n.name limit 10"}, {"query": "What is the label for the 1.10 Long Beach Evening News shooting?", "cypher": "match (:ENTITY{name:'1.10 Chansa Evening News Avenue shooting case'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "What is the type and rating of Xuzhou Observation International Airport?", "cypher": "match (:ENTITY{name:'Xuzhou Observation International Airport'}) - [:Relationship{name:'Airport type'}]->(n) return n.name as name union all match (:ENTITY{name:'Xuzhou Observation International Airport'}) - [:Relationship{name:'Airfield level'}]->(m) return m.name as name"}, {"query": "The names of the people who were born in the same time period as the people of the Jiangxi and Vietnamese empires, and what labels each of them has.", "cypher": "match (n:ENTITY{name:' Jiang Vieng's Dynasty'}) - [:Relationship{name:' birthplace'}]->(:ENTITY) <- [:Relationship{name:' birthplace'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Can you find me two movies that were shot in the US?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'Place of filming'}]-(n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "This is the book you are looking at for a 0-2 year old: Black and White 2, which publisher?", "cypher": "match ((:ENTITY{name:'0-2 years old babybook: black and white 2'}) - [:Relationship{name:'publisher'}]-> (m) return m.name"}, {"query": "Do you know what chemical is called 6-hydroxy-2-hydroxy-methyl?", "cypher": "match (:ENTITY{name:'6-methan-2-methan-methan'}) <- [:Relationship{name:'other name'}]- (p) return p.name"}, {"query": "Please introduce me to 101 Management Fables that affect the world 101 Management Fables that affect the world The Managers book?", "cypher": "match (:ENTITY{name:'101 management proverbs that affect the world'}) --(h) with h order by h.name where h.name <> 'manage books' return h.name"}, {"query": "Do you know this place called 15 Neighborhoods?", "cypher": "match (:ENTITY{name:'15 community'}) --(x) with x order by x.name where x.name <> 'location' return x.name"}, {"query": "Please list the top five advanced schools in the state of Zhejiang.", "cypher": "match (:ENTITY{name:'Advanced school at the level of the Yangzhou Municipal School'}) --(h) return h.name order by h.name limit 10"}, {"query": "Can you tell us about the kind of relationships that the tidal flavor involves in the four layers?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Rela"}, {"query": "I would like to know about five contemporary works that contain mercury seeds in a vase, covered with mud, and flowered to give this gift.", "cypher": "match (n:ENTITY{name:'put mercury seed in a vat, covered with mud, flower placed to give this gift'}) - [:Relationship*]->(x) where x.name <>'contemporary work' return distinct x.name limit 5"}, {"query": "What information do you know about Qingdao Micro-Viewpoint Cultural Media Co., Ltd. other than its headquarters in Shandong Qingdao?", "cypher": "match (:ENTITY{name:'Qingzhou Microscope Cultural Media Co. Ltd'}) - [*1..2]-(p) where p.name <> 'Sandong Qingzhou' return p.name limit 10"}, {"query": "What is the shortest relationship path between LCA and HF-24 fighters in the 3rd level?", "cypher": "The aircraft was also known as the HF-24 (HF-24) and the HF-24 (HF-24) (HF-24)."}, {"query": "Can you recommend 10 online novels for me?", "cypher": "match (:ENTITY{name:'network novel'}) <- [:Relationship{name:'properties'}]- (q) return q.name limit 10"}, {"query": "Can you look at this 1-hydroxybenzyl, can you calculate the molecular weight?", "cypher": "match ((:ENTITY{name:'1-methacrylate'}) - [:Relationship{name:'molecular mass'}]-> (p) return p.name"}, {"query": "List an actor who has appeared in films like Filthy Love.", "cypher": "match (:ENTITY{name:'sweet love'}) --(m) return distinct m.name limit 3"}, {"query": "Please tell me what kind of profession he has since he was born in February 1960?", "cypher": "match (:ENTITY{name:'February 1960'}) <- [:Relationship{name:'date of birth'}]-(n),(n) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 3"}, {"query": "Please tell me the Chinese name of my shop for doing yoga.", "cypher": "match (:ENTITY{name:' shop little ii practice god'}) - [:Relationship{name:' Chinese name'}]-> (n) with n order by n.name return n.name"}, {"query": "I'm wondering if you can tell me which metal is heat treated to burn back to burn?", "cypher": "match (:ENTITY{name:'right fire plus backfire'}) <- [:Relationship{name:'heat treatment'}]- (n) return n.name"}, {"query": "Can you tell me the name of the relationship within the three layers that the Huawei G730 is involved in?", "cypher": "The following pages link to the list of UNWIND relationships:"}, {"query": "Do you know about the Sichuan Province Mombasa Middle School? What information is there besides the public middle school, please find the other 8 information in the 2nd layer", "cypher": "match (:ENTITY{name:'Shanghai Secondary School'}) - [*1..2]->(p) where p.name <> 'public secondary school' return p.name limit 8"}, {"query": "I'm not sure what you mean by \"perfume\".", "cypher": "match (:ENTITY{name:'sweet'}) --(n) return distinct n.name"}, {"query": "Who is the singer of the song that susan mentioned?", "cypher": "match (:ENTITY{name:'susan says'}) - [:Relationship{name:'song originally sung'}]->(n) return n.name as name union all match (:ENTITY{name:'susan says'}) - [:Relationship{name:'associated album'}]->(m) return m.name as name"}, {"query": "Can you provide a CAS number for 2-nitrogen N-oxide salts?", "cypher": "match ((q:ENTITY{name:'2-N-oxide salt'}) - [:Relationship{name:'CAS log number'}]-> (p) return p.name"}, {"query": "What does Jo-Jin do?", "cypher": "match (:ENTITY{name:'Joe'}) <--(h),(h) - [:Relationship{name:'profession'}]->(p) return distinct p.name"}, {"query": "Can you tell me what the relationship is between the three layers of the beauty of the zodiac?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations)"}, {"query": "What can you say about the five types of relationships that Noel Coward talks about?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'Noel Coward'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you list one violent terrorist attack?", "cypher": "match (:ENTITY{name:'violent terrorist attack'}) <- [:Relationship{name:'nature of case'}]- (h) return h.name"}, {"query": "The 10/1 Las Vegas casino shooting reported in the newspapers was so horrific, where was the location?", "cypher": "match ((:ENTITY{name:'10\u00b71 Las Vegas casino shooting'}) - [:Relationship{name:'place of the incident'}]-> (q) return q.name"}, {"query": "There is a 302-page book, can you tell me the top 5 information about its price?", "cypher": "The following is a list of the most commonly used tags for the game:"}, {"query": "Can you name three synonyms for plants in this genus?", "cypher": "match (:ENTITY{name:'flower'}) <- [:Relationship{name:'species'}]-(m),(m) - [:Relationship{name:'synonyms'}]->(n) return n.name order by n.name limit 3"}, {"query": "The following is a list of 5 famous people who have worked in the leaf industry and in the book trade.", "cypher": "match (n:ENTITY{name:'shop and bookstore'}) - [*1..5]->(x) where x.name<>'shop' return distinct x.name limit 5"}, {"query": "What is a stomach bug? Please give me the first three facts about it.", "cypher": "match (:ENTITY{name:'belly button general'}) --(n) return n.name order by n.name limit 3"}, {"query": "What is the magnetometer used for?", "cypher": "match (:ENTITY{name:'magnetometer'}) - [:Relationship{name:'use'}]->(m) return distinct m.name"}, {"query": "The man is described as Su-yeon, a model, on October 22, 2011 at 10 pm Xu, Su-yeon posted several microblogs, live-streamed the suicide process, and uploaded photos of sleeping pills saying that he was going to eat it lightly and walk quietly.", "cypher": "match (:ENTITY{name:'Sou-chan, model, 22 October 2011 at 10 pm, Su-chan sent several microblogs, live-streamed the suicide process, and uploaded sleeping pill photos that said that she wanted to eat it lightly, and quietly walk away."}, {"query": "When was Yang Kang born?", "cypher": "Match ((:ENTITY{name:'spoon'}) - [:Relationship{name:'date of birth'}]-> (n) return n.name"}, {"query": "What is the synonym of high-end?", "cypher": "match (:ENTITY{name:'highly skilled'}) - [:Relationship{name:'near term'}]->(m) return distinct m.name"}, {"query": "What honorary awards has the current principal, Yang Jinlock, received? Can you name three?", "cypher": "match (:ENTITY{name:'metal lock'}) <- [:Relationship{name:'currently rector'}]-(x),(x) - [:Relationship{name:'main award'}]->(n) return distinct n.name limit 3"}, {"query": "Give me the 298-page series on higher education planning materials, computer science and technology, and the information within the two-tier relationship.", "cypher": "match (n:ENTITY{name:' Higher education planning materials; computer science and technology series'}) - [:Relationship*1..2]->(x) where x.name <>'298 pages' return distinct x.name"}, {"query": "What are the names of the top five Belgian nationals and how do they weigh?", "cypher": "match (:ENTITY{name:'Belgium'}) <- [:Relationship{name:'nationality'}]-(x) - [:Relationship{name:'weight'}]->(n) return x.name,n.name skip 2 limit 10"}, {"query": "What are the books by the author of Holenbeck and what are they classified as?", "cypher": "match (:ENTITY{name:'Holbenbeck'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Tag{name:'tag'}]->(q) return distinct h.name,q.name"}, {"query": "Please share who Daniel Greaves is.", "cypher": "match (:ENTITY{name:'Daniel Greaves'}) --(q) return q.name order by q.name limit 3"}, {"query": "What were the people born on March 20, 1820? Can you tell me their main achievements?", "cypher": "match (:ENTITY{name:'20 March 1820'}) <- [:Relationship{name:'time of birth'}]-(h),(h) - [:Relationship{name:'main achievement'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know what chemical has a molecular weight of 152.15?", "cypher": "match (:ENTITY{name:'152.15'}) <- [:Relationship{name:'molecular mass'}]- (m) return distinct m.name"}, {"query": "What are the dates of the six political-military books?", "cypher": "match (:ENTITY{name:'political and military books'}) <- [*]-(m), (m) - [:Relationship{name:' date of creation'}]->(n) return m.name, n.name limit 6"}, {"query": "Is it possible to use a similar label for ivanol?", "cypher": "match (:ENTITY{name:'rock phosphate'}) - [:Tag{name:'label'}]-> (p) with p order by p.name return p.name"}, {"query": "Where are the students who graduated from the Central European School of International Business going?", "cypher": "match (:ENTITY{name:'Central European International Business School'}) <- [:Relationship{name:' Graduate School'}]-(h),(h) - [:Relationship{name:' Profession'}]->(n) return distinct h.name"}, {"query": "Tell me all the labels of the 16MN straight tube?", "cypher": "match (:ENTITY{name:'16MN straight tube'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "Can you help me find out the three vegetables?", "cypher": "match (:ENTITY{name:' vegetables'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' species'}]->(n) return m.name, n.name limit 3"}, {"query": "See the top-ranked label attribute for Ultimate Fantasy 1 that is different from the book label?", "cypher": "match (:ENTITY{name:'0 degree of ultimate fantasy1'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'books' return x.name limit 1"}, {"query": "Please tell me the main department setting of the Banyang Petrochemical Higher Specialist University?", "cypher": "match (:ENTITY{name:'High School of Chemical and Petroleum Engineering'}) <- [:Relationship{name:' Chinese name'}]- ((q),(q) - [:Relationship{name:' Major Faculty'}]->(p) return distinct q.name"}, {"query": "What are the non-hereditary categories and grades of quartz lamps?", "cypher": "match (:ENTITY{name:'Relationship{name:'non-hereditary level'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'non-hereditary category'}) ->(m) return m.name as name"}, {"query": "Which exhibition is the exhibition manager of Hangzhou Creative Jewelry Exhibition Services Limited?", "cypher": "match (:ENTITY{name:'Hangzhou Creative Jewelry Exhibition Services Limited'}) <- [:Relationship{name:'Executive business'}]- (p) return distinct p.name"}, {"query": "Please help me find the other 5 pieces of information in the second layer of the book.", "cypher": "match (:ENTITY{name:' little werewolf'}) - [:Relationship*1..2]-(p) where p.name <> 'books' return p.name limit 5"}, {"query": "Who knows what the main prize is for the famous fenmaster?", "cypher": "match (:ENTITY{name:'Relationship{name:'Chinese name'}]-(n) - [Relationship{name:'main award'}]->(h) return distinct h.name"}, {"query": "Name four doctors and what are their representative works?", "cypher": "match (:ENTITY{name:'doctor'}) <- [*]-(m), (m) - [:Relationship{name:'representative work'}]->(n) return m.name, n.name limit 4"}, {"query": "What kind of exhibitions are there in Zhuzhou, Henan?", "cypher": "match (:ENTITY{name:' Henan Province, Zhejiang City'}) <- [:Relationship{name:' Location'}]- (m) return m.name"}, {"query": "I would like to know what kind of relationships are there within the three layers of Zhou Sam Village?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Zhou with village'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "What is the industrial product called 16Mn low alloy stainless steel pipe?", "cypher": "match (:ENTITY{name:'16Mn low alloy stainless steel pipe'}) --(n) with n order by n.name where n.name <> 'industrial product' return n.name"}, {"query": "What chemical has a Molar refraction of 32.57?", "cypher": "match (:ENTITY{name:'32.57'}) <- [:Relationship{name:'Mor refractive rate'}]- (h) return distinct h.name"}, {"query": "In addition to being an economist, Sheng introduces 10 other professions related to him.", "cypher": "match (:ENTITY{name:'\u8c22'}) <- [:Relationship{name:' Chinese name'}]-(p),(p) - [:Relationship{name:' profession'}]->(q) where q.name <> 'economist' return distinct q.name limit 10"}, {"query": "The main characteristic of an alloy steel is that it has good toughness. What is the name of this steel?", "cypher": "match (:ENTITY{name:' good resilience etc'}) <- [:Relationship{name:' main characteristics'}]- (n) return n.name"}, {"query": "What is the name of the 4A scenic area in Gaoqi Village, Tai Chi Town, Shenzhen, Hunan Province?", "cypher": "match (:ENTITY{name:'Nueqiang County Oil Creek Township, Gaokyu Village, Shenzhen, Hunan Province'}) <- [:Relationship{name:'Geographical location'}]-(m), (m) - [:Relationship{name:'Visitation level'}]->(n) where n.name='AAAA level' return m.name"}, {"query": "What is H.D. doing?", "cypher": "match (:ENTITY{name:'H.D'}) <- [:Relationship{name:'alias'}]-(x) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 1"}, {"query": "Please tell me what the main achievements of this Chinese person are?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(h) - [:Relationship{name:'main achievements'}]->(x) return x.name order by x.name limit 1"}, {"query": "Do you know the name of a car with an engine model called RFJ?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What kind of companies are the ones that have earned the reputation of being the leading brands in e-commerce between building materials companies?", "cypher": "match (:ENTITY{name:' a well-known brand for e-commerce between building materials companies'}) <- [:Relationship{name:' achievements'}]- ((h) - [:Relationship{name:' type'}]->(x) return distinct h.name"}, {"query": "111 Long Rainbow 008-III Big Khanh Horse 4000L What kind of electronics is it?", "cypher": "match (:ENTITY{name:'111 Long Rainbow 008-III Big Sweatshirt 4000L'}) --(n) with n order by n.name where n.name <> 'electronic product' return n.name"}, {"query": "Can you find any companies in Hangzhou?", "cypher": "match (p:ENTITY{location:' Hangzhou'}) return p.name"}, {"query": "What was the 1953 KGB inside?", "cypher": "match (:ENTITY{name:'1953 Kgb's interior'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 1"}, {"query": "Can you tell me the information about the bridge?", "cypher": "match (:ENTITY{name:' high bridge light'}) --(h) return h.name order by h.name limit 1"}, {"query": "The five main awards for excellence in education in Cape Town, please tell me about them.", "cypher": "match (:ENTITY{name:'Hope Excellence Education'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'Main award'}]->(m) return m.name order by m.name limit 5"}, {"query": "What chemical has a density of 1.333 g/cm3?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you find me a representation of a new teacher?", "cypher": "match (:ENTITY{name:'Chen Xin's'}) <- [:Relationship{name:'Teacher'}]-(x),(x) - [:Relationship{name:'Representative work'}]->(q) return distinct q.name limit 1"}, {"query": "You know, besides the 150 W power consumption, the LG 32LH23UR has 5 information in 2 layers.", "cypher": "match (:ENTITY{name:'LG 32LH23UR'}) - [*1..2]-(p) where p.name <> '150 W' return distinct p.name limit 5"}, {"query": "What are the fishes in the family of the crocodile in the western North Pacific?", "cypher": "match (:ENTITY{name:'Western Pacific Northwest'}) <- [:Relationship{name:' distribution area'}]-(m), (m) - [:Relationship{name:' genus'}]->(n) where n.name='genus' return distinct m.name"}, {"query": "What dialect is spoken in the area?", "cypher": "match (:ENTITY{name:'Bayan's Bay'}) - [:Relationship{name:'area'}]->(n) return n.name as name union all match (:ENTITY{name:'Bayan's Bay'}) - [:Relationship{name:'dialect'}]->(m) return m.name as name"}, {"query": "Can you give me the name of a company that has a production base in Guangdong Dongguan?", "cypher": "match (:ENTITY{name:' Guangdong.Dongshan'}) <- [:Relationship{name:' Production base'}]- (m) return m.name"}, {"query": "What is the total length of the Dutch Provence-class frigate? Can you tell me the discharge capacity?", "cypher": "match (x:ENTITY{name:'Dutch Province of the Pompidou class frigate'}),(x) - [:Relationship{name:' full length'}]-> (m), (x) - [:Relationship{name:' full discharge'}]->(n) return m.name,n.name"}, {"query": "What do you think about .vn domain names?", "cypher": "match (:ENTITY{name:'.VN domain name'}) --(h) with h order by h.name return h.name"}, {"query": "What are the components of a polycrystalline silicon solar panel?", "cypher": "match (:ENTITY{name:' polygonal aluminum solar panel'}) <- [:Relationship{name:' Chinese name'}]-(m),(m) - [:Relationship{name:' component'}]->(h) return distinct h.name"}, {"query": "The first is to match five labels for a 1,000-gun fishing machine.", "cypher": "match (:ENTITY{name:'1000 cannon fishing machine'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 5"}, {"query": "Find out the 10 people in Liang Shan, how many are they in Liang Shan?", "cypher": "match (:ENTITY{name:'spoonful'}) <--(m), (m) - [:Relationship{name:'spoonful'}]->(n) return m.name,n.name limit 10"}, {"query": "I've listed four famous sights in the Bay of Biscay, but what else can I do besides visit the Shining Moon and the Fukuda Tower?", "cypher": "match (n:ENTITY{name:'Floral Bay'}) - [:Relationship{name:'Famous attractions'}]->(h) where h.name <> 'Floral Bay' and h.name <> 'Floral Bay' return distinct h.name limit 4"}, {"query": "What is the density of 1-methoxyethylene?", "cypher": "match ((:ENTITY{name:'1-methacrylate ring-4-methylmethacrylate'}) - [:Relationship{name:'density'}]-> (m) return m.name"}, {"query": "What are some of the major accomplishments of Michael W. Young?", "cypher": "match (h:ENTITY{name:'Michael W. Young'}) <- [:Relationship{name:'foreign language name'}]- ((p) - [:Relationship{name:'main achievement'}]->(n) return distinct n.name"}, {"query": "What is the profession of Y.M. Shockaliski?", "cypher": "Match (:ENTITY{name:'Shakaliski, Y.M.'}) - [:Relationship{name:'profession'}]-> (p) return p.name skip 1 This is a list of all the different ways Shakaliski is credited in the database."}, {"query": "I would like to get some information about Brian Lally.", "cypher": "match (:ENTITY{name:'Brian Lally'}) --(n) return n.name skip 3"}, {"query": "Can you tell me five things about Capito Francesco, an Italian?", "cypher": "match (n:ENTITY{name:'Capto Francesco'}) - [*]->(x) where x.name <>'Italy' return distinct x.name limit 5"}, {"query": "How many 4A sites are there in our country?", "cypher": "match (:ENTITY{name:'AAAA'}) <--(m), (m) --(n) where n.name='China' return count ((distinct m.name)"}, {"query": "Do you know where the home stadium of AC Milan is?", "cypher": "match ((:ENTITY{name:'AC Milan Football Club'}) - [:Relationship{name:'Home venue'}]-> (p) return p.name"}, {"query": "What is the full name of Hong Kong star Shima?", "cypher": "match (:ENTITY{name:'shy'}) --(x) return distinct x.name"}, {"query": "What is the profession of Yang Kang?", "cypher": "Match ((:ENTITY{name:'spoon'}) - [:Relationship{name:'profession'}]-> (n) return n.name"}, {"query": "What is the type and grade of hospital in Xuzhou City Hospital?", "cypher": "match (:ENTITY{name:'Xuzhou City Center Hospital'}) - [:Relationship{name:'Hospital type'}]->(n) return n.name as name union all match (:ENTITY{name:'Xuzhou City Center Hospital'}) - [:Relationship{name:'Hospital grade'}]->(m) return m.name as name"}, {"query": "I know the molecular formula for 3-hydroxybenzene, but I don't know the molecular weight, can you help me?", "cypher": "match ((:ENTITY{name:'3-methacrylate'}) - [:Relationship{name:'molecular mass'}]-> (m) return m.name"}, {"query": "What is the name of the annual Buddhist law festival held in Lhasa, Tibet, China, during the new moon of the Tibetan calendar?", "cypher": "match (:ENTITY{name:' Buddhist Council held in Lhasa, Tibet, China during the new moon month of the Tibetan calendar .'}) --(x) return distinct x.name"}, {"query": "In addition to \"Soft and Too Loving You\", there are three other works by Liu Xiaobo.", "cypher": "match (n:ENTITY{name:'spoonful'}) - [:Relationship{name:'representative work'}]->(h) where h.name <> '\u67d4\u67d4' and h.name <> 'too much love for you' return distinct h.name limit 3"}, {"query": "1968 people now give five other professions in addition to professors, master's students, tutors.", "cypher": "match (:ENTITY{name:'1968'}) <- [:Relationship{name:'date of birth'}]-(p) - [:Relationship{name:'profession'}]->(m) where m.name <> 'professor, master student tutor' return distinct m.name limit 5"}, {"query": "What else do you know about the film The Chestnut Angel? Help me find the other 4 pieces of information in the 2nd layer.", "cypher": "match (:ENTITY{name:'chestnut angel'}) - [:Relationship*1..2]-(p) where p.name <> 'film' return p.name limit 4"}, {"query": "What is the ink painting of Nan-woo?", "cypher": "match (:ENTITY{name:'Southern Lights'}) <- [:Relationship{name:'creation date'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='paperback ink painting' return distinct m.name"}, {"query": "Is Lee Zhou-Ping a cook? Can you name five?", "cypher": "match (:ENTITY{name:'Lee Zhoupo'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'profession'}]->(h) return distinct h.name limit 5"}, {"query": "Can you find information about Aguar Fernando, 5 and 1.85 meters?", "cypher": "match (n:ENTITY{name:'Aguiar Fernando'}) - [*]->(x) where x.name <>'1.85 m' return distinct x.name limit 5"}, {"query": "What are the school profiles of the following three primary schools in the Cabinet 2 level?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' Cabinet Primary School'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Who is as tall as Reynaldo and what are their individual labels?", "cypher": "The following is a list of the most commonly used tags for the game of basketball:"}, {"query": "How much is the hotline for buying a bus ticket?", "cypher": "match (:ENTITY{name:'travel ticket'}) <- [:Relationship{name:'purchase'}]- (q) return distinct q.name"}, {"query": "What is the profession of people born in October 1984?", "cypher": "match (:ENTITY{name:'October 1984'}) <- [:Relationship{name:'date of birth'}]- ((q),(q) - [:Relationship{name:'occupation'}]->(x) return distinct x.name"}, {"query": "How about a 100 layer reveal strategy with one message?", "cypher": "match (:ENTITY{name:'100 level reveal full tactics'}) --(m) with m order by m.name return m.name skip 1 limit 1"}, {"query": "What kind of programs are on CNTV?", "cypher": "match (p:ENTITY{name:'CNTV'}) <- [:Relationship{name:'online streaming platform'}]- (h) return distinct h.name"}, {"query": "Do you know what the main awards are for ambition, kindness, yes, innovation in schools?", "cypher": "match (:ENTITY{name:'ambitious, kind, ambitious, innovative'}) <- [:Relationship{name:'school lesson'}]- ((h) - [:Relationship{name:'main award'}]->(x) return distinct x.name limit 5"}, {"query": "I'm going to be a writer for the next few years.", "cypher": "match (:ENTITY{name:' love business'}) <--(n) return n.name"}, {"query": "Can you find me three books published by Educational Science Publishing?", "cypher": "match (:ENTITY{name:'Publications in the field of education'}) <- [:Relationship{name:'Publications in the field of education'}]- ((n) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 3"}, {"query": "Please list the names of 10 schools in Canada and the main departments they include.", "cypher": "match (:ENTITY{name:'Canada'}) <- [:Relationship{name:'area'}]-(x),(x) - [:Relationship{name:'main department'}]->(m) return x.name,m.name skip 1 limit 10"}, {"query": "What is the EINECS number of the ((\u00b1) -a-methyl-a-[trimethyl]phenyl acetate in the table?", "cypher": "match ((x:ENTITY{name:'(\u00b1) -a-methyl-a-[trimethyl]methyl-ethylene'}) - [:Relationship{name:'EINECS'}]-> (n) return n.name"}, {"query": "Can you tell me about the two labels owned by Kohin Pharmaceutical Trading Co., Ltd. in Sichuan Province, besides the brand name?", "cypher": "match (:ENTITY{name:' Kochin Pharmaceutical Trading Co., Ltd. of Sichuan Province'}) - [:Tag{name:'label'}]-> (p) with p order by p.name where p.name <> 'brand' return p.name limit 2"}, {"query": "Do you know which industrial books are available? Can you name five?", "cypher": "match (:ENTITY{name:' industry book'}) <- [:Tag{name:' label'}]-(x),(x) - [:Relationship{name:' book'}]->(q) return distinct q.name limit 5"}, {"query": "The scope of the evaluation of the evaluation work includes the implementation of a sanitary rural rehabilitation project in the area, called the \"Page name\"?", "cypher": "match (:ENTITY{name:' area of implementation of sanitary rural sanitation project\u3002'}) <- [:Relationship{name:' scope of assessment acceptance'}]- (p) return p.name"}, {"query": "I'm not sure if you can tell me the name of the host or the shooter's performance.", "cypher": "match (p:ENTITY{name:'performance host'}) <--(x) -->(q:ENTITY{name:'shooter'}) return x.name"}, {"query": "In which city is the South of Five Love Market?", "cypher": "match ((:ENTITY{name:'South of the Five Love Markets'}) - [:Relationship{name:'Location'}]-> (n) return n.name"}, {"query": "Do you know the first two words of the name of the publisher of The Last of the Mohicans and the full name of the publisher?", "cypher": "MATCH (n:ENTITY{name:' the last great wizard'}) - [:Relationship{name:' the issuing company'}]->(m) RETURN m.name, substring ((m.name, 0,2)"}, {"query": "What other information does Yuen Yuen have besides the Japanese information?", "cypher": "match (:ENTITY{name:'\u7950\u4ed9\u52c7'}) --(m) with m order by m.name where m.name <> 'Japan' return distinct m.name limit 2"}, {"query": "Do you know what chemical has CAS number 106505-90-2?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Can you give me two Japanese actors, what are their main roles?", "cypher": "match (:ENTITY{name:'Japanese actor'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:'main work'}]->(n) return distinct m.name,n.name limit 10"}, {"query": "What is the name of the long-tailed weasel?", "cypher": "match (:ENTITY{name:'Relationship{name:'do not call'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'distribution area'}) ->(m) return m.name as name"}, {"query": "Who is the founder of the two-time drivers' championship and four-time team championship?", "cypher": "match (:ENTITY{name:'2 times driver champion, 4 times team champion'}) <- [:Relationship{name:'main achievement'}]- ((n) - [:Relationship{name:'founder'}]->(m) return distinct m.name limit 1"}, {"query": "Help me find 10 songs", "cypher": "match (:ENTITY{name:'song'}) <- [:Relationship{name:'category'}]-(m) return distinct m.name limit 10"}, {"query": "What is the natural number between 108 and 110?", "cypher": "match (:ENTITY{name:'108 and 110 are natural numbers'}) <- [:Relationship{name:'meaning'}]- (q) return distinct q.name"}, {"query": "Who is the astronomer who wrote the book on the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth of the myth?", "cypher": "match (:ENTITY{name:'Relationship'}) <- [Relationship's name: 'representative work'}]- ((m), (m) - [Relationship's name: 'profession'}]->(n) where n.name='astronomer' return m.name"}, {"query": "Looking for an introduction to the three 1810 hard fatty acids besides their academic properties?", "cypher": "match (:ENTITY{name:'1810 fatty acid'}) --(x) with x order by x.name where x.name <> 'discipline' return x.name limit 3"}, {"query": "What is the shortest path to studying the comparison of the East and West reproductive cultures in the three layers of the electronic circuit experiment tutorial?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Electronic circuit experiment tutorial'}) - [*..3]-(b:ENTITY{name:'East and West fertility culture comparison study'})) return count ((p)"}, {"query": "Who among the animation masters has won the Oscar for Best Picture?", "cypher": "match (:ENTITY{name:'Oscar of the Golden Image'}) <- [:Relationship{name:' Major achievements'}]-(m), (m) - [:Relationship{name:' Career'}]->(n) where n.name='Master of Animation' return distinct m.name"}, {"query": "What is the Latin name of the Emerald Budgies butterfly described in the book?", "cypher": "Match (s) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) ("}, {"query": "Whoopi Goldberg's work is representative of what?", "cypher": "match (:ENTITY{name:'Whoopi Goldberg'}) <- [:Relationship{name:'foreign language name'}]-(m) - [:Relationship{name:'representing work'}]->(q) return q.name order by q.name limit 10"}, {"query": "I'm not sure if I can explain this person.", "cypher": "match (n:ENTITY{name:'sweet'}) --(x) return x.name"}, {"query": "I would like to know which reporting regulations were published by Sichuan Daily?", "cypher": "match (:ENTITY{name:'Sichwa daily'}) <- [:Relationship{name:'published media'}]- (m) return distinct m.name"}, {"query": "Can you list two software that were launched in 2013?", "cypher": "The following is a list of the most commonly used parameters for the calculation of the value of a variable:"}, {"query": "Do you have any trouble recommending some fantasy, romance, comedy movies?", "cypher": "match (:ENTITY{name:'fantasy, love, comedy'}) <- [:Relationship{name:'type'}]- (x) return distinct x.name"}, {"query": "Can anyone tell me what Liu Wei Ming does for a living?", "cypher": "match (:ENTITY{name:'Yun Wei-ming, Zhejiang practitioner, born 1961 in Wuhan, Hubei, studied book painting since childhood, his calligraphy works are just as hard as hard, and as easy as easy.\u300f)"}, {"query": "What do you think of when you think of Shanghai? Can you name four?", "cypher": "match (:ENTITY{name:'Shanghai City'}) <- [:Relationship{name:'location'}]- (m) return m.name limit 4"}, {"query": "Is there another strain of the unusual chainworm that is a radiofrequency bacteria?", "cypher": "match (:ENTITY{name:'unusual chainworm'}) - [:Relationship{name:'properties'}]-> (h) with h order by h.name where h.name <> 'radioactive bacteria' return h.name"}, {"query": "I would like to know what the relationship is between the three levels of administrative penalties that customs impose?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' Customs administrative penalty'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1 The name of the link is not known"}, {"query": "Can you tell me two things about Kim Quayle's main achievements?", "cypher": "match (:ENTITY{name:'Kin Kwei'}) <- [:Relationship{name:' alias'}]- ((q),(q) - [:Relationship{name:' major achievement'}]->(x) return distinct x.name limit 2"}, {"query": "I'm going to be a pop star and an actor, can you find me two?", "cypher": "match (:ENTITY{name:'pop singer'}) <- [:Relationship{name:'profession'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='film and television actor' return m.name"}, {"query": "I would like to know all the information about Wang Xia's work in Qingdao Chapter 2, Chapter 4?", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name<>'Wangyang' return distinct x.name"}, {"query": "What's the name of this person with the artist tag? Can you tell me one?", "cypher": "match (:ENTITY{name:' artist'}) <- [:Tag{name:' tag'}]-(x) - [:Relationship{name:' alias'}]->(q) return q.name order by q.name limit 1"}, {"query": "I'm not sure if you understand, but can you tell me about him?", "cypher": "match (:ENTITY{name:'Welcome'}) --(p) return p.name skip 1 This is a list of all the different ways P.M.S. is credited in the database."}, {"query": "Can you name the other five professions this politician has?", "cypher": "match (:ENTITY{name:'political figure'}) <- [:Tag{name:'tag'}]-(m),(m) - [:Relationship{name:'profession'}]->(q) return q.name skip 1 limit 5"}, {"query": "The information about Bialek Jaroslaw, who gave me the third level of relationship football?", "cypher": "match (n:ENTITY{name:'Bialek Jaroslaw'}) - [*1..3]->(x) where x.name <> 'football' return distinct x.name"}, {"query": "I asked what label is 2GB DDR3 on the product?", "cypher": "match (:ENTITY{name:'2GB DDR3'}) <- [:Relationship{name:'memory capacity'}]-(m),(m) - [:Tag{name:'tag'}]->(p) return distinct p.name limit 1"}, {"query": "Can you give me 10 pieces of information about the famous 3 layered dihu-saima, other than the instrument of performance is the dihu?", "cypher": "match (:ENTITY{name:'racehorse[Diihu track]'}) - [*1..3]-(p) where p.name <> 'Diihu, folk music' return distinct p.name limit 10"}, {"query": "Can you give me one of the mass sex groups and describe it?", "cypher": "match (:ENTITY{name:'mass group'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 1"}, {"query": "I would like to know what kind of jobs are people with socialist, Marxist, communist beliefs doing?", "cypher": "match (:ENTITY{name:'socialism, Marxism, communism'}) <- [:Relationship{name:'faith'}]- ((m) - [:Relationship{name:'profession'}]->(x) return distinct x.name"}, {"query": "The following is a list of five Natalie Magdalene messages.", "cypher": "match (:ENTITY{name:'Natalie Magdalena'}) --(h) return distinct h.name limit 5 The name of the game is the same as the name of the game"}, {"query": "What are the three Chinese names of Chin Dong, born in Hong Kong in 1954 and a native of Shandong, China?", "cypher": "match (:ENTITY{name:'Zhu Zhong Shan Tong's Tobacco Company, born 1954 in Hong Kong Taipei Mountain, entered the Chinese Drama School at the age of six to study drama, initially as a martial artist, and gradually developed into an actor, director and supervisor."}, {"query": "How many books of 32 pages have been published by the Reliance Publishing Company?", "cypher": "match (l:ENTITY{name:'connection publisher'}) <- [:Relationship{name:'publisher'}]- (mn) - [:Relationship{name:'opened'}]->(n:ENTITY{name:'32opened'}) return mn.name limit 20"}, {"query": "Can you tell me what Emanuel Wolstein does for a living?", "cypher": "match (:ENTITY{name:'Emanuel Wolstein'}) - [:Relationship{name:'profession'}]-> (m) return m.name order by m.name"}, {"query": "Life is tough, which company is producing? Who is the director? Who is the main actor in this drama?", "cypher": "Match (:ENTITY{name:'life is tough'}) - [:Relationship{name:'output company'}]->(n) return n.name as name union all match (:ENTITY{name:'life is tough'}) - [:Relationship{name:'director'}]->(m) return m.name as name union all match (:ENTITY{name:'life is tough'}) - [:Relationship{name:'lead actor'}->(r) return r.name as name"}, {"query": "I want to find six plants, and what are their families?", "cypher": "The name of the plant is the same as the name of the plant itself."}, {"query": "Which company developed the spss software?", "cypher": "match (:ENTITY{name:'spss'}) - [:Relationship{name:'developer'}]->(m) return distinct m.name"}, {"query": "The first is that the government has decided to give 12308 national tickets 10 different labels.", "cypher": "match (:ENTITY{name:'12308 national bus ticket'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return distinct n.name limit 10"}, {"query": "Can you tell me about the 5 types of relationships in the 5 levels of the 3 practical violin scale exercises published by Shanghai Music Publishing?", "cypher": "match (n:ENTITY{name:'Practical Violin Stage 3'}) - [*1..5]->(x) where x.name<>'Shanghai Music Publishing' return distinct x.name limit 5"}, {"query": "What is the name of the theory proposed by J. Piaget for its application in psychology?", "cypher": "match (:ENTITY{name:'J. Piager'}) <- [:Relationship{name:'proposer'}]- ((m), (m) - [:Relationship{name:'applied discipline'}]->(n) where n.name='developmental psychology' return distinct m.name"}, {"query": "Do you know anything about Shan Lin's career other than modeling and acting?", "cypher": "match (n:ENTITY{name:'Shan Lin's'}) - [:Relationship{name:'profession'}]->(h) with h order by h.name where h.name <> 'model' and h.name <> 'actor' return h.name limit 1"}, {"query": "Do you want to know about the profile of this person, Vrapi Endrit, in the two-tier relationship?", "cypher": "match (n:ENTITY{name:'Vrapi Endrit'}) - [*1..2]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "Can you provide me with five details of the five levels of relationship of Yuki Kobayashi, a football player?", "cypher": "match (n:ENTITY{name:'\u7389\u57ce\u5cfb\u543e'}) - [*1..5]->(x) where x.name<> 'footballer' return distinct x.name limit 5"}, {"query": "Can you name two types of blackbird bikes in languages other than English and Chinese?", "cypher": "match (n:ENTITY{name:'Blackbird Bike'}) - [:Relationship{name:'software language'}]->(h) with h order by h.name where h.name <> 'English' and h.name <> 'Chinese' return h.name limit 2"}, {"query": "Do you know which international conference was held on December 1st - December 12th 2008?", "cypher": "match (:ENTITY{name:'December 1, 2008 - December 12, '}) <- [:Relationship{name:' time'}]- (q) return distinct q.name"}, {"query": "What is the best way to get rid of the smell of strawberries?", "cypher": "match (:ENTITY{name:'Relationship{name:'Not suitable for the crowd'}]-> (m) return distinct m.name"}, {"query": "Do you know what constellations represent for the authors of Virgo?", "cypher": "match (:ENTITY{name:'virgin'}) <- [:Relationship{name:'star'}]-(n),(n) - [:Relationship{name:'represented work'}]->(q) return distinct q.name limit 1"}, {"query": "List four online novels and their authors.", "cypher": "match (:ENTITY{name:'net novel'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'author'}]->(n) return m.name, n.name limit 4"}, {"query": "Please tell me 10 famous sights in the city of Taipei.", "cypher": "Match (:ENTITY{name:'Water City of the West'}) - [:Relationship{name:'Famous attractions'}]-> (m) return m.name limit 10"}, {"query": "The author of the book represented by Liu Xiaobo is a Shenyang man, who told me about his other three works.", "cypher": "match (:ENTITY{name:'Shenyang'}) <- [:Relationship{name:'birthplace'}]-(m) - [:Relationship{name:'representative work'}]->(x) where x.name <> 'Yunqian' return distinct x.name limit 3"}, {"query": "What are the private companies in Chengdu?", "cypher": "match (:ENTITY{name:'military enterprise'}) <- [:Relationship{name:'company nature'}]- (mn) - [:Relationship{name:'headquarters location'}]->(n:ENTITY{name:'\u6210\u90fd'}) return mn.name"}, {"query": "Tell me, what is the profession of this man, Chou Yanshan?", "cypher": "match (:ENTITY{name:'Chou yanshan'}) <- [:Relationship{name:'foreign language name'}]-(p) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 3"}, {"query": "What is the logP of the chemical: 1.86480?", "cypher": "The name of the file is \"Relationship\" (name: \"logP\"})"}, {"query": "Can you tell me the name of the relationship between the two layers involved in Jiangxi Stone City?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Jiangxi Stone City'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Please help me find three ancient cities, what are their names?", "cypher": "match (:ENTITY{name:'Ancient City'}) <- [*]-(m), (m) - [:Relationship{name:'alias'}]->(n) return m.name, n.name limit 3"}, {"query": "The next parade of which parade is the 1950 National Day Parade?", "cypher": "match (:ENTITY{name:'1950 National Day Parade'}) <- [:Relationship{name:'Next time parade'}]- (m) return m.name"}, {"query": "What is the landmark building of the Shandong Provincial Capital Culture and Art Center?", "cypher": "match (:ENTITY{name:'Shandong Provincial Capital Culture and Art Center'}) <- [:Relationship{name:'foreign name'}]-(n) - [:Relationship{name:'landmark building'}]->(x) return distinct x.name limit 1"}, {"query": "What is the acronym used by the National Academic Conference on Sensitive Elements and Sensors?", "cypher": "match ((:ENTITY{name:'National Academic Conference on Sensitive Elements and Sensors'}) - [:Relationship{name:' abbreviated '}]-> (h) return h.name"}, {"query": "Can you tell us about the three-tier relationship of the Chinese Practical Clinical Skills curriculum in simple Chinese?", "cypher": "match (n:ENTITY{name:' Practical Chinese Medicine Clinical Skills Tutorial'}) - [:Relationship*1..3]->(x) where x.name <> 'simplified Chinese' return distinct x.name"}, {"query": "Can you tell me the spelling of the word \"Jubei\" for me?", "cypher": "match ((:ENTITY{name:' word word\u73e0\u7389'}) - [:Relationship{name:'spelling'}]-> (n) return n.name"}, {"query": "Do you know what works were published in January 2016?", "cypher": "match (x:ENTITY{name:'2016-1'}) <- [:Relationship{name:' year of publication'}]- (m) return distinct m.name"}, {"query": "Please recommend a famous place to visit in Kangme-ta Lake Rock, if not the Great Wall of Japan and the Taichung Rock Prophecy.", "cypher": "match (n:ENTITY{name:'Relationship{name:'famous attractions'}]->(h) where h.name <> 'Kazakya' and h.name <> 'Kazakya' return distinct h.name limit 1"}, {"query": "Please list three articles about the world's poorest president.", "cypher": "match (:ENTITY{name:'The poorest president in the world'}) --(p) return distinct p.name limit 3"}, {"query": "Please help me with the new Chinese proverb: The Goddess of Happiness knocks on the door, introducing a relationship with no less than two layers.", "cypher": "match (n:ENTITY{name:'Chinese proverb: The Goddess of Happiness is knocking at the door'}) - [:Relationship*1..2]->(x) where x.name <>'Relationship' return distinct x.name"}, {"query": "What is the shortest path of corn starch to corn stem rot in the two layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' corn wrinkle disease'}) - [:Relationship*..2]-(b:ENTITY{name:' corn stump disease'})) return count ((p)"}, {"query": "Do you know which countries have subtropical monsoon climates and what dialects they speak?", "cypher": "match (:ENTITY{name:'subtropical monsoon climate'}) <- [:Relationship{name:'climate conditions'}]-(h),(h) - [:Relationship{name:'dialect'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "I want to know about the three games that are dancing gold, except for the costume genre?", "cypher": "match (:ENTITY{name:'dancing gold'}) --(m) with m order by m.name where m.name <> 'dress' return distinct m.name limit 3"}, {"query": "Please list the actors who have been cast in the movie The Sisterhood of the Traveling Pants.", "cypher": "match (:ENTITY{name:'swinging'}) --(m) return distinct m.name"}, {"query": "Can you tell us about the two-layer relationship between the early education of the iconography of cultural works?", "cypher": "match (n:ENTITY{name:' Early education graphic version'}) - [*1..2]->(x) where x.name <> 'cultural work' return distinct x.name"}, {"query": "What are the five jobs that Liu Yan has?", "cypher": "match (:ENTITY{name:'Yun Yang'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 5"}, {"query": "The magazine is published in Shanghai and where is it published?", "cypher": "match (:ENTITY{name:' eat all over Shanghai'}) <- [:Relationship{name:' book name'}]- ((p) - [:Relationship{name:' publishing house'}]->(n) return distinct n.name limit 3"}, {"query": "Can you name the name of this thing with the life tag?", "cypher": "The following is a list of all the characters that are in the game:"}, {"query": "Which five novels are listed in the Jinjiang Literary City?", "cypher": "match (:ENTITY{name:'Jingjiang Literary City'}) <- [:Relationship{name:'connected website'}]- ((q) - [:Relationship{name:'Chinese name'}]->(p) return distinct p.name limit 5"}, {"query": "Do you remember the labels of the 110m hurdles?", "cypher": "match (:ENTITY{name:'110m final'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "What is the location of the outer islands?", "cypher": "match (:ENTITY{name:'shell island'}) - [:Relationship{name:'geographical location'}]->(n) return n.name"}, {"query": "Can you tell me about the artwork of the teen adventure series; The audiobook: Predator 2 in no more than 2 layers of relationships?", "cypher": "match (n:ENTITY{name:'young adult adventure series\u00b7known comic book superheroes: The Hunted 2'}) - [:Relationship*1..3]->(x) where x.name<>'Artwork' return distinct x.name"}, {"query": "Do you know what the most representative works of the leaf fly are?", "cypher": "match (:ENTITY{name:'spoonful'}) - [:Relationship{name:'represents work'}]-> (x) return x.name skip 2"}, {"query": "What are the main awards for the company located in the northern part of the city of Pyongyang?", "cypher": "match (:ENTITY{name:'From the North Road of the Rich People of Yangyang City (Northern Ring Road) ') }) <-[:Relationship{name:' address'}]-(q) -[:Relationship{name:' main award'}]->(m) return distinct m.name"}, {"query": "I want to know about 100 Chinese versions of everything.", "cypher": "match (:ENTITY{name:'100 layer Chinese version'}) --(m) with m order by m.name return m.name"}, {"query": "What are the advantages and disadvantages of polishing rubber?", "cypher": "The name of the function is the name of the function itself. The name of the function is the name of the function itself."}, {"query": "Can you type 10 labels for 100 economic class violations that are investigated and convicted?", "cypher": "match (:ENTITY{name:'100 economic class breaches investigated and identified'}) - [:Tag{name:'label'}]-> (x) with x order by x.name return x.name limit 10"}, {"query": "If you know the date of the founding of Wanhua Chemical Limited, it was in Beijing.", "cypher": "match ((:ENTITY{name:'Wanghua Chemical [Beijing] Limited'}) - [:Relationship{name:' time of establishment'}]-> (h) return h.name"}, {"query": "When was the experimental school in Cape Town founded? Who is the principal?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'time of foundation'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'current principal'}]->(m) return m.name as name"}, {"query": "I want to publish all the information about .NET XML Advanced Programming?", "cypher": "match (:ENTITY{name: .NET XML Advanced Programming'}) --(n) with n order by n.name where n.name <> 'publication' return n.name"}, {"query": "When the reporter is Chinese, who is there?", "cypher": "match (p:ENTITY{name:'Chinese'}) <--(x) --> ((q:ENTITY{name:'journalist'}) return x.name"}, {"query": "Can you tell us about the three attributes of 1234?", "cypher": "match (:ENTITY{name:'1234]) --(h) with h order by h.name return h.name limit 3"}, {"query": "I see Tite is a Brazilian football coach, can you tell me 7 more things about him?", "cypher": "match (n:ENTITY{name:'Tite'}) -->(h) with h order by h.name where h.name <> 'Brazil' and h.name <> 'football coach' return h.name limit 7"}, {"query": "Can you tell us about your knowledge of the nearshore space?", "cypher": "match (n:ENTITY{name:'nearshore space'}) --(x) return x.name"}, {"query": "Do you have five books of encouragement in plain clothes?", "cypher": "The following is a list of all the characters that appear in the game."}, {"query": "I'm not sure if I'm right, but I'm not sure I'm right.", "cypher": "match (n:ENTITY{name:'\u7389\u697c\u6625\u00b7\u7626\u5026\u4f5c\u767b\u9ad8\u53bb'}) - [:Relationship*1..3]->(x) where x.name <> 'return x.name'"}, {"query": "The basic syntax of a modeling language is written in upper case.", "cypher": "match (m:ENTITY{name:'distinguish between upper and lower case'}) <- [:Relationship{name:'basic syntax'}]- (q) return q.name"}, {"query": "You are the one who filled me with the words red, blue and moon, the one who is the most important person I want to marry in my three-tiered relationship?", "cypher": "match (n:ENTITY{name:'you are the one I want to marry'}) - [*1..3]->(x) where x.name <>'red day blue moon' return distinct x.name"}, {"query": "Can you tell me the main achievements of a person who has a career as an oil painter, art educator?", "cypher": "match (:ENTITY{name:'painter, art educator'}) <- [:Relationship{name:'profession'}]-(h) - [:Relationship{name:'representative work'}]->(p) return p.name order by p.name limit 1"}, {"query": "Who and where was born in the same place, and who have all these people with a tag? Show these people in order of their tag number.", "cypher": "match (n:ENTITY{name:'\u4e95\u4e0a\u9065\u4e43'}) - [:Relationship{name:'birthplace'}]->(:ENTITY) <- [:Relationship{name:'birthplace'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Do you know what this Chinese person does for a living?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(n) - [:Relationship{name:'profession'}]->(m) return m.name order by m.name limit 1"}, {"query": "The head of the four noble families is from which family?", "cypher": "match (:ENTITY{name:'the head of the four great nobles'}) <- [:Relationship{name:'status'}]- ((m) return distinct m.name"}, {"query": "What is the name of a software book called Learn to Learn?", "cypher": "match (n:ENTITY{name:' is going to be a match}) <- [:Relationship{name:' is going to be a match}]- (q) return q.name"}, {"query": "How many companies are located in Philadelphia, USA? Can you name 11?", "cypher": "match (:ENTITY{name:'Philippines'}) <- [:Relationship{name:'location'}]- (m) return m.name limit 11 The name of the game is the same as the name of the game itself."}, {"query": "What is the relationship between the two layers of the banana egg breakfast cake?", "cypher": "The following pages link to The Unknown:"}, {"query": "I would like to know which works of the same period are in the same order as the Friday Symphony and the Symphony No. 6 and which have different labels? Please show me how many in order of number of labels.", "cypher": "The following is a list of the most commonly used synonyms for the word \"symbol\" in the English language:"}, {"query": "Can you name five of them?", "cypher": "match (x:ENTITY{name:'VIP'}) <- [:Relationship{name:'novel nature'}]-(m),(m) - [:Tag{name:'tag'}]->(h) return distinct h.name limit 5"}, {"query": "What else is there to know about the WCO Alliance other than WCO?", "cypher": "match (h:ENTITY{name:'World Trade Organization'}) --(p) with p order by p.name where p.name <> 'World Trade Organization' return p.name"}, {"query": "I recommend three Korean pop songs similar to Every Night.", "cypher": "match (:ENTITY{name:'Korea'}) <- [:Relationship{name:'nationality'}]-(h) - [:Relationship{name:'representative work'}]->(x) where x.name <> 'Every Night' return distinct x.name limit 3"}, {"query": "So if you've learned to decimal, what's the decimal of 10, would you do it?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Do you know what chemical is the molecular formula is C10H10N2O2?", "cypher": "match (:ENTITY{name:'C10H10N2O2'}) <- [:Relationship{name:'molecular'}]- (x) return distinct x.name"}, {"query": "I want to find 6 tabletop games, what type of games?", "cypher": "match (:ENTITY{name:'tabletop game'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'game type'}]->(n) return m.name,n.name limit 6"}, {"query": "Where is the site of the Kirochitia? When was it excavated?", "cypher": "match (:ENTITY{name:'Kiroquitia site'}) - [:Relationship{name:'location'}]->(n) return n.name as name union all match (:ENTITY{name:'Kiroquitia site'}) - [:Relationship{name:'time of excavation'}]->(m) return m.name as name"}, {"query": "Where is the Forest Botanical Garden in Helanggang Province?", "cypher": "match (:ENTITY{name:'Forest Botanical Garden of Helanggang Province'}) <- [:Relationship{name:'Famous attractions'}]-(m), (m) - [:Relationship{name:'Administrative district category'}]->(n) where n.name='municipality' return distinct m.name"}, {"query": "Can you find me the first three Chinese names for the collection of Yexin's short stories?", "cypher": "match (:ENTITY{name:'Yeshin short story collection'}) - [:Relationship{name:'Chinese name'}]-> (p) with p order by p.name return p.name limit 3"}, {"query": "What about the 037000 communities?", "cypher": "match (:ENTITY{name:'037000 community'}) --(q) with q order by q.name return q.name"}, {"query": "What is the main ingredient of fried chicken balls?", "cypher": "match (:ENTITY{name:' fried balls'}) - [:Relationship{name:' main ingredient'}]->(n) return n.name as name union all match (:ENTITY{name:' fried balls'}) - [:Relationship{name:' classification'}]->(m) return m.name as name"}, {"query": "Do you know the time of the loading of the 2S31 self-propelled gun I have?", "cypher": "match ((:ENTITY{name:'2S31 self-propelled gun'}) - [:Relationship{name:'setup time'}]-> (p) return p.name"}, {"query": "When was Sichuan Confucius Pharmaceutical Group founded?", "cypher": "match (:ENTITY{name:' Sichuan Konzhen Pharmaceutical Group'}) - [:Relationship{name:' time of establishment'}]-> (m) return distinct m.name"}, {"query": "The list of 50 free apps on Android?", "cypher": "The following is a list of all the games that are available on Android:"}, {"query": "Do you know what the profession of the whale is?", "cypher": "match (:ENTITY{name:'swing'}) <- [:Relationship{name:'swing'}]- ((n) - [:Relationship{name:'swing'}]->(p) return distinct p.name limit 1"}, {"query": "What is the species of the striped parrot and where is it mainly distributed?", "cypher": "The name of the function is the name of the function itself. The function is the name of the function itself."}, {"query": "Do you have any other information about Tendai other than social activities?", "cypher": "match (:ENTITY{name:'Detail'}) --(m) with m order by m.name where m.name <> 'social activity' return distinct m.name limit 1"}, {"query": "I'm looking for two alumni of the T\u00fcbingen University of Fine Arts who have something to represent their work.", "cypher": "match (:ENTITY{name:'Tibetano University of Fine Arts'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:'representing work'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Can you recommend 3 Chinese language software?", "cypher": "match (:ENTITY{name:' in Chinese'}) <- [:Relationship{name:' in Chinese'}]- (m) return m.name limit 3"}, {"query": "Do you know the five Chinese occupations?", "cypher": "match (n:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]- ((h) - [:Relationship{name:'profession'}]->(q) return q.name skip 1 limit 10"}, {"query": "Where will the 2004 Swiss Women's Elite League be held?", "cypher": "match ((:ENTITY{name:'2004 Swiss Women's Elite Championship'}) - [:Relationship{name:'place of the match'}]-> (n) return n.name"}, {"query": "Which version of the software is v2.5.4?", "cypher": "The following is a list of the most commonly used versions of the game."}, {"query": "Find out where the two national nature reserves are located.", "cypher": "match (:ENTITY{name:'national nature reserve'}) <- [*]-(m), (m) - [:Relationship{name:'area to which it belongs'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "What are the main achievements of people born in 1982? Can you list 5?", "cypher": "match (:ENTITY{name:'1982'}) <- [:Relationship{name:'date of birth'}]- ((p) - [:Relationship{name:'main achievements'}]->(m) return distinct m.name limit 5"}, {"query": "Tell me, what is the profile of the company within the three-tier relationship of this organization, the management consultancy company of Meiji United [Beijing] Limited?", "cypher": "match (n:ENTITY{name:'Mejid United [Beijing] Management Consulting Limited'}) - [*1..3]->(x) where x.name<>'organizing entity' return distinct x.name"}, {"query": "The men's team SUPER131 represents the team that plays football and also football.", "cypher": "match (:ENTITY{name:'SUPER131'}) - [:Relationship{name:'representative work'}]-> (n) with n order by n.name where n.name <> 'ball to play' return n.name"}, {"query": "Do you know which of the five relationship names in the two layers that the girl in the factory is involved in?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'the girl in the factory'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "What is the shortest path between the village of Rai Bay and the village of Bergo Bay on the second floor?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Lay Bay Village'}) - [*..2]-(b:ENTITY{name:'Berg Bay Village'})) return count ((p)"}, {"query": "Can you recommend 5 games for iOS?", "cypher": "match (:ENTITY{name:'ios'}) <- [:Relationship{name:'game platform'}]- (n) return distinct n.name limit 5"}, {"query": "What are the songs of the singers who won the most important awards in the Songwriting Competition in Liaoning?", "cypher": "match (:ENTITY{name:'original song by Liu Dong-mun-yu won the important award in the Ningbo Good Sound Awards\u3002'})"}, {"query": "What is the molecular weight of 3-hydro-5-hydroxybutyric acid?", "cypher": "match ((:ENTITY{name:'3-methacrylate-5-methacrylate'}) -[:Relationship{name:'molecular mass'}]-> (h) return h.name"}, {"query": "What are the three letters of the alphabet? What do they mean?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "What are the 10 types of teaching materials published by Tsinghua University Press and how much do they cost?", "cypher": "match (:ENTITY{name:'Chinghua University Press'}) <- [*]-(m), (m) - [:Relationship{name:'Pricing'}]->(n) return m.name, n.name limit 10"}, {"query": "Please write me the first ten articles on 4-methoxy-sulfonyl acetate.", "cypher": "match (:ENTITY{name:'4-morphosphatase sulfide acetate'}) --(p) with p order by p.name return p.name limit 10"}, {"query": "I'm going to give you five anime characters, what gender are they?", "cypher": "match (:ENTITY{name:'animated character'}) <- [*]-(m), (m) - [:Relationship{name:' gender'}]->(n) return m.name, n.name limit 5"}, {"query": "Find out the details of the four-tier relationships of five British citizens, Smith Ben, OK?", "cypher": "match (n:ENTITY{name:'Smith Ben'}) - [*1..4]->(x) where x.name<>'UK' return distinct x.name limit 5"}, {"query": "What other ways to visit the Park of the Yangmye Rinpoche Scenic Area are there besides cycling and hiking?", "cypher": "match (n:ENTITY{name:'River River River's Scenic Park'}) -[:Relationship{name:'Tourism'}]->(h) where h.name <> 'hiking' and h.name <> 'biking' return distinct h.name limit 2"}, {"query": "What are the labels that describe 09Soft Piano?", "cypher": "match (:ENTITY{name:'09Soft Piano'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "What are the main characters in the film written by Tao Jianhui?", "cypher": "Match (:ENTITY{name:'Ciao Tian's}) <- [:Relationship{name:'writer'}]- ((p) - [:Relationship{name:'lead actor'}]->(m) return distinct p.name"}, {"query": "Do you know anything about the food poisoning incident in Yangzhou, Yangzhou, 12th-19th District?", "cypher": "match (:ENTITY{name:'12\u00b719 Yangzhou Township, Yangzhou County'}) --(n) with n order by n.name return n.name"}, {"query": "How do you understand 101 attempts to marry?", "cypher": "match (p:ENTITY{name:'101 times married'}) --(n) with n order by n.name return n.name"}, {"query": "Can you name 10 jobs that men do?", "cypher": "match (p:ENTITY{name:'man'}) <- [:Relationship{name:' gender'}]- ((q),(q) - [:Relationship{name:' profession'}]->(m) return distinct m.name limit 10"}, {"query": "Can you help me check the noise parameter of a 2X vacuum tube?", "cypher": "match ((:ENTITY{name:'2X spiral vacuum tube'}) - [:Relationship{name:'noise'}]-> (q) return q.name"}, {"query": "I'm not sure if you know Stephen Soderbergh, but I'd like to know his message.", "cypher": "match (:ENTITY{name:'Stephen Soderbergh'}) --(p) return distinct p.name"}, {"query": "Would you recommend a bus that can take you to the hotel complex?", "cypher": "match (:ENTITY{name:'complex hotel'}) <- [:Relationship{name:'nature'}]- ((q),(q) - [:Relationship{name:'bus'}]->(x) return distinct x.name limit 1"}, {"query": "Can you list three representative works by Chinese writers?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(n) - [:Relationship{name:'representative work'}]->(x) return distinct x.name limit 3"}, {"query": "Can you tell me where the baby was born?", "cypher": "match (:ENTITY{name:'sub'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'birthplace'}]->(n) return distinct n.name"}, {"query": "Can you tell me about five cultural events?", "cypher": "match (:ENTITY{name:' cultural activities'}) <--(n) return n.name limit 5"}, {"query": "The name of the person is Yue and the name Yue Wei is another name for him.", "cypher": "match (:ENTITY{name:'swing'}) <- [:Relationship{name:'swing'}]-(p) - [:Relationship{name:'swing'}]->(n) where n.name <> 'swing' return distinct n.name limit 1"}, {"query": "The film is based on the novel of the same name by the British writer and filmmaker, who is also the main character of the film.", "cypher": "match (:ENTITY{name:'British Imperial Entertainment Group Limited'}) <- [:Relationship{name:'brokerage company'}]-(m), (m) - [:Relationship{name:'representing work'}]->(n) where n.name='Hurricane rises (feat. wheat) ' return m.name"}, {"query": "Can you tell me what the ISBN is for a book of 278 pages?", "cypher": "The following is a list of the most commonly used tags for the game:"}, {"query": "Please let me know what are the main achievements of this person who believes in the Communist Party? 3 lines?", "cypher": "match (:ENTITY{name:' Communist Party'}) <- [:Relationship{name:' faith'}]- ((q),(q) - [:Relationship{name:' major achievements'}]->(m) return m.name skip 2 limit 5"}, {"query": "Is the 1-acrylamide cord used on the label of the drug also used on the label?", "cypher": "match (:ENTITY{name:'1-acrylic string'}) - [:Tag{name:'label'}]-> (p) with p order by p.name where p.name <> 'drug' return p.name"}, {"query": "Guess how many companies are in Dalian?", "cypher": "match (p:ENTITY{location:'\u5927\u8fde'}) return count ((p)"}, {"query": "What is a three-color algorithm, a four-color algorithm in a real-world algorithm?", "cypher": "match (:ENTITY{name:'three-color algorithm, four-color algorithm'}) <- [:Relationship{name:'reality algorithm'}]- (p) return distinct p.name"}, {"query": "And I'm going to explain the +ve that is commonly used in hospitals.", "cypher": "match (:ENTITY{name:'+ve'}) --(q) with q order by q.name where q.name <> 'hospital' return q.name"}, {"query": "What chemical is the CAS number 71-36-3?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What is the work of someone born in April 1973?", "cypher": "match (:ENTITY{name:'April 1973'}) <- [:Relationship{name:'date of birth'}]- ((p),(p) - [:Relationship{name:'representing work'}]->(x) return distinct x.name"}, {"query": "The final was held on 20 September and 1 October 1983.", "cypher": "match (:ENTITY{name:' preliminary round: 24 April-5 May 2; final: 20 September to 1 October 1983) }) <- [:Relationship{name:' time of holding'}]- (m) return distinct m.name"}, {"query": "The following is a list of the best-selling paintings in the world, published by Beijing Joint Publishing Company: Inspirational Selection: The Bridge 2 Levels Relationship.", "cypher": "match (n:ENTITY{name:'Inspired by selected world best-selling paintings: bridge'}) - [:Relationship*1..2]->(x) where x.name<>'Beijing Joint Publishing Company' return distinct x.name"}, {"query": "Please tell me who created this piece of work, the eye of the meteorite?", "cypher": "match (:ENTITY{name:'eyeballs of the meteorite'}) --(p) return distinct p.name limit 3"}, {"query": "Can you recommend a software for booking tickets, inquiries, travel tools?", "cypher": "match (:ENTITY{name:' booking, inquiry, travel tool'}) <- [:Relationship{name:' software category'}]- (m) return m.name"}, {"query": "I want to know which novels are being re-posted on 17k Novels. Do you know which five?", "cypher": "match (:ENTITY{name:'17k novel network'}) <- [:Relationship{name:'connecting platform'}]- (p) return distinct p.name limit 5"}, {"query": "How much is a ticket to Shenzhen Zoo?", "cypher": "Match (:ENTITY{name:'Shenzhen Wildlife Park'}) - [:Relationship{name:'Ticket price'}]->(n) return n.name"}, {"query": "What is the maximum speed of the AIM-9X Rattlesnake in common use?", "cypher": "match ((p:ENTITY{name:'AIM-9X rattlesnake missile'}) - [:Relationship{name:'maximum speed'}]-> (h) return h.name"}, {"query": "Can you tell me about the first three professions of paper people?", "cypher": "match (:ENTITY{name:'producer'}) <- [:Relationship{name:'profession'}]- (q) return q.name order by q.name limit 3"}, {"query": "Where is the charity receiving donations?", "cypher": "match (:ENTITY{name:' charitable donation'}) - [:Relationship{name:' receiving institution'}]->(m) return distinct m.name"}, {"query": "Can you tell me about the famous sights of the Revolutionary History Memorial of the Middle East Primary School?", "cypher": "match (:ENTITY{name:'Relationship{name:'Famous attractions'}}-> (h) return h.name order by h.name limit 10"}, {"query": "Can you tell me about the content of the Khaos Legions dish?", "cypher": "match (:ENTITY{name:' Khaos Legions''}) --(q) return q.name order by q.name"}, {"query": "I heard that the .se domain name has several link tags, can you give me 5 of them?", "cypher": "match (:ENTITY{name:'.se domain name'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 5"}, {"query": "Do you know what the men's, women's, and half marathon events are?", "cypher": "match (:ENTITY{name:'man, woman, half marathon'}) <- [:Relationship{name:'competition project'}]- (m) return distinct m.name"}, {"query": "I want to attend the 2012 China International Rental Industry Expo, which venue do I need to go to?", "cypher": "match ((:ENTITY{name:'2012 China International Rental Industry Expo'}) - [:Relationship{name:'conference venue'}]-> (x) return x.name"}, {"query": "Do you know the magnitude of the 11.10 Taiwan earthquake in Yilan?", "cypher": "match ((:ENTITY{name:'11\u00b710 Taiwan Yilan earthquake'}) - [:Relationship{name:'seismic grade'}]-> (m) return m.name"}, {"query": "Can you recommend 20 novels that are currently being published?", "cypher": "match (:ENTITY{name:'linked'}) <- [:Relationship{name:'status'}]- (m) return m.name limit 20"}, {"query": "Can you give me information on 5 3G energy-saving lights?", "cypher": "match (:ENTITY{name:'3G energy saving lamp'}) --(n) with n order by n.name return n.name limit 5"}, {"query": "What is the profession of the person who represents love in the Himalayas?", "cypher": "match (q:ENTITY{name:'Love in the Himalayas'}) <- [:Relationship{name:'represents work'}]-(m),(m) - [:Relationship{name:'profession'}]->(x) return distinct x.name"}, {"query": "Can you give me information on the three-layer relationship of the abdominal vein and peripheral vascular MRI technology to the liver vein, the cavernous vein thrombus or the tumor thrombus?", "cypher": "match (n:ENTITY{name:' Magnetic resonance imaging technology for abdominal veins and peripheral blood vessels'}) - [:Relationship*1..3]->(x) where x.name <> 'Hepatal vein, cavernous vein thrombus or tumor thrombus' return distinct x.name"}, {"query": "This guy was born in Guizhou, Guizhou, what is his profession and can you tell me 10 things about him?", "cypher": "match (:ENTITY{name:'Kuwait'}) <- [:Relationship{name:'birthplace'}]-(q),(q) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 10"}, {"query": "Please list one of the occupations of this female figure for me.", "cypher": "match (:ENTITY{name:' female'}) <- [:Relationship{name:' gender'}]- ((q),(q) - [:Relationship{name:' profession'}]->(m) return m.name skip 1 limit 1"}, {"query": "The film is based on the novel of the same name by the writer, who is the author of the book.", "cypher": "match (:ENTITY{name:'Relationship{name:'The year of creation'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'The author'}) ->(m) return m.name as name"}, {"query": "Can you tell me what is the name of the foreign language of Jida Takami?", "cypher": "match (:ENTITY{name:'Kazuki'}) <- [:Relationship{name:' Chinese name'}]- ((p) - [:Relationship{name:' foreign name'}]->(n) return distinct n.name"}, {"query": "Please provide three publications priced at 28.0 yuan", "cypher": "The following is a list of the most commonly used keywords in the search results."}, {"query": "What is the meaning of the phrase \"the lowest of the low\" in the Chinese historian, the merchant king?", "cypher": "match (:ENTITY{name:'Relationship'}) <- [Relationship'}- (m), (m) - [Relationship'}-> (n) where n.name='under the thumb' return distinct m.name"}, {"query": "I would like to ask what are the relations between the two levels of the bilateral monopoly?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'binary monopoly'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What is the shortest path between the two levels of Umun and Nauru?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Umun village'}) - [*..2]-(b:ENTITY{name:'Nauru village'})) return count ((p)"}, {"query": "What are the other two things in the post about the music industry besides music?", "cypher": "match (:ENTITY{name:'sendlabs'}) - [:Tag{name:'tags'}]-> (p) with p order by p.name where p.name <> 'art' return p.name limit 2"}, {"query": "The following is a list of all the different ways Marvel's Four Horsemen: Alien 2009 is credited in the database:", "cypher": "match (:ENTITY{name:' Marvel Knights: Alien 2009'}) --(m) with m order by m.name where m.name <> 'Europe and America' return distinct m.name limit 4"}, {"query": "In addition to being the 98th Lieutenant, can you tell me 10 things you know about the two layers of journalism?", "cypher": "match (:ENTITY{name:'focus'}) - [*1..2]->(p) where p.name <> 'ninety-eighth' return p.name limit 10"}, {"query": "The problem is that the content of the five literary works is in the four-tier relationship with the Hanmin Palace of the Chancellor of the Exchequer, Lee Kuan Yew.", "cypher": "match (n:ENTITY{name:'Born and raised in the King's Bench of the King's Bench'}) - [*1..4]->(x) where x.name<> 'Literary works' return distinct x.name limit 5"}, {"query": "What is the pressure difference between the company's new 0110R003BH5HC core and the current one?", "cypher": "The name of the file is \"Relationship\" (Relationship)"}, {"query": "Tell me about the three-layer relationship of the drug Famotidine, the bottle of Famotidine in English.", "cypher": "match (n:ENTITY{name:'Famotidine'}) - [*]->(x) where x.name <>'Famotidine' return distinct x.name"}, {"query": "I would like to know what happened at 11am on December 29, 2017?", "cypher": "match (:ENTITY{name:'December 29, 2017 at 11 am'}) <- [:Relationship{name:'time of occurrence'}]- (n) return distinct n.name"}, {"query": "The Type 039B submarine we are using now is made by which country?", "cypher": "The name of the sub is \"Relationship\" (Relationship)"}, {"query": "Do you know who is a master's student tutor? Can you name three?", "cypher": "match (:ENTITY{name:'master's student's tutor'}) <- [:Relationship{name:'profession'}]- (n) return distinct n.name limit 3"}, {"query": "168 Life Net is something other than a technical label?", "cypher": "match (:ENTITY{name:'168 lifenet'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'technology' return x.name"}, {"query": "Can you put a label on the accident at the construction site of the tunnel collapse in Guangxi on October 10?", "cypher": "match (:ENTITY{name:'10.10 Guangxi German Security during tunnel collapse'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 1"}, {"query": "Can you recommend a novel for me in the social/official category?", "cypher": "match (:ENTITY{name:' social/official fiction'}) <- [:Relationship{name:' category'}]- (n) return n.name"}, {"query": "So let me calculate what is the molecular weight of 7-diamethylsanoic acid-4-acetate?", "cypher": "match ((:ENTITY{name:'7-diamethylbenzoyl-4-acetyl'}) - [:Relationship{name:'molecular mass'}]-> (p) return p.name"}, {"query": "The following is a list of the top ten websites with the name 110BBS.", "cypher": "match (q:ENTITY{name:'110BBS URL navigation'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'website' return n.name limit 10"}, {"query": "In 4 sentences, what is the 11/24 Quizhou coal mine disaster?", "cypher": "match (:ENTITY{name:'11\u00b724 Guangzhou Chongqing coal mine accident'}) --(p) with p order by p.name return p.name limit 4"}, {"query": "What is the content of the book D for children aged 0 to 2?", "cypher": "match (:ENTITY{name:'0-2 years old doll book D'}) --(q) with q order by q.name return q.name"}, {"query": "Do you know which author's works are representative of the Gr?s?nklingar?", "cypher": "match (:ENTITY{name:' Gr?s?nklingar ?? etc'}) <- [:Relationship{name:'represents work'}]- (m) return m.name"}, {"query": "The project covers 20 provincial cities and is called \"The Plan\".", "cypher": "match (:ENTITY{name:'20 provincial municipalities'}) <- [:Relationship{name:'coverage'}]- (p) return p.name"}, {"query": "Do you know his main achievements? Can you name 10?", "cypher": "match (:ENTITY{name:'???'}) <- [:Relationship{name:'foreign language name'}]-(n),(n) - [:Relationship{name:'main achievement'}]->(m) return m.name order by m.name limit 10"}, {"query": "So what's the factorization of 22 times 31?", "cypher": "match (:ENTITY{name:'22\u00d731'}) <- [:Relationship{name:'factored'}]- (m) return m.name"}, {"query": "A word about the 123 Slimmm Weight Loss Forum?", "cypher": "match (:ENTITY{name:'123 lean mm weight loss forum'}) --(n) with n order by n.name where n.name <> 'website' return n.name skip 1 limit 1"}, {"query": "And what will anyone know of what the noble ones did?", "cypher": "match (:ENTITY{name:'was noble'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'profession'}]->(h) return distinct h.name limit 1"}, {"query": "What is an electronic device with a maximum input power of 1W (average)?", "cypher": "match (:ENTITY{name:'1 W(average value) '}) <- [:Relationship{name:'maximum input power'}]- (x) return x.name"}, {"query": "Tell me about the four or five species you recognize?", "cypher": "match (:ENTITY{name:'04 in view1'}) --(q) with q order by q.name where q.name <> 'species' return q.name"}, {"query": "Can you name the names of the five people who died on July 15, 2010?", "cypher": "match (:ENTITY{name:'15 July 2010'}) <- [:Relationship{name:'date of death'}]-(h),(h) - [:Relationship{name:'alias'}]->(p) return distinct p.name limit 5"}, {"query": "Help me find the words next to the five arrows.", "cypher": "match (:ENTITY{name:'bow'}) <- [:Relationship{name:'part'}]-(m) return distinct m.name limit 5"}, {"query": "Can you help me find 10 of them, where are they located?", "cypher": "match (:ENTITY{name:'public office college'}) <- [*]-(m),(m) - [:Relationship{name:'area'}]->(n) return m.name,n.name limit 10"}, {"query": "The emperor's reign seems to be over after his cold rejection, you tell me?", "cypher": "match (:ENTITY{name:' freeze-dumped to take the throne'}) --(q) with q order by q.name where q.name <> 'completed' return q.name"}, {"query": "Can you please check out the developer and software platform of the corn helper?", "cypher": "match (:ENTITY{name:'corn assistant'}) - [:Relationship{name:'developer'}]->(n) return n.name as name union all match (:ENTITY{name:'corn assistant'}) - [:Relationship{name:'software platform'}]->(m) return m.name as name union all match (:ENTITY{name:'corn assistant'}) - [:Relationship{name:'category'}]-(r>) return r.name as name"}, {"query": "Do you know who the most representative of the water cannon is? Can you name five?", "cypher": "match (m:ENTITY{name:'Relationship{name:'representative work'}]) - (p) return distinct p.name limit 5"}, {"query": "Do you know which games don't have a time stamp? Name three?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What software is updated on 2016-10-05?", "cypher": "match (:ENTITY{name:'2016-10-05'}) <- [:Relationship{name:'updated time'}]- (m) return distinct m.name"}, {"query": "How many of you are the founders of the Student Volunteer Fire Department at the Sichuan Vocational Technical University?", "cypher": "match (:ENTITY{name:'Shaanxi Vocational Technical College College College Student Volunteer Firefighters'}) - [:Relationship{name:'founder'}]-> (x) return distinct x.name"}, {"query": "What else do you know about gossip besides being the second Prime Minister of Singapore?", "cypher": "match (:ENTITY{name:'Relationship*1..2]-(p) where p.name <> 'Singapore's second Prime Minister' return p.name limit 10"}, {"query": "What are the main departments of the Wuhan School of Law and Political Economy at South Central University?", "cypher": "match (:ENTITY{name:'Wuhan College of Law and Political Science of South China University'}) - [:Relationship{name:'main faculty'}]-> (h) return distinct h.name"}, {"query": "Can you recommend five novels for the youth class?", "cypher": "match (:ENTITY{name:'youth campus'}) <- [:Relationship{name:'novel type'}]- (q) return distinct q.name limit 5"}, {"query": "Did you have trouble telling me what Steven does for a living?", "cypher": "match (:ENTITY{name:'Shyun'}) <- [:Relationship{name:'Chinese name'}]- ((q) - [:Relationship{name:'profession'}]->(p) return distinct q.name"}, {"query": "Tell me, what is the top 10 career draw of Dan Castellaneta?", "cypher": "match (:ENTITY{name:'Dan Castellaneta'}) - [:Relationship{name:'profession'}]-> (h) with h order by h.name return h.name limit 10"}, {"query": "I'm not sure if you can tell me about the three messages that you have for me besides the passion films.", "cypher": "match (:ENTITY{name:'\u9b45\u964c\u53cc'}) --(m) with m order by m.name where m.name <> 'Dramatic film' return distinct m.name limit 3"}, {"query": "Do you know which schools are the provincial priority primary schools, the national exemplary experimental primary schools?", "cypher": "match (:ENTITY{name:' Primary school of priority province, national model experimental primary school'}) <- [:Relationship{name:' school attribute'}]- (p) return p.name"}, {"query": "I wonder if there are any other people who have been involved in the accident, including Li Zhenbao, SJ, Zhang Xilong, and Liu Yusung?", "cypher": "match (n:ENTITY{name:'Li Zhenbo, SJ, Chao-Lun, Liu Yusung'}) <- [Relationship{name:'Saviour'}]- (x) return distinct x.name"}, {"query": "I recently bought a 2008 Santana Shijun 2.0AT luxury car, can you help me check what engine model it has?", "cypher": "The following pages link to List of aircraft of the United States Navy:"}, {"query": "Can you tell me about the types of relationships within the six layers that Ingmar Carr is involved in?", "cypher": "match path=(n) <- [:Relationship*6]- ((p:ENTITY{name:'English-speaking'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What else do you know about her besides that she is the chairperson of the Zheng He Estate?", "cypher": "match (:ENTITY{name:'Mazinfin'}) - [*1..2]-(p) where p.name <> 'Chairman of the Orange Estate' return p.name limit 3"}, {"query": "Do you know the address of the 2012 China Boutique Fair in Zhejiang?", "cypher": "match ((:ENTITY{name:'2012 China [Bungzhou] Boutique Yearly Fair'}) - [:Relationship{name:' location'}]-> (p) return p.name"}, {"query": "What is the relationship between the two layers of the relationship with Dr. Huumen?", "cypher": "The following pages link to The Unknown:"}, {"query": "In which regions is the blue arrowhead primarily distributed?", "cypher": "match (:ENTITY{name:'Relationship{name:'distribution area'}]-> (m) return distinct m.name"}, {"query": "The first foreign member of the Japan National Electronic Keyboard Association to be removed from the list of double-reed organists, what are his other three identities?", "cypher": "match (:ENTITY{name:'first foreign member of the Japan National Electronic Keyboard Association'}) <- [:Relationship{name:'main achievement'}]- ((q) - [:Relationship{name:'profession'}]->(p) where p.name <> 'dual-key electronic organ player' return distinct p.name limit 3"}, {"query": "Tell me what is 3-isopropyl methylate?", "cypher": "match (:ENTITY{name:'3-isopropyl methylate'}) --(n) with n order by n.name return n.name"}, {"query": "Can you name two different professions that are available to American citizens?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(x),(x) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 2 The name of the match is not available in English"}, {"query": "Do you know which schools have a business administration department?", "cypher": "match (m:ENTITY{name:'Economic Management'}) --(x) return x.name order by x.name limit 3"}, {"query": "Do you know when the Super Nintendo will be released?", "cypher": "match (x:ENTITY{name:'SFC(also known as Super Nintendo) }) <- [:Relationship{name:'Chinese name'}]- ((m) - [:Relationship{name:'listing time'}]->(q) return distinct q.name limit 1"}, {"query": "What are the relationships between the two levels of the North Primary School?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Northern Primary School'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you tell me about the two companies that were founded in 2001?", "cypher": "match (:ENTITY{name:'2001'}) <- [:Relationship{name:'time of establishment'}]-(n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "The actor who won the Golden Bell Award for Best Supporting Actor in a Drama Program on Taiwanese TV, who is the representative of the other actor besides My 30 Laws?", "cypher": "match (:ENTITY{name:'Taiwan Television Golden Bell Award Drama Program Male Supporting Actor Award Nominated'}) <- [:Relationship{name:' Major achievement'}]- ((x) - [:Relationship{name:' Representative work'}]->(q) where q.name <> 'My 30 laws' return distinct q.name limit 1"}, {"query": "The 64 books in the open bookcase are all from where?", "cypher": "match (:ENTITY{name:'64 open'}) <- [:Relationship{name:'dressed'}]-(h),(h) - [:Relationship{name:'publisher'}]->(q) return distinct h.name,q.name"}, {"query": "Let me know about some of the representative works of Erwin Godschalk. Can I say the first one?", "cypher": "match (:ENTITY{name:'Erwin Godschalk'}) - [:Relationship{name:'represents work'}]-> (q) return q.name order by q.name limit 1"}, {"query": "Is there any problem with the following introduction to the four layers of the relationship between the island of Java and the island of Jujuyuri?", "cypher": "match (n:ENTITY{name:'Jupiter Island'}) - [*1..4]->(x) where x.name<>'\u3072\u3081\u3058\u307e \u3057\u3085\u308a\u59eb\u5cf6 \u6731\u7483' return distinct x.name limit 5"}, {"query": "What other positions can male members of the Party of the Environmental Protection Agency of Dazhou, Sichuan, do? List 10 of them.", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(n) - [:Relationship{name:'profession'}]->(x) where x.name <> 'Member of the Party of the Yangtze County Environmental Protection Agency of Dazhou City, Sichuan' return distinct x.name limit 10"}, {"query": "Can you tell me if there is a person who is related to Sun Feng in the second tier of the label?", "cypher": "The name of the game is \"Skype\" (Skype) and the name of the game is \"Skype\" (Skype)."}, {"query": "In 10 sentences, give 100 details of healthy growth for babies aged 0-3 years old.", "cypher": "match (x:ENTITY{name:'100 details of healthy growth of 0-3 year old baby'}) --(h) with h order by h.name where h.name <> ' publications' return h.name limit 10"}, {"query": "I'm curious about his three professions.", "cypher": "match (:ENTITY{name:' arbitrarily good'}) - [:Relationship{name:' profession'}]-> (p) return distinct p.name limit 3"}, {"query": "This property is for a school with a normal undergraduate degree, what are its main departments?", "cypher": "match (:ENTITY{name:'common undergraduate college'}) <- [:Relationship{name:'school attributes'}]- ((q),(q) - [:Relationship{name:'main faculty'}]->(h) return h.name order by h.name limit 3"}, {"query": "Is there any benefit to eating a pie?", "cypher": "match (:ENTITY{name:'cake'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'mainly consumed function'}]->(n) return distinct n.name"}, {"query": "Tell me, what historical work comes from the Key of Solomon?", "cypher": "match (:ENTITY{name:'Relationship{name:'source'}}) - (x) return distinct x.name"}, {"query": "Please tell me if there is another label for Jerrold Benemon besides footballer?", "cypher": "match (:ENTITY{name:'Jerry Benimmon'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'footballer' return p.name limit 1"}, {"query": "In 10 words, how about 009-1?", "cypher": "match (:ENTITY{name:'009-1'}) --(x) with x order by x.name return x.name limit 10"}, {"query": "What chemical is used in petrochemical, coal conversion, nuclear power?", "cypher": "match (:ENTITY{name:' Manufacturing petrochemicals, coal conversion, nuclear power'}) <- [:Relationship{name:' field of application'}]- (n) return n.name"}, {"query": "Please tell me about the product introduction within the two-tier relationship of the SENP8 technology product.", "cypher": "match (n:ENTITY{name:'SENP8'}) - [:Relationship*1..2]->(x) where x.name<>'technology product' return distinct x.name"}, {"query": "What is the shortest path between the two floors of Shaanxi Village and Sheyang Village?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Sheshwe village'}) - [*..2]-(b:ENTITY{name:'Sheshwe village'})) return count ((p)"}, {"query": "Do you have any news about 007 China?", "cypher": "match (:ENTITY{name:'007 China Barter Network'}) --(h) with h order by h.name return h.name"}, {"query": "Check out the company information in the two-tier relationship of this organization, Business Information Consulting Ltd.", "cypher": "match (n:ENTITY{name:'Hippotechnic's Business Information Consulting Ltd'}) - [*1..2]->(x) where x.name <> 'organization' return distinct x.name"}, {"query": "The man named Flower Gundam is a cook?", "cypher": "match (:ENTITY{name:'\u82b1\u521a\u8a00'}) <- [:Relationship{name:' Chinese name'}]- ((h),(h) - [:Relationship{name:' profession'}]->(x) return distinct x.name"}, {"query": "You know 90 - Angel, besides the species label, are there any other tags?", "cypher": "match (:ENTITY{name:'90-angel'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'species' return x.name limit 10"}, {"query": "Do you know what reports were published on June 1, 2006?", "cypher": "match (:ENTITY{name:'01 June 2006'}) <- [:Relationship{name:'release date'}]- (m) return distinct m.name"}, {"query": "The teacher wants us to calculate the molecular mass of the nitroglycerin, can you help me write the chemical formula first?", "cypher": "match ((:ENTITY{name:'Relationship{name:'chemical formula'}]-> (q) return q.name)"}, {"query": "I want a list of Jewish immigrants?", "cypher": "match (:ENTITY{name:' Jewish immigrant'}) <--(n) return n.name"}, {"query": "Can you tell me about any spy films you have?", "cypher": "match ((:ENTITY{name:'spy'}) - [:Relationship{name:'film'}]-> (n) return n.name"}, {"query": "The following is a list of the top 10 most popular Chinese words for \"swimming\" in the world.", "cypher": "match (:ENTITY{name:'(S2B) exercise book height/2/2 Shanghai edition Oxford English [plain]'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "I want to know the top 2 professional attributes of V. Sundaram?", "cypher": "match (:ENTITY{name:'V. Sundaram'}) - [:Relationship{name:'profession'}]-> (h) with h order by h.name return h.name limit 2"}, {"query": "The problem is that the 118-kilogram Beccaris Lucas has no profile in more than three relationships.", "cypher": "match (n:ENTITY{name:'Beccaris Lucas'}) - [*1..3]->(x) where x.name <>'118 kg' return distinct x.name"}, {"query": "Which of the major universities in China has been awarded the A-Level Vocational Training Institute of Shenzhen, the Advanced Division of the Dongguan District, etc.?", "cypher": "match (:ENTITY{name:'Relationship: A-level vocational training institution in Shenzhen City, China, and other branches of the Dongbao-An area's Advanced Group's affiliate})"}, {"query": "Can you list seven cycles of awards that are given once a year?", "cypher": "match (:ENTITY{name:' year one'}) <- [:Relationship{name:' cycle'}]- (x) return x.name limit 7"}, {"query": "What can you tell me about this person, Nick Helen?", "cypher": "match (:ENTITY{name:' Nick Herron'}) --(p) return p.name skip 2 The name of the game is the same as the name of the game"}, {"query": "I want to ask you, what is the name of the chemical compound with the molecular formula C9H7NO6?", "cypher": "The name of the matching element is \"Relationship\" (q) return q.name"}, {"query": "Do you know of any other information about the rainbow flower besides the fact that it is a sub-plant of the mulberry tree? Help me find 10 information in 3 layers.", "cypher": "match (:ENTITY{name:' rainbow'}) - [*1..3]->(p) where p.name <> 'Milan tree ((by subplant tree) ' return p.name limit 10"}, {"query": "Who are the people who are the chief engineers in Hubei?", "cypher": "match (p:ENTITY{name:' chief engineer'}) <--(x) -->(q:ENTITY{name:' Hubei'}) return x.name"}, {"query": "Tell me about the work of Dong Da, which is a two-tiered relationship between the two.", "cypher": "match (n:ENTITY{name:'given a bunch of rosemary'}) - [:Relationship*1..2]->(x) where x.name<>'Don' return distinct x.name"}, {"query": "Help me find 10 different types of Jiangsu food.", "cypher": "match (:ENTITY{name:'Relationship{name:'category'}]-(m) return distinct m.name limit 10"}, {"query": "I learned that the BD32 Metro Electric Bus is a 2013 electric bus produced by Junky Equipment, do you know any other information about it?", "cypher": "match (n:ENTITY{name:'BD32 type metro electric bus'}) -->(h) with h order by h.name where h.name <> 'Junk car equipment' and h.name <> '2013' return h.name limit 5"}, {"query": "Help me find the famous sights and monks of Yummin Temple", "cypher": "match (:ENTITY{name:'\u4f51\u6c11\u5bfa'}) - [:Relationship{name:' famous sights'}]->(n) return n.name as name union all match (:ENTITY{name:'\u4f51\u6c11\u5bfa'}) - [:Relationship{name:' famous monk'}]->(m) return m.name as name"}, {"query": "What is the name of the volcano in the Andes Mountains of South America?", "cypher": "match (:ENTITY{name:' located in the Andes Mountains of South America'}) --(x) return distinct x.name"}, {"query": "Can you list any of the three levels of relationships involved in teaching the new curriculum?", "cypher": "The following pages link to the article: \"Relationship\" (WEB"}, {"query": "What are the two main ingredients of banana slime besides dried banana and motherwort?", "cypher": "match (n:ENTITY{name:' Banana Smoothie'}) - [:Relationship{name:' Main ingredient'}]->(h) where h.name <> 'Dry Banana' and h.name <> 'Mother Chicken' return distinct h.name limit 2"}, {"query": "Please help me find a Danlan Bruno representative, but except for Hurricane Rescue 3 and Hurricane Compensation.", "cypher": "match (n:ENTITY{name:'Danlan Bruno'}) - [:Relationship{name:'representative work'}]->(h) with h order by h.name where h.name <> 'Hurricane rescue 3' and h.name <> 'Relationship' return h.name limit 1"}, {"query": "What song was originally sung by Owl City?", "cypher": "match (:ENTITY{name:'Owl City(Owl City) }) <- [:Relationship{name:'song originally sung'}]- (p) return distinct p.name"}, {"query": "Bamboo fish soup is its main ingredient. Do you know what it is?", "cypher": "match ((:ENTITY{name:'Bamboo clam sushi'}) - [:Relationship{name:'main ingredient'}]-> (n) return n.name"}, {"query": "Born in Guizhou in 1974, what are the 10 identities of Rojaweed besides being a member of the National Religious Affairs Bureau of Guizhou's Udan District?", "cypher": "match (:ENTITY{name:'\u7f57\u5146\u536b,\u7537, born January 1974, undergraduate, born in Guangzhou\u3002'}) <- [:Describe{name:'description'}]-(h),(h) - [:Relationship{name:'profession'}]->(m) where m.name <> 'Uang District National Religious Affairs Bureau Party group member' return distinct m.name limit 10"}, {"query": "What other properties does the 19th floor flea market have besides the flea market properties?", "cypher": "match (:ENTITY{name:'19th floor flea market'}) --(n) with n order by n.name where n.name <> 'flea market' return n.name"}, {"query": "What other label attributes does the 0-3 parenting program have besides being a publication?", "cypher": "match (:ENTITY{name:'0-3 years old parenting program'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'publication' return h.name"}, {"query": "The 2013 Cologne International Food Fair in Germany is quite high-end, do you know the specific cycle?", "cypher": "match ((:ENTITY{name:'2013 Cologne International Food Fair'}) - [:Relationship{name:' Held cycle'}]-> (x) return x.name"}, {"query": "The men's first place finish?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(x),(x) - [:Relationship{name:'main achievement'}]->(n) return n.name order by n.name limit 1"}, {"query": "Can you name 10 of the films that this Beijing Film Academy graduate has represented?", "cypher": "match (:ENTITY{name:'Beijing Film Academy'}) <- [:Relationship{name:'Graduate School'}]-(x) - [:Relationship{name:'Major work'}]->(h) return h.name order by h.name limit 10"}, {"query": "Can you give me a place in the world heritage site of the city of Xi'an?", "cypher": "match (:ENTITY{name:' World Heritage Site'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:' period'}]->(n) return m.name,n.name limit 2 The name of the site is not known"}, {"query": "How long is the Hermes Glacier?", "cypher": "match ((:ENTITY{name:'Hermes Glacier'}) < - [:Relationship{name:' full length'}]-> (m) return m.name"}, {"query": "Can you help me find the chemical formula for 2-acetyl-hydroxyethyl acetate, if I need it right now?", "cypher": "match ((:ENTITY{name:'2-ethylhexybutyric acid'}) - [:Relationship{name:'chemical formula'}]-> (m) return m.name"}, {"query": "The case against the three sisters was filed on behalf of whom?", "cypher": "match (:ENTITY{name:' The new series starring: Yu-chan and Yu-chan's sisters's complaint}) <- [:Relationship{name:' Representative works'}]- (m) return m.name order by m.name"}, {"query": "Can you recommend me a product with six 5\" screens?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What are the labels for each of the works? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:' blue elephant's nose'}) - [:Relationship{name:' author'}]->(:ENTITY) <- [:Relationship{name:' author'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you tell us about the types of relationships within the two layers of the Xi Jinping document?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'\u653f\u6587'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Find the software information within the 4 layers of the relationship of the cultural class APP step by step.", "cypher": "match (n:ENTITY{name:' step by step teaching drawing'}) - [*1..4]->(x) where x.name <> 'culture' return distinct x.name"}, {"query": "Can you tell me the names of 10 companies registered in the Dongguan City Business Administration in Guangdong Province?", "cypher": "match (:ENTITY{name:'Dongxiang City Industrial and Commercial Administration'}) <- [:Relationship{name:'Registration authority'}]- (n) return n.name limit 10"}, {"query": "The article is about the blog of the famous Brazilian writer, who was born in the city of S\u00e3o Paulo.", "cypher": "match (:ENTITY{name:'squish'}) --(x) return distinct x.name limit 3"}, {"query": "I want to know the basic relationship between five Welsh athletes, Tovey Jason and no less than six?", "cypher": "match (n:ENTITY{name:'Tovey Jason'}) - [*1..6]->(x) where x.name <>'Tovey Jason, Welsh athlete\u3002' return distinct x.name limit 5"}, {"query": "Can you name three species of ants and help me to identify them?", "cypher": "match (:ENTITY{name:'genus'}) <- [*]-(m), (m) - [:Describe{name:'description'}]->(n) return distinct m.name, n.name limit 3"}, {"query": "Can you list any of the 85 inter-relationships that are involved in secondary schools?", "cypher": "The following pages link to The Unknown:"}, {"query": "What are the works of the China Times Economic Press and when are they published?", "cypher": "match (:ENTITY{name:'China Times Economic Press ((formerly China Audit Press) '}) <-[:Relationship{name:'Publishing Press'}]-(h),(h) -[:Relationship{name:'Publishing time'}]->(q) return distinct h.name,q.name"}, {"query": "Can you tell me all you know about Chongqing Humanities and Technology University?", "cypher": "match (:ENTITY{name:'Chongqing Humanities and Sciences College'}) - [:Relationship*1..2]-(p) return distinct p.name limit 10"}, {"query": "What does it mean to be angry and bitter?", "cypher": "Match (:ENTITY{name:'Relationship{name:' explained'}]->(n) return n.name"}, {"query": "I want to know about the relationship between the two layers of the word \"Jigsaw\" and \"Jigsaw\" in the work \"Jigsaw\".", "cypher": "match (n:ENTITY{name:'Relationship*2]->(x) where x.name <> 'word' return distinct x.name"}, {"query": "Can you name five works by a graphic designer who graduated from the University of Georgia?", "cypher": "match (n:ENTITY{name:'University of Georgia's Department of Graphic Design (on leave) '}) <- [:Relationship{name:' Graduate School'}]- ((x),(x) - [:Relationship{name:' Representative work'}]->(h) return distinct h.name limit 5"}, {"query": "What is the shortest path between the two levels of Wenling Village and Yangling Village?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Relationship*..2]-b:ENTITY{name:'Relationship:'Relationship')) return count ((p))"}, {"query": "Do you know what Cherry does for a living?", "cypher": "match (:ENTITY{name:'cherry'}) - [:Relationship{name:'profession'}]-> (h) return distinct h.name"}, {"query": "What are the characteristics of the yellow clouds and the golden dragonfly flower?", "cypher": "match (:ENTITY{name:'light yellow clouds gold dragonfly flower peel routine'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'feature'}]->(h) return distinct h.name"}, {"query": "Please introduce the film Come Out of the Shadows.", "cypher": "match (:ENTITY{name:' get out of the shadows'}) --(q) return q.name order by q.name limit 5"}, {"query": "What is the name of the online store owned by Beijing-based Toshiba Hongtou Network Technology Co., Ltd.?", "cypher": "match (:ENTITY{name:'Beijing Xinjiang Hont\u014d Network Technology Co., Ltd'}) <- [:Relationship{name:'belongs to'}]- (m) return m.name"}, {"query": "Trying to label a 1385 UV flatbed printer?", "cypher": "match (:ENTITY{name:'1385uv tablet printer'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "And what do you know about the characteristics of spy films?", "cypher": "match (:ENTITY{name:'spy'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'characteristics'}]->(n) return distinct n.name"}, {"query": "I found the Longan Multifunctional English-English Dual Interpretation Dictionary by British Peer Education Publishing Asia Limited, a 2807 page book, can you help me find 4 more information about this dictionary?", "cypher": "match (n:ENTITY{name:'Language-specific English-language dictionary'}) -->(h) with h order by h.name where h.name <> '2807 pages' and h.name <> 'British Peer Education Publishing Asia Limited' return h.name limit 4"}, {"query": "I forgot the CAS number of 4-boc-2-methyl acetate again, please tell me again, thank you.", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What are the definitions of the tags for 3DStudioMAX 3.0 Animation Production Selection?", "cypher": "match (:ENTITY{name:'3DStudioMAX3.0 Animation Production Selected'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Do you know what kind of company is Beijing Nanjing Village Software Limited?", "cypher": "match ((:ENTITY{name:'Beijing South Sumur Software Co. Ltd'}) - [:Relationship{name:'Company nature'}]-> (m) return m.name"}, {"query": "What chemical is YLZ348?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Do you have any information on the relationship between the two layers of my simple Chinese medical information research?", "cypher": "match (n:ENTITY{name:' medical information research'}) - [:Relationship*1..2]->(x) where x.name <>'simplified Chinese' return distinct x.name"}, {"query": "There is a movie called Kung Fu Girls in Chinese called \"Yue\"?", "cypher": "match (x:ENTITY{name:'Kung fu girls'}) <- [:Relationship{name:'foreign name'}]- (q) return q.name"}, {"query": "What is the name of the intense disturbance that occurs in the Earth's magnetic field?", "cypher": "match (:ENTITY{name:' intense disturbance of the Earth's magnetic field'}) --(x) return distinct x.name"}, {"query": "Find out what chemical is dangerously described as 2149 mg/kg (oral rat)", "cypher": "The following is a list of the most commonly used drugs in the United States:"}, {"query": "Listed below are the two clubs that Banfield Athletic have, but are not listed here except for football.", "cypher": "match (:ENTITY{name:'Banfield Athletic Club'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'football' return p.name limit 2"}, {"query": "What is the shortest path between the three layers of the Yangbhui and Li-Li lines?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'\u7cfb\u989c\u7709'}) - [*..3]-(b:ENTITY{name:'\u674e\u653f\u9053\u4f20'})) return count ((p)"}, {"query": "Which school won the second prize of the Ministry of Education in 2009 for its data collection platform for the development of high-level talent?", "cypher": "match (:ENTITY{name:'2009 Senior Talent Development Data Collection Platform for the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the promotion of the results of the results of the promotion of the results of the promotion of the results of the promotion of the results of the results of the promotion of the results of the results of the promotion of the results of the results of the promotion of the results of the results of the promotion of the results of the results of the results of the promotion of the results of the results of the results of the promotion of the results of the results of the results of the results of the promotion of the results of the results of the results of the results of the promotion of the results of the results of the results of the results of the results of the results of the promotion of the results of the results of the results of the results of the results of the results of the results of the results of the promotion of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the"}, {"query": "Can you name three Chinese citizens with aliases?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(p),(p) - [:Relationship{name:'other name'}]->(n) return distinct p.name limit 3"}, {"query": "Can you recommend a resource search engine that covers movies, software, games?", "cypher": "match (:ENTITY{name:'TV, software, games'}) <- [:Relationship{name:'covered'}]- (m) return m.name"}, {"query": "Can you find me two videos about love, family?", "cypher": "match (:ENTITY{name:' love, family'}) <- [:Relationship{name:' type'}]-(n) - [:Relationship{name:' Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "Please help me find three plants in the genus, what do they call them?", "cypher": "match (:ENTITY{name:'spoon'}) <- [:Relationship*]-(m) ,(m) - [:Relationship{name:'do not name'}]->(n) return m.name,n.name limit 3"}, {"query": "What is the profession of a person with brown hair?", "cypher": "match (:ENTITY{name:' brown'}) <- [:Relationship{name:' hair color'}]-(n),(n) - [:Relationship{name:' profession'}]->(p) return distinct p.name"}, {"query": "What tags are 2001 KX76 associated with?", "cypher": "match (:ENTITY{name:'2001KX76'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Do you know what year the first secondary school in Changsha, Hunan Province was founded?", "cypher": "match (:ENTITY{name:'First secondary school in Changsha City, Hunan Province'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'creation time'}]->(n) return distinct n.name"}, {"query": "The Tang Dynasty Shui-Tzu is a literature of which dynasty?", "cypher": "match (:ENTITY{name:'Tangdu's Story'}) - [:Relationship{name:'published time'}]->(n) return n.name as name union all match (:ENTITY{name:'Tangdu's Story'}) - [:Relationship{name:'author'}]->(m) return m.name as name"}, {"query": "I need five profiles of industry figures like Li Keqiang.", "cypher": "match (n:ENTITY{name:'Lee Min Ho'}) - [*]->(x) where x.name <> 'industry person' return distinct x.name limit 5"}, {"query": "How far has the writing progressed in the 7th century? How many words does this work have? Where did it come from?", "cypher": "match (:ENTITY{name:'Seventh century ink'}) - [:Relationship{name:'writing progress'}]->(n) return n.name as name union all match (:ENTITY{name:'Seventh century ink'}) - [:Relationship{name:'word count'}]->(m) return m.name as name union all match (:ENTITY{name:'Seventh century ink'}) - [:Relationship{name:'working out'}]->(r) return r.name as name"}, {"query": "Do you know who George Bernanos has a third-tier label relationship with?", "cypher": "The name of the game is \"The Game\" (the name of the game is \"The Game\")"}, {"query": "Tell me, what is the main award of the school in Sichuan, Sichuan?", "cypher": "match (:ENTITY{name:'Shanghai City Silver River Huaxin School'}) - [:Relationship{name:'Main award'}]-> (m) return m.name skip 1"}, {"query": "What are the professions of this politician? Do you know five?", "cypher": "match (:ENTITY{name:'political figure'}) <- [:Tag{name:'tag'}]-(n) - [:Relationship{name:'profession'}]->(p) return p.name skip 2 limit 10"}, {"query": "What other achievements have been made by the Chinese who have been awarded the title of Hero of the Fighter Carrier Pilot?", "cypher": "match (m:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(q),(q) - [:Relationship{name:'main achievements'}]->(h) where h.name <> 'Honored with the title of 'Hero of the aircraft carrier fighter' return distinct h.name limit 3"}, {"query": "Can you tell me the name of the other person who is in the building?", "cypher": "The name of the drug is not known, but it is known that the drug is a combination of the two."}, {"query": "Can you tell us about the cloud forgetting?", "cypher": "match (:ENTITY{name:' cloud forgotten'}) --(m) return m.name order by m.name limit 5"}, {"query": "About this guy weighing 49 kg, can you tell me about his profession?", "cypher": "match (q:ENTITY{name:'49KG'}) <- [:Relationship{name:'weight'}]-(p) - [:Relationship{name:'profession'}]->(m) return m.name order by m.name limit 1"}, {"query": "Do you know which areas have a 3-hour link to the official township?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'township'}) return distinct n.name"}, {"query": "Please tell me what disasters have occurred as of midday December 11, 2012?", "cypher": "match (:ENTITY{name:'December 11, 2012 at noon,'}) <- [:Relationship{name:' as of '}]- (n) return n.name"}, {"query": "I'm going to send you all my ACSee 5.0 categories in order.", "cypher": "match (:ENTITY{name:'ACDSee 5.0'}) - [:Relationship{name:' category'}]-> (q) with q order by q.name return q.name"}, {"query": "I remember an incident that caused the homepage 12306 to be slow to access, \"Hey, what's up?\"", "cypher": "match (:ENTITY{name:'12306 home page slowly accessed'}) <- [:Relationship{name:'event'}]- (m) return m.name"}, {"query": "Can you give me two universities of integrated culture and introduce them?", "cypher": "match (:ENTITY{name:'University of Arts and Sciences'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Tell me, what other major department is there in the public school besides the humanities and social sciences?", "cypher": "match (:ENTITY{name:'public college'}) <- [:Relationship{name:'category'}]-(m),(m) - [:Relationship{name:'main college'}]->(x) where x.name <> 'humanities department' return distinct x.name limit 1"}, {"query": "I'm not sure what you mean about the name of the school.", "cypher": "match (:ENTITY{name:'Kuzhou Institute of Technology'}) --(q) return q.name order by q.name"}, {"query": "Do you know what nutrients are in the rice cake?", "cypher": "match (:ENTITY{name:'chickpea'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'main nutrient'}]->(n) return distinct n.name"}, {"query": "The first is to provide information about the 4th layer of the mobile phone sync backup relationship developed by the 5 Ice Ice development teams.", "cypher": "match (n:ENTITY{name:'Mobile sync backup'}) - [*1..4]->(x) where x.name <> 'ice ice development team' return distinct x.name limit 5"}, {"query": "Please help me find two books for $35.00 and tell me what category they belong to.", "cypher": "The following is a list of the most commonly used tags in the search results for the search terms:"}, {"query": "What are the three professions of people born on May 18, 1935?", "cypher": "match (:ENTITY{name:'1935.5.18'}) <- [:Relationship{name:'date of birth'}]- ((x),(x) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 3"}, {"query": "Besides being in Xiamen, can you tell me five things you know about the two levels of the Art Deco Village?", "cypher": "match (:ENTITY{name:'Relationship*1..2]->(p) where p.name <> 'Fujian Province Xiamen City' return p.name limit 5"}, {"query": "The city of the same name, which has an artistic version of the city of Yangon, is a city of extraordinary significance for the people of Yangon.", "cypher": "match (:ENTITY{name:'A version of the artistic version of the game of poker."}, {"query": "So what's the numerical factorization formula for 2 times 3 times 5 times 17?", "cypher": "match (:ENTITY{name:'510=2\u00d73\u00d75\u00d717'}) <- [:Relationship{name:' decomposition factor'}]- (x) return distinct x.name"}, {"query": "Can you recommend a novel that is currently in circulation? Can you recommend 5 of them to me?", "cypher": "match (:ENTITY{name:'linked'}) <- [:Relationship{name:'release status'}]- (q) return distinct q.name limit 5"}, {"query": "Help me find five varieties of caviar.", "cypher": "match (:ENTITY{name:'Kuwabe'}) <- [:Relationship{name:'category'}]-(m) return m.name limit 5"}, {"query": "What are the publications published by the Beijing Library Press and what is the price of the books? Give me 5 examples.", "cypher": "match (:ENTITY{name:'Peking Library Publishing House'}) <- [:Relationship{name:'Publication House'}]-(h),(h) - [:Relationship{name:'Pricing'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "I want you to tell me all the relationship names that the three layers of the cabinet cameron contain, please.", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you explain the three previous works, except for the Chinese title Captain America and the Winking Eye v1?", "cypher": "match (:ENTITY{name:' Captain America with a twinkle eye v1'}) --(m) with m order by m.name where m.name <> 'Captain America with a twinkle eye v1' return distinct m.name limit 3"}, {"query": "Can you name the three key features of this book on the psychology of training 0-3 year old babies in intellectual enlightenment?", "cypher": "match (:ENTITY{name:'0-3 years old baby's intelligent enlightenment training'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'psychology books' return p.name limit 3"}, {"query": "Do you have any historical figures from the Da Hao people? Can you tell me 10 of them?", "cypher": "match (:ENTITY{name:'big and small'}) <-[:Relationship{name:'national group'}]- (h) return h.name limit 10"}, {"query": "I've heard that many drugs are prescription drugs, but is this 1-methyl-4-methacrylate a prescription drug?", "cypher": "match ((:ENTITY{name:'1-alkyl-4-methacrylate'}) - [:Relationship{name:'is it a prescription drug'}]-> (m) return m.name"}, {"query": "The problem is that the next iteration of the theme is the second volume of Lin Wen's poetry, which contains information about the two-tier relationship.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'' return distinct x.name"}, {"query": "Can you list some metal models with a stretch rate \u226515?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Can you recommend books similar to the history of Chinese humanities and scientific research in the 20th century?", "cypher": "match (:ENTITY{name:'History of Chinese literature and science in the twentieth century'}) <- [:Relationship{name:'Humanship book name'}]- (h) return h.name"}, {"query": "The exhibition hall used for the exhibition is 2F, what is the name of the exhibition?", "cypher": "match (:ENTITY{name:'2 exhibition hall 2F'}) <- [:Relationship{name:' used exhibition hall'}]- (p) return p.name"}, {"query": "Do you know the other 8 information in the 4th floor of the Beijing University Real Estate Law Research Center, a teaching and research institution?", "cypher": "match (:ENTITY{name:'Peking University Real Estate Law Research Center'}) - [*1..4]-(p) where p.name <> 'teaching and research institution' return distinct p.name limit 8"}, {"query": "Can you tell me about the five lines of your personal profile about the five levels of relationship that Nshuthiyamagara Ismael has with the football fan?", "cypher": "match (n:ENTITY{name:'Nshutiyamagara Ismael'}) - [*1..5]->(x) where x.name <> 'football' return distinct x.name limit 5"}, {"query": "Can you find the book titled Chinese Collected Encyclopedia?", "cypher": "match (n:ENTITY{name:'China Collected Encyclopedia'}) where n is not null return 1"}, {"query": "Do you know any Japanese teachers?", "cypher": "match (p:ENTITY{name:'Japan'}) <--(x) --> ((q:ENTITY{name:'teacher'}) return x.name"}, {"query": "What are the benefits of lilac shark fin soup?", "cypher": "match ((:ENTITY{name:'Lionfish'}) - [:Relationship{name:'effect'}]-> (n) return n.name"}, {"query": "Can you tell me who wrote them? Can you tell me five lines?", "cypher": "match (:ENTITY{name:'simple'}) <- [:Relationship{name:'simple'}]-(h),(h) - [:Relationship{name:'author'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Where is the host of Zero Evening News?", "cypher": "match (:ENTITY{name:'Zero's Evening News'}) - [:Relationship{name:'host unit'}]->(n) return n.name as name union all match (:ENTITY{name:'Zero's Evening News'}) - [:Relationship{name:'Price'}]->(m) return m.name as name"}, {"query": "Who knows what Fan Zhiying does for a living?", "cypher": "match (:ENTITY{name:'Fan Shi Ning'}) <- [:Relationship{name:'Chinese name'}]- ((p),(p) - [:Relationship{name:'profession'}]->(x) return distinct p.name"}, {"query": "Can you list four health books and tell me when they were published?", "cypher": "match (:ENTITY{name:' health books'}) <- [*]-(m), (m) - [:Relationship{name:' time of publication'}]->(n) return m.name, n.name limit 4"}, {"query": "I want to ask you to tell me about the real Dong-kyu.", "cypher": "match (:ENTITY{name:'real name'}) --(q) return q.name skip 4"}, {"query": "Where is the headquarters of the Japan Telegraph Telephone Company?", "cypher": "match (:ENTITY{name:'Japanese Telegraph Telephone Company'}) <- [:Relationship{name:'company name'}]-(p) - [:Relationship{name:'headquarters location'}]->(n) return distinct n.name"}, {"query": "What is the foreign name of the product Home straight water dispensers?", "cypher": "Match (n:ENTITY{name:'Home straight water dispensers'}) <- [:Relationship{name:'foreign name'}]- (mn) return mn.name"}, {"query": "Please tell me what is the exhibition on 31 October - 2 November 2011?", "cypher": "match (:ENTITY{name:'October 31, 2011 to November 2, 2011'}) <- [:Relationship{name:'show time'}]- (h) return h.name"}, {"query": "I'm going to ask you, what does this person who graduated from Jilin Industrial University do?", "cypher": "match (:ENTITY{name:'Gilin Industrial University'}) <- [:Relationship{name:'Graduate School'}]-(h) - [:Relationship{name:'Profession'}]->(p) return p.name order by p.name limit 5"}, {"query": "The following is a briefing on the relationship between the two floors of the Korean Yuan Ji's building:", "cypher": "match (n:ENTITY{name:'\u5929\u00b7\u4e5d\u65e5\u53cc\u6eaa\u697c'}) - [:Relationship*1..2]->(x) where x.name <>'\u97e9\u5143\u5409' return distinct x.name"}, {"query": "Can you tell me which institutions were registered in October 2012?", "cypher": "match (:ENTITY{name:'October 2012'}) <- [:Relationship{name:' registration time'}]- (n) return n.name"}, {"query": "Do you know how many general agents have performed for Barley Network and China Online Ticketing?", "cypher": "match (:ENTITY{name:'Barley Net China Ticketing Online'}) <- [:Relationship{name:'General Representative'}]- (h) return h.name limit 3 The name of the game is not available in English"}, {"query": "What is the name of the Kaji Haji? Name three of his names?", "cypher": "match (:ENTITY{name:'Gauji Haitian'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'alpha name'}]->(m) return distinct m.name limit 3"}, {"query": "What is the curriculum at Hebei Hydroelectric Institute?", "cypher": "match (:ENTITY{name:'Hebei Hydroelectric Power Institute'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'curriculum'}]->(n) return distinct n.name"}, {"query": "Can you tell me about the current principal of Yang Yong's school and any other famous alumni?", "cypher": "match (:ENTITY{name:'\u8363'}) <- [:Relationship{name:'currently rector'}]-(h) - [:Relationship{name:'known alumni'}]->(p) return p.name order by p.name limit 5"}, {"query": "Do you know what chemical has a molecular weight of 223.25? Can you tell me five?", "cypher": "The name of the function is the name of the function itself."}, {"query": "I need to know all the information about 126 corporate email accounts?", "cypher": "match (:ENTITY{name:'126 corporate mailboxes'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name"}, {"query": "The Chinese government has been trying to get the Chinese to give up their Chinese language.", "cypher": "match (n:ENTITY{name:'Susi group'}) - [:Relationship*]->(x) where x.name <> 'Han Chinese' return distinct x.name limit 5"}, {"query": "Can you give me five personal messages from H\u00fcls Yannick, a German?", "cypher": "match (n:ENTITY{name:'H\u00fcls Yannick'}) - [*]->(x) where x.name <> 'Germany' return distinct x.name limit 5"}, {"query": "Do you know how many TV shows are currently on hiatus? Can you name six?", "cypher": "match (:ENTITY{name:'pause'}) <- [:Relationship{name:'state of play'}]- (q) return q.name limit 6"}, {"query": "The book is a compendium of the latest English exam syllabus, what is it called?", "cypher": "match (:ENTITY{name:'the most recent English exam summary'}) <- [:Relationship{name:'feature'}]- (x) return x.name"}, {"query": "You know, the Chinese are cooking.", "cypher": "match (:ENTITY{name:'chengshi'}) <- [:Relationship{name:'Chinese name'}]- ((m) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 1"}, {"query": "Tell me about your knowledge of the Encyclopedia of Nursing for Infants and Toddlers aged 0-5 years?", "cypher": "match (:ENTITY{name:'0~5 years old Infant and toddler disease care encyclopedia'}) --(x) with x order by x.name return x.name limit 3"}, {"query": "Did you know that the events are organized by Wuhan Weng Industry Exhibition Planning Ltd?", "cypher": "match (:ENTITY{name:'Wuhan Encouraging Weightlifting Exhibition Planning Limited'}) <- [:Relationship{name:'hosting entity'}]- (n) return n.name"}, {"query": "Can you provide a basic description of the geographical location of the five-story building on the New East Side commercial promenade?", "cypher": "match (n:ENTITY{name:'New East Village commercial sidewalk'}) - [*1..5]->(x) where x.name <>'geography' return distinct x.name"}, {"query": "Please describe the three main departments of the schools belonging to the General Government Higher Professional Schools.", "cypher": "match (:ENTITY{name:'public office general higher education college'}) <- [:Relationship{name:' category'}]- ((q) - [:Relationship{name:' major faculty'}]->(x) return x.name skip 1 limit 3"}, {"query": "Do you know what kind of jobs moms have?", "cypher": "match (:ENTITY{name:''}) - [:Relationship{name:'profession'}]-> (m) return distinct m.name"}, {"query": "The first thing I learned was that I was a little bit more interested in the idea of a baby and I was really excited about the idea of a baby.", "cypher": "match (:ENTITY{name:'0-3 years old baby early learning hanging picture'}) --(q) with q order by q.name return q.name limit 5"}, {"query": "What are the different labels of these works? Can you sort them from small to large according to the number of labels?", "cypher": "match (n:ENTITY{name:'grab a demon as wife'}) - [:Relationship{name:'connected state'}]->(:ENTITY) <-[:Relationship{name:'connected state'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Do you know what happened on April 16, 2015?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "What are the top 5 Chinese names for the world's most famous people?", "cypher": "match (:ENTITY{name:'Relationship{name:'Chinese name'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "Can you put together a report on the number of companies you founded in 2008?", "cypher": "match (p:ENTITY{time:'2008'}) return count ((p)"}, {"query": "Do you know of three valid information in addition to the official document in the Water Supply and Water Regulations of Dalian?", "cypher": "match (:ENTITY{name:'Dalyane City Water Supply Water Regulations'}) --(m) with m order by m.name where m.name <> 'publications' return distinct m.name limit 3"}, {"query": "I'm not sure if you've signed any of your novels yet.", "cypher": "match (:ENTITY{name:' not signed'}) <- [:Relationship{name:' status'}]- (n) return distinct n.name"}, {"query": "The first thing I want to do is to find out what is inside the four-layer relationship that has caused the trauma of a life with little knowledge.", "cypher": "match (n:ENTITY{name:'trauma spread'}) - [*1..4]->(x) where x.name <>'life' return distinct x.name"}, {"query": "Do you know what the three levels of the relationship are in Tiantai County, east of Zhejiang Province?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Eastern Tiantai County of Zhejiang Province'}) UNWIND relationships(path) AS rel return distinct rel.name limit 2"}, {"query": "Do you know what Alexander Gottlieb Tom Carton's main achievement was?", "cypher": "match (:ENTITY{name:'Alexander Gottlieb Tom Carton'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'main achievement'}]->(n) return distinct n.name"}, {"query": "Can you give us a detailed overview of the four levels of relations between the historical monument and the historical monument of the revolution in the Ganges River?", "cypher": "match (n:ENTITY{name:'Memorial to the Revolutionary History of the Ganges River'}) - [*1..4]->(x) where x.name <>'history' return distinct x.name"}, {"query": "Can you tell me who's representative work is the Blue Sky?", "cypher": "match (x:ENTITY{name:'Relationship{name:'representative work'}]- (p) return distinct p.name"}, {"query": "What is the main department of the 7th secondary school in Anda?", "cypher": "match (:ENTITY{name:'Anda City 7th Secondary School is located in the eastern suburb of China's cow country - the beautiful eastern city of Anda, nestled in the economic belt of the Hadji Industrial Corridor, adjacent to the Hadji Highway, with a geographically superior location, natural scenery and pleasant people .'})"}, {"query": "What else do you know about the term \"Chen-Tsu-Tsu\" in the Internet?", "cypher": "match (n:ENTITY{name:'Chen's body'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'description'}]->(x) where x.name <> 'network language' return distinct x.name limit 5"}, {"query": "Do you know the chemical correspondent of 2-ethylene-5-hydroxide?", "cypher": "match (:ENTITY{name:'2-ethylene-5-butadiene'}) <--(n) return n.name"}, {"query": "The publication also has a story called \"1DVDROM\" about the flaming ninja?", "cypher": "match (:ENTITY{name:'(1DVDROM) Firefly Ninja's Tale'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'publication' return h.name"}, {"query": "Where is Zhuhai Resort located? What are the famous sights in the area?", "cypher": "match (:ENTITY{name:'Jewelry Resort'}) - [:Relationship{name:'location'}]->(n) return n.name as name union all match (:ENTITY{name:'Jewelry Resort'}) - [:Relationship{name:'Scenic attractions'}]->(m) return m.name as name"}, {"query": "Can you name 6 chemicals with a molecular weight of 180.21?", "cypher": "The name of the function is the value of the function."}, {"query": "How do you understand 4right love?", "cypher": "match (:ENTITY{name:'4rightlove'}) --(p) with p order by p.name return p.name"}, {"query": "What is the shortest path between the two levels of the village of Kasturi Guna and the village of Putu Leni?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Chestnut tree village [Jijun city, Henan province, slope town of Chestnut tree village]'}) - [*..2]-(b:ENTITY{name:'Slopes connected village'})) return count ((p)"}, {"query": "Which one of the cameras is supervised by Satoshi Shinkai?", "cypher": "match (:ENTITY{name:'\u4f50\u85e4\u9806\u4e00'}) <- [:Relationship{name:' supervised'}]- ((n) - [:Relationship{name:'camera'}]->(m) return distinct m.name limit 1"}, {"query": "Find four poems, and their respective years of creation.", "cypher": "match (:ENTITY{name:'poem'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' date of creation'}]->(n) return m.name, n.name limit 4"}, {"query": "What is the shortest relationship path between the two layers of hurricane downpour and hurricane storm?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'hurricane downpour'}) - [:Relationship*..2]-(b:ENTITY{name:'hurricane downpour'})) return count ((p)"}, {"query": "Tell me about the person who is 5 times the size of the river.", "cypher": "match (n:ENTITY{name:'\u6cb3\u6d25\u826f\u4e00'}) - [*]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "Can you name four authors who have been published in the literary world?", "cypher": "match (:ENTITY{name:'novel'}) <- [:Relationship{name:'work originated from'}]- (n) return n.name limit 4"}, {"query": "Tell me about this person who graduated from the University of Hong Kong, what are his main achievements?", "cypher": "match (:ENTITY{name:'Hong Kong University'}) <- [:Relationship{name:' Graduate School'}]- ((p) - [:Relationship{name:' Major achievements'}]->(q) return q.name skip 2 limit 3"}, {"query": "Can you give me five AAAA-level sights?", "cypher": "match (:ENTITY{name:'national AAAA-level scenic area'}) <- [:Relationship{name:'attraction level'}]-(p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "Can you tell me about the five relationship names within the three layers that make up the Natural Village?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Combining natural village'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "What is the shortest path to the design of the electronic filter and the introduction of electronic processes within the two layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' design of electronic filter'}) - [*..2]-(b:ENTITY{name:' entry to electronic process'})) return count ((p)"}, {"query": "Can you name three professions that people born on April 26, 1978 are in?", "cypher": "match (p:ENTITY{name:'April 26, 1978'}) <- [:Relationship{name:'date of birth'}]-(m),(m) - [:Relationship{name:'occupation'}]->(q) return distinct q.name limit 3"}, {"query": "I'm looking for a list of 10 insect types, where are they all?", "cypher": "match (:ENTITY{name:' insect outline Insecta'}) <- [*]-(m), (m) - [:Relationship{name:' distribution area'}]->(n) return m.name, n.name limit 10"}, {"query": "What is the word next to the sick letter besides the hyphen?", "cypher": "match (:ENTITY{name:' side of the word'}) <- [:Relationship{name:' side of the word'}]-(m) where m.name <> '' return distinct m.name"}, {"query": "What are the publications published by Shanghai Shui-Li Bookstore? and what is his price range?", "cypher": "match (:ENTITY{name:'Shanghai Three Union Bookstore'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:'Pricing'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "How tall is Yang Hisheng?", "cypher": "Match (:ENTITY{name:'Relationship{name:'height'}]-> (m) return m.name"}, {"query": "The notification on the imposition of excise duty on battery coatings was issued jointly by the Ministry of Finance and the National Tax Administration on January 26, 2015.", "cypher": "match (n:ENTITY{name:'Notice of the levy of excise duty on battery paints'}) -->(h) with h order by h.name where h.name <> 'National Tax Directorate of the Ministry of Finance' and h.name <> '2015/1/26' return h.name limit 4"}, {"query": "What is the name of the raw product that is not processed?", "cypher": "match (:ENTITY{name:'unprocessed or slightly processed product'}) <-[:Relationship{name:'explanation'}]-(m), (m) -[:Relationship{name:' alias'}]->(n) where n.name='original product' return distinct m.name"}, {"query": "Please answer me about the 2013 Shanghai International Construction Machinery, Building Materials Machinery and Special Vehicles Exhibition.", "cypher": "match (:ENTITY{name:'2013 Shanghai International Construction Machinery, Building Materials Machinery and Special Vehicles Exhibition'}) --(m) with m order by m.name return m.name"}, {"query": "Can you tell me about the three pieces of information related to 12331?", "cypher": "match (:ENTITY{name:'12331'}) --(h) with h order by h.name return distinct h.name skip 1 limit 3"}, {"query": "Is there an accident caused by typhoon Mayhem and heavy rain?", "cypher": "match (:ENTITY{name:'Typhoon Mayhem brings heavy rain'}) <- [:Relationship{name:'cause'}]- (m) return m.name"}, {"query": "Can you list the relationships that are covered by the Suzhou Ceremonial Services Limited within the two levels?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Suzhou Cannibalism Services Co. Ltd'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you list the five interlayered relationships that are involved in the three types of anaphylactic rhinitis?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'dependent nasopharyngeitis'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Who weighs as much as Jon Kuipers, and what labels do they each have? Show how many of these people are in order of number of labels.", "cypher": "The following is a list of characters that appear in the game of Batman: Arkham Knight: The Last Jedi."}, {"query": "Can you tell me about the type of relationship involved in the 4th floor Neco Tree Fountain?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "The Yellow Group is a cooking group?", "cypher": "match (:ENTITY{name:'\u9ec4\u7fa4'}) <- [:Relationship{name:'Chinese name'}]- ((q) - [:Relationship{name:'profession'}]->(x) return distinct q.name"}, {"query": "Can you identify the five painters and where they were born?", "cypher": "match (:ENTITY{name:'painter'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name,n.name limit 5"}, {"query": "Do you want to know about the five works that are in the four-tier relationship with the literary work of Natsumi Fujiwara?", "cypher": "match (n:ENTITY{name:'except for the night memory of Fuqing Xiao Dong'}) - [*1..4]->(x) where x.name<>'literary work' return distinct x.name limit 5"}, {"query": "Who among you has graduated from a high school in the Yangtze River?", "cypher": "match (:ENTITY{name:'Congress High School'}) <- [:Relationship{name:'Graduate School'}]-(m), (m) - [:Relationship{name:'Profession'}]->(n) where n.name='writer' return m.name"}, {"query": "The book is a price you know?", "cypher": "match (:ENTITY{name:' hand-painted ad lens'}) <- [:Relationship{name:' book name'}]- ((n) - [:Relationship{name:' pricing'}]->(q) return distinct q.name"}, {"query": "I would like to know the other four information about Professor Ho Chi Minh in level 2 .", "cypher": "match (:ENTITY{name:'Hoshi Liu [deceased Dalian Aquatics College professor]'}) - [:Relationship*1..2]-(p) where p.name <> 'professor' return p.name limit 4"}, {"query": "Please list the information of the members of the Shinkansen Customs Group.", "cypher": "match (:ENTITY{name:' members of the Shinch\u014dwa Customs Party'}) --(m) return distinct m.name"}, {"query": "As a Guangdong Newcomer, he is represented by the group of people who gather in a circle and has five other representations.", "cypher": "match (:ENTITY{name:'Cantonese Newspaper'}) <- [:Relationship{name:'Birthplace'}]-(m) - [:Relationship{name:'Representative work'}]->(q) where q.name <> 'Relationship' return distinct q.name limit 5"}, {"query": "I wonder if you can tell me the first three things about the multi-storey building?", "cypher": "match (:ENTITY{name:'multiple buildings'}) --(p) return p.name order by p.name limit 3"}, {"query": "Please send three new tags to the second round of the 06 Spring Opening Exam in Biology.", "cypher": "match (:ENTITY{name:'06 Spring Spring Eastern High School Exam Round Two Biology'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 3"}, {"query": "Can you recommend a producer who is a producer of UIG Entertainment's TV series?", "cypher": "Match (:ENTITY{name:'UIG Entertainment'}) <- [:Relationship{name:'producer'}]- (m) return m.name The game is played by two teams of three players."}, {"query": "Please find me two films released by DeBoo Films, who are the directors?", "cypher": "Match (:ENTITY{name:'Debo Film Company'}) <--(m), (m) - [:Relationship{name:'director'}]->(n) return m.name, n.name limit 2"}, {"query": "Please remember to put my song and which songs are of the same musical style, what are the labels for each song?", "cypher": "match (n:ENTITY{name:'remember you asked me to leave you'}) - [:Relationship{name:'musical style'}]->(:ENTITY) <-[:Relationship{name:'musical style'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "The first is the 108-year-old star, which is the first to be named after a star.", "cypher": "match (:ENTITY{name:'108 will be asterisked'}) --(n) with n order by n.name return n.name limit 1"}, {"query": "The national 11315, which we use all the time, was launched in what year?", "cypher": "match ((:ENTITY{name:'11315 national signaling system'}) - [:Relationship{name:' started on '}]-> (m) return m.name"}, {"query": "How much do you know about the free 1080p movie network?", "cypher": "match (:ENTITY{name:'1080P movie network'}) --(n) with n order by n.name where n.name <> 'free' return n.name"}, {"query": "What are the main achievements of this former Hong Kong government official?", "cypher": "match (q:ENTITY{name:'Former Hong Kong government official'}) <- [:Relationship{name:'profession'}]-(h) - [:Relationship{name:'main achievement'}]->(m) return m.name order by m.name limit 5"}, {"query": "Help me find two new non-lethal weapons.", "cypher": "match (:ENTITY{name:' non-lethal new type of weapon'}) <- [:Relationship{name:' weapon'}]-(m) return distinct m.name limit 2"}, {"query": "Can anyone tell me who the actors in the movie A va faire mal! are?", "cypher": "match (:ENTITY{name:'a va faire mal!'}) --(h) return h.name order by h.name limit 10"}, {"query": "Can you give me four pieces of information about the five-tier relationship of selling code?", "cypher": "The following is a list of the most commonly used URLs for the URLs listed in this section:"}, {"query": "What are Tonon's major achievements?", "cypher": "match (:ENTITY{name:'Tonon'}) <- [:Relationship{name:'Chinese name'}]- ((q) - [:Relationship{name:'main achievement'}]->(x) return distinct x.name limit 1"}, {"query": "Please tell me which tournaments have been held in Papua New Guinea?", "cypher": "match (:ENTITY{name:'Papua New Guinea'}) <- [:Relationship{name:'place of holding'}]- (x) return x.name"}, {"query": "Did you have trouble mentioning the five personal profiles of Swedish footballer Et\u00e9us Mathias in no less than six relationships?", "cypher": "match (n:ENTITY{name:'Et\u00e9us Mathias'}) - [*1..6]->(x) where x.name <>'Et\u00e9us Mathias, Swedish footballer\u3002' return distinct x.name limit 5"}, {"query": "The address is Beijing East Road 41 in Nanjing City, Basingstong District, Jiangsu Province, the former government residence, which other names besides construction?", "cypher": "match (:ENTITY{name:'Beijing East Road 41 in Nanjing, Nanjing, Jiangsu Province'}) <- [:Relationship{name:'Government residence'}]-(x),(x) - [:Relationship{name:'alias'}]->(m) where m.name <> 'building' return distinct m.name limit 5"}, {"query": "Can you share with me the relationship between the three layers of Chinese medicine? Can you give me 5?", "cypher": "The following is a list of all the different ways Unwind is credited in the database:"}, {"query": "What is the shortest path of the three layers of the 2010 Chinese Pharmaceutical Simulation and Analysis of High Power Transverse Current CO2 Laser and its Applications?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'High power cross-flow CO2 lasers and their applications'}) - [*..3]-(b:ENTITY{name:'2010 Chinese pharmaceutical prototype and analysis'})) return count ((p)"}, {"query": "Which schools are identical to the East Lake School in Yue Lake County and have the same labels? Find me the number of labels from big to small.", "cypher": "match (n:ENTITY{name:'Yue\u6c60\u53bf\u4e1c\u6e56\u5b66\u6821'}) - [:Relationship{name:'school type'}]->(:ENTITY) <- [:Relationship{name:'school type'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC "}, {"query": "Can you tell me what this Chinese man does for a living?", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnicity'}]- ((x) - [:Relationship{name:'profession'}]->(m) return m.name skip 3 limit 3"}, {"query": "In addition to being awarded the rank of Major General of the PLA and the Vice-Political Committee of the PLA's Gansu Military District, what other major achievements has Liu imprinted?", "cypher": "match (n:ENTITY{name:'\u5370\u5149'}) - [:Relationship{name:'main achievements'}]->(h) where h.name <> 'Chinese People's Liberation Army Major General Liu' and h.name <> 'Chinese People's Liberation Army Military District Vice-Administrative Committee of the Gansu Province' return distinct h.name limit 1"}, {"query": "How many companies are there that are right in the deep?", "cypher": "match (p:ENTITY{location:' deep'}) return count ((p)"}, {"query": "I'm not sure if you know what Christine Schall does for a living.", "cypher": "match (:ENTITY{name:'Christie Schall'}) - [:Relationship{name:'profession'}]-> (x) return distinct x.name"}, {"query": "Who is the star born in Pomeroy?", "cypher": "Match (:ENTITY{name:'Bomerroy'}) <- [:Relationship{name:'Born'}]- (n) return n.name"}, {"query": "Can you list the 10 most representative works of Shen Zhiyu?", "cypher": "match (:ENTITY{name:'Shen Shih'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'representative work'}]->(h) return distinct h.name limit 10"}, {"query": "What is the history of the Maghreb culture and what are its main findings?", "cypher": "match (:ENTITY{name:'Magnetic Mountain Culture'}) - [:Relationship{name:'Epoch'}]->(n) return n.name as name union all match (:ENTITY{name:'Magnetic Mountain Culture'}) - [:Relationship{name:'Major discovery 1'}]->(m) return m.name as name union all match (:ENTITY{name:'Magnetic Mountain Culture'}) - [:Relationship{name:'Major discovery 2'}->(r) return r.name as name"}, {"query": "What is the name of the person who is a professional and what are their individual labels? Please list them in order of number of labels, from big to small.", "cypher": "The following is a list of all the different ways M.M.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S."}, {"query": "I'm going to be a producer for the next five films.", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'producer'}]-(p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "The film is a remake of the 2010 film Smile Again.", "cypher": "match (:ENTITY{name:'Smile Again'}) <- [:Relationship{name:'representing work'}]- (x) return x.name skip 1"}, {"query": "The following is a list of the outskirts of the city of Leopoldville.", "cypher": "match (n:ENTITY{name:' suburbia lyrics\u00b7 let the emperor throw the orchestra\u00b7 send the gods'}) - [:Relationship*1..2]->(x) where x.name <>'\u4e50\u5e9c' return distinct x.name"}, {"query": "Did you find any information for me on 1209C3 bearing?", "cypher": "match (:ENTITY{name:'1209C3 bearing'}) --(m) with m order by m.name return m.name"}, {"query": "The Korean film starring Liu Bei, Two Men, what kind of movie is it, good looking?", "cypher": "match ((:ENTITY{name:'Two men [Korean film starring Yu-ho]'}) - [:Relationship{name:'type'}]-> (q) return q.name"}, {"query": "Help me find three other representative works of Liu Jing, other than the Wolf of War.", "cypher": "match (n:ENTITY{name:'Relationship{name:'representative work'}]->(h) with h order by h.name where h.name <> 'Wolf' and h.name <> 'Wolf II' return h.name limit 3"}, {"query": "Give me three luxury brands, who are the founders?", "cypher": "match (:ENTITY{name:'luxury brand'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:'founder'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "The book is a collection of short stories, which are written by the author himself, and which are published by the publisher.", "cypher": "match (n:ENTITY{name:'wisdom in shadow'}) - [:Relationship{name:'publisher'}]->(:ENTITY) <- [:Relationship{name:'publisher'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Do you have any information from the Internet Finance Association of Anhui? Can you name the top 5?", "cypher": "match (:ENTITY{name:'Anhui Provincial Internet Finance Association'}) --(q) return q.name order by q.name limit 5"}, {"query": "What is the boiling point and boiling point of the extract?", "cypher": "The name of the game is \"Relationship\" (Relationship) - return n.name as name union all match (: ENTITY{name:'\u5f02'}) - return m.name as name"}, {"query": "Can you tell me the name of a novel from the Red Sleeve Novel Network?", "cypher": "match (:ENTITY{name:' red sleeve novel network'}) <- [:Relationship{name:' work originated from'}]- (h) return h.name"}, {"query": "Please tell me what is the content of the work of Li Yu Reding in the two levels of ethical teaching materials and financial and trade literacy education in the higher education institutions?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'Lee Yu-rong' return distinct x.name"}, {"query": "What is the name of the king of tomorrow morning?", "cypher": "match (:ENTITY{name:'Ming'}) <- [:Relationship{name:'Dynasty'}]-(m), (m) - [:Relationship{name:'Dynasty'}]->(n) where n.name='Hing' return distinct m.name"}, {"query": "How about the shortest description of the Emanuela Villa Studio Hotel?", "cypher": "match (:ENTITY{name:' Hotel Emanuela Villa Studio'}) --(h) return min ((h.name) is the name of the game"}, {"query": "What are the top 10 achievements of American talent?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(x),(x) - [:Relationship{name:'major achievement'}]->(q) return distinct q.name limit 10"}, {"query": "Can you tell me about the 5 days of waiting besides singing?", "cypher": "match (:ENTITY{name:' waiting days'}) --(m) with m order by m.name where m.name <> 'for singing' return distinct m.name limit 5"}, {"query": "The following is a list of all the publications that have been published by Modern Aviation Electronic Systems and Integrated.", "cypher": "match (n:ENTITY{name:' Modern avionics and integrated systems'}) - [:Relationship*]->(x) where x.name<>'publication' return distinct x.name"}, {"query": "What chemical is CAS number 107-15-3?", "cypher": "The name of the file is the name of the file that is used to access the file."}, {"query": "Can you tell me which schools have the main departments of Ethnology and Sociology?", "cypher": "match (n:ENTITY{name:'School of Ethnology and Sociology'}) <- [:Relationship{name:'Main Faculty'}]- (m) return m.name skip 4"}, {"query": "Article 5 describes the general case of the 12/13 Guangxi Liuzhou Planning Bureau Director.", "cypher": "match (:ENTITY{name:'12\u00b713 Guangxi Liuzhou Planning Bureau Director Damage Case'}) --(m) with m order by m.name return m.name limit 5"}, {"query": "Can you list the crashes together?", "cypher": "Match (:ENTITY{name:' overturned'}) <- [:Relationship{name:' accident'}]- (n) return n.name"}, {"query": "Do you know what individual awards the members of the University of Windsor's Student Debate Season Team have won?", "cypher": "match (:ENTITY{name:'Wenzhou City University Student Debate Season Team'}) <- [:Relationship{name:'October 2014'}]- ((p),(p) - [:Relationship{name:'Individual award'}]->(h) return distinct h.name limit 1"}, {"query": "What kind of contest was held on November 7, 2015?", "cypher": "match (p:ENTITY{name:'7 November 2015'}) <- [:Relationship{name:'time of holding'}]- (n) return distinct n.name"}, {"query": "Which two authors' books were published by Shanghai University of Economics Press?", "cypher": "match (:ENTITY{name:'Shanghai University of Finance Publishing'}) <- [:Relationship{name:'publishing'}]-(x),(x) - [:Relationship{name:'author'}]->(q) return distinct q.name limit 2"}, {"query": "Can you tell us about the type of relationship that Taiwanese tea is involved in in the three layers?", "cypher": "The following pages link to The Unknown:"}, {"query": "0 is a sentence that says 3 minus 66 is a joke.", "cypher": "match (:ENTITY{name:'03 plus 66'}) --(x) with x order by x.name return x.name limit 1"}, {"query": "I would like to know what kind of agencies are there in the rural area of Yangwon County?", "cypher": "match (:ENTITY{name:'Relationship'}) <- [Relationship{name:' Chinese name'}]- ((q) - [Relationship{name:' internal agency'}]->(x) return distinct x.name"}, {"query": "I would like to know the template for the cDNA library can you tell me?", "cypher": "The following is a list of the most commonly used cDNA templates."}, {"query": "How many square meters of exhibition space will China Electronics Expo 2012 have?", "cypher": "match ((:ENTITY{name:'2012 China Electronics Expo'}) - [:Relationship{name:'area of the venue'}]-> (m) return m.name"}, {"query": "His main achievement is being a jury member for the National Song Junket Poetry Prize, I wonder what other works this man represents?", "cypher": "match (:ENTITY{name:' National Song Junket Poetry Prize jury,'}) <- [:Relationship{name:' major achievement'}]- ((x) - [:Relationship{name:' representing work'}]->(p) return p.name order by p.name limit 5"}, {"query": "What chemical has the molecular structure CH2=CH-CH2-CH3?", "cypher": "match (:ENTITY{name:'CH2=CH-CH2-CH3'}) <- [:Relationship{name:'molecular structure'}]- (x) return x.name"}, {"query": "What do you think about the publication's 2011 Social Services Development Statistics?", "cypher": "match (:ENTITY{name:'2011 Social Services Development Statistician'}) --(p) with p order by p.name where p.name <> ' publication' return p.name"}, {"query": "What books are published by the publisher?", "cypher": "match (:ENTITY{name:'Washington Post'}) <- [:Relationship{name:'Publishing Post'}]- ((x),(x) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 1"}, {"query": "Can you find three places in the temperate monsoon climate?", "cypher": "match (:ENTITY{name:'temperate monsoon climate'}) <- [*]-(m), (m) - [:Relationship{name:' geographical location'}]->(n) return m.name, n.name limit 3"}, {"query": "Can you take me to Tianjin Wenzhou Education and Technology Development Co., Ltd. and tell me the top ten?", "cypher": "match (p:ENTITY{name:' Tianjin Wonsei Education and Technology Development Limited'}) --(q) return q.name order by q.name limit 10"}, {"query": "What type of weapons are used in the 10m mobile shooting events?", "cypher": "match ((:ENTITY{name:'10 m moving cannon'}) - [:Relationship{name:'use of gun'}]-> (h) return h.name"}, {"query": "What theory did Carlson propose?", "cypher": "Match (:ENTITY{name:'Carson'}) <- [:Relationship{name:'person'}]- (n) return n.name The name of the match is not shown."}, {"query": "What are the relationships within the three layers of the Hangzhou Busan School of Engineering? Please tell me the names of these relationships.", "cypher": "The following pages link to The Hangzhou Busan Technical School:"}, {"query": "Can you find the first label description of the 1997 we bought the screws, but without the toothpick?", "cypher": "match (:ENTITY{name:'1997 we bought a screwdriver, but no tooth tag'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 1"}, {"query": "I know that the 108th Ward of Jinjiang belongs to the Provincial Integrated Demonstration Zone, which had a population of 2.47 million in 2012. Please help me find 5 more information about it.", "cypher": "match (n:ENTITY{name:'promotion 108 corridor'}) -->(h) with h order by h.name where h.name <> 'provincial integrated demonstration area' and h.name <> '247 million(2012)' return h.name limit 5"}, {"query": "Check out the personal description of Yeini Sherran in the two-tier relationship.", "cypher": "match (n:ENTITY{name:'Yeini Sherran'}) - [*1..2]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "Help me find five words that read like p\u00e1ng.", "cypher": "match (:ENTITY{name:'p\u00e1ng'}) <- [:Relationship{name:'spelling'}]-(m), (m) - [:Relationship{name:'structure'}]->(n) where n.name='left-handed structure' return distinct m.name limit 5"}, {"query": "Do you know which accident killed four and injured five?", "cypher": "match (:ENTITY{name:'4 killed, 5 wounded'}) <- [:Relationship{name:'casualty situation'}]- (n) return distinct n.name"}, {"query": "Can you find me three economics books published by Shanghai Education Publishing?", "cypher": "match (:ENTITY{name:'Shanghai Education Publishing'}) <- [:Relationship{name:'publishing'}]- ((m), (m) - [:Relationship{name:'developed'}]->(n) where n.name='developed' return m.name limit 3"}, {"query": "The following table shows the number of lawyers who are assigned to a judicial office, and what labels they have.", "cypher": "match (n:ENTITY{name:'Beijing City Law Firm'}) - [:Relationship{name:'Department of Justice'}]->(:ENTITY) <-[:Relationship{name:'Department of Justice'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, countr) as c, collect ((r.name) ORDER BY DESC "}, {"query": "Is there any information about Hizhnichenko H, who is a player in the 1-2 tier of Russian football?", "cypher": "match (n:ENTITY{name:'Hizhnichenko H'}) - [*1..2]->(x) where x.name <> 'football' return distinct x.name"}, {"query": "Can you list the five occupations of the people of the Three Kingdoms period?", "cypher": "match (:ENTITY{name:'Tri-Country;Bhang Han'}) <- [:Relationship{name:'nationality'}]- ((x) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 5"}, {"query": "The first thing I want to ask you is, is there any way to get the full text of the method for representing the 16 keypad semiconductor material labels?", "cypher": "match (n:ENTITY{name:' method of representing semiconductor material labels'}) - [:Relationship*]->(x) where x.name <>'16' return distinct x.name"}, {"query": "Do you know who owns the iconic work of the owner of the statue?", "cypher": "match (:ENTITY{name:'Relationship{name:'represents work'}]- (h) return distinct h.name"}, {"query": "Can you provide information about the two-layer relationship between Li Xuting's work and the work of the Shou Jian Liang knife?", "cypher": "match (n:ENTITY{name:'sympathetic'}) - [*1..2]->(x) where x.name <>'Li Xuting' return distinct x.name"}, {"query": "What are Wen-won's main achievements?", "cypher": "match (:ENTITY{name:'\u6587\u7fc1'}) - [:Relationship{name:'main achievement'}]->(m) return distinct m.name"}, {"query": "Give me five football players who are so cool.", "cypher": "match (n:ENTITY{name:'dry expensive'}) - [*]->(x) where x.name <> 'footballer' return distinct x.name limit 5"}, {"query": "What is the shortest path between the two levels of the relationship between Dazhou Steel Group Limited and Sichuan Thunder Technology Holdings Limited?", "cypher": "match p=shortestpath (((a:ENTITY{name:' Dazhou Steel Group Limited'}) - [*..2]-(b:ENTITY{name:' Sichuan Thunderbolt Technology and Shares Limited'})) return p"}, {"query": "Can you tell me about the relationship between the 2,5-dihydromethylmethacrylate 3 layer with the molecular formula C9H11Cl?", "cypher": "match (n:ENTITY{name:'Sii Jiang Moon\u00b7\u6728\u7280'}) - [:Relationship*1..3]->(x) where x.name <>'show more' return distinct x.name"}, {"query": "The article is about the book \"The pregnancy synchronization guidelines for October\" and the book \"The pregnancy synchronization guidelines for October\".", "cypher": "match (:ENTITY{name:'October pregnancy synchronization guidance overall'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'publication' return p.name limit 1"}, {"query": "Please give me an example of what the relationship between Article 8 and Tourism is in the third tier of the label.", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'tourism'}) return distinct n.name limit 8"}, {"query": "Do you know which websites and galleries are free?", "cypher": "match (:ENTITY{name:'free'}) <- [:Relationship{name:'charged'}]- (n) return distinct n.name"}, {"query": "What conferences have the Faculty of Environmental and Lightweight Engineering of the Chinese Institute of Engineering organized?", "cypher": "match (:ENTITY{name:'China Institute of Engineering Faculty of Environment and Lightweight Engineering'}) <- [:Relationship{name:'host unit'}]- (m) return distinct m.name"}, {"query": "And I'm going to use 2-Zet in a chemical experiment, and I want to know what the point of the reaction is.", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "The 677 has a social label and a fancy one?", "cypher": "match (h:ENTITY{name:'677 type submarine'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'society' return x.name"}, {"query": "There are several Chinese aliases for 1-shotin-oxygen-ki-ki, can you list them?", "cypher": "match ((:ENTITY{name:'1-octoxin-hydrogen sulfide'}) - [:Relationship{name:'Chinese alias'}]-> (m) return m.name"}, {"query": "Do you know what Fandang's occupational qualities are?", "cypher": "match (:ENTITY{name:'Fang Jiang'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'profession'}]->(m) return distinct m.name"}, {"query": "Do you know what the bombing in the center of Kuwait City is called?", "cypher": "match (p:ENTITY{name:'Kuwait city centre'}) <- [:Relationship{name:'place of occurrence'}]- (m) return distinct m.name"}, {"query": "I would like to know what other schools are there besides the public secondary schools in Zhejiang? Please help me find 10 information about this school in 3 levels.", "cypher": "match (:ENTITY{name:'First Secondary School of Zhengzhou City'}) - [*1..3]-(p) where p.name <> 'public secondary school' return distinct p.name limit 10"}, {"query": "I wonder if there are any returnees in Shenzhen, Henan?", "cypher": "match (p:ENTITY{name:'back clan'}) <--(x) --> ((q:ENTITY{name:'Henan Shenchu'}) return x.name"}, {"query": "Do you know the product number of 1-acetaminophen that we talk about every day?", "cypher": "match ((:ENTITY{name:'1-ethyl acetate'}) - [:Relationship{name:'product number'}]-> (h) return h.name"}, {"query": "I know Meghan Klingenberg is from the US, she is only 1.58m tall, can you tell me more information? 6 is enough.", "cypher": "match (n:ENTITY{name:'Klingenberg Meghan'}) -->(h) with h order by h.name where h.name <> 'United States' and h.name <> '1.58 m' return h.name limit 6"}, {"query": "Can you please show me the five categories of the Twin Leaf Plant Outline?", "cypher": "match (:ENTITY{name:' twins' chart'}) <--(m), (m) - [:Relationship{name:' gate'}]->(n) return distinct n.name limit 5"}, {"query": "Can you tell me about the five provisions of the Guizhou Provincial People's Congress's Public Statement on the Guizhou Provincial Government Regulations setting the limits of fines?", "cypher": "match (n:ENTITY{name:'Guizhou Provincial People's Assembly on the Provisions of the Guizhou Provincial Government Regulations on the Limitation of Fines'}) - [*]->(x) where x.name<>'publications' return distinct x.name limit 5"}, {"query": "Please help me check out this publication and its attribute of the Miss Zhujiang 2009 pageant?", "cypher": "match (:ENTITY{name:'2009 Miss Zhujiang Contest'}) --(q) with q order by q.name where q.name <> ' publications' return q.name limit 5"}, {"query": "Find out about the publisher of the horror movie, how long it is and when it's released.", "cypher": "match (:ENTITY{name:'visit the thriller'}) - [:Relationship{name:'issue company'}]->(n) return n.name as name union all match (:ENTITY{name:'visit the thriller'}) - [:Relationship{name:'long film'}]->(m) return m.name as name union all match (:ENTITY{name:'visit the thriller'}) - [:Relationship{name:'show time'}]->(r) return r.name as name"}, {"query": "Can you tell me the name of this person who lived in the Qing Dynasty?", "cypher": "match (:ENTITY{name:'Ching Dynasty'}) <- [:Relationship{name:'at the time'}]-(m),(m) - [:Relationship{name:'word number'}]->(p) return p.name skip 2 limit 5"}, {"query": "I want to know some information about Yuna (the girl star).", "cypher": "match (:ENTITY{name:'[youngster]'}) --(q) return distinct q.name limit 3"}, {"query": "Can you name anyone who has the voice of 5 of the 18 year old characters?", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Z"}, {"query": "What chemical is called butane-1-sulfonic acid?", "cypher": "The name of the product is not known."}, {"query": "Night Visiting Vampires is a novel by Anne Rice, I would like to know the year of the book's creation so that I can better understand it.", "cypher": "match ((:ENTITY{name:'Night Visiting Vampires [Anne Rice fiction novel]'}) - [:Relationship{name:' Creation year'}]-> (x) return x.name"}, {"query": "What is the name of the accident that killed 72 people?", "cypher": "match (:ENTITY{name:' causing 72 deaths'}) <- [:Relationship{name:' result'}]- (x) return x.name"}, {"query": "I'm going to introduce you to David Barker.", "cypher": "The name of the game is \"Skip 3\"."}, {"query": "What is the name of the process for producing boilers, turbines, and generator sets?", "cypher": "match (m:ENTITY{name:'boiler, turbine, generator setup'}) <- [:Relationship{name:'large equipment'}]- (h) return distinct h.name"}, {"query": "What do you know about the musical 100 Suns and Moons?", "cypher": "match (:ENTITY{name:'100 suns and moons'}) --(n) with n order by n.name where n.name <> 'Musical work' return n.name"}, {"query": "Where is the administrative department of the Shaanxi Coal Workers Union University?", "cypher": "match (:ENTITY{name:'Shanxi Coal Workers Union University'}) - [:Relationship{name:'Authorized Department'}]-> (m) return distinct m.name"}, {"query": "What else do you know about Chris? Help me find the other four information in the second layer.", "cypher": "match (:ENTITY{name:'Chris Rigot'}) - [:Relationship*1..3]-(p) where p.name <> 'person' return p.name limit 4"}, {"query": "Can you tell me 10 things you know about the Westin Memorial on three levels, besides the location?", "cypher": "match (:ENTITY{name:'Western Security Exchange Memorial'}) - [*1..3]->(p) where p.name <> 'Sian City, Xi'an State Road 69' return p.name limit 10"}, {"query": "I wonder what Han Qingyuan does for a living?", "cypher": "match (:ENTITY{name:'Khan Qingming, male, Chinese nationality\u3002'}) <- [:Describe{name:'description'}]- ((n) - [:Relationship{name:'profession'}]->(p) return distinct p.name"}, {"query": "The number of ships in the country is 46 ships, which model?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Can you tell me about the three layers of relationships that olive oil is involved in?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' olive'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "The Chinese Communist Party's Beijing Regional Committee", "cypher": "match (:ENTITY{name:'Relationship's Committee of the All-China Communist Party of China's All-Mid-China Central Committee'}) <- [Relationship's Committee: 'Lead by'}]-(m),(m) - [Relationship's Committee: 'Relationship's Committee: 'Lead by'}-(m),(m) - [Relationship's Committee: 'Lead by'}->(n) where n.name <> 'Relationship's Committee: 'Relationship' is a subset of the 'Relationship's Committee' which is a subset of the 'Relationship's Committee' which is a subset of the 'Relationship's Committee' which is a subset of the 'Relationship's Committee' which is a subset of the 'Relationship' which is a subset of the 'Relationship's Committee' which is a subset of the 'Relationship's Committee' which is a subset of the 'Relationship's Committee' which is a subset of the 'Relationship' which is a subset of the 'Relations's Committee' which is a subset of the 'Relations' which is a subset of the 'Relations' which is a subset of the 'Relations's Committee' which is a subset of the 'Relations' which is a subset of the 'Relations's Committee' which is a subset of the 'Relations's Committee' which is a subset of the 'Relations's Committee' which is a subset of the 'Relations's"}, {"query": "Please tell me the name of the Hong Kong director, screenwriter, and screenwriter who has written numerous works including The One-Man Wrecking Crew, The Great Wizard of Oz, The Painting of the Wrecking Crew, The King of the Wrecking Crew, The King of the Wrecking Crew, The Wind Turning, The Wrecking Crew, The Three Kingdoms of the Dragon, The Dragon Taking Off the Shield, and the director's maiden role as the Wrecking Crew.", "cypher": "match (:ENTITY{name:'Hong Kong director, screenwriter, writer, and director of numerous works, including the one-man show Wulin Gong, The Great Magician Gong, The Plumber's Skin, The King of the Turtles, The Wind Turning, The Flying Sands, The Three Kingdoms' Dragon Hunters, The Three Kingdoms' Dragon Hunters, etc.}) <- [:Describe{name:'description'}]- ((x) - [:Relationshipname{name:'Chinese name'}]-> ((n) return distinct n.name.name"}, {"query": "What chemical boils at 315 degrees?", "cypher": "match (p:ENTITY{name:'315\u00b0C'}) <- [:Relationship{name:'boiling point'}]- (m) return distinct m.name"}, {"query": "Please tell me the name of the relationship in the three layers that Yu Shigawa is involved in.", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'\u4f59\u5fd7\u5ddd'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1 The name of the game is a combination of the following:"}, {"query": "List below the information in the three-tiered relationship of the National Women's and Children's Health Information Training Program.", "cypher": "match (n:ENTITY{name:'National Women's and Children's Health Information Training Forum'}) - [:Relationship*1..3]->(x) where x.name <> 'Social activities' return distinct x.name"}, {"query": "What are the most representative works of the person who teaches the identity?", "cypher": "match (:ENTITY{name:'professor'}) <- [:Relationship{name:'position'}]-(m),(m) - [:Relationship{name:'representing work'}]->(n) return distinct n.name limit 3"}, {"query": "Do you know about the Sun Yat-sen's military headquarters? What other information is there besides the fact that it is located outside Guangzhou, please find the other 5 information in the 2nd layer", "cypher": "match (:ENTITY{name:'Sunset's Marquis's Palace'}) - [*1..2]->(p) where p.name <> 'Guangzhou' return p.name limit 5"}, {"query": "What was Ma'ru'een's faith? What was her profession? What year did she die?", "cypher": "Match (:ENTITY{name:'Maeguilin'}) - [:Relationship{name:'faith'}]->(n) return n.name as name union all match (:ENTITY{name:'Maeguilin'}) - [:Relationship{name:'profession'}]->(m) return m.name as name union all match (:ENTITY{name:'Maeguilin'}) - [:Relationship{name:'date of death'}->(r) return r.name as name"}, {"query": "What is the name of a small training plane crash?", "cypher": "match (:ENTITY{name:' small training aircraft'}) <- [:Relationship{name:' aircraft type'}]- (x) return distinct x.name"}, {"query": "The album is titled after the 2006 original album of the same name by Daegu, which is also the name of the album.", "cypher": "match (:ENTITY{name:'2006 original of the same name'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'album' return h.name"}, {"query": "I'm going to have to get a copy of the film.", "cypher": "match (:ENTITY{name:'08 film network'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 3"}, {"query": "10 words that made me understand about 1000 super simple everyday car-keeping tricks?", "cypher": "match (:ENTITY{name:'1000 super simple everyday car-keeping tricks'}) --(p) with p order by p.name return p.name limit 10"}, {"query": "I would like to know what else is there about the Crown Prince besides General Yang Zhiwei? Help me find 10 information on this person in 2 layers.", "cypher": "match (:ENTITY{name:' the king of the jungle [Doh Han final year name]'}) - [*1..2]-(p) where p.name <> 'the king of the jungle' return p.name limit 10"}, {"query": "What is the name of the international standard airline credit card issued by China Construction Bank and China Eastern Airlines?", "cypher": "match (:ENTITY{name:'China Construction Silver China Eastern Airlines'}) <- [:Relationship{name:'Issuing agency'}]-(m), (m) - [:Relationship{name:'type'}]->(n) where n.name='International Standard Airlines Unified Credit Card' return distinct m.name"}, {"query": "What is the asset/liability ratio and what are the applications?", "cypher": "match (:ENTITY{name:'Availability'}) - [:Describe{name:'tag'}]->(n) return n.name as name union all match (:ENTITY{name:'Availability'}) - [:Relationship{name:'area of application'}]->(m) return m.name as name"}, {"query": "Can you tell us about Richard Lane?", "cypher": "match (:ENTITY{name:'Richard Lane'}) --(x) return x.name order by x.name"}, {"query": "I would like to know what shows are scheduled for December 30, 2013?", "cypher": "match (:ENTITY{name:'December 30, 2013'}) <- [:Relationship{name:'time of show'}]- (x) return x.name"}, {"query": "What is the shortest relationship between the Vickers and the Pioneer within the two layers?", "cypher": "The first time the two spacecraft met, the first time they were able to get a match, the second time they were able to get a match."}, {"query": "Tell me about the 328-page textbook on contract law for high schools: how does it relate to the four layers of relationships in this book?", "cypher": "match (n:ENTITY{name:'Higher school textbook: contract law course'}) - [*1..4]->(x) where x.name<>'328 pages' return distinct x.name limit 5"}, {"query": "How to spell ten Chinese words?", "cypher": "match (:ENTITY{name:'Chinese vocabulary'}) <- [:Relationship{name:'attribute'}]- ((m) - [:Relationship{name:'spelling'}]->(q) return q.name order by q.name limit 10"}, {"query": "Please help me find the country and unit that developed the MiG-15 fighter.", "cypher": "match (:ENTITY{name:'Mig-15 fighter'}) - [:Relationship{name:'nation'}]->(n) return n.name as name union all match (:ENTITY{name:'Mig-15 fighter'}) - [:Relationship{name:'development unit'}]->(m) return m.name as name"}, {"query": "The following is a list of literary works by Ryu Min-Shichikou, which have been viewed over a thousand times in the past day.", "cypher": "match (n:ENTITY{name:'Ruyung\u00b7\u671f\u601d\u6eaa\u4e0a\u65e5\u5343\u56de'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "The Chinese government has been trying to get the Chinese government to stop the Chinese government from selling Chinese products to the Chinese.", "cypher": "match (n:ENTITY{name:'Chen Kwon [revolutionary jungle]'}) - [:Relationship*]->(x) where x.name <> 'Han Chinese' return distinct x.name limit 5"}, {"query": "I would like to know which books were published on December 1, 2004?", "cypher": "match (:ENTITY{name:'December 1, 2004'}) <- [:Relationship{name:'date of publication'}]- (n) return n.name limit 6"}, {"query": "Please help me find a job as a host, singer, actor, writer, please.", "cypher": "match (:ENTITY{name:' host, singer, actor, writer'}) <- [:Relationship{name:' profession'}]- ((x),(x) - [:Relationship{name:' Chinese name'}]->(q) return distinct q.name limit 1"}, {"query": "Can you recommend a website where you can share resources?", "cypher": "match (:ENTITY{name:'home of shared resource'}) <- [:Relationship{name:'network function'}]- (h) return h.name"}, {"query": "What are the famous sights in Copper Lions?", "cypher": "match (:ENTITY{name:'copper beam area'}) - [:Relationship{name:'famous attractions'}]-> (m) return distinct m.name"}, {"query": "I don't suppose you have five levels of relationship information that I don't think you have in your heart?", "cypher": "The following pages link to The Unknown:"}, {"query": "Do you know what reports were implemented on September 22, 2011?", "cypher": "match (:ENTITY{name:'22nd of September 2011'}) <- [:Relationship{name:'time of implementation'}]- (p) return distinct p.name"}, {"query": "I would like to know about the other 4 items in the 5310m2 floor of HP laptop.", "cypher": "match (:ENTITY{name:'HP5310m'}) - [*1..2]-(p) where p.name <> 'laptop' return p.name limit 4"}, {"query": "His English name is XIDANStation, do you know what it is?", "cypher": "match (:ENTITY{name:'XIDANStation'}) <- [:Relationship{name:' foreign language name'}]- ((m),(m) - [:Relationship{name:' operating unit'}]->(q) return distinct q.name"}, {"query": "Can you tell me what the relationship between cities and culture is on these two levels?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' cities and culture'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you tell us about the type of relationship involved in grilling turkey in 5 layers?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:' baked turkey'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the novels that are available on 17k Novel Network? Can you tell me seven?", "cypher": "match (:ENTITY{name:'17k novel network'}) <- [:Relationship{name:'connecting platform'}]- (q) return q.name limit 7"}, {"query": "You don't understand what the coverage of Green Boat Primary School in the three levels has to do with it?", "cypher": "The following pages link to The Unknown:"}, {"query": "I'm not sure if you've got more than ten tags to introduce 16WiFi?", "cypher": "match (:ENTITY{name:'16WiFi'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 10"}, {"query": "Can you tell me about the three companies that were founded in 2014?", "cypher": "match (:ENTITY{name:'2014'}) <- [:Relationship{name:'time of establishment'}]-(n) - [:Relationship{name:'company name'}]->(q) return distinct q.name limit 3"}, {"query": "Do you know who is the manufacturer of this 2007 Kosta 4.0T diesel luxury 20s that we are looking at?", "cypher": "match ((:ENTITY{name:'2007 Kosta 4.0T diesel luxury version 20 seats'}) - [:Relationship{name:' manufacturer'}]-> (h) return h.name"}, {"query": "Tell me about the five 1313UV flatbed printers?", "cypher": "match (:ENTITY{name:'1313uv tablet printer'}) --(p) with p order by p.name return p.name limit 5"}, {"query": "Do you know which one was a 2.6 magnitude earthquake?", "cypher": "The name of the file is the same as the name of the file."}, {"query": "What happened on January 29, 2018?", "cypher": "match (:ENTITY{name:'January 29, 2018'}) <- [:Relationship{name:'time'}]- (m) return distinct m.name"}, {"query": "Name one of the major departments of the Beijing Industrial School.", "cypher": "match (:ENTITY{name:'Beijing Industrial School'}) - [:Relationship{name:'Main Faculty'}]-> (x) return distinct x.name limit 1"}, {"query": "Who won the title of best male player at the 2013 East Asian Cup in South Korea?", "cypher": "Match (s) (h) return (h) name (s) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h (h) (h) (h) (h) (h) (h) (h (h) (h) (h) (h) ("}, {"query": "Does anyone know when World of Tanks will be released?", "cypher": "match (:ENTITY{name:'World of Tanks'}) <- [:Relationship{name:' belongs to series'}]-(n) - [:Relationship{name:' release date'}]->(x) return distinct x.name limit 3"}, {"query": "I'm curious to know what other information besides film work touched my heart? Please help me find 7 of the 3 layers.", "cypher": "match (:ENTITY{name:'songs have to be'}) -[*1..3]-(p) where p.name <> 'film work' return p.name limit 7"}, {"query": "Did you know that the coal mine accident in Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside, Sunnyside,", "cypher": "match (:ENTITY{name:'Soon family town of Sunny family coal mine'})"}, {"query": "Can you list any of the 3rd level labels that are related to Left Eye Detective? 5 can you?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'left-eye detective'}) return distinct n.name limit 5"}, {"query": "What books are priced at $49.8? Can you recommend 10?", "cypher": "match (:ENTITY{name:'49.80 yuan'}) <- [:Relationship{name:' priced'}]- (n) return n.name limit 10"}, {"query": "Who is the next best screenwriter after Shaggy?", "cypher": "match (:ENTITY{name:'snap after dragon'}) --(p) return p.name order by p.name"}, {"query": "Can you tell me five things you know about the second layer of the national news, other than the newspaper that belongs to the Qing Dynasty?", "cypher": "match (:ENTITY{name:'Relationship*1..2]->(p) where p.name <> 'newspaper of the Qing Dynasty' return p.name limit 5"}, {"query": "Have you read the fantasy novel Witch in Disguise, and share it with me?", "cypher": "match (:ENTITY{name:' disguised witch'}) --(n) with n order by n.name where n.name <> ' disguised witch' return n.name"}, {"query": "Do you know which weapons are the 56-1, 56-2, 81 classes?", "cypher": "match (p:ENTITY{name:'56-1\u300156-2\u300181 forms'}) <- [:Relationship{name:'subtype'}]- (m) return distinct m.name"}, {"query": "Please describe to me all the information about the Oregon White-tailed Deer subspecies.", "cypher": "match (:ENTITY{name:'Blankettails of Oregon'}) --(h) return h.name order by h.name"}, {"query": "Which game was originally called 1500 DS Spirits Vol.2 Shogi?", "cypher": "The game is also known as the \"Shogi\" game."}, {"query": "Listed below are the products of the technology NACHI 29392E bearing.", "cypher": "match (n:ENTITY{name:'NACHI 29392E bearing'}) - [:Relationship*1..2]->(x) where x.name <> 'technology product' return distinct x.name"}, {"query": "This man was born in Sichuan province, do you know what he does for a living?", "cypher": "match (:ENTITY{name:' Sichuan Province'}) <- [:Relationship{name:'place of birth'}]-(x) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 5"}, {"query": "I would like to know what else is there to know about neonatal jaundice besides the common newborn disease? Help me find 10 information in 3 layers related to this school.", "cypher": "match (:ENTITY{name:' newborn yellow fever'}) - [*1..3]-(p) where p.name <> 'paediatrics, newborn paediatrics' return p.name limit 10"}, {"query": "Do you know the date of birth of football star Lundstram?", "cypher": "match ((:ENTITY{name:'Lendstrand'}) - [:Relationship{name:'date of birth'}]-> (h) return h.name"}, {"query": "Help me find 10 birds with crooked eyes.", "cypher": "match (:ENTITY{name:'shaped eye'}) <-[:Relationship{name:'shaped eye'}]-(m) return distinct m.name limit 10"}, {"query": "Tell me about the three main achievements of the Beijingers.", "cypher": "match (:ENTITY{name:'Beijing'}) <- [:Relationship{name:'place of birth'}]-(x) - [:Relationship{name:'main achievements'}]->(h) return distinct h.name limit 3"}, {"query": "What chemical is CAS number 119171-18-5?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Can you give me five facts about the 05 China Electricity Bond?", "cypher": "match (:ENTITY{name:'05 China electricity bond'}) --(p) with p order by p.name return p.name limit 5"}, {"query": "The blog post \"100 Floors\" is a great way to get your business started.", "cypher": "match (:ENTITY{name:'100Floors'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "The first is the \"100 Gates: Finding the Fountainhead\" campaign.", "cypher": "match (m:ENTITY{name:'100 Gates: search for a tag'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 10"}, {"query": "The Chinese Academy of Painting and Sculpture, which other profession has the same name?", "cypher": "match (:ENTITY{name:'category'}) <- [:Relationship{name:'Chinese name'}]-(q),(q) - [:Relationship{name:'profession'}]->(m) where m.name <> 'Academician of the Chinese Academy of Sciences' return distinct m.name limit 1"}, {"query": "Who among the six singers born in Taiwan's Pyongyang?", "cypher": "match (:ENTITY{name:'Taiwanese screenshot six stacks'}) <- [:Relationship{name:'place of birth'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='singer' return m.name"}, {"query": "Do you know his 5 main achievements? He is Park Jung-hyun, No. 1 in the tree, North Korean Qin Shan-do, also known as Kochi Sung-young.", "cypher": "match (:ENTITY{name:'\u6734\u6b63, No. in tree, North Korean Qing Shan Road, also known as Kaokumi Jong-hyun\u3002'}) <- [:Describe{name:'description'}]-(x),(x) - [:Relationship{name:'main achievement'}]->(q) return q.name order by q.name limit 5"}, {"query": "Please help me find three card games, what platforms are they for?", "cypher": "match (:ENTITY{name:'card game'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'app platform'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "I'm wondering now what kind of relationships are involved in the Chinese Social Science Evaluation Center in the two layers?", "cypher": "The following pages link to The Chinese Academy of Sciences:"}, {"query": "Do you know where the scope of application of cost classification management is?", "cypher": "match (:ENTITY{name:'Cost classification management refers to classifying costs according to their different nature.\u2666'}) <- [:Describe{name:'description'}]- ((x),(x) - [:Relationship{name:'Scope of application'}]->(q) return distinct q.name"}, {"query": "Find 16 books in the Comprehensive Practice Activity Implementation Guide: 5 articles related to case commentary and analysis.", "cypher": "match (n:ENTITY{name:'Integrated practice activities implementation guide: case comments and analysis'}) - [*]->(x) where x.name <>'16' return distinct x.name limit 5"}, {"query": "Do you know what kind of awards the Da Nang City Central Kindergarten, founded in 1985, has won?", "cypher": "match (:ENTITY{name:'Kindergarten in the center of the town of Daegu City was founded in 1985, there are 27 classes, 895 children, 90 teachers...'}) <-[:Describe{name:'description'}]-(p) -[:Relationship{name:'main award'}]->(h) return distinct h.name"}, {"query": "Besides the private website, can you tell me three things you know about SkyTickets Level 2?", "cypher": "match (:ENTITY{name:'space ticketing network'}) - [*1..2]->(p) where p.name <> 'private website' return p.name limit 3"}, {"query": "I need you to tell me about the types of relationships that are involved in Guangdong, focusing on the two layers.", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'focus Guangdong'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Help me find 10 species of plants in the genus Arctium.", "cypher": "match (:ENTITY{name:'Key'}) <- [:Relationship{name:'Key'}]-(m) return distinct m.name limit 10"}, {"query": "I need specific information about the International Bridge Art Management class at Shanghai Transport University.", "cypher": "match (:ENTITY{name:' Shanghai Transport University International Bridge Art Management class'}) --(h) return h.name order by h.name"}, {"query": "In which year was the Sendai Foot Secondary School in Tao County founded?", "cypher": "match (:ENTITY{name:'Dao County Senzoku Foot Secondary School'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'creation time'}]->(q) return distinct q.name"}, {"query": "What chemical has a molar volume of 104 ((m3/mol) ?", "cypher": "The name of the matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching matching"}, {"query": "Please help me find out what kind of buildings are in the East Wing Gardens.", "cypher": "match (:ENTITY{name:'Tunisia's Garden'}) - [:Relationship{name:'Building type'}]-> (m) with m order by m.name return m.name"}, {"query": "What products are developed by Baidu's Deep Learning Lab?", "cypher": "match (:ENTITY{name:'Baidu Deep Learning Lab'}) <- [:Relationship{name:'Research and development organization'}]- (p) return distinct p.name"}, {"query": "Help me find 10 public colleges for engineering.", "cypher": "match (:ENTITY{name:'public university'}) <- [:Relationship{name:' category'}]-(m), (m) - [:Relationship{name:' school type'}]->(n) where n.name='technology' return distinct m.name limit 10"}, {"query": "Please list the schools and the primary schools that are of the same school type and what are their labels. Please list them in order of number of labels for each school.", "cypher": "match (n:ENTITY{name:'Bean Creek Elementary School'}) - [:Relationship{name:'School type'}]->(:ENTITY) <- [:Relationship{name:'School type'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) BY ORDER c"}, {"query": "I'm wondering which posts have reached 20+ million posts in total?", "cypher": "match (:ENTITY{name:'20 million+'}) <- [:Relationship{name:'total posts'}]- (x) return x.name"}, {"query": "Do you know which channel was chosen for the 1984 Central Television Spring Festival?", "cypher": "match ((:ENTITY{name:'1984 Central Television Spring Festival reunion party'}) - [:Relationship{name:' broadcast channel'}]-> (q) return q.name"}, {"query": "Give me the Nike Zoom Kobe 4,3 in the relationship?", "cypher": "match (n:ENTITY{name:'Nike Zoom Kobe 4'}) - [:Relationship*1..3]->(x) where x.name <>'NIKE' return distinct x.name"}, {"query": "The project is a collaboration between the two artists, who have been working together since the beginning of the project.", "cypher": "match (n:ENTITY{name:'second monkey's mother-in-law and daughter-in-law'}) - [:Relationship*1..3]->(x) where x.name <> '' return distinct x.name"}, {"query": "Please tell me what kind of weapon is the 1975 mm wide?", "cypher": "match (:ENTITY{name:'1975 mm'}) <- [:Relationship{name:'ranking width'}]- (p) return p.name"}, {"query": "I need you to tell me about one type of relationship that is involved in Guangxi Baijian in the 2nd level, okay?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Kangxi Province'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Can you tell me what the scope of application of metal-insulation transformation is?", "cypher": "match (:ENTITY{name:'metal-insulator transformation'}) <- [:Relationship{name:'Chinese name'}]-(h) - [:Relationship{name:'scale of application'}]->(m) return distinct m.name limit 1"}, {"query": "What is the Chinese name of the China Initiative of Social Finance?", "cypher": "match (:ENTITY{name:'China Initiative of Social Finance'}) <- [:Relationship{name:'foreign language name'}]- ((n) - [:Relationship{name:'Chinese language name'}]->(q) return distinct q.name limit 3"}, {"query": "What are the main departments of schools in Harbin, Helangar Province?", "cypher": "match (:ENTITY{name:'Harbin City, Helanggang Province'}) <- [:Relationship{name:'the area'}]-(p),(p) - [:Relationship{name:'the main department'}]->(x) return x.name skip 1 limit 5"}, {"query": "The first book of the series, The Book of the Dead, was published in the United States in the year 2000.", "cypher": "match (:ENTITY{name:'\u90ed\u5b50\u777f'}) <- [:Relationship{name:' alias'}]- ((m) - [:Relationship{name:' main works'}]->(q) return distinct m.name,q.name"}, {"query": "What other career can graduates of the Sichuan Conservatory of Music do besides being an associate professor?", "cypher": "match (:ENTITY{name:'Sian Music College'}) <- [:Relationship{name:'Graduate School'}]-(n),(n) - [:Relationship{name:'Profession'}]->(m) where m.name <> 'professor' return distinct m.name limit 1"}, {"query": "The exhibition has over 800 exhibitors, so what's your name?", "cypher": "match (m:ENTITY{name:'more than 800'}) <- [:Relationship{name:'number of exhibitors'}]- (h) return h.name"}, {"query": "What are the main ingredients in lamb soup and what are the benefits of the supplement?", "cypher": "match (:ENTITY{name:' when classified as lamb's pork'}) - [:Relationship{name:' main ingredient'}]->(n) return n.name as name union all match (:ENTITY{name:' when classified as lamb's pork'}) - [:Relationship{name:' basic characteristics'}]->(m) return m.name as name"}, {"query": "What other position can a politician be in the Standing Committee of the Tianjin Municipal Commission?", "cypher": "match (p:ENTITY{name:'political figure'}) <- [:Tag{name:'tag'}]-(n) - [:Relationship{name:'profession'}]->(m) where m.name <> 'Standing Committee of the Chinese Communist Party of Taiwan' return distinct m.name limit 1"}, {"query": "What wars did the USS Titanic fight?", "cypher": "match (:ENTITY{name:'Turtle cruiser'}) - [:Relationship{name:' achievement'}]-> (m) return distinct m.name"}, {"query": "Do you know anything about the case that happened on August 22, 2015?", "cypher": "match (:ENTITY{name:'August 22, 2015'}) <- [:Relationship{name:'time of occurrence'}]- (m) return distinct m.name"}, {"query": "Who knows the labels for the 10K Cancer Genome Project?", "cypher": "match (:ENTITY{name:'10K cancer genome project'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "Please share all the news about Park Shin-young.", "cypher": "match (:ENTITY{name:'\u6734\u94f6\u82b1'}) --(h) return h.name order by h.name"}, {"query": "Shidu's representative work gave me the top five?", "cypher": "match (:ENTITY{name:'Shidu'}) - [:Relationship{name:'represents work'}]-> (q) with q order by q.name return q.name limit 5"}, {"query": "What do people born in Shinjuku do?", "cypher": "match (:ENTITY{name:'Shinjuku County'}) <- [:Relationship{name:'place of birth'}]-(h),(h) - [:Relationship{name:'profession'}]->(p) return distinct h.name"}, {"query": "When did Lee Hsuo-no die?", "cypher": "match (:ENTITY{name:'Lee Hyo-no'}) <- [:Relationship{name:'deceased celebrity'}]- (p) return distinct p.name"}, {"query": "What is the shortest relationship path between the two levels of Tianjin Sports Academy Sports and Cultural Arts College and Tianjin Foreign Language College and Tianjin Foreign Affairs College?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' Tianjin Sports Academy Sports and Cultural Arts College'}) - [:Relationship*..2]-(b:ENTITY{name:' Tianjin Foreign Language College and School of Foreign Affairs'})) return count ((p)"}, {"query": "What kind of work do people born in Konya Province, Turkey, do?", "cypher": "match (:ENTITY{name:'Konya Province of Turkey'}) <- [:Relationship{name:'place of birth'}]-(n),(n) - [:Relationship{name:'profession'}]->(q) return distinct q.name"}, {"query": "Can you name four brands of medicinal marijuana from South Korea?", "cypher": "match (:ENTITY{name:' Korea'}) <- [:Relationship{name:' origin'}]- (x) return x.name limit 4 This is a list of all the different ways X.name is credited in the database."}, {"query": "Is there a secondary school named Daung?", "cypher": "match (n:ENTITY{name:'Dawson Middle School'}) where n is not null return 1"}, {"query": "I need five footballs, Marcus Coco, and no less than six levels of relationships.", "cypher": "match (n:ENTITY{name:'Marcus Coco'}) - [*1..6]->(x) where x.name <> 'football' return distinct x.name limit 5"}, {"query": "What else do you know about the movie, other than that it was filmed in Mexico?", "cypher": "match (:ENTITY{name:' first drop of blood2'}) - [*1..2]-(p) where p.name <> 'Mexico' return distinct p.name limit 10"}, {"query": "Can you tell me what the attributes of the 299 master's degree institutions are?", "cypher": "The following is a list of the most commonly used tags for the game:"}, {"query": "I need information about the work of Huang Junsuo's Chiang Kai-shek, which is not above two levels of relationship.", "cypher": "match (n:ENTITY{name:'Hu\u95e8\u6625\u8272\u4e4b\u5343\u91d1\u5983'}) - [:Relationship*1..2]->(x) where x.name <>'parenthesis' return distinct x.name"}, {"query": "What kind of projects are supported by the Shanghai Conservatory of Music's Creative Committee?", "cypher": "match (p:ENTITY{name:'Shanghai Conservatory of Music's composition committee special commission'}) <- [:Relationship{name:'project support'}]- (h) return h.name order by h.name"}, {"query": "What is the story of Eugenio Barba?", "cypher": "match (:ENTITY{name:'Eugenio Barba'}) --(n) return distinct n.name"}, {"query": "The school, which was awarded the title of Chongqing City School of Politics and was founded in 2001, lists 10 other awards it has received.", "cypher": "match (:ENTITY{name:'2001'}) <- [:Relationship{name:'time of founding'}]-(q) - [:Relationship{name:'main award'}]->(h) where h.name <> 'Relationship' return distinct h.name limit 10"}, {"query": "What is the name of the dish that is served with the cooked blue fish?", "cypher": "match (:ENTITY{name:'cooking blue fish'}) - [:Relationship{name:'category'}]->(n) return n.name as name union all match (:ENTITY{name:'cooking blue fish'}) - [:Relationship{name:'supplies'}]->(m) return m.name as name"}, {"query": "Can you name a ice race, please?", "cypher": "match (:ENTITY{name:' ice hockey game'}) <- [:Relationship{name:' event type'}]- (p) return p.name"}, {"query": "Can you tell me the geographical location of the Soviet Martyrs' Mausoleum?", "cypher": "match (:ENTITY{name:'Soviet Union Martyrs' Monument'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'Geographical location'}]->(q) return distinct q.name"}, {"query": "Do you know the types of relationships that are involved in the three levels of the middle school in Ji County?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Kongji County Three Secondary School'}) UNWIND relationships(path) AS rel return rel.name limit 5"}, {"query": "Who are the directors and writers of the film in the city and outside?", "cypher": "Match (:ENTITY{name:'Relationship{name:'director'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'screenwriter'}) ->(m) return m.name as name"}, {"query": "Which ships belong to the South China Sea Fleet?", "cypher": "match (:ENTITY{name:'South Sea Fleet'}) <- [:Relationship{name:'Affiliated Fleet'}]- (m) return m.name"}, {"query": "What is the name of a company that makes high-tech websites?", "cypher": "match (:ENTITY{name:'high technology'}) <- [:Relationship{name:'enterprise'}]- (p) return p.name"}, {"query": "Do you know how many actors' names are there? Can you name 11?", "cypher": "match (:ENTITY{name:' actor'}) <- [:Relationship{name:' profession'}]- (p) return p.name limit 11"}, {"query": "Check the calendar to see what day December 19, 1999 was on Sunday.", "cypher": "match ((q:ENTITY{name:'19 December 1999'}) - [:Relationship{name:'week'}]-> (p) return p.name"}, {"query": "The film is 97 minutes long and was produced in which country?", "cypher": "match (:ENTITY{name:'97 minutes'}) <- [:Relationship{name:'long film'}]-(x),(x) - [:Relationship{name:'production area'}]->(m) return distinct m.name limit 5"}, {"query": "Born in July 1987, in addition to his main work Father, he recommended his work to me.", "cypher": "match (:ENTITY{name:'July 1987'}) <- [:Relationship{name:'date of birth'}]-(p),(p) - [:Relationship{name:'main work'}]->(n) where n.name <> 'father' return distinct n.name limit 3"}, {"query": "What do you think of the soul that burns?", "cypher": "match (:ENTITY{name:'soul burn'}) --(m) with m order by m.name return m.name"}, {"query": "Please tell me which works are by the same author as the Fourth and Fourth Quotations, and what labels are on each of them? Please list them in order of number of labels.", "cypher": "match (n:ENTITY{name:'r'}) - [:Relationship{name:'author'}]->(:ENTITY) <- [:Relationship{name:'author'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect ((r.name) ORDER BY c"}, {"query": "I wonder what plants are distributed in Taiwan and the middle provinces of China?", "cypher": "match (:ENTITY{name:' Taiwan and China's middle provinces'}) <- [:Relationship{name:' distribution area'}]- (h) return h.name"}, {"query": "How long is the barrel length of the 1880 mm rear-wheel drive 210 mm cannon in my army?", "cypher": "match ((m:ENTITY{name:'1880 style 210mm rear-mounted steel cannon'}) - [:Relationship{name:'chief'}]-> (x) return x.name"}, {"query": "Can you tell me about this film from the time of the slaughter?", "cypher": "match (:ENTITY{name:' breeding era'}) --(x) return distinct x.name limit 3"}, {"query": "What chemical is EINECS number 204-438-5?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What is the first dish in the world? What are the main ingredients?", "cypher": "match (:ENTITY{name:'Thanks for the link}) - [:Describe{name:'Thanks for the link'}]->(n) return n.name as name union all match (:ENTITY{name:'Thanks for the link'}) - [:Relationship{name:'Thanks for the link'}->(m) return m.name as name"}, {"query": "Please list 5 names of the relationships involved in the Zhejiang Family Center in the 3rd floor.", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Zhejiang Family Center'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Which schools and what type of school is the Changdong College of the North China University of Technology?", "cypher": "match (n:ENTITY{name:'Northeast China University of Technology's Changdong College'}) - [:Relationship{name:'school type'}]->(:ENTITY) <- [:Relationship{name:'school type'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Can you help me find the three civil servants and her place of birth?", "cypher": "match (:ENTITY{name:'public servant'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'place of birth'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "I'm going to be a writer for the Shanghai University Press.", "cypher": "match (:ENTITY{name:'100 Lee-san'}) --(h) with h order by h.name where h.name <> 'Shanghai University Press' return h.name"}, {"query": "Can you get me two pork loin dishes with any ingredients?", "cypher": "match (:ENTITY{name:' pig's waist'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' auxiliary'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "What are the public universities in Hubei?", "cypher": "match (:ENTITY{name:'China Hubei'}) <- [:Relationship{name:'the region'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='public university' return distinct m.name"}, {"query": "I want to know the personal details of the four-tier relationship of the industry figure Gurrunur Charbi Khan.", "cypher": "match (n:ENTITY{name:'Gurinur Charqan Khan'}) - [*1..4]->(x) where x.name<>'industry person' return distinct x.name"}, {"query": "I need to know 5 things about Bosnian and Herzegovinian footballer Vasil Velibor in the 4th level relationship?", "cypher": "match (n:ENTITY{name:'Vasilic Velibor'}) - [*1..4]->(x) where x.name<>'Vasilic Velibor, Bosnian and Montenegro footballer\u3002' return distinct x.name limit 5"}, {"query": "What are the five words that describe the emotional development and development of young children aged 0-3?", "cypher": "match (:ENTITY{name:'0-3 years of age emotional development and development'}) --(q) with q order by q.name return q.name limit 5"}, {"query": "I wonder what the legal name of the company that Liu Gongluong owns is?", "cypher": "match (:ENTITY{name:'spoonful'}) <- [:Relationship{name:'spoonful'}]- (x) return x.name"}, {"query": "I would like to know the five profiles of Rayssac Yohan, who weighs 125 kg.", "cypher": "match (n:ENTITY{name:'Rayssac Yohan'}) - [*]->(x) where x.name <>'125 kg' return distinct x.name limit 5"}, {"query": "What are the disadvantages of crystal glasses?", "cypher": "match (:ENTITY{name:' crystal lens'}) - [:Relationship{name:' shortcomings'}]-> (m) return distinct m.name"}, {"query": "Can you tell me about the five types of relationships in the three layers that Cheneyel is involved in?", "cypher": "The following is a list of the most commonly used links in the search results for the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms \"Relationship\" and \"Relationship\" in the search terms\" and \"Relationship\" in the search terms \"Relationship\" and \"Relations\" in the search terms\" are the search terms \"Relations\" and \"Relations\" are\" are\""}, {"query": "Check out the other 6 posts on this person in the 2nd tier.", "cypher": "match (:ENTITY{name:'Zhou Dao Zhong'}) -[:Relationship*1..2]-(p) where p.name <> 'person' return p.name limit 6"}, {"query": "You must know Aaron Clappham as a footballer and other than football, please tell me 2 things.", "cypher": "match (n:ENTITY{name:'Aaron Clapham'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'footballer' and h.name <> 'football' return distinct h.name limit 2"}, {"query": "I want a detailed description of the relationship between the 36-meter-high water tower of the Hebei People's Press and the two levels of the water tower.", "cypher": "match (n:ENTITY{name:' waterfall thirty-six'}) - [:Relationship*1..2]->(x) where x.name <> 'Hebei People's Press' return distinct x.name"}, {"query": "Can you help me with the 029 single apartment website?", "cypher": "match (:ENTITY{name:'029 single-family apartment'}) --(x) with x order by x.name where x.name <> 'website' return x.name"}, {"query": "I'm not a Chinese person, but I'm not a Chinese person.", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(x) - [:Relationship{name:'profession'}]->(m) return m.name order by m.name limit 5"}, {"query": "Who and what are the labels of each of them? Please show them in order of number of labels.", "cypher": "The following is a list of the most commonly used tags for the game of poker:"}, {"query": "The Japanese are known for their Japanese-Japanese language, but they are also known for their Japanese-Japanese language.", "cypher": "match (:ENTITY{name:'Japan Kyoto'}) <- [:Relationship{name:'\u7c4d\u8d2f'}]-(m),(m) - [:Relationship{name:'sounding'}]->(h) where h.name <> '\u5cf6\u672c\u9808\u7f8e' return distinct h.name limit 10"}, {"query": "Please help me find the publication cycle of the Xi'an Evening News.", "cypher": "match (:ENTITY{name:'Shian Evening'}) - [:Relationship{name:'publication cycle'}]-> (m) return distinct m.name"}, {"query": "Do you know the Chinese names of the five night umbrellas?", "cypher": "match (:ENTITY{name:'\u541b\u4e0d\u77e5\u591c\u96e8'}) - [:Relationship{name:'Chinese name'}]-> (q) with q order by q.name return distinct q.name limit 5"}, {"query": "Do you know what the theme of the 2011 Happy Girls' Concert in Beijing is?", "cypher": "The title of the game is \"Relationship\" (Relationship) (X) return x.name"}, {"query": "Can you tell me what kind of music is available in the country?", "cypher": "Match (:ENTITY{name:'sweet'}) <- [:Relationship{name:'singer'}]- (h) return h.name"}, {"query": "What is the shortest path of relationship between the asphyxiant and the inactivating agents in the 2 layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' asphyxiant'}) - [:Relationship*..2]-(b:ENTITY{name:' dysfunctional'})) return count ((p)"}, {"query": "Where is the main distribution of perovskites and in which areas are they used more?", "cypher": "match (:ENTITY{name:'peridot'}) - [:Relationship{name:'distribution'}]->(n) return n.name as name union all match (:ENTITY{name:'peridot'}) - [:Relationship{name:'applicable'}]->(m) return m.name as name"}, {"query": "Do you know the 10 most representative works of this famous word writer?", "cypher": "match (:ENTITY{name:' famous word writer'}) <- [:Relationship{name:' profession'}]-(h) - [:Relationship{name:' representing work'}]->(n) return n.name order by n.name limit 10"}, {"query": "Do you know anything about the location of the 139 Inn?", "cypher": "match (:ENTITY{name:'139 reception'}) --(h) with h order by h.name where h.name <> 'location' return h.name"}, {"query": "The two-tiered relationship of Li Shuping's Chinese Space Law Yearbook shows a personal overview.", "cypher": "match (n:ENTITY{name:'China space law yearbook'}) - [:Relationship*1..2]->(x) where x.name<>'Lee Sushpin' return distinct x.name"}, {"query": "The trouble with saying that 5 rivers islands is the information within the 4 layers of this person's relationship?", "cypher": "match (n:ENTITY{name:'Kiwa Island will be'}) - [*1..4]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "3D Power Company, their company slogan, you know?", "cypher": "match (:ENTITY{name:'3D Dynamics'}) <- [:Relationship{name:'company name'}]- ((x),(x) - [:Relationship{name:'company slogan'}]->(q) return distinct q.name"}, {"query": "Ask the following 122-page book of knowledge of humanities and social sciences for vocational school students: Music appreciation in the context of two-tier relationships?", "cypher": "match (n:ENTITY{name:'student of vocational school humanities and social sciences textbook: music evaluation'}) - [:Relationship*1..2]->(x) where x.name<>'122 pages' return distinct x.name"}, {"query": "I wonder who else is the main actor besides Ma Yun-Long and Chang Wei?", "cypher": "match (n:ENTITY{name:'True is Taste'}) - [:Relationship{name:'Star'}]->(h) with h order by h.name where h.name <> 'Ma Yunlong' and h.name <> 'Chan\u4f1f' return h.name limit 3"}, {"query": "Is there anyone named Murad?", "cypher": "match (n:ENTITY{name:'Mudolph'}) where n is not null return 1"}, {"query": "What are the main achievements of people born in Jiangsu Province?", "cypher": "match (:ENTITY{name:' Jiangsu Province'}) <- [:Relationship{name:' place of birth'}]- ((q),(q) - [:Relationship{name:' major achievements'}]->(x) return distinct x.name limit 3"}, {"query": "What is the symbol for magnetic field strength? What is the unit?", "cypher": "match (:ENTITY{name:'magnetic field strength'}) - [:Relationship{name:'symbol'}]->(n) return n.name as name union all match (:ENTITY{name:'magnetic field strength'}) - [:Relationship{name unit:''}]->(m) return m.name as name"}, {"query": "Tell us about the book you know about, the 06J106 umbrella and the umbrella in the basement?", "cypher": "match (:ENTITY{name:'06J106 umbrella and umbrella for the canopy'}) --(h) with h order by h.name where h.name <> 'books' return h.name"}, {"query": "What are the health risks of long-term inhalation of industrial dust?", "cypher": "match (:ENTITY{name:'long-term inhalation of productive dust'}) <- [:Relationship{name:'common cause'}]- ((m), (m) - [:Relationship{name:'common site'}]->(n) where n.name='lung' return distinct m.name"}, {"query": "Do you know which exhibitions are held at Shenyang International Expo Center? Can you list 7?", "cypher": "match (:ENTITY{name:'Shenyang International Exhibition Centre'}) <- [:Relationship{name:'Car show venue'}]- (x) return x.name limit 7"}, {"query": "Do you know what the report's criteria for the production of grain, GDP per capita, are?", "cypher": "match (:ENTITY{name:'Cereal production, GDP per capita'}) <- [:Relationship{name:'scoring criteria'}]- (x) return x.name"}, {"query": "I'm not sure what kind of accident was caused by the burning of garbage.", "cypher": "match (:ENTITY{name:' caused by burning of garbage'}) <- [:Relationship{name:' cause of accident'}]- (h) return h.name"}, {"query": "Please tell me which commemorative coins are issued by the six countries in Africa?", "cypher": "match (:ENTITY{name:'6 national legal flags'}) <- [:Relationship{name:'Africa'}]- (q) return q.name"}, {"query": "Can you help me to find out about the Shanghai Yichang Pension?", "cypher": "match (:ENTITY{name:' Shanghai Yichang Sanatorium'}) - [*1..3]-(p) return p.name limit 10 The name of the game is the same as the name of the game."}, {"query": "What is the key attribute of the entire curriculum for the education and development of children aged 0-6?", "cypher": "match (:ENTITY{name:'0-6 years old full curriculum'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 1"}, {"query": "Can you please tell me which chemical has the EINECS registration number 000-000-0?", "cypher": "The following is a list of all the different ways The EINECS is credited in the database:"}, {"query": "I'm going to list five talk shows, where are they all?", "cypher": "match (:ENTITY{name:'talk show'}) <--(m), (m) - [:Relationship{name:'show venue'}]->(n) return m.name,n.name limit 5"}, {"query": "How to pick two school profiles in the 9th and 3rd level of Zizhar?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Zhihar City 9th Secondary School'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "The game size and the size of the knight's castle are all dice, each with a dice tag. Find out how many of these games are in order of number of tags.", "cypher": "match (n:ENTITY{name:'Cavalry Castle'}) - [:Relationship{name:'game size'}]->(:ENTITY) <-[:Relationship{name:'game size'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC "}, {"query": "The word in English is called hu\u00ec, and the pencil on the outside is at least?", "cypher": "match (:ENTITY{name:'hu\u00ec'}) <- [:Relationship{name:'foreign language name'}]- ((h) - [:Relationship{name:'foreign language name'}]->(m) return min(m.name)"}, {"query": "Can you tell me about all the relationship types that are in the six layers of the Flying Dragon?", "cypher": "The following pages link to The Unknown:"}, {"query": "Can you help me to find out about the two famous white cloud caves in the mountains of Oahu?", "cypher": "match ((:ENTITY{name:'Crowd of the White Clouds'}) - [:Relationship{name:'Famous attractions'}]-> (n) return n.name limit 2"}, {"query": "I need to know 5 things about Seong-jo Jeong.", "cypher": "match (:ENTITY{name:'Seong-jo Jeong'}) --(m) return distinct m.name limit 5 The name of the match is"}, {"query": "Can you introduce me to two comedy films?", "cypher": "match (:ENTITY{name:'comedy'}) <- [:Relationship{name:'type'}]-(p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 2"}, {"query": "Do you know which zoos were built in 1959? Can you find five for me?", "cypher": "match (:ENTITY{name:'1959'}) <- [:Relationship{name:'Relationship time'}]- ((p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "Please tell me what the label is for 2-methyl-5-hydroxyethylene.", "cypher": "match (:ENTITY{name:'2-methyl-5-methacrylate'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you tell me about a career in Guggenheim?", "cypher": "match (:ENTITY{name:'spoon'}) <--(m) - [:Relationship{name:'profession'}]->(q) return q.name order by q.name limit 1"}, {"query": "What does it mean in Japanese?", "cypher": "match (:ENTITY{name:'\u3044\u3056\u304b\u3084'}) <- [:Relationship{name:' Japanese name'}]- ((m) return m.name"}, {"query": "What are the famous attractions of the rose garden? How much does the ticket cost?", "cypher": "match (:ENTITY{name:'Park'}) - [:Relationship{name:'Famous attractions'}]->(n) return n.name as name union all match (:ENTITY{name:'Park'}) - [:Relationship{name:'Tickets price definition'}]->(m) return m.name as name"}, {"query": "The Chitrara River is about 280 km long and is connected to the Chitrara River by a two-tiered relationship.", "cypher": "match (n:ENTITY{name:'Chittarlal River'}) - [:Relationship*1..2]->(x) where x.name<>'about 280 km' return distinct x.name"}, {"query": "Find out what chemical has CAS number 147702-16-7?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "I have a lot of pieces priced the same as my architectural tour, and they have different brick labels.", "cypher": "match (n:ENTITY{name:'My and my mom's architectural journey'}) - [:Relationship{name:'Pricing'}]->(:ENTITY) <- [:Relationship{name:'Pricing'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY cC DES "}, {"query": "What is the same as the eleven nine-year-old works of the Moon Ballad, and what are their labels? List them in order of number of labels for me.", "cypher": "The following is a list of the most commonly used and used commands in the game."}, {"query": "The book is a work of Orthodox history, how many words are there in it?", "cypher": "match ((:ENTITY{name:'Orthodox Church'}) - [:Relationship{name:'word count'}]-> (m) return m.name"}, {"query": "Can you tell me which of the artworks is representative of what brand?", "cypher": "match (:ENTITY{name:'What is the symbol?'}) <- [:Relationship{name:'represents the work'}]- (x) return x.name order by x.name limit 10"}, {"query": "Born in May 1946, what other profession can you have besides being the director of the Ethics Laboratory at the Wuhan Institute of Education and Science?", "cypher": "match (:ENTITY{name:'May 1946'}) <- [:Relationship{name:'date of birth'}]-(q),(q) - [:Relationship{name:'profession'}]->(m) where m.name <> 'Director of the Deer Laboratory of the Wuhan City Institute of Education and Science' return distinct m.name limit 1"}, {"query": "What kind of event do you like to watch the 1987 NBA All-Star Game?", "cypher": "Match (s) (n) return (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n) (n)"}, {"query": "Do you know which chemicals have CAS number 62669-60-7?", "cypher": "match (x:ENTITY{name:'62669-60-7'}) <- [:Relationship{name:'CAS login number'}]- (m) return distinct m.name"}, {"query": "How much do you know about the 11.01 Chiang Mai Highway accident?", "cypher": "match (:ENTITY{name:'11.01 Huang Kun Highway in Qingdao'}) --(h) with h order by h.name return h.name"}, {"query": "Help me find five species of plants.", "cypher": "match (:ENTITY{name:'family of Sterculiaceae) }) <-[:Relationship{name:'family'}]-(m) return distinct m.name limit 5"}, {"query": "Which exhibitions are held in the National Agricultural Exhibition Hall? Can you name eight?", "cypher": "match (:ENTITY{name:'National Agricultural Exhibition Hall'}) <- [:Relationship{name:'Exhibition Hall'}]- (q) return q.name limit 8 The name of the exhibition hall is not known."}, {"query": "What is the shortest distance between the South China Vocational College and the Hunan Transportation Vocational Technical College on the second floor?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'South China Vocational College'}) - [:Relationship*..2]-(b:ENTITY{name:'Hunan Transportation Vocational Technical College'})) return count ((p)"}, {"query": "The other seven items in the second layer of the SAF assault rifle are:", "cypher": "match (:ENTITY{name:'SAF assault rifle'}) - [:Relationship*1..2]-(p) where p.name <> 'weapon equipment' return p.name limit 7"}, {"query": "What is the shortest path between the two layers of the North Pole and the East Pole?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Shanhai\u00b7Overseas North'}) - [*..2]-(b:ENTITY{name:'Shanhai\u00b7Overseas East'})) return count ((p)"}, {"query": "How do you understand 1st of December?", "cypher": "match (:ENTITY{name:'13th of December'}) --(n) with n order by n.name return n.name"}, {"query": "What does the concept of absolute space mean? What is the center of this concept?", "cypher": "match (:ENTITY{name:'Absolute space cosmology'}) - [:Describe{name:'tag'}]->(n) return n.name as name union all match (:ENTITY{name:'Absolute space cosmology'}) - [:Relationship{name:'Center of the universe'}]->(m) return m.name as name"}, {"query": "What are the famous sights in Hanyang District? Where are they located?", "cypher": "The name of the game is a combination of the name of the game itself and the name of the game itself."}, {"query": "Can you tell me what kind of relationship is covered in the middle of the 5 layers of melon?", "cypher": "The following is a list of all the different ways Match path=(n) <- [:Relationship*5]-(p:ENTITY{name:'Cinnamon'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "Give me three antibiotics and describe them.", "cypher": "The name of the drug is a combination of the words \"antibiotic\" and \"antibiotic\"."}, {"query": "I want to download the relationship profile of Jusufi Plumb, a Croatian, in the 2nd tier?", "cypher": "match (n:ENTITY{name:'Jusufi Plumb'}) - [:Relationship*1..2]->(x) where x.name<>'Croatia' return distinct x.name"}, {"query": "The first is the profile of Kabarkapa Boban in the Republic of Montenegro.", "cypher": "match (n:ENTITY{name:'Cabarkapa Boban'}) - [:Relationship*1..2]->(x) where x.name <> 'Republic of Montenegro' return distinct x.name"}, {"query": "What planet is the orbit of a celestial body that is eccentrically circular?", "cypher": "match (:ENTITY{name:' is centrifugal'}) <- [:Relationship{name:' orbital'}]- (x) return x.name"}, {"query": "The exhibition is a great opportunity to learn about the benefits of outdoor products, outdoor equipment, outdoor industry and more.", "cypher": "match (:ENTITY{name:'outdoor supplies, outdoor equipment, outdoor industry, etc'}) <- [:Relationship{name:'main business'}]- ((x) - [:Relationship{name:'exhibition features'}]->(h) return distinct h.name"}, {"query": "The author of the book, who is also a member of the CCP, has published 10 other works.", "cypher": "match (:ENTITY{name:'cultural figure'}) <- [:Tag{name:'tag'}]-(x) - [:Relationship{name:'representative work'}]->(h) where h.name <> 'reported under the banner of the CCP' return distinct h.name limit 10"}, {"query": "I need a five-tiered, no less than two-tiered relationship character?", "cypher": "The following is a list of all the different ways Unwind is credited in the database:"}, {"query": "Who is it that brings death, and you cannot repay it?", "cypher": "match (:ENTITY{name:'laughing your ass off'}) <- [:Relationship{name:'book name'}]- ((x),(x) - [:Relationship{name:'author'}]->(q) return distinct q.name"}, {"query": "Where did X You come from and who wrote it?", "cypher": "match (:ENTITY{name:'X You'}) --(p) return distinct p.name"}, {"query": "I would like to know the 5 main achievements of the star of LUA Entertainment, the brokerage company.", "cypher": "match (:ENTITY{name:'LUA Entertainment'}) <- [:Relationship{name:'brokerage company'}]-(m),(m) - [:Relationship{name:'main achievement'}]->(h) return h.name order by h.name limit 5"}, {"query": "Can you give me an example of a 100 point elite label that is not social?", "cypher": "match (:ENTITY{name:'100 points elite'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'social activity' return p.name limit 1"}, {"query": "What are the three main awards received by the Anhui Province Teaching Center in addition to the National Priority Secondary Vocational School and the Anhui Province Model School for the Educational and Moral Education of Minors?", "cypher": "match (n:ENTITY{name:'Relationship{name:'main award'}]->(h) where h.name <> 'National level priority secondary vocational school' and h.name <> 'Anhui Province Minority Thought Moral Education Model School' return distinct h.name limit 3"}, {"query": "Help me find one evergreen tree that is native to Yunnan.", "cypher": "match (:ENTITY{name:'\u4e91\u5357'}) <- [:Relationship{name:' distribution'}]-(m), (m) - [:Relationship{name:' belongs to'}]->(n) where n.name='evergreen junsu' return distinct m.name limit 1"}, {"query": "Help me find 10 college teachers.", "cypher": "match (:ENTITY{name:' college teacher'}) <- [:Relationship{name:' profession'}]- (n) return n.name limit 10"}, {"query": "I would like to know what works are written in the same language as the teacher and the stray cat? What are the labels for each of these works? Please list them in order of number of labels for each work.", "cypher": "match (n:ENTITY{name:'teacher and stray cat'}) - [:Relationship{name:'for white language'}]->(:ENTITY) <-[:Relationship{name:'for white language'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "What games have the same game screen as the daily supermarket? What are the names of the individual labels? Can each game be sorted by the number of labels from small to large?", "cypher": "match (n:ENTITY{name:'day by day supermarket'}) - [:Relationship{name:'game picture'}]->(:ENTITY) <- [:Relationship{name:'game picture'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Do you know what tea is made with this process?", "cypher": "match (:ENTITY{name:' half-square'}) <- [:Relationship{name:' process'}]- ((n) - [:Relationship{name:' Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "The following is a list of the topics covered in the book:", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'North Korea' return distinct x.name"}, {"query": "What are the labels for the shooting in central Mexico on October 28?", "cypher": "match (:ENTITY{name:'10\u00b728 Central Mexico shooting'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'modern history' return x.name"}, {"query": "Can you list the 10 main achievements of Franciscus Vieta?", "cypher": "match (:ENTITY{name:'Franciscus Vieta'}) <- [:Relationship{name:' foreign language name'}]- ((m) - [:Relationship{name:' major achievement'}]->(x) return distinct x.name limit 10"}, {"query": "Did you know that Pamplona (Spain) usually plays with his left or right foot?", "cypher": "match (:ENTITY{name:'Pamplona (Spain) '}) <- [:Relationship{name:'Born'}]- ((p) - [:Relationship{name:'Usually used feet'}]->(x) return distinct p.name"}, {"query": "What are the representative works of Chen Berda?", "cypher": "match (:ENTITY{name:'Chen Berda'}) - [:Relationship{name:'representing work'}]->(m) return distinct m.name"}, {"query": "Can you tell me what the ghost of a pig is?", "cypher": "match (:ENTITY{name:'piggy'}) --(q) return q.name skip 1 The name of the game is the same as the name of the game"}, {"query": "What is the name of the long novel written by Zhukov?", "cypher": "match (:ENTITY{name:'Zhukov'}) <- [:Relationship{name:'author'}]-(m), (m) - [:Relationship{name:'literary genre'}]->(n) where n.name='long novel' return distinct m.name"}, {"query": "I'm a big fan of the idea of having a four-tier relationship with my five sisters.", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:'sister is way too headstrong'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "I want information on the three-layer relationship of the five-letter word \"pepper\" in the alphabet?", "cypher": "match (n:ENTITY{name:'fuck'}) - [:Relationship*1..3]->(x) where x.name <>'five-line' return distinct x.name"}, {"query": "Can you tell me about the three professions of this politician?", "cypher": "The following is a list of the most commonly used tags in the world:"}, {"query": "I wonder what year is the year of the Doge of Han and the year of the second year of the calendar?", "cypher": "match (:ENTITY{name:'Dong Han Jian and the second year\u3002'}) <- [:Relationship{name:'Year Number'}]- (h) return distinct h.name"}, {"query": "Please tell me about the types of relationships that are involved in the three levels of Hubei Daji Senior Secondary School.", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Hope Taiji Senior Secondary School'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "Can you tell me when the book will be published?", "cypher": "match ((:ENTITY{name:'Relationship{name:' time of publication'}]-> (p) return p.name)"}, {"query": "Can you list 8 things that are related to Tier 4 labeling of tech products?", "cypher": "match (n) - [:Tag*4{name:'tag'}]->(p:ENTITY{name:'technology product'}) RETURN distinct n.name limit 8"}, {"query": "Please help me find out the name of the company with business registration number 441900000793609", "cypher": "match (:ENTITY{name:'441900000793609'}) <- [:Relationship{name:'Relationship'}]- (x) return distinct x.name"}, {"query": "Can you say the first three Chinese names of the Sun God?", "cypher": "match (:ENTITY{name:'Tang Tao Basmin'}) - [:Relationship{name:'Chinese name'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "Can you recommend a place that is open from 09:00-19:00?", "cypher": "match (:ENTITY{name:'09:00-19:00'}) <- [:Relationship{name:'open time'}]- (h) return distinct h.name"}, {"query": "What are the representative works of the company Dragon Union Investment Limited? Can you name 10?", "cypher": "match (:ENTITY{name:'Kos Dragon Union Investment Shares Limited'}) <- [:Relationship{name:' brokerage company'}]-(n) - [:Relationship{name:' representing work'}]->(p) return distinct p.name limit 10"}, {"query": "Can you list the names of the 10 relationships in the 2 layers that are not the same?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Unlike'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 10"}, {"query": "You know the name is Ning Kongwang, and there are 7 messages in the 3rd layer of Zhuang .", "cypher": "match (:ENTITY{name:'Jin'}) - [*1..3]-(p) where p.name <> 'Ning Kongwang' return p.name limit 7"}, {"query": "Do you know where the restaurant 1F has a desire kitchen coming?", "cypher": "Match (:ENTITY{name:' Desire Kitchen'}) <- [:Relationship{name:'1F'}]- (p) return p.name The name of the match is a combination of the following:"}, {"query": "Name the main award received by a school in the East District of the city of Yerevan.", "cypher": "match (:ENTITY{name:'Relationship{name:'main award'}}-> (q) return distinct q.name limit 1"}, {"query": "What is the profession of a person born on December 26, 1992?", "cypher": "match (q:ENTITY{name:'December 26, 1992'}) <- [:Relationship{name:' date of birth'}]-(x),(x) - [:Relationship{name:' occupation'}]->(n) return distinct n.name limit 1"}, {"query": "What is the price of books by Thich Nhat Hanh?", "cypher": "match (:ENTITY{name:'\u5146\u610f'}) <- [:Relationship{name:'author'}]- ((n) - [:Relationship{name:'pricing'}]->(q) return distinct q.name"}, {"query": "What are the most representative works of this Chinese artist? Please list 10 of them.", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(m) - [:Relationship{name:'representative work'}]->(h) return h.name order by h.name limit 10"}, {"query": "Which industries have won the National Award for Technological Invention 1 and the National Award for Scientific and Technological Progress 2?", "cypher": "match (:ENTITY{name:'National Prize of Technology 1 Secondary Prize of Science and Technology 2 Secondary Prize of Progress'}) <- [:Relationship{name:'main achievement'}]- ((n) - [:Relationship{name:'profession'}]->(x) return distinct x.name"}, {"query": "Did you know that the publication, The Encyclopedia of Parenting for 6 Year Olds, has some great news?", "cypher": "match (:ENTITY{name:'0 6 years old parenting encyclopedia'}) --(x) with x order by x.name where x.name <> ' publications' return x.name"}, {"query": "Where is the scope of application of round angle feed?", "cypher": "match (:ENTITY{name:'rounded feed'}) <- [:Relationship{name:'Chinese name'}]- ((m),(m) - [:Relationship{name:'scale of application'}]->(h) return distinct h.name limit 1"}, {"query": "What is the meaning of the Pearl of Great Price?", "cypher": "Match (:ENTITY{name:'Tang-hai Jewel'}) - [:Tag{name:'tag'}]->(n) return n.name The name of the game is the same as the name of the game itself."}, {"query": "What is the shortest path between the 2nd floor of the building of Baolide Steel Pipe Co., Ltd. in Zhejiang and the 2nd floor of the building of the building of Ningbo Zhijin Machinery Co., Ltd.?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Bolide Steel Pipe Co., Ltd. of Zhejiang City'}) - [*..2]-(b:ENTITY{name:'Ningbo City Chijin Machinery Co., Ltd. of Ningbo City'})) return count ((p)"}, {"query": "What is the name of a tropical storm with maximum winds of 18 meters per second?", "cypher": "match (:ENTITY{name:'18 meters per second'}) <- [:Relationship{name:'maximum wind speed'}]- (h) return h.name"}, {"query": "What is the report of the Chinese Entrepreneur Survey System?", "cypher": "match (:ENTITY{name:'China Entrepreneur Survey System'}) <- [:Relationship{name:' publisher'}]- (n) return distinct n.name"}, {"query": "Do you know what Wang Friendship does for a living?", "cypher": "match (:ENTITY{name:'Wang Friendship'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'profession'}]->(h) return distinct h.name limit 1"}, {"query": "Can you tell me about the three main departments that are engineering schools?", "cypher": "match (:ENTITY{name:' engineering'}) <- [:Relationship{name:' major faculty'}]- (m) return distinct m.name limit 3"}, {"query": "What is called the mud treasure?", "cypher": "match (:ENTITY{name:'Mudba Khambha'}) <- [:Relationship{name:'also known as '}]-(m) return distinct m.name"}, {"query": "The site is located 5.5 km northwest of the village of Guole, in the village of Shagong.", "cypher": "match (:ENTITY{name:'Guole village 5.5 km northwest of the village of Sand Creek'}) <- [:Relationship{name:'geographical location'}]-(h),(h) - [:Relationship{name:'alias'}]->(q) return distinct h.name"}, {"query": "What books and what labels are there for each book? List them from most to least according to the number of labels for each book.", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "The book is a collection of poems written by the poet and poetess, who is also a writer.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name<>'canal language' return distinct x.name"}, {"query": "The film's introduction mentions which people are starring in The Wonderful Night of the Museum 3?", "cypher": "match ((:ENTITY{name:'Fantastic Night at the Museum 3'}) - [:Relationship{name:'star'}]-> (q) return q.name"}, {"query": "Can you name five of the main achievements of this man?", "cypher": "match (:ENTITY{name:'1960'}) <- [:Relationship{name:'date of birth'}]- ((m) - [:Relationship{name:'main achievements'}]->(n) return n.name order by n.name limit 5"}, {"query": "Please help me find out the price and opening hours of the 798 Art District.", "cypher": "match (:ENTITY{name:'798 art area'}) - [:Relationship{name:'ticket price'}]->(n) return n.name as name union all match (:ENTITY{name:'798 art area'}) - [:Relationship{name:'open hours'}]->(m) return m.name as name"}, {"query": "Which company is 507 Jinhua Building, 109 Guangzhou Shenzhen Baoding District, Foshan Street, Shenzhen, New York", "cypher": "match (:ENTITY{name:' Shenzhen city Bao'an area Foshong Street Newda neighborhood Guang Foshong Yong Junction 109 Jinhua Building 507'}) <- [:Relationship{name:'registered address'}]- (m) return distinct m.name"}, {"query": "Do you know about the Battle of Ming Dynasty? What other information besides what happened in Shanxi Dynasty, please find the other 7 information in layer 2", "cypher": "match (:ENTITY{name:'Relationship*1..2]->(p) where p.name <> 'Sansi Daeng' return p.name limit 7"}, {"query": "And tell me about a series of works called A Changing Dragon in the Sky and Sky.", "cypher": "match (:ENTITY{name:'the change in the sky and sky'}) --(n) return distinct n.name limit 1"}, {"query": "Can you tell me what the relationship is between the two layers of productive consumption demand?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'productive consumption needs'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "The .NET model has a bunch of tags, tell me no more than 5?", "cypher": "match (:ENTITY{name: .NET mode'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "I'm not sure which weapon has a 56 kW output.", "cypher": "match (:ENTITY{name:'56 kW'}) <- [:Relationship{name:'output power'}]- (m) return m.name"}, {"query": "What is the English name of the Great Basin National Park?", "cypher": "match (:ENTITY{name:'Great Basin National Park'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'foreign name'}]->(n) return distinct n.name"}, {"query": "The following is a list of the top 10 best sword fighting games in the world.", "cypher": "match (:ENTITY{name:'extremely endless sword'}) --(q) with q order by q.name return q.name limit 3"}, {"query": "Can you find information on the 5 levels of relationships related to the Fog Lock Longshan Temple in Wu Hongqing?", "cypher": "match (n:ENTITY{name:'\u96fe\u9501\u9f99\u5c71\u5bfa'}) - [*1..5]->(x) where x.name <>'\u5b8f\u5e86' return distinct x.name"}, {"query": "I asked her what school she was head of.", "cypher": "match (:ENTITY{name:'was to you'}) <- [:Relationship{name:'current principal'}]- ((n)? return n.name"}, {"query": "Can you please tell me that the three main departments are continuing education colleges?", "cypher": "match (:ENTITY{name:' continuing education college'}) <- [:Relationship{name:' major faculty'}]- (x) return distinct x.name limit 3"}, {"query": "I asked if you had any personal information about Tadjer Mike from France in relation to the two levels of relationships?", "cypher": "match (n:ENTITY{name:'Tadjer Mike'}) - [*1..2]->(x) where x.name <>'France' return distinct x.name"}, {"query": "The following is a selection of the Chinese medical classics by Zhang Yuxiang: Information on the two-tier relationship between theories of typhoid fever.", "cypher": "match (n:ENTITY{name:'Chinese medicine classic name selection: cold-pressure theory'}) - [:Relationship*1..2]->(x) where x.name <> '\u5f20\u7389' return distinct x.name"}, {"query": "Can you tell me about the types of relationships within the three layers involved in the Chinese Emperor?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' Chinese Emperor'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you recommend me 5 life-friendly apps?", "cypher": "match (:ENTITY{name:' life utility type software'}) <- [:Relationship{name:' software type'}]- (x) return x.name limit 5"}, {"query": "What is the meaning of 1+1 in no more than 5 words?", "cypher": "match (:ENTITY{name:'1+1 city'}) --(q) with q order by q.name return distinct q.name skip 1 limit 5"}, {"query": "Can you tell me about the five types of relationships in the four layers of the hierarchy?", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:' by Iiichi Nin'}) UNWIND relationships(path) AS rel RETURN rel.name limit 5"}, {"query": "What are the main achievements of the graduates of Harbin University, Harbin Teachers' University? Can you list 10?", "cypher": "match (:ENTITY{name:'1964 born in Harbin, graduated from Harbin University, Harbin Teachers' College\u3002'}) <- [:Describe{name:'description'}]-(h) - [:Relationship{name:'main achievement'}]->(n) return distinct n.name limit 10"}, {"query": "What is the content of copper (Cu) in a material like 1370 tons of alloy?", "cypher": "match ((:ENTITY{name:'1370 aluminium alloy'}) - [:Relationship{name:'copper Cu'}]-> (q) return q.name"}, {"query": "How many species of plants are protected?", "cypher": "match (:ENTITY{name:' short for 'link'}) - [:Relationship{name:' protection level'}]->(m) return distinct m.name"}, {"query": "Please help me find tickets and opening hours for the Crystal Palace.", "cypher": "match (:ENTITY{name:'Bohlstein Palace'}) - [:Relationship{name:'Ticket price'}]->(n) return n.name as name union all match (:ENTITY{name:'Bohlstein Palace'}) - [:Relationship{name:'Opening hours'}]->(m) return m.name as name"}, {"query": "What is the characteristic of thermal and power engineering? Do you know its employment direction?", "cypher": "match (:ENTITY{name:' thermal energy and power engineering'}) - [:Relationship{name:' characteristics'}]->(n) return n.name as name union all match (:ENTITY{name:' thermal energy and power engineering'}) - [:Relationship{name:' employment direction'}]->(m) return m.name as name"}, {"query": "What are the works published by Spring Wind Literature Publishing? When were they published? Do you know 5?", "cypher": "match (:ENTITY{name:'\u6625\u98ce\u6587\u5b66\u51fa\u7248\u793e'}) <- [:Relationship{name:'\u51fa\u7248\u793e'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you name any novel that has a link to the 5th level tag of the person whose phone I picked up?", "cypher": "match (n) <- [:Tag*5{name:'tag'}]- ((p:ENTITY{name:'whose cell phone did I pick up'}) RETURN distinct n.name"}, {"query": "What else do you know about liquid crystal color display? Find 5 information in 2 layers.", "cypher": "match (:ENTITY{name:'LCD colour display is easy to fix'}) - [*1..2]-(p) where p.name <> 'Jingming' return distinct p.name limit 5"}, {"query": "Can you share the top 10 hashtags for Kiss with 1 million hits?", "cypher": "match (p:ENTITY{name:'Kiss of a million times'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 10"}, {"query": "Send me the tag you wrote on the .NET Windows app development tutorial?", "cypher": "match (:ENTITY{name: .NET Windows application development tutorial'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you see all the information about the publication's two-way stretch polyethylene?", "cypher": "match (n:ENTITY{name:'bi-directional stretch polyethylene'}) - [:Relationship*]->(x) where x.name <> 'publication' return distinct x.name"}, {"query": "Please help me find the rest of the tags for 11.26 Beijing highway accident social events?", "cypher": "match (:ENTITY{name:'11.26 Beijing Taipei high-speed traffic accident'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'social event' return x.name"}, {"query": "The 228-page English exam: The King: Information within the three-tier relationship of the yearly exam + the final exam?", "cypher": "match (n:ENTITY{name:'research English realm: year-end realm + subject test'}) - [:Relationship*1..3]->(x) where x.name <>'228 pages' return distinct x.name"}, {"query": "Can you list the four categories of fish that are conical in appearance?", "cypher": "match (:ENTITY{name:'shaped eye'}) <-[:Relationship{name:'shaped eye'}]- (h) return h.name limit 4"}, {"query": "Can you recommend four urban novels for me?", "cypher": "match (:ENTITY{name:'city'}) <- [:Relationship{name:'type'}]- (n) return n.name limit 4"}, {"query": "Do you know what chemical CAS is 51102-74-0?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Can you tell me what you know about the Chinese name for embedded egg?", "cypher": "match (:ENTITY{name:'Relationship{name:' Chinese alias'}]- (h) return distinct h.name"}, {"query": "The article was written by a journalist from the University of Lagos, who is also a student of the university.", "cypher": "match (:ENTITY{name:'16866 High School Exam Newsroom'}) --(x) with x order by x.name return x.name limit 5"}, {"query": "Tell me about the 160365 flying car race?", "cypher": "match (:ENTITY{name:'160365 airplane race'}) --(n) with n order by n.name return n.name"}, {"query": "Help me find a sign with 13 words on it.", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'simple head'}]-(m), (m) - [:Relationship{name:'total pencil'}]->(n) where n.name='13' return distinct m.name limit 1"}, {"query": "What chemical is C10H10N2O2S?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "The first Chinese name for my half-hour affair?", "cypher": "match (q:ENTITY{name:'half-time affair'}) - [:Relationship{name:'Chinese name'}]-> (x) with x order by x.name return x.name limit 1"}, {"query": "What are the works of the novelist called Death God Love?", "cypher": "match (q:ENTITY{name:'Death God'}) <-[:Relationship{name:'author'}]-(n),(n) -[:Relationship{name:'Chinese name'}]->(p) return distinct p.name"}, {"query": "Help me find 10 Chinese paintings.", "cypher": "match (:ENTITY{name:'Chinese painting'}) --(x) return distinct x.name limit 10"}, {"query": "I heard that the 12/23 Kai County Water Dam accident had a big impact, do you know how many people died?", "cypher": "match ((m:ENTITY{name:'12\u00b723 Kai County Special Well Accident'}) - [:Relationship{name:'Number of deaths'}]-> (n) return n.name"}, {"query": "I'm looking for someone who can find me a Capricorn and provide me with three of their major works.", "cypher": "match (:ENTITY{name:'Big Dipper'}) <- [:Relationship{name:'Big Dipper'}]- ((h) - [:Relationship{name:'Major work'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Where did the chicken come from?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'role'}]-(n),(n) - [:Relationship{name:'from where'}]->(q) return distinct q.name"}, {"query": "In addition to Liu Keqiang and Li Jun, who are the three other famous alumni of Shandong Swan Vocational Training School?", "cypher": "match (n:ENTITY{name:'Santondo Swan Vocational Training School'}) - [:Relationship{name:'known alumnus'}]->(h) where h.name <> 'Kei-Fan' and h.name <> 'Lee Joon' return distinct h.name limit 3"}, {"query": "The chemical 3-triethylamide methylphenidate is a mystery?", "cypher": "match (:ENTITY{name:'3-tetramethylformate'}) --(x) with x order by x.name where x.name <> 'chemical' return x.name"}, {"query": "The following is a list of the three-tiered relationships between the long-suffering nightingale and the evening flowering plant.", "cypher": "match (n:ENTITY{name:'U-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shaped-shap"}, {"query": "Can you explain what the foreign name of the Zhejiang Ocean University Computer Center is?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'Foreign language name'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship:'department'}]->(m) return m.name as name"}, {"query": "I am Lin Shuo, and what is the subtitle of this book?", "cypher": "match (:ENTITY{name:'I am a bookworm'}) <- [:Relationship{name:'bookname'}]- ((x),(x) - [:Relationship{name:'subtitle'}]->(q) return distinct q.name limit 2"}, {"query": "Tell me, what are the three other characters that describe this person besides the vice-professor and the CCP member?", "cypher": "match (n:ENTITY{name:'\u519b\u8861'}) - [:Describe{name:'description'}]->(h) where h.name <> 'adjunct professor' and h.name <> 'CPC member' return distinct h.name limit 3"}, {"query": "Can you tell me about five profiles of Irish footballer Clovis Glenn with no less than four levels of relationships?", "cypher": "match (n:ENTITY{name:'Clovie Glenn'}) - [*1..4]->(x) where x.name <> 'Clovie Glenn, Irish footballer\u3002' return distinct x.name limit 5"}, {"query": "The book is a priceless book, you know?", "cypher": "match (:ENTITY{name:'Grammatics and grammar studies'}) <- [:Relationship{name:' book name'}]- ((n) - [:Relationship{name:' pricing'}]->(q) return distinct q.name"}, {"query": "Can you list 20 Chinese industry figures?", "cypher": "The following is a list of all the characters that appear in the game:"}, {"query": "The last time the billionaire president's wife finished, can you advise me?", "cypher": "match ((:ENTITY{name:'billion president little wife'}) - [:Relationship{name:'completion time'}]-> (n) return n.name"}, {"query": "How do you feel about 07318 browsing information navigation?", "cypher": "match (:ENTITY{name:'07318 browsing information navigation'}) --(x) with x order by x.name return x.name"}, {"query": "Please help me find the software version of People's News, no more than five?", "cypher": "match (:ENTITY{name:'People's News'}) - [:Relationship{name:'Software version'}]-> (p) with p order by p.name return p.name limit 5"}, {"query": "Please help me find two scenic areas at 348 meters above sea level.", "cypher": "match (:ENTITY{name:'348 m'}) <- [:Relationship{name:'altitude'}]-(m), (m) - [:Relationship{name:'type'}]->(n) where n.name='scenery area' return m.name limit 2"}, {"query": "What are the three professions that have been awarded the National Commission for Advancement of Science and Technology's second-class achievement award?", "cypher": "match (:ENTITY{name:'National Committee for Science and Technology's second-class award'}) <- [:Relationship{name:'main achievements'}]- ((q),(q) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 3"}, {"query": "Do you know what the refractory temperature of 1.2344 molds steel needs to be?", "cypher": "match ((:ENTITY{name:'1.2344 molded steel'}) - [:Relationship{name:'return fire'}]-> (p) return p.name"}, {"query": "What is the model of the bullet designed by John Browning?", "cypher": "match (:ENTITY{name:' John Browning'}) <- [:Relationship{name:' designer'}]- (n) return distinct n.name"}, {"query": "Do you have five articles on cinnamon dates?", "cypher": "match (:ENTITY{name:'tinchnut'}) --(p) return distinct p.name limit 5"}, {"query": "What chemical is BRN 3609985?", "cypher": "match (:ENTITY{name:'3609985'}) <- [:Relationship{name:'BRN number'}]- (h) return distinct h.name"}, {"query": "The most recent chapter of which novel is the 249th chapter?", "cypher": "match (:ENTITY{name:' the 249th chapter The only one'}) <- [:Relationship{name:' the latest chapter'}]- (h) return h.name"}, {"query": "What about books first published in 1935?", "cypher": "match (:ENTITY{name:'1935'}) <- [:Relationship{name:'first published at the time'}]- (q) return q.name"}, {"query": "Did you know that three schools have started vocal music programs?", "cypher": "match (:ENTITY{name:' sound system'}) --(x) return distinct x.name limit 3"}, {"query": "Can you tell me 10 things you know about the movie Raindrops 2 besides the action genre?", "cypher": "match (:ENTITY{name:'Relationship[first film in the 1997 film series]'}) - [:Relationship*1..2]->(p) where p.name <> 'action' return p.name limit 10"}, {"query": "Can you fill in the CAS number for C12-14 mediocre chain polystyrene-8?", "cypher": "match ((:ENTITY{name:'C12-14 mediated chain allyl polystyrene-8'}) - [:Relationship{name:'CAS log number'}]-> (h) return h.name"}, {"query": "I'm going to find out 10 things about Wang Xuanhua in 2 layers, graduated from National Central University, this information I know.", "cypher": "match (:ENTITY{name:' Wang Chong'on'}) - [*1..2]->(p) where p.name <> 'National Central University' return p.name limit 10"}, {"query": "What lists of reports has Fortune Chinese published?", "cypher": "match (:ENTITY{name:' wealth Chinese language'}) <- [:Relationship{name:' publisher'}]- (p) return distinct p.name"}, {"query": "Please list one of the works representative of this person born in Dongming County, Shandong Province.", "cypher": "match (:ENTITY{name:'Dongming county'}) <- [:Relationship{name:'birthplace'}]-(m),(m) - [:Relationship{name:'representing work'}]->(q) return q.name order by q.name limit 1"}, {"query": "I need seven roasted chicken recipes in a two-tier relationship?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Broken Chicken'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 7 The name of the game is a combination of the names of the characters and the name of the game."}, {"query": "What is the shortest relationship path between the two layers of heterogeneity 2 and heterogeneity 3?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortest2'}) - [*..2]-(b:ENTITY{name:'shortest3'})) return count ((p)"}, {"query": "Where are the mosquitoes mainly distributed?", "cypher": "match (:ENTITY{name:'scatter'}) - [:Relationship{name:'scatter'}]->(m) return distinct m.name"}, {"query": "What songs are as long as the Peach Sisters and what are their labels? List them in order of number of labels.", "cypher": "The following is a list of songs by the English rock band Queen, released as singles on their debut album, The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles: The Beatles The Beatles: The Beatles: The Beatles The Beatles The following year was the year was the year was the year was the year was the year was the year was the year was the year was the year was the year was the year"}, {"query": "Can you see the 222 pages of the book on the relationship between the two layers of legal education and the reform of teaching?", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'222 pages' return distinct x.name"}, {"query": "Can you recommend five novels in the genre of Eastern fantasy?", "cypher": "Match (:ENTITY{name:'Eastern mythology'}) <- [:Relationship{name:' category'}]- (n) return n.name limit 5"}, {"query": "Can you find out when the three legal books will be published?", "cypher": "match (:ENTITY{name:' legal books'}) <--(m), (m) - [:Relationship{name:' time of creation'}]->(n) return m.name, n.name limit 3"}, {"query": "The following is a list of all the information about the five-line three-ringed hat?", "cypher": "match (:ENTITY{name:'\u5f02\u6b66\u98a0'}) --(q) with q order by q.name where q.name <> 'five-line three rings' return q.name"}, {"query": "What is the name of the server platform decided by the American Electronics Association?", "cypher": "match (:ENTITY{name:'AEC'}) <- [:Relationship{name:'Determining Unit'}]- (x) return distinct x.name"}, {"query": "Please help me find three alumni of the University of Akron who are all working in what profession?", "cypher": "match (:ENTITY{name:' early chennai university'}) <- [:Relationship*]-(m) ,(m) - [:Relationship{name:' profession'}]->(n) return m.name,n.name limit 3"}, {"query": "I want to know about Oudah Fahed's personal situation in Syria, which is not more than two levels of relationship?", "cypher": "match (n:ENTITY{name:'Oudah Fahed'}) - [*1..2]->(x) where x.name<>'Syria' return distinct x.name"}, {"query": "List 1+1 easy wins; Optimized training: tags outside of 3rd grade language books?", "cypher": "match (:ENTITY{name:'1+1 easily crowned; optimized training: 3rd grade language'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'books' return p.name"}, {"query": "I'm going to give you four science fiction movies, tell me when they're coming out.", "cypher": "The game is based on the science fiction series of the same name by the American science fiction writer J. K. Rowling."}, {"query": "What is the gender of the Pedersen you mentioned in your post?", "cypher": "Match ((:ENTITY{name:'Pederson'}) - [:Relationship{name:' gender'}]-> (n) return n.name"}, {"query": "Do you know how many companies that offer investment advice are in the business?", "cypher": "match (:ENTITY{name:' investment advisory'}) <- [:Relationship{name:' business scope'}]- (q) return q.name limit 14"}, {"query": "What is the chemical formula of perovskite? In which regions is it mainly distributed?", "cypher": "match (:ENTITY{name:'metallic mineral'}) - [:Relationship{name:'chemical formula'}]->(n) return n.name as name union all match (:ENTITY{name:'metallic mineral'}) - [:Relationship{name:'distribution'}]->(m) return m.name as name"}, {"query": "Please tell me about three of Pierre Mignot's most representative works.", "cypher": "match (:ENTITY{name:'Pierre Mignot'}) - [:Relationship{name:'represents work'}]-> (h) return distinct h.name limit 5"}, {"query": "What is the shortest path between the two layers of wanting to be able to be and wanting to be able to be?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'want to move ahead'}) - [*..2]-(b:ENTITY{name:'want to move ahead'})) return count ((p))"}, {"query": "Can you describe the work of this man who has three US citizenships?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(n),(n) - [:Relationship{name:'representative work'}]->(q) return q.name order by q.name limit 3"}, {"query": "Can you name the 12 Japanese stars born on October 1, 1979?", "cypher": "match (:ENTITY{name:'October 1, 1979'}) <- [:Relationship{name:'date of birth'}]- (p) return p.name limit 12"}, {"query": "What is the main prize for the third year of the Sixth Form Water Market?", "cypher": "match (:ENTITY{name:'Six Plate Water City Third Secondary School'}) <- [:Relationship{name:'Chinese name'}]-(x) - [:Relationship{name:'main award'}]->(h) return distinct h.name"}, {"query": "Can you find out the organizers of the 16th China International Auto Show 2018?", "cypher": "match (:ENTITY{name:'2018 16th China International Auto Show'}) - [:Relationship{name:'host unit'}]-> (n) return distinct n.name"}, {"query": "Can you help me find 10 books published by National Press in 2011?", "cypher": "match (:ENTITY{name:'2011'}) <- [:Relationship{name:'publication time'}]- (mn) - [:Relationship{name:'publishing company'}]->(n:ENTITY{name:'national publishing company'}) return mn.name limit 10"}, {"query": "What do you think about the chemical product 3-hydroxybenzyl?", "cypher": "match (:ENTITY{name:'3-methacrylate'}) --(q) with q order by q.name where q.name <> 'chemistry' return q.name"}, {"query": "I wonder what the Chinese names of the novels in Jinjiang Literature City are?", "cypher": "match (:ENTITY{name:'Jingjiang Literary City'}) <- [:Relationship{name:'connected website'}]-(q),(q) - [:Relationship{name:'Chinese name'}]->(h) return distinct h.name limit 2"}, {"query": "007 Software Encryption Does this Internet product have a tag?", "cypher": "match (:ENTITY{name:'007 software encoder'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'Internet product' return p.name"}, {"query": "Besides the lead role of Li Linjie, can you tell me 6 things you know about the movie Taecyeon Sang-Fong 2?", "cypher": "match (:ENTITY{name:'Taedang Sanfeng [1993 film directed by Liu Peace]'}) - [:Relationship*1..2]->(p) where p.name <> 'Li Linjie, Liu Xiaobo, Chan Chiao-Hao, Li Zhenjie' return p.name limit 6"}, {"query": "I wonder if the number of people on the ground who died in the crash was 237?", "cypher": "match (:ENTITY{name:'237'}) <- [:Relationship{name:'number of dead on the ground'}]- (q) return q.name"}, {"query": "Can you help me find three mainland actors from the 80s?", "cypher": "match (:ENTITY{name:'80s actor'}) <- [:Tag{name:'tag'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='mainland actor' return m.name limit 3"}, {"query": "Do you want to know 5 personal details about Alfadhel Amer, a Kuwaiti footballer?", "cypher": "match (n:ENTITY{name:'Alfadhel Amer'}) - [*]->(x) where x.name <>'Alfadhel Amer, Kuwaiti football player\u3002' return distinct x.name limit 5"}, {"query": "For the 10/29 Beijing Tungzhou building collapse, do you know exactly when it happened?", "cypher": "match ((h:ENTITY{name:'10\u00b729 Beijing Tongzhou area during construction of factory collapse accident'}) - [:Relationship{name:' time of occurrence'}]-> (x) return x.name"}, {"query": "What is the name of the dish made from ylang ylang?", "cypher": "match (:ENTITY{name:'Cyanuric'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='Cyanuric dishes' return distinct m.name"}, {"query": "Which books by Li Min have been published by Fudan University Press?", "cypher": "match (p:ENTITY{name:'Lee Min'}) <--(x) --> ((q:ENTITY{name:'Pudong University Press'}) return x.name"}, {"query": "Can you tell me what the relationship is between the two layers of the presentation?", "cypher": "The following is a list of links to links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in the list of links in this list."}, {"query": "Do you know which entertainment personalities are associated with Tier 3 labels?", "cypher": "Match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'entertainment character'}) RETURN distinct n.name"}, {"query": "What is the name of the character in the TV series \"Shanghai Beach\" who is accompanied by her new friend, Kim Ji-young?", "cypher": "match (h:ENTITY{name:'Fan Yue Yue, television series \u4e0a\u6d77 \u65b0\u4e0a\u6d77 character, accompanied by in the side of \u656c\u3002'}) <-[:Describe{name:'description'}]-(x) return distinct x.name"}, {"query": "Do you know what the three-step label has to do with regional development innovation?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'Regional development innovation theory'}) RETURN distinct n.name"}, {"query": "Do you know what Ruth Winona T's signature work is?", "cypher": "match (:ENTITY{name:'Ruth Winona T'}) <- [:Relationship{name:' foreign language name'}]- ((q),(q) - [:Relationship{name:' representing work'}]->(x) return distinct x.name limit 1"}, {"query": "Can you list me seven events that happened on December 29th in the world?", "cypher": "match (:ENTITY{name:'October 29'}) <- [:Relationship{name:' time'}]- (p) return p.name limit 7"}, {"query": "And what will make you realize who owns the Jinn?", "cypher": "match (:ENTITY{name:' ghost eye'}) - [:Relationship{name:' affiliate'}]-> (h) return distinct h.name"}, {"query": "What is this person's profession?", "cypher": "match (:ENTITY{name:'spoonful'}) <--(n),(n) - [:Relationship{name:'spoonful'}]->(p) return distinct p.name"}, {"query": "I want to know about the personal relationship of Chinese national Liu Hao.", "cypher": "match (n:ENTITY{name:'Hao'}) - [*1..2]->(x) where x.name <> 'China' return distinct x.name"}, {"query": "What are the areas of application of this knowledge that can be classified as applied mathematics?", "cypher": "match (:ENTITY{name:'mathematics'}) <- [:Relationship{name:'applied discipline'}]- ((m) - [:Relationship{name:'scale of field'}]->(p) return p.name skip 1 limit 5"}, {"query": "I would like to know about the 11-16 cabinet 5?", "cypher": "match (:ENTITY{name:'11-oxygen-mixed sixteen cabinet'}) --(x) with x order by x.name return x.name limit 5"}, {"query": "Can you list the top 10 achievements of the mountain?", "cypher": "match (:ENTITY{name:'Chang Nanpin'}) <- [:Relationship{name:'Chinese name'}]- ((m) - [:Relationship{name:'main achievement'}]->(x) return x.name order by x.name limit 10"}, {"query": "What historical record contains the year 104 AD in Hungary?", "cypher": "match (:ENTITY{name:'104 AD in Hungary'}) <- [:Relationship{name:'important event'}]- (x) return x.name"}, {"query": "What is Sun Xiaoming's profession besides singing and music?", "cypher": "match (n:ENTITY{name:'Sun Family'}) - [:Relationship{name:'profession'}]->(h) where h.name <> 'singer' and h.name <> 'musician' return distinct h.name limit 1"}, {"query": "Do you know about the International Paralympic Committee? What information is there besides its creation in 1989?", "cypher": "match (:ENTITY{name:' International Paralympic Committee for Disabled People'}) - [:Relationship*1..2]->(p) where p.name <> '1989' return p.name limit 7"}, {"query": "I want to issue four pieces of information on the implementation of the labor management measures of the two levels of the Chinese and foreign joint venture enterprises in Guangzhou, other than the People's Government of Guangzhou.", "cypher": "match (:ENTITY{name:'Manual for the implementation of labour management in the Chinese and foreign joint venture enterprises in Guangzhou City'}) - [*1..2]-(p) where p.name <> 'Guangzhou City People's Government' return p.name limit 4"}, {"query": "Tell us about the five facts about Kislitsyn Aleksander, who weighs 76 kg.", "cypher": "match (n:ENTITY{name:'Kislitsyn Aleksander'}) - [*]->(x) where x.name <>'76 kg' return distinct x.name limit 5"}, {"query": "Can you list the people and events related to suicide?", "cypher": "match (:ENTITY{name:'suicide'}) <- [:Relationship{name:'way of death'}]- (p) return p.name"}, {"query": "What are the labels of each plant and can they be sorted from small to large by the number of labels?", "cypher": "match (n:ENTITY{name:' nightwing's dance'}) - [:Relationship{name:'\u754c'}]->(:ENTITY) <- [:Relationship{name:'\u754c'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Who is this person? What are some of his representative works? Can you tell me a good one?", "cypher": "match (:ENTITY{name:'1981 graduated from China Drama Academy, majoring in acting and directing\u3002'}) <- [:Describe{name:'description'}]-(x),(x) - [:Relationship{name:'main work'}]->(m) return x.name,m.name skip 1 limit 1"}, {"query": "I would like to attend the 2012 China Shanghai Fiberglass Printing Expo, can you tell me where?", "cypher": "match ((:ENTITY{name:'2012 China Shanghai Sewing Printing Exhibition'}) - [:Relationship{name:' Location of the Exhibition'}]-> (p) return p.name"}, {"query": "The first is to find out all the aliases of the blood-roots.", "cypher": "match (:ENTITY{name:' blood root'}) <- [:Relationship{name:' alias'}]- (x) return x.name order by x.name"}, {"query": "Give me five Taekwondo athletes to name their representative works.", "cypher": "match (:ENTITY{name:'Arctic athlete'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'represents work'}]->(n) return m.name,n.name limit 5"}, {"query": "Can you tell me how many people have been in the movie \"The Big Bang Theory\" by Choi Ma Bollie?", "cypher": "match (:ENTITY{name:'Mary Poppins's Big Movie'}) --(n) return n.name order by n.name"}, {"query": "Where is the site of the 1/15 Riverside Bridge Bombing reported in the news?", "cypher": "match ((:ENTITY{name:'1\u00b715 Jadu Jadu Bridge Town explosion incident'}) - [:Relationship{name:'location'}]-> (p) return p.name"}, {"query": "Do you know what the name of this person, whose real name is Gao Minhan, is?", "cypher": "match (:ENTITY{name:'Kang'}) <- [:Relationship{name:'original name'}]-(n),(n) - [:Relationship{name:'word number'}]->(q) return q.name order by q.name limit 10"}, {"query": "The exhibition is being held in the city of Gdansk, which is located in the city of Gdansk.", "cypher": "match (:ENTITY{name:'180,000 square meters'}) <- [:Relationship{name:'area of the venue'}]- (x) return x.name"}, {"query": "What is the profession and representative work of Chopra?", "cypher": "match (:ENTITY{name:'Relationship{name:'profession'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'representative work'}) ->(m) return m.name as name"}, {"query": "Can you find two other Indian ice cream related to the simulation game?", "cypher": "match (:ENTITY{name:' Indian ice cream'}) --(m) with m order by m.name where m.name <> ' simulation game' return distinct m.name limit 2"}, {"query": "Can you tell us about the date of his birth, where he graduated from college and what he does now?", "cypher": "Match (:ENTITY{name:'Types'}) - [:Relationship{name:'Birthdate'}]->(n) return n.name as name union all match (:ENTITY{name:'Types'}) - [:Relationship{name:'Graduate School'}]->(m) return m.name as name union all match (:ENTITY{name:'Types'}) - [:Relationship{name:'Profession'}->(r) return r.name as name"}, {"query": "How much do you know about the 1943 version of the web game Invincible?", "cypher": "match (:ENTITY{name:'1943 Unrivaled'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'web game' return h.name"}, {"query": "Can you find the three books published by the Yue-Yue Book Company?", "cypher": "match (:ENTITY{name:'\u5cb3\u66f8\u793e'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'Price'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Name three schools that have established the School of Economic Management.", "cypher": "match (:ENTITY{name:' School of Business and Management'}) --(x) return distinct x.name limit 3"}, {"query": "What is the name of the phrase that describes the very indignant flag of the state of Zhongshan?", "cypher": "match (:ENTITY{name:'described as very angry'}) <- [:Relationship{name:'definition'}]-(m), (m) - [:Relationship{name:'outcome'}]->(n) where n.name='Relationship' return distinct m.name"}, {"query": "Please name the top 5 schools that have been selected as the best schools in the Karaganda language.", "cypher": "match (:ENTITY{name:'Karangal language text sample curriculum vitae'}) --(h) return h.name order by h.name limit 5"}, {"query": "What chemical has a molecular weight of 574.9215?", "cypher": "The name of the function is the name of the function itself."}, {"query": "What are the labeling characteristics of D-Glycerol?", "cypher": "match (:ENTITY{name:'D-butadiene glycoside'}) - [:Tag{name:'label'}]-> (p) with p order by p.name where p.name <> 'discipline' return p.name"}, {"query": "The accident in Hubei caused traffic jams, what's your name?", "cypher": "match (:ENTITY{name:' traffic incident'}) <- [:Relationship{name:' cause'}]- (h) return h.name"}, {"query": "Help me find five plants that are under the sub-plant protection.", "cypher": "match (:ENTITY{name:' by sub-plant gate'}) --(x) return x.name limit 5"}, {"query": "The game is based on the game of the same name, which is based on the game of the same name.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>'Relationship' return distinct x.name"}, {"query": "The latest news on 007 Defenders 2?", "cypher": "match (:ENTITY{name:'007 Protector 2'}) --(p) with p order by p.name return p.name limit 10"}, {"query": "Give me five athletes, what are their sports programs?", "cypher": "match (:ENTITY{name:' athlete'}) <- [*]-(m), (m) - [:Relationship{name:' athlete'}]->(n) return m.name, n.name limit 5"}, {"query": "0991 Part-time bar has any related tags?", "cypher": "match (:ENTITY{name:'0991 part-time'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "What is the shortest relationship path between the level B fire door and the level 2 fire door?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'B-level firewall'}) -[:Relationship*..2]-(b:ENTITY{name:'B-level firewall'})) return count ((p)"}, {"query": "Do you know the Chinese name of the China Brand Innovation and Development Project?", "cypher": "match (:ENTITY{name:'China Brand Innovation And Development Project'}) <- [:Relationship{name:'foreign language name'}]- ((n) - [:Relationship{name:'Chinese language name'}]->(m) return distinct m.name"}, {"query": "Do you know where all the Chinese granite is located in our country?", "cypher": "match (:ENTITY{name:'China-origin granite'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'origin'}]->(h) return distinct h.name"}, {"query": "What is the adoption unit of the statute of the Henan Chamber of Commerce in Xuzhou City? When was it adopted? When was it implemented?", "cypher": "match (:ENTITY{name:'Relationship{name:' by unit'}) ->(n) return n.name as name union all match (:ENTITY{name:' by time'}) -[:Relationship{name:' by time'}->(m) return m.name as name union all match (:ENTITY{name:' by unit'}) -[:Relationship{name:' by time'}]-(r) return r.name as name"}, {"query": "Please tell me the details of the 12-14 Jinjiang high-speed chase.", "cypher": "match (:ENTITY{name:'12\u00b714 Jidenan high-speed chase accident'}) --(p) with p order by p.name return p.name"}, {"query": "I'm wondering now what kind of relationships are involved on the two-level campus of the University of Inner China?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'\u534e\u5de5\u6821\u56ed\u901a'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I wonder if you know which ones are related to the second level of labels and transportation facilities?", "cypher": "match (n) - [:Tag*2{name:'tag'}]->(p:ENTITY{name:'traffic facility'}) return distinct n.name limit 2"}, {"query": "Please tell me the name of the case that happened at 10am on July 1, 2015.", "cypher": "match (:ENTITY{name:'July 1, 2015 at 10 am'}) <- [:Relationship{name:'time'}]- (x) return distinct x.name"}, {"query": "Do you know which district belongs to Songjiang Town?", "cypher": "match (:ENTITY{name:'Mong-Chiang Town'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'Affiliated political district'}]->(n) return distinct n.name"}, {"query": "I don't know the taste of this food and where it comes from, you know?", "cypher": "match (:ENTITY{name:'salt carbon tofu'}) - [:Relationship{name:'taste'}]->(n) return n.name as name union all match (:ENTITY{name:'salt carbon tofu'}) - [:Relationship{name:'source'}]->(m) return m.name as name"}, {"query": "Do you know what are the symptoms of sleepiness and behavioral abnormalities and which groups are more common?", "cypher": "match (:ENTITY{name:'sleepiness, greed and behavioral abnormalities'}) <- [*]-(m), (m) - [:Relationship{name:'multiple hair groups'}]->(n) return m.name, n.name"}, {"query": "The most common type of sheet is the MPa \u2265 280", "cypher": "match (:ENTITY{name:'\u2265280'}) <- [:Relationship{name:' yield strength Mpa'}]- (x) return distinct x.name"}, {"query": "What is the name of the play by Chan Paes?", "cypher": "match (:ENTITY{name:' Chen Pei, Flum, Wang Jing, Liu Qian, Liu Jun, Zhu Jun'}) <- [:Relationship{name:' starring'}]-(m), (m) - [:Relationship{name:' type'}]->(n) where n.name='speech drama' return distinct m.name"}, {"query": "I want to know about this game of 15 puzzles.", "cypher": "match (:ENTITY{name:'15 puzzle'}) --(n) with n order by n.name where n.name <> 'game' return n.name"}, {"query": "The first phase of a campaign was a personal information campaign from May 13 to June 12, called \"Anonymous\".", "cypher": "match (:ENTITY{name:'May 13 to June 12, personal information promotion'}) <- [:Relationship{name:' first stage'}]- (q) return q.name"}, {"query": "Do you know what is the third layer of the label relationship with Concordola?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'Concordora'}) return distinct n.name limit 1 The name of the game is the same as the name of the game itself."}, {"query": "What profession does a person born on June 18 have besides singing?", "cypher": "match (:ENTITY{name:'(calendar) June 18th'}) <- [:Relationship{name:'date of birth'}]-(p) - [:Relationship{name:'profession'}]->(q) where q.name <> 'singer' return distinct q.name limit 1"}, {"query": "You know that citizenship is outside China, and that's 8 information in the 4th tier of the military.", "cypher": "match (:ENTITY{name:'\u82b1\u4e8c\u519b'}) -[*1..4]-(p) where p.name <> 'China' return distinct p.name limit 8"}, {"query": "Can you tell me more about him, knowing that 119 is an organization?", "cypher": "match (:ENTITY{name:'119 band'}) --(p) with p order by p.name where p.name <> 'organization' return p.name"}, {"query": "Can you name three people born in October 1979?", "cypher": "match (:ENTITY{name:'October 1979'}) <- [:Relationship{name:'date of birth'}]- (m) return m.name limit 3"}, {"query": "And tell me about the three 10,000 things you know about?", "cypher": "match (:ENTITY{name:'10000 know'}) --(h) with h order by h.name return h.name limit 3"}, {"query": "What does it mean to be poor? Where did it come from?", "cypher": "match (:ENTITY{name:'square'}) - [:Relationship{name:'square'}] ->(n) return n.name as name union all match (:ENTITY{name:'square'}) - [:Relationship{name:'square'}] ->(m) return m.name as name"}, {"query": "I'm not sure what the name of the land is that has a family-owned farm.", "cypher": "Match (:ENTITY{name:'Relationship{name:'Tribalism'}}) <- [:Relationship{name:'Tribalism'}]- (p) return p.name"}, {"query": "Please tell me where is the address of the Shenzhen Mountain Apartment Hotel?", "cypher": "match (x:ENTITY{name:'Shenzhen Yantai Water Apartment Hotel'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'address'}]->(h) return distinct h.name"}, {"query": "I'm going to ask you about the personal situation of this person Mouny Loic in his two-tier relationship.", "cypher": "match (n:ENTITY{name:'Mouny Loic'}) - [:Relationship*1..2]->(x) where x.name<>'person' return distinct x.name"}, {"query": "Do you know what kind of art is there?", "cypher": "match (:ENTITY{name:'Relationship{name:'author'}]- (m) return m.name"}, {"query": "Can you tell me what the 5th level tag has to do with football?", "cypher": "Match (n) - [:Tag*5{name:'tag'}]->(p:ENTITY{name:'football'}) RETURN distinct n.name"}, {"query": "I'm not sure if you can tell me the details of the four levels of relationship between Kim Jong-un and the five Korean nationals.", "cypher": "match (n:ENTITY{name:'\u00b7'}) - [*1..4]->(x) where x.name<>'Korea' return distinct x.name limit 5"}, {"query": "What does this man, nicknamed Angko, have to represent in his work?", "cypher": "match (:ENTITY{name:'sister'}) <- [:Relationship{name:'sister'}]-(m),(m) - [:Relationship{name:'sister'}]->(h) return h.name order by h.name limit 10"}, {"query": "I'm not sure if you can tell me how to get the information to the net for the sum of 0750 returns.", "cypher": "match (:ENTITY{name:'0750 return net'}) --(p) with p order by p.name return p.name"}, {"query": "What is the name of the suspect in the Hunan case who was beaten to death?", "cypher": "match (:ENTITY{name:' current hit'}) <- [:Relationship{name:' result'}]- (m) return m.name"}, {"query": "I would like to know what are the main achievements of Xu Dejie?", "cypher": "match (:ENTITY{name:' Xu De Ge'}) <- [:Relationship{name:' Chinese name'}]- ((q) - [:Relationship{name:' major achievements'}]->(x) return x.name skip 1 limit 10"}, {"query": "The teacher asked us about the molecular weight of the sodium dihydrate dihydrate, can you tell me?", "cypher": "match ((:ENTITY{name:' for the nitric oxide monosodium'}) - [:Relationship{name:' molecular weight'}]-> (m) return m.name"}, {"query": "In addition to 42 bucks for one book, find out 6 more about me in this book by Bumblebee Jun.", "cypher": "match (n:ENTITY{name:'I am the day of the future'}) -->(h) with h order by h.name where h.name <> '42\u5143' and h.name <> '\u718a\u57f9\u4e91' return h.name limit 6"}, {"query": "I am not sure if you are aware of the fact that the film is based on a true story.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'' return distinct x.name"}, {"query": "Do you know Laurent Ban? Please tell me about him.", "cypher": "match (:ENTITY{name:'Laurent Ban'}) --(m) return m.name skip 1 The name of the game is the same as the name of the game"}, {"query": "How about a summary of his work in no more than five sentences?", "cypher": "match (:ENTITY{name:'Tasoran'}) --(q) with q order by q.name return q.name limit 5"}, {"query": "What is the shortest path of one of the five layers of the American science fiction film heterogeneity versus heterogeneity 2?", "cypher": "The title of the film is a reference to the fact that the film is based on the novel of the same name by the same name."}, {"query": "The meeting of the 28th session of the 6th People's Congress of Meizhou, chaired by five Huang Qian, is good?", "cypher": "match (n:ENTITY{name:'Twenty-eighth meeting of the Sixth People's Congress of Meiju City'}) - [*]->(x) where x.name <>'Huangqiang' return distinct x.name limit 5"}, {"query": "I need a literary work that is a metaphor for the two-tiered relationship between the Eastern military and the work of the presentation.", "cypher": "match (n:ENTITY{name:'for example Eastern Army'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "The main characters of the 2015 Japanese film \"Coffee by the Sea\" [Sozumi-Sohmi, starring Yuna B\u014dmei] are:", "cypher": "match (n:ENTITY{name:'Coffee House by the Sea' [Japanese 2015 film starring Yoko Ono, Satsuki]'}) - [:Relationship{name:'Satsuki'}]->(h) where h.name <> 'Satsuki' and h.name <> 'Satsuki' return distinct h.name limit 2"}, {"query": "What is the shortest path between the two levels of the museum and archaeology majors?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' museum science'}) - [:Relationship*..2]-(b:ENTITY{name:' archaeology science'})) return count ((p)"}, {"query": "Can you list some of the most representative works of the jurists?", "cypher": "match (:ENTITY{name:'jurist'}) <- [:Relationship{name:'profession'}]- ((q) - [:Relationship{name:'representative work'}]->(x) return distinct x.name"}, {"query": "Do you know which schools are green?", "cypher": "match (:ENTITY{name:' green school'}) --(h) return h.name skip 5"}, {"query": "What clinic should I go to for postpartum depression?", "cypher": "match (:ENTITY{name:'postpartum depression'}) - [:Relationship{name:'inpatient ward'}]->(m) return distinct m.name"}, {"query": "The following three characters in the two-tier relationship of Amorim?", "cypher": "The following is a list of all the different ways Unwind is credited in the database:"}, {"query": "Can you show me the show time of the 13th Shanghai International Machine Tool Expo 2011?", "cypher": "match ((:ENTITY{name:'2011 13th Shanghai International Machine Tool Exhibition'}) - [:Relationship{name:'exhibition time'}]-> (n) return n.name"}, {"query": "What is the shortest path between the Orange and German tides in the 3rd layer?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'orange tide'}) - [*..3]-(b:ENTITY{name:'German tide'})) return count ((p)"}, {"query": "The organization is a four-tiered organization, with a four-tiered relationship to the Chennai South Railway Volunteer Service Station.", "cypher": "match (n:ENTITY{name:'Chengdu South Station Volunteer Service Station'}) - [*1..4]->(x) where x.name <> 'organizing agency' return distinct x.name"}, {"query": "I would like to know the other 4 information on this sports project on the second level of the snowstorm.", "cypher": "match (:ENTITY{name:' snowstorm'}) - [:Relationship*1..2]-(p) where p.name <> 'sports project' return p.name limit 4"}, {"query": "The first Chinese name of the out-of-towner in Guangzhou is?", "cypher": "match (:ENTITY{name:'Relationship{name:'Chinese name'}]-> (m) with m order by m.name return m.name limit 1"}, {"query": "Please help me find a scenic area 300 meters above sea level in the Yalu Tibet Grand Canyon.", "cypher": "match (:ENTITY{name:'2140 m'}) <- [:Relationship{name:'altitude'}]-(m), (m) - [:Relationship{name:'address'}]->(n) where n.name='Yoruba Tibet Gorge West Shingla Mountains' return m.name limit 2"}, {"query": "Tell me about the content of my literary works, from the beginning of the water melody to the Kimlin, the drinking of congregations, and the details of the four layers of relationships related to the North State collection.", "cypher": "match (n:ENTITY{name:' water tune song head to the top of the Kimlin, the congregations drink, because of the use of North State collection'}) - [*1..4]->(x) where x.name <> 'literary work' return distinct x.name limit 5"}, {"query": "What is 110 voice jump?", "cypher": "match (:ENTITY{name:'110 voice jumps'}) --(q) with q order by q.name return q.name"}, {"query": "Please provide me with 222 pages of Play Science: All the information related to science and knowledge in games.", "cypher": "match (n:ENTITY{name:'play science: science and knowledge in games'}) - [:Relationship*]->(x) where x.name<>'222 pages' return distinct x.name"}, {"query": "Please tell me what kind of relationship information is involved in the two layers of the five-spec concept car?", "cypher": "The following is a list of the most commonly used and used UNWIND relationships:"}, {"query": "Can you find the five comedy films that have been released in the US?", "cypher": "Match (:ENTITY{name:' United States'}) <- [:Relationship{name:' filming area'}]- (mn) - [:Relationship{name:' category'}]->(n:ENTITY{name:' comedy'}) return mn.name limit 5"}, {"query": "Do you have a Chinese name for a doctor?", "cypher": "match (:ENTITY{name:'medical lady'}) - [:Relationship{name:'Chinese name'}]-> (p) with p order by p.name return distinct p.name"}, {"query": "Chen Zheng, a Han man, was born in July 1967 in Anhui, Hunan, and is the current chairman of Hunan Coconut and Tea Group Co., Ltd., Hunan Zhengda Commodity Exchange Market Co., Ltd., Hunan Zhejiang Agricultural Development Co., Ltd., China Black Tea Cultural Expo, Hunan Zheyada Food Co., Ltd.; can you name 5 of his major achievements?", "cypher": "match (x:ENTITY{name:'Chen Ssang-gang, male, Han, born July 1967 in Hunan, Hunan, currently Hunan Aluminum and Tea Group, Ltd., Hunan Chendai Commodity Exchange Market, Ltd., Hunan Chendai Agricultural Development, Ltd., China Black Tea Cultural Expo Park, Hunan Chendai Food Co., Ltd. Chairman of the Board of Directors of the company)"}, {"query": "Where is the exhibition hall for the 2012 Shanghai International Beverage Machinery and Equipment Exhibition?", "cypher": "match ((:ENTITY{name:'2012 Shanghai International Beverage Machinery and Equipment Exhibition'}) - [:Relationship{name:'Holding the exhibition hall'}]-> (h) return h.name"}, {"query": "Where is the institutional department that has abolished the obligation to evaluate the performance of healthcare institutions?", "cypher": "match (:ENTITY{name:'Remove the performance review of the healthcare institution'}) <- [:Relationship{name:'Remove the role'}]- (q) return distinct q.name"}, {"query": "Do you know what events are organized by the Beijing Economic and Technological Development Zone (BEDZ) Board, Asin Group, and Cloud Base?", "cypher": "match (:ENTITY{name:'Beijing Economic and Technological Development Zone Committee, Ashanti Group, Cloud Base'}) <- [:Relationship{name:'host'}]- (q) return q.name"}, {"query": "Do you not understand all the relationship information involved in the law of diffusion in the two layers?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' the rules of propagation'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "The following is a list of three different types of Hala football clubs that are not related to sports:", "cypher": "match (:ENTITY{name:'Hara Football Club'}) --(m) with m order by m.name where m.name <> 'sport' return distinct m.name limit 3"}, {"query": "Which companies have the same date of establishment as the company of Langsa Siyuan Shot Cultural Media Ltd. and what are their respective labels? Please show these companies in order of their label number.", "cypher": "match (n:ENTITY{name:'Changsha Yicheng Cultural Media Limited Liability Company'}) - [:Relationship{name:'time of establishment'}]->(:ENTITY) <- [:Relationship{name:'time of establishment'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Can you find me three publications published by the People's Literature Publishing House?", "cypher": "match (:ENTITY{name:'People's Literature Publishing House'}) <- [:Relationship{name:'People's Literature Publishing House'}]- ((x),(x) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 3"}, {"query": "The company is a subsidiary of Tianjin Century Leader Cultural Communication Limited, which is the third largest company in the world, besides having a website and a company?", "cypher": "match (n:ENTITY{name:' Tianjin Century Leoshow Cultural Communication Limited'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'website' and h.name <> 'company' return distinct h.name limit 3"}, {"query": "What do you know about the moniker 02LF\u00d703F?", "cypher": "match (:ENTITY{name:'02LF\u00d703F'}) --(x) with x order by x.name where x.name <> 'specific name' return x.name"}, {"query": "The following is a description of the benefits of publishing in Chinese commercial publishing: Do employees feel like they are in a three-tier relationship with the book material?", "cypher": "match (n:ENTITY{name:'Winning profit: employees feel the same way'}) - [:Relationship*1..3]->(x) where x.name <> 'China commercial publisher' return distinct x.name"}, {"query": "What word has the American phonetic spelling [s?ri?s]?", "cypher": "match (:ENTITY{name:'[?s?ri?s]}) <- [:Relationship{name:'American style'}]- (x) return distinct x.name"}, {"query": "Can you provide information about Yanming's relationship with the footballer Yangming Yanming, which is no more than three levels?", "cypher": "match (n:ENTITY{name:'Yunming Yanming'}) - [*1..3]->(x) where x.name<> 'footballer' return distinct x.name"}, {"query": "Can you tell me about Ochieng Jackton's relationship with the two?", "cypher": "match (n:ENTITY{name:'Ochieng Jackton'}) - [*1..2]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "Can you tell me about three famous places in China?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'country'}]-(p) - [:Relationship{name:'famous places'}]->(n) return distinct n.name limit 3"}, {"query": "What are the most representative works of a writer born in Jiangsu Province (now Suzhou)? Can you name five?", "cypher": "match (:ENTITY{name:' Jiangsu Province (now Suzhou) ') <-[:Relationship{name:' Place of birth'}]-(q) -[:Relationship{name:' Representative works'}]->(h) return distinct h.name limit 5"}, {"query": "You've seen the 2014 Eastern Guard Spring Night, remember what the theme was?", "cypher": "match ((n:ENTITY{name:'2014 Eastern Guard Spring'}) - [:Relationship{name:'subject'}]-> (x) return x.name"}, {"query": "I'm not a doctor, so help me find out 6 things about Joe Fuquan in the 3rd layer.", "cypher": "match (:ENTITY{name:'Joe Fujun'}) - [*1..3]-(p) where p.name <> 'doctor' return p.name limit 6"}, {"query": "Help me find 10 plants that are classified as sub-plants.", "cypher": "match (:ENTITY{name:' by sub-plant gate'}) <- [:Relationship{name:' gate'}]-(m) return distinct m.name limit 10"}, {"query": "Please help me figure out what the theme of the 4th Xinjiang International Auto Show 2011 is?", "cypher": "match ((n:ENTITY{name:'2011 Fourth edition of the Shinjuku International Auto Show'}) - [:Relationship{name:' belongs to topic'}]-> (p) return p.name"}, {"query": "Can you tell me about the 5 different types of diary entry/series that your teacher taught you to write?", "cypher": "match (:ENTITY{name:'Kindergarten Diary Start/Name teacher teaches you to write essay series'}) --(m) with m order by m.name where m.name <> 'Jin Minhwa' return distinct m.name limit 5"}, {"query": "Can you tell me what this person looks like?", "cypher": "match (:ENTITY{name:'similar to '}) --(h) return distinct h.name"}, {"query": "What is the RC service?", "cypher": "match (n:ENTITY{name:'RC service'}) --(x) return x.name"}, {"query": "What is the name of the company that owns Ju-Jin?", "cypher": "match (:ENTITY{name:'Julian's[contemporary host]'}) - [:Relationship{name:'of the company'}]->(n) return n.name as name union all match (:ENTITY{name:'Julian's[contemporary host]'}) - [:Relationship{name:'of the work'}]->(m) return m.name as name"}, {"query": "The price is 10.00 yuan/issue; who has the shortest name of the 120.00 yuan/year product?", "cypher": "The following is a list of all the games that are currently available on the App Store:"}, {"query": "I heard that 3003 is a very versatile tool, can you list some specific applications?", "cypher": "The following is a list of all the different ways The Fellowship of the Ring is credited in the database:"}, {"query": "The following is a brief description of the three-tiered relationship between sports personality Ito Ichinose and his personal life:", "cypher": "match (n:ENTITY{name:'Ito's real name'}) - [*1..3]->(x) where x.name <> 'sportsman' return distinct x.name"}, {"query": "The food therapy reference for bronchitis is?", "cypher": "match (:ENTITY{name:'gastroparesis'}) <- [:Relationship{name:'for the disease'}]- ((x) - [:Relationship{name:'for the dietary reference'}]->(n) return distinct n.name"}, {"query": "New colored electric door repair commonly used information quick check manual and electronic equipment thermal design quick check manual 2 layers what is the shortest path", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' New type of electrical door repair commonly used information quick check manual'}) - [*..2]-(b:ENTITY{name:' Electronic device design quick check manual'})) return count ((p)"}, {"query": "Please describe 10 professions that Al McPherson has.", "cypher": "match (h:ENTITY{name:'Al McPherson'}) <- [:Relationship{name:'Chinese name'}]-(m) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 10"}, {"query": "Play five rock songs?", "cypher": "match (:ENTITY{name:' rock music'}) <--(n) return n.name limit 5"}, {"query": "The film is based on the novel of the same name by the writer, who is also a writer.", "cypher": "match (:ENTITY{name:'Relationship{name:'Creation date'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'Literary genre'}]->(m) return m.name as name"}, {"query": "Help me find a Korean dish made with beef.", "cypher": "match (:ENTITY{name:' beef, fresh cucumber'}) <- [:Relationship{name:' main ingredient'}]-(m), (m) - [:Relationship{name:' classification'}]->(n) where n.name='Korean dish' return distinct m.name limit 1"}, {"query": "What are the publications published by Yunnan People and what is the price of the books?", "cypher": "match (:ENTITY{name:'Yunnan people'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:'pricing'}]->(q) return distinct h.name,q.name"}, {"query": "Can you tell me about the school of environmental engineering?", "cypher": "match (:ENTITY{name:' environmental engineering science'}) --(x) return distinct x.name"}, {"query": "Where is the headquarters of Sichuan Bridge Kitchen Limited? When was it founded?", "cypher": "match (:ENTITY{name:' Sichuan Bridge Kitchen Limited'}) - [:Relationship{name:' Headquarters location'}]->(n) return n.name as name union all match (:ENTITY{name:' Sichuan Bridge Kitchen Limited'}) - [:Relationship{name:' Established time'}]->(m) return m.name as name"}, {"query": "What is the EINECS# for chemicals 204-924-7?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "What are the main achievements of Aung San Suu Kyi?", "cypher": "match (:ENTITY{name:'\u7fc1\u536b'}) <- [:Relationship{name:'Chinese name'}]- ((p),(p) - [:Relationship{name:'main achievement'}]->(q) return distinct q.name"}, {"query": "The main achievements of a Tang Temple are described here.", "cypher": "match (x:ENTITY{name:'Tang Xiuyu'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'main achievement'}]->(p) return p.name order by p.name limit 1"}, {"query": "What kinds of relationships are there in the three layers of the relationship that the Doenig Zen master contains?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Dawning Zen Master'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the major departments of Texas State University? Name 3 categories?", "cypher": "match (:ENTITY{name:'Texas, USA'}) <- [:Relationship{name:'area'}]- ((p),(p) - [:Relationship{name:'main faculty'}]->(m) return distinct m.name limit 3"}, {"query": "Who among entrepreneurs has a party membership?", "cypher": "match (p:ENTITY{name:'entrepreneur'}) <--(x) -->(q:ENTITY{name:'Communist Party of China'}) return x.name"}, {"query": "What is the shortest path in the 2 layers of the IMS and electronic device thermal design speed check manual based on cellular systems?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'IMS based on cellular system'}) - [*..2]-(b:ENTITY{name:' Electronic device thermal design quick check manual'})) return count ((p)"}, {"query": "What can you make with 50 grams of butter?", "cypher": "match (:ENTITY{name:' 50 g of butter'}) --(p) return p.name skip 2"}, {"query": "I wonder what Mike Nichols does for a living?", "cypher": "match (:ENTITY{name:'Mike Nichols'}) <- [:Relationship{name:'foreign language name'}]-(h),(h) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 1"}, {"query": "I'm not sure what the job of men is.", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]- ((m) - [:Relationship{name:'occupation'}]->(q) return distinct q.name limit 1"}, {"query": "How much do you know about 101+1 sports aggregates?", "cypher": "match (:ENTITY{name:'101+1 game collection'}) --(h) with h order by h.name where h.name <> 'game work' return h.name"}, {"query": "Three messages about the sexy model of summer 09?", "cypher": "match (:ENTITY{name:'09 summer sexy model'}) --(x) with x order by x.name return x.name limit 3"}, {"query": "I want to drink the wine of the gift of the Lord, and I want to write five poems in gratitude.", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name <>'Don' return distinct x.name limit 5"}, {"query": "10 messages summarizing 168 lottery deals?", "cypher": "match (:ENTITY{name:'168 lottery contracts'}) --(h) with h order by h.name return h.name limit 10"}, {"query": "Can you explain the 0551 shopping return network to me?", "cypher": "match (q:ENTITY{name:'0551 shopping return net'}) --(m) with m order by m.name return m.name"}, {"query": "The location of the seven-color company sent me?", "cypher": "match (p:ENTITY{name:'Seven Colored Company'}) return p.location"}, {"query": "I want to know all about Hu Minghui.", "cypher": "match (:ENTITY{name:'Hummingbird'}) --(n) return n.name skip 1"}, {"query": "Help me find three pieces of Xu Zhiyuan", "cypher": "match (:ENTITY{name:'Xue Zhi'}) <- [:Relationship{name:'author'}]-(m) return distinct m.name limit 3"}, {"query": "Who can tell me what Tiger's main achievements are?", "cypher": "match (:ENTITY{name:'Tiger'}) <- [:Relationship{name:'foreign language name'}]-(p) - [:Relationship{name:'main achievement'}]->(n) return distinct n.name"}, {"query": "What are the top 10 jobs for medical students who graduate from the University of Saskatchewan?", "cypher": "match (:ENTITY{name:'Sinakasan Medical University'}) <- [:Relationship{name:'Graduate School'}]-(n) - [:Relationship{name:'Profession'}]->(p) return distinct p.name limit 10"}, {"query": "Give me five facts about the Japanese professional footballer, striker and forward, Takuto Shinkai.", "cypher": "match (n:ENTITY{name:'\u8fdc\u85e4\u7d14'}) - [*]->(x) where x.name<> '\u8fdc\u85e4\u7d14 is a Japanese professional footballer who plays as a striker. Return distinct x.name limit 5"}, {"query": "Can you give me the details of a provincial priority undergraduate university?", "cypher": "match (:ENTITY{name:'Priority undergraduate college of the province'}) <--(n) return n.name"}, {"query": "Do you know what other labels 1016 acetaminophen has besides industrial products?", "cypher": "match (:ENTITY{name:'1016 filler'}) - [:Tag{name:'label'}]-> (m) with m order by m.name where m.name <> 'industrial product' return m.name"}, {"query": "Can you tell me about the circular education institutions?", "cypher": "match (:ENTITY{name:'recycling educational institution'}) --(h) return h.name skip 1"}, {"query": "Find out all the software details for the 4.36MB HD Simulator Tour.", "cypher": "match (n:ENTITY{name:'HD'}) - [*]->(x) where x.name <>'4.36MB' return distinct x.name"}, {"query": "Can you help me find the relevant character tags for the 10/1 Rebirth PBY-5A waterplane crash?", "cypher": "match (:ENTITY{name:'10\u00b71 Rescue Airlines PBY-5A watercraft crash incident'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "Can you show me the full list of cultural works in the 2013 Chinese Interior Design Thesis Collection?", "cypher": "match (n:ENTITY{name:'2013 Chinese interior design thesis collection'}) - [:Relationship*]->(x) where x.name <> 'culture' return distinct x.name limit 5"}, {"query": "Do you know the song of the cowboy? What time was it released?", "cypher": "match (:ENTITY{name:'swing'}) <- [*]-(m), (m) - [:Relationship{name:'swing time'}]->(n) return m.name, n.name limit 5"}, {"query": "Is there an exam coming up to further strengthen the force building of the police force?", "cypher": "match (q:ENTITY{name:' further strengthen the force building of the police force'}) <- [:Relationship{name:' Purpose'}]- (n) return n.name"}, {"query": "I want to know 5 things about the 124-kg Corbisiero Alex in the 5th level relationship?", "cypher": "match (n:ENTITY{name:'Corbisiero Alex'}) - [*1..5]->(x) where x.name <>'124 kg' return distinct x.name limit 5"}, {"query": "Can you help me find two openly gay people born in Henan?", "cypher": "match (:ENTITY{name:'Henan open'}) <- [:Relationship{name:'birthplace'}]- ((x),(x) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "What year's calendar starts and ends on February 8, 1940 or January 26, 1941?", "cypher": "match (:ENTITY{name:'08 February 1940 26 January 1941'}) <- [:Relationship{name:'Lunar calendar end time'}]- (m) return m.name"}, {"query": "Can you give us a little bit more about the man who is the sporting personality, Feroy Ariel, in the three levels of relationships?", "cypher": "match (n:ENTITY{name:'Feroy Ariel'}) - [*1..3]->(x) where x.name <> 'sportsman' return distinct x.name"}, {"query": "Please tell me about the types of relationships within the two layers of the four East-East City railway traffic?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Tongyang City Railroad'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "What are the representations of the graduates of the Hague School?", "cypher": "match (q:ENTITY{name:'Highgate School'}) <-[:Relationship{name:'Graduate School'}]-(p) -[:Relationship{name:'represents work'}]->(x) return distinct x.name"}, {"query": "What is the name of the XY-10KW monopoly?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Which asteroids and asteroid 5093 were discovered by the same discoverer and what are their respective labels? Find the asteroids in order of how many labels they have.", "cypher": "The name of the asteroid is derived from the name of the asteroid, which is the name of the planet's namesake, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the name of the asteroid, the asteroid, the name of the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid"}, {"query": "I know Wei Xiang, a Han Chinese, born in November 1972 in Yangzhou, Anhui Province, his profession help me find out?", "cypher": "match (:ENTITY{name:'Wei Xiang, male, Han, born November 1972, from Yangzhou, Anhui Province, member of the Communist Party of China, undergraduate degree, Master's degree in Business Administration, economist, current Party Committee Secretary, legal representative and chairman of JianAn Investment Holding Group Limited\u3002'}) <- [:Describe{name:describe'}]- ((q) - [:Relationship{name:'profession'}]->(x) return distinct x.name"}, {"query": "What else do you know about Liu Shui-shun besides being a drama educator?", "cypher": "match (:ENTITY{name:'Sushi-chan'}) - [*1..2]->(p) where p.name <> 'theatre educator' return p.name limit 20"}, {"query": "What is the main ingredient of crystal chicken?", "cypher": "Match (:ENTITY{name:'Crystal Chicken'}) - [:Relationship{name:'Main ingredient'}]-> (m) return distinct m.name"}, {"query": "The book published by the Economic Science Press introduced me to two books.", "cypher": "match (:ENTITY{name:' Economic Science Publishing'}) <- [:Relationship{name:' Publishing'}]- ((p) - [:Relationship{name:' book name'}]->(n) return distinct n.name limit 2"}, {"query": "What labels are involved in the West Bengal shipwreck?", "cypher": "match (:ENTITY{name:'10\u00b730 West Bengal Indian state shipwreck'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Who are the few celebrity men who have won the H5 Special Award for Popular Men?", "cypher": "match (:ENTITY{name:'H5 special type reward for popularity man'}) <- [:Relationship{name:'mystery reward'}]- ((n) - [:Relationship{name:'H5 special reward for popularity man'}]->(q) return distinct q.name"}, {"query": "I'm going to introduce you to two of the most popular Thai dishes.", "cypher": "match (:ENTITY{name:'Mau Zhou'}) <- [:Relationship{name:'category'}]-(p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 2"}, {"query": "Can you tell us all the information about the three levels of the relationship between the Greek Gentzoglou Sawas and the Greek woman?", "cypher": "match (n:ENTITY{name:'Gentzoglou Sawas'}) - [*1..3]->(x) where x.name <> 'Greek' return distinct x.name"}, {"query": "Give me the molecular weight of 4-aceto-2-methionine, which I need to use for calculations now.", "cypher": "match ((:ENTITY{name:'4-ethyl-2-ethylene'}) - [:Relationship{name:'molecular mass'}]-> (p) return p.name"}, {"query": "Please tell me what are the main works of this actress who won the 2010 TVPool Top Award for Best New Actress?", "cypher": "Match (:ENTITY{name:'2010 TVPool Top Award for Best Newcomer'}) <- [:Relationship{name:' Major achievement'}]-(n),(n) - [:Relationship{name:' Major work'}]->(h) return h.name order by h.name limit 1"}, {"query": "Can you list the main achievements of Li Puwei?", "cypher": "Match (:ENTITY{name:' Lee Po-woo'}) - [:Relationship{name:' Major achievements'}]-> (n) return n.name skip 2"}, {"query": "Can you tell me where the horse company is?", "cypher": "match (p:ENTITY{name:'The Horse Company'}) return p.location The name of the company is"}, {"query": "The problem is asking where Hugo was born, when he was born, where he graduated from high school.", "cypher": "match (:ENTITY{name:'Relationship{name:'birthplace'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'graduate college'}) ->(m) return m.name as name union all match (:ENTITY{name:'Relationship{name:'birthdate'}) -(r) return r.name as name"}, {"query": "Can you name five official titles?", "cypher": "match (q:ENTITY{name:' official version'}) <- [:Relationship{name:' release stage'}]- (x) return distinct x.name limit 5"}, {"query": "Can you name the top 5 works by this CCP member?", "cypher": "match (:ENTITY{name:'CPC member'}) <- [:Relationship{name:'faith'}]- ((n) - [:Relationship{name:'representative work'}]->(x) return x.name skip 1 limit 5"}, {"query": "What is the name of the Zhejiang cabbage made from tomatoes and onions?", "cypher": "match (:ENTITY{name:'Peg'}) <- [:Relationship{name:'category'}]-(m), (m) - [:Relationship{name:'main ingredient'}]->(n) where n.name='eggplant, onion' return distinct m.name"}, {"query": "In addition to the Senyang River Gorge and the Qing Creek Fisherman's Wharf, three other famous attractions in Zhejiang are recommended: China Green Expo Park Chongqing Park.", "cypher": "match (n:ENTITY{name:'Beijing; China Greenhouse Expo Chongqing Park'}) -[:Relationship{name:'Famous attractions'}]->(h) where h.name <> 'Shenzhen River' and h.name <> 'Ain Creek Fisherman' return distinct h.name limit 3"}, {"query": "What is the yield strength of the 16Mn2SiCrMoVTiA material we are using now?", "cypher": "match ((:ENTITY{name:'16Mn2SiCrMoVTiA'}) - [:Relationship{name:' yield strength'}]-> (p) return p.name"}, {"query": "Can you tell us about this man, Chen Joly?", "cypher": "match (m:ENTITY{name:'Cheryl'}) --(q) return distinct q.name"}, {"query": "Can you list a port warehouse with a year in history?", "cypher": "match (q:ENTITY{name:'port warehouse'}) <-[:Relationship{name:'historical function'}]- (h) return distinct h.name"}, {"query": "What is the genus of the Yunnan blueberry tree and where is it mainly distributed?", "cypher": "match (:ENTITY{name:'Yunnan blue fruit tree'}) - [:Relationship{name:'Kategory'}]->(n) return n.name as name union all match (:ENTITY{name:'Yunnan blue fruit tree'}) - [:Relationship{name:'Distributed area'}]->(m) return m.name as name"}, {"query": "The three-layer relationship between the six great masters of the repertoire and the work of the six great masters of the repertoire?", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name <>'' return distinct x.name"}, {"query": "What are the important events that happened in Belarus?", "cypher": "match (:ENTITY{name:'Belarus'}) <- [:Relationship{name:'nationality'}]-(h),(h) - [:Relationship{name:'important event'}]->(x) return distinct x.name limit 5"}, {"query": "Can you tell us about the main works of this person born in Milton, England?", "cypher": "match (:ENTITY{name:'Milton, UK'}) <- [:Relationship{name:'place of birth'}]- ((m) - [:Relationship{name:'main works'}]->(h) return h.name skip 1 limit 10"}, {"query": "I'm going to start with a list of five Chinese online games that are athletic.", "cypher": "match (:ENTITY{name:' starting point Chinese web'}) <--(m), (m) -->> ((n) where n.name='game competition' return distinct m.name limit 5"}, {"query": "Do you know the Chinese name of Dan Ressinger, the world's greatest graphic designer?", "cypher": "match ((:ENTITY{name:'Dan Ressing[master of the world of graphic design]'}) - [:Relationship{name:'Chinese name'}]-> (n) return n.name"}, {"query": "Can you name three footballers and introduce them?", "cypher": "match (:ENTITY{name:'footballer'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 3"}, {"query": "I'm going to ask you to give me a personal profile of the three-tier relationship of the village secretary, Mr. Tsuerugan.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name <>'village clerk' return distinct x.name"}, {"query": "Please tell me about the three-tier relationship with Moroccan Aini Mourad?", "cypher": "match (n:ENTITY{name:'Aini Mourad'}) - [*1..3]->(x) where x.name<>'Morocco' return distinct x.name"}, {"query": "Do you know Alan Kolman?", "cypher": "match (:ENTITY{name:'Allan Kolman'}) --(h) return h.name skip 2 This is a list of all the different ways Allan Kolman is credited in the database."}, {"query": "Please help me find 10 species of bamboo and what kind of plants they belong to?", "cypher": "match (:ENTITY{name:' bamboo'}) <- [*]-(m), (m) - [:Relationship{name:' species'}]->(n) return m.name, n.name limit 10"}, {"query": "I would like to know what events are planned for the 2012 Baidu Festival in the city of Huangdi.", "cypher": "match ((:ENTITY{name:'2012 Huang Tianyu Ri Baidu Festival'}) - [:Relationship{name:'activity content'}]-> (q) return q.name"}, {"query": "Please tell me which earthquake occurred on April 25, 2015 at 14:11:26.", "cypher": "match (h:ENTITY{name:'25 April 2015 at 14:11:26'}) <- [:Relationship{name:'earthquake time'}]- (q) return distinct q.name"}, {"query": "Do you know what landmarks and events are held in Guizhou?", "cypher": "match (:ENTITY{name:'Quan'}) <- [:Relationship{name:'location'}]- (h) return distinct h.name"}, {"query": "I would like to know more about the book +1 for Love Oil?", "cypher": "match (:ENTITY{name:'+1 for love oil'}) --(m) with m order by m.name where m.name <> 'books' return m.name"}, {"query": "I'm not sure what the name of the work by Ken Ben-Ping is, but I'm wondering what the name of the work is.", "cypher": "match (:ENTITY{name:'children's book, written by a young girl'}) <- [:Relationship{name:'author'}]- (h) return h.name"}, {"query": "What is the shortest path of the relationship between the helix and the helix in the second parameter?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'squirrel family'}) - [*..2]-(b:ENTITY{name:'squirrel parameter'})) return count ((p)"}, {"query": "The information about the 2014 Yunnan Pu Pu-en-Thai Spring is in the book Tea Culture in Four Levels of Relationship.", "cypher": "match (n:ENTITY{name:'2014 Yunnan Puyin Tea\u00b7\u6625'}) - [*1..4]->(x) where x.name <>'tea culture' return distinct x.name"}, {"query": "Do you have a pill for oral use? Can you find 10?", "cypher": "The following is a list of the most commonly used drugs in the United States:"}, {"query": "I'm going to be a writer, but I'm not going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer, I'm going to be a writer.", "cypher": "match (n:ENTITY{name:'submitting a message to a political leader'}) -[:Relationship*1..3]->(x) where x.name<>'details' return distinct x.name"}, {"query": "What is the shortest distance between Fujian Province's Fujian 1st and Fujian Province's Fujian 4th?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Fuzhou Province's Fujian City High School'}) - [:Relationship*..2]-(b:ENTITY{name:'Fuzhou Province's Fujian City High School'})) return count ((p)"}, {"query": "What are the properties of public documents? Can you tell me about 5 of them?", "cypher": "match (:ENTITY{name:'public'}) <--(n) return n.name limit 5 is the name of the file"}, {"query": "I want to hear about the representative work of Gudrun Brost.", "cypher": "match (n:ENTITY{name:'Gudrun Brost'}) - [:Relationship{name:'represents work'}]-> (x) return x.name skip 1"}, {"query": "What are the main achievements of Chang Yu-hsiung?", "cypher": "match (:ENTITY{name:'\u7a0b\u88d5'}) - [:Relationship{name:'main achievements'}]->(m) return distinct m.name"}, {"query": "Do you know what the Tibetan mountain is called?", "cypher": "match (n:ENTITY{name:'Tibet Mountain'}) - [:Relationship{name:'also known as 'Tibet Mountain'}]->(h) with h order by h.name where h.name <> 'Tibet Mountain' return h.name"}, {"query": "When did the 12-15 mountain-to-mountain standoff in the country start?", "cypher": "match ((:ENTITY{name:'12\u00b715 Sansi Tsukamoto \u5b9d\u5c71\u77ff\u96be'}) - [:Relationship{name:'occurrence time'}]-> (q) return q.name"}, {"query": "Can you tell me what the relationship is between the two layers of Zen Buddhism?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you get me two books for $15.00?", "cypher": "The following is a list of the most commonly used keywords in the search results."}, {"query": "The problem is to find the voice slowly; send the work of Rao Huangxiu in full mobility; not fame slowly; send the 5 information materials of Rao Huangxiu in full mobility?", "cypher": "match (n:ENTITY{name:'slowly; sent over the line'}) -[:Relationship*]->(x) where x.name<>'slowly; sent over the line' return distinct x.name limit 5"}, {"query": "Help me find the three main departments of Guangzhou Sports Academy.", "cypher": "match (:ENTITY{name:'Canton Sports College'}) - [:Relationship{name:'main faculty'}]->(m) return distinct m.name limit 3"}, {"query": "Where is the Rat Company?", "cypher": "match (p:ENTITY{name:'Ratfish Company'}) return p.location"}, {"query": "I would like to know which bill is being passed to strengthen the administration of housing funds?", "cypher": "match (:ENTITY{name:'strengthen the housing balance management'}) <- [:Relationship{name:' reason for issuance'}]- (q) return q.name"}, {"query": "Which Hunan shareholder is a professor at the Agricultural University of China?", "cypher": "match (p:ENTITY{name:'Professor at Agricultural University of China'}) <--(x) -->(q:ENTITY{name:'Hunan Stock Exchange'}) return x.name"}, {"query": "Can you recommend a music-type learning software for my office?", "cypher": "match (:ENTITY{name:' study office class'}) <- [:Relationship{name:' music type'}]- (q) return q.name"}, {"query": "Who has been appointed Honorary President of the China Overseas Antiquities Return Association?", "cypher": "match (:ENTITY{name:'Honorary President of the China Overseas Antiquities Returns Association'}) --(q) return distinct q.name"}, {"query": "What games have the same game size as the Magic Bullet Adventure and what are their respective labels? How many of them do you show in order of number of labels?", "cypher": "The game is also known as the \"Game of Thrones\" (GTA) and the \"Game of Thrones\" (GTA)."}, {"query": "I need you to introduce me to the City Building Technician School.", "cypher": "match (:ENTITY{name:'School of City Building Technicians'}) --(p) return p.name skip 2"}, {"query": "Can you find the five species of monkey? Where are they all distributed?", "cypher": "match (:ENTITY{name:'genus'}) <--(m), (m) - [:Relationship{name:' distribution area'}]->(n) return distinct m.name,n.name limit 5"}, {"query": "Can you find me three doctors who can help me introduce them?", "cypher": "match (:ENTITY{name:'practising physician'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 3"}, {"query": "Can you find the rest of the labels for Internet product 10 Gigabit Ethernet?", "cypher": "match (m:ENTITY{name:'10 Gigabit Ethernet'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'Internet product' return h.name"}, {"query": "And what will make you know who is Ikhham?", "cypher": "match (:ENTITY{name:'Ickham'}) <--(n) return n.name The name of the game is the same as the name of the game"}, {"query": "I want to watch the 2010 Mnet Asian Music Awards, do you know the exact time of the awards?", "cypher": "Match ((:ENTITY{name:'2010 Mnet Asian Music Awards'}) - [:Relationship{name:' awards time'}]-> (p) return p.name"}, {"query": "Can you tell me what the names of the schools and the labels of the schools in the same country are, and what the labels are for each school?", "cypher": "match (n:ENTITY{name:'professional beauty school'}) - [:Relationship{name:'country'}]->(:ENTITY) <- [:Relationship{name:'country'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Do you know about the 10 things about the Eastern Sheep?", "cypher": "match (m:ENTITY{name:'Eastern plate sheep'}) --(n) return distinct n.name limit 10"}, {"query": "Give me three sports games and describe them.", "cypher": "match (:ENTITY{name:'sports game'}) <- [:Relationship*]-(m), (m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "I wonder what is inter-metallic ethanol?", "cypher": "match (:ENTITY{name:'inter-methanol'}) --(h) with h order by h.name return h.name"}, {"query": "What chemical is the name of CHEBI:52682?", "cypher": "match (:ENTITY{name:'CHEBI:52682'}) <- [:Relationship{name:'ChEBI'}]- (m) return distinct m.name"}, {"query": "Who is the author of the novel Yue Jun-young?", "cypher": "match ((:ENTITY{name:'\u7389\u5bb9\u5bc2'}) < - [:Relationship{name:' author'}]-> (m) return m.name"}, {"query": "Have you heard of a game called 2012 Summer Farewell?", "cypher": "match (:ENTITY{name:'2012 don't wear summer clothes'}) --(n) with n order by n.name where n.name <> 'game' return n.name"}, {"query": "What is the acronym for the third-degree jump?", "cypher": "match (n:ENTITY{name:'three-level jump away'}) --(x) return distinct x.name"}, {"query": "What are the major awards of the university located at 65 Tongshan Road, Shenzhen, Shenzhen, China?", "cypher": "match (:ENTITY{name:'65 Shenzhen, Shenzhen, Northwest New Area'}) <- [:Relationship{name:'school address'}]- ((p) - [:Relationship{name:'main award'}]->(q) return distinct q.name"}, {"query": "Can you please find me a CAS number for 4-phenol, if you need it?", "cypher": "match ((:ENTITY{name:'4-phenol'}) - [:Relationship{name:'CAS log-in number'}]-> (x) return x.name"}, {"query": "I heard that the 17th Shanghai Kitchenware Expo was held, so I went to see it too.", "cypher": "match ((:ENTITY{name:'17th Shanghai Kitchenware Show'}) - [:Relationship{name:'place of holding'}]-> (q) return q.name"}, {"query": "What is Shandong cuisine except for the undersea salmon lung?", "cypher": "match (:ENTITY{name:'Santondo'}) <- [:Relationship{name:'Classification'}]-(m) where m.name <> 'submarine pine silver lung' return distinct m.name"}, {"query": "What is the shortest distance between the two levels of Suzhou School of Civil Engineering and the Volkswagen Vocational Training School?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Suzhou School of Construction and Engineering'}) - [*..2]-(b:ENTITY{name:'Stockholm Vocational Skills Training School'})) return count ((p)"}, {"query": "How many meters high is the Type 21 submarine we know of?", "cypher": "The name of the sub is \"Relationship\" (Relationship)"}, {"query": "Has anyone calculated the molecular weight of the lightning bolt in the reaction?", "cypher": "match ((:ENTITY{name:'Relationship{name:'molecular mass'}]-> (n) return n.name)"}, {"query": "I want to know if you have any information about the tag for Liu Wenwei? I want three tags besides the economic and the political ones.", "cypher": "match (n:ENTITY{name:'\u6587'}) - [:Tag{name:'tag'}]->(h) with h order by h.name where h.name <> 'economy' and h.name <> 'person' return h.name limit 3"}, {"query": "Please tell me what the relationship between the two layers of the Queen Camilla is?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (R"}, {"query": "What other label features does the 5-year-old's parent encyclopedia have besides books?", "cypher": "match (:ENTITY{name:'05 years old'}) --(n) with n order by n.name where n.name <> 'books' return n.name limit 5"}, {"query": "What is the name of the dish that includes the dry season beans?", "cypher": "match (:ENTITY{name:'Dry season beans'}) - [:Relationship{name:'Classification'}]->(n) return n.name as name union all match (:ENTITY{name:'Dry season beans'}) - [:Relationship{name:'Main ingredient'}]->(m) return m.name as name"}, {"query": "I would like to know the other 4 messages in the second level of this TV series.", "cypher": "match (:ENTITY{name:'Sister flowers in the city'}) - [:Relationship*1..2]-(p) where p.name <> 'TV series' return p.name limit 4"}, {"query": "Chance The Rapper You know?", "cypher": "Match (:ENTITY{name:'Chance The Rapper'}) --(p) return p.name skip 2 This is a list of all the different ways Chance The Rapper is credited in the database."}, {"query": "Who are the main characters in this movie of my gangster girlfriend?", "cypher": "match (:ENTITY{name:'My gangster girlfriend'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'leading character'}]->(n) return distinct n.name"}, {"query": "There is a book originally called Koumii Party, which is Chinese for \"Mommy Party\".", "cypher": "match (:ENTITY{name:'\u3053\u307f\u3063\u304f\u30d1\u30fc\u30c6\u30a3\u30fc'}) <- [:Relationship{name:' original name'}]- (h) return h.name"}, {"query": "Can you tell me about the school that specializes in visual communication arts?", "cypher": "match (h:ENTITY{name:' visual art convey'}) --(q) return q.name order by q.name limit 10"}, {"query": "I'm not sure if you can check all the information about the maintenance of the car on the 10th of December.", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name<>'13' return distinct x.name"}, {"query": "Do you know what Li Xianlian's work represents?", "cypher": "match (:ENTITY{name:'Li Xian, male, born in Beijing, 1938), graduated from Beijing Chinese Medical University, China Medical University, head of the ear, nose and throat department of West China Hospital."}, {"query": "Do you know anything about the work of 8th Triton?", "cypher": "match (:ENTITY{name:'eight-three-ton'}) <--(n) return n.name"}, {"query": "Do you know of any other information about the state of the pastoral estate besides the historical event? Help me find 50 information in 3 layers.", "cypher": "match (:ENTITY{name:'state pastoral enclave'}) - [*1..2]->(p) where p.name <> 'historical event in China' return p.name limit 50"}, {"query": "Do you know how much land the Zhuangdao Elementary School occupies?", "cypher": "match (:ENTITY{name:'Juzhangdo Primary School'}) - [:Relationship{name:'School occupies area'}]-> (m) return distinct m.name"}, {"query": "I want to see the rest of the work in the Tomb of Zhou Wenling, with no more than three layers of relationships.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name<>'weekly' return distinct x.name"}, {"query": "Can you help me understand the two most famous attractions in Cat Baia besides the plum blossoms and the flowers?", "cypher": "match (n:ENTITY{name:'Catswings Bay'}) - [:Relationship{name:'Famous attractions'}]->(h) where h.name <> 'Plum' and h.name <> 'Flower' return distinct h.name limit 2"}, {"query": "Can nitric oxide dissolve in water? What are the main industries in which it is used?", "cypher": "match (:ENTITY{name:'nitrous oxide'}) - [:Relationship{name:'water-soluble'}]->(n) return n.name as name union all match (:ENTITY{name:'nitrous oxide'}) - [:Relationship{name:'application'}]->(m) return m.name as name"}, {"query": "What theory comes from applied psychology?", "cypher": "match (:ENTITY{name:'applied psychology'}) <- [:Relationship{name:'source'}]- (x) return distinct x.name"}, {"query": "The film is based on the life of the famous writer, who was born in the city of Chongqing in the late 19th century.", "cypher": "match (:ENTITY{name:'Chai Jing'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'representative work'}]->(q) where q.name <> 'Relationship' return distinct q.name limit 5"}, {"query": "The date of birth is September 1964 and the artist's most representative work is his painting \"The Man Who Was Born in 1964\".", "cypher": "match (:ENTITY{name:'September 1964'}) <- [:Relationship{name:'date of birth'}]-(q),(q) - [:Relationship{name:'representing work'}]->(x) return x.name order by x.name limit 10"}, {"query": "The incident was caused by an explosion at a biochemical plant in Yunnan, China.", "cypher": "match (:ENTITY{name:'A chemical plant explodes'}) <- [:Relationship{name:'event'}]- (m) return m.name"}, {"query": "I'm looking for a lucky company, what year did I start?", "cypher": "match (p:ENTITY{name:'lucky company'}) return p.time"}, {"query": "The Internet product 180 returns you know?", "cypher": "match (:ENTITY{name:'180 return'}) --(x) with x order by x.name where x.name <> 'Internet product' return x.name"}, {"query": "What is the shortest distance between Dawangtu Village and Stone Tower House Village on the 3rd floor?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Gangdong Village'}) - [*..3]-(b:ENTITY{name:'Gangdong Village'})) return count ((p)"}, {"query": "What accident happened in Phowa, India?", "cypher": "match (h:ENTITY{name:'Purwa of India'}) <- [:Relationship{name:'Places of occurrence'}]- (m) return distinct m.name"}, {"query": "Do you know which pavilion is hosting the 2011 Shenzhen China Real Estate Exchange during the Spring Festival?", "cypher": "match ((m:ENTITY{name:'2011 China Shenzhen [Spring] Real Estate Exchange'}) - [:Relationship{name:'hosting exhibition hall'}]-> (q) return q.name"}, {"query": "What are some of the works that the professor has represented?", "cypher": "match (:ENTITY{name:'professor'}) <- [:Relationship{name:'profession'}]-(n) - [:Relationship{name:'representative work'}]->(m) return m.name skip 2 limit 1"}, {"query": "Help me find the species of the genus Arctium.", "cypher": "match (:ENTITY{name:'they belong to Arca'}) <-[:Relationship{name:'they belong to'}]-(m) return distinct m.name limit 10"}, {"query": "What is the main achievement of a woman?", "cypher": "match (:ENTITY{name:' female'}) <- [:Relationship{name:' gender'}]-(m),(m) - [:Relationship{name:' major achievements'}]->(p) return p.name order by p.name limit 1"}, {"query": "What chemical is C5H1004?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What is the name of the exhibition for the 2010 Xi'an International Furniture Fair in Xi'an, Central West China?", "cypher": "match ((h:ENTITY{name:'2010 Xi'an International Furniture Fair in the Central West of China'}) - [:Relationship{name:'exhibition name'}]-> (n) return n.name"}, {"query": "The article was written by a journalist from the Iranian Air Force who was a member of the Iranian Air Force.", "cypher": "match (:ENTITY{name:'1.9 Iran Boeing crash'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'Foreign historical event' return m.name limit 3"}, {"query": "Can you give me the address of Sunli?", "cypher": "match (p:ENTITY{name:'Sennheiser'}) return p.location The name of the match is"}, {"query": "What fish has a rounded tip and a prominent head after the nostrils?", "cypher": "match (:ENTITY{name:' kissing end rounded, head significantly raised after nostrils\u3002'}) --(x) return distinct x.name"}, {"query": "Find out more about the three-tiered relationship between the Tomb Green Spa and the Tomb of the Ancient Spring in Tump Town.", "cypher": "match (n:ENTITY{name:'Dump Tourist Area'}) - [*1..3]->(x) where x.name <>' Tomb Green Hot Springs Dump Town Aquicoke Hot Springs' return distinct x.name"}, {"query": "The following is a list of the top 5 information about 16KB of pre-shift processing technology and its application.", "cypher": "match (n:ENTITY{name:'pre-overlapping shift processing techniques and application practices'}) - [:Relationship*]->(x) where x.name <>'16' return distinct x.name limit 5"}, {"query": "Can you list the names of the relationships within the two layers of the three drought maps?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'drought map'}) UNWIND relationships(path) AS rel return rel.name limit 3"}, {"query": "The story of the ice star legend BFRIEND in less than 10 words?", "cypher": "match (x:ENTITY{name:' Ice Star Legend BFRIEND'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "What is the name of the accident that happened at Pudong International Airport in Shanghai?", "cypher": "The following is a list of all known flights to Shanghai Pudong International Airport."}, {"query": "Can you tell me everything you know about Texas A&M Information Co. Ltd.?", "cypher": "match (:ENTITY{name:'Texas Antenna Information Co. Ltd'}) - [:Relationship*1..3]-(p) return p.name limit 10 This is a list of all the different ways The Texas Antenna is credited in the database."}, {"query": "Who was born on the same day as Aevarsson \u00c1rmann Peter and what are the labels of these people? Give me the number of labels in reverse order of the total number of labels.", "cypher": "The following is a list of all the different ways Aevarsson \u00c1rmann Peter is credited in the database:"}, {"query": "What chemical is C18H25NO3?", "cypher": "The name of the function is the name of the function itself."}, {"query": "What are the fishes in the gun turtle family?", "cypher": "match (:ENTITY{name:'scotch'}) --(x) return distinct x.name"}, {"query": "Help me find five international waterways.", "cypher": "match (:ENTITY{name:' international waterway'}) <- [:Relationship{name:' status'}]-(m), (m) - [:Tag{name:' tag'}]->(n) where n.name='geography' return distinct m.name limit 5"}, {"query": "What kind of label attribute does the 101st Airborne 506th Regiment 2nd Battalion E even involve?", "cypher": "match (:ENTITY{name:'101 Airborne 506 Regiment 2 Battalion E'\u8fde'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "What are the occupations of students who graduated from Sichuan's Zhejiang Medical University?", "cypher": "match (:ENTITY{name:'Chicago State Medical College'}) <- [:Relationship{name:'Graduate School'}]- ((q),(q) - [:Relationship{name:'Profession'}]->(n) return distinct n.name"}, {"query": "What event is there with 300 presenters?", "cypher": "match (:ENTITY{name:'300'}) <- [:Relationship{name:'participation in the host'}]- (m) return distinct m.name"}, {"query": "What are the main awards of the local organizations/schools in Xi'an?", "cypher": "match (:ENTITY{name:'Xian'}) <- [:Relationship{name:'area'}]- ((h) - [:Relationship{name:'main award'}]->(n) return distinct h.name,n.name"}, {"query": "What information is there about the Millennium Tourist Sites?", "cypher": "match (:ENTITY{name:'Millennium tourist attraction'}) --(m) return m.name skip 5"}, {"query": "Can you recommend a few songs with Michael Jackson lyrics?", "cypher": "The name of the song is \"Relationship\" (or \"Relationship\")."}, {"query": "Can you tell me which schools are the main departments of the Finance School?", "cypher": "match (:ENTITY{name:'Financial School'}) <- [:Relationship{name:'Main School'}]- (h) return h.name order by h.name"}, {"query": "Can you list the types of relationships within the three layers that two of the two chambers of the Na'vi are involved in?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'\u5ba4\u5948\u795e'}) UNWIND relationships(path) AS rel return distinct rel.name limit 2"}, {"query": "Do you know the main department of the vocational technical school in Gurgaon?", "cypher": "match (:ENTITY{name:'Girumi City Vocational Technical School'}) - [:Relationship{name:'Main Faculty'}]-> (x) return x.name order by x.name"}, {"query": "What are the subclasses of the species?", "cypher": "match (:ENTITY{name:'sub-class'}) - [:Relationship{name:'includes '}]->(m) return distinct m.name"}, {"query": "What are the singles directed by MV director Jialippa?", "cypher": "match (:ENTITY{name:'climbed'}) <- [:Relationship{name:'MV director'}]-(p) - [:Relationship{name:'single name'}]->(n) return distinct n.name"}, {"query": "What else do you know about the entertainment 101st Marriage Proposal?", "cypher": "match (:ENTITY{name:'101st Marriage Proposal'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'entertainment work' return p.name"}, {"query": "What is the name of the accident that happened in a foreign country where 10 people were killed in a racing accident?", "cypher": "match (:ENTITY{name:'10 people killed on the spot'}) <- [:Relationship{name:'casualties'}]- (m) return m.name"}, {"query": "Can you list some of the ships with discharge capacity of 1700 tons and a capacity of 2100 tons?", "cypher": "match (q:ENTITY{name:'standard 1700 tons, full load 2100 tons'}) <- [:Relationship{name:'drainage volume'}]- (h) return distinct h.name"}, {"query": "Which are the main departments of Isfahan University? Please give me one.", "cypher": "match (:ENTITY{name:'University of Isfahan'}) - [:Relationship{name:'main faculty'}]-> (n) return distinct n.name limit 1"}, {"query": "What chemical has a molecular weight of 179.22?", "cypher": "The name of the function is the name of the function itself."}, {"query": "I'm curious about the 1938 Wuhan General War.", "cypher": "match (:ENTITY{name:'1938 Wuhan General Battle'}) --(x) with x order by x.name return x.name"}, {"query": "Tell me one of the job opportunities for students who graduated from the West Virginia Medical School.", "cypher": "match (:ENTITY{name:'Dunesi Medical College'}) <- [:Relationship{name:'Graduate School'}]-(m) - [:Relationship{name:'Profession'}]->(n) return distinct n.name limit 1"}, {"query": "Can you recommend 5 shows from mainland China?", "cypher": "match (:ENTITY{name:'Mainland China'}) <- [:Relationship{name:'Country area'}]- (m) return distinct m.name limit 5"}, {"query": "7-Cyan-1-Cyanol is a rare compound, can you tell me where it boils?", "cypher": "match ((:ENTITY{name:'7-metha-1-methacrylate'}) - [:Relationship{name:'boiling point'}]-> (q) return q.name"}, {"query": "Do you know what chemical is the molecular formula is C6H11N2\u00b7Br?", "cypher": "match (:ENTITY{name:'C6H11N2\u00b7Br'}) <- [:Relationship{name:'molecular'}]- (m) return distinct m.name"}, {"query": "Can you find an artwork that teaches you the 5 layers of the relationship? Can you give me 5 messages?", "cypher": "match (n:ENTITY{name:'Teach you to learn the dialect'}) - [*]->(x) where x.name<>'Artwork' return distinct x.name limit 5"}, {"query": "What is the English translation of the Latin name Odocoileus virginianus thomasi?", "cypher": "match (x:ENTITY{name:'Odocoileus virginianus thomasi'}) <- [:Relationship{name:'Latin name'}]-(h) - [:Relationship{name:'English name'}]->(n) return distinct n.name limit 1"}, {"query": "The school was founded in 1902; its main department was established in 2001.", "cypher": "match (:ENTITY{name:'1902 opened; 2001 founded'}) <- [:Relationship{name:'time of founding'}]- ((q),(q) - [:Relationship{name:'main faculty'}]->(p) return distinct p.name"}, {"query": "What is Sanjay Temple also known as?", "cypher": "match (:ENTITY{name:'Sanye Temple'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'alpha name'}]->(n) return distinct n.name"}, {"query": "Did you have trouble sending my publication information about Suzy's rise in the two-tier relationship in Guam?", "cypher": "match (n:ENTITY{name:' send Suzy up from Guam'}) - [:Relationship*1..2]->(x) where x.name <> 'publication' return distinct x.name"}, {"query": "What kind of mouse lighting machine uses basic parametric working?", "cypher": "match (:ENTITY{name:' basic parameter working'}) <- [:Relationship{name:' light machine'}]- (p) return p.name"}, {"query": "What are the features of a one-way online streaming service?", "cypher": "match (:ENTITY{name:'one-way online live'}) <- [:Relationship{name:' service'}]- ((h) - [:Relationship{name:' characteristics'}]->(n) return distinct n.name"}, {"query": "Apart from the level A and level III hospitals, what else do you know about the first hospital in Nanjing?", "cypher": "match (:ENTITY{name:'Nanjing City First Hospital'}) - [*1..2]->(p) where p.name <> 'three-level A etc' return p.name limit 20"}, {"query": "The book is written by a young man named Yuri, who is a student of the University of Tokyo.", "cypher": "match (:ENTITY{name:'Relationship{name:'The year of creation'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'The author'}) ->(m) return m.name as name"}, {"query": "What is the synonym of the word \"simplified\"?", "cypher": "Match (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name) - (name (name) - (name) - (name) - (name) - (name (name) - (name) - (name) (name (name) (name) (name) (name) (name) (name (name) (name) (name) (name) (name (name) (name) (name) (name (name) (name) (name) ("}, {"query": "I'm going to be a little bit more specific about this, but I'm going to be very specific about this.", "cypher": "match (:ENTITY{name:'Carolina Gruska'}) --(n) return n.name order by n.name"}, {"query": "Is the Chuangtai Steel Group Limited a public company or a private company?", "cypher": "match (:ENTITY{name:'Conglomerate of China's largest steel company'}) - [:Relationship{name:'Company character'}]->(n) return n.name"}, {"query": "Can you recommend some of the famous attractions in the area of 31.2 hectares?", "cypher": "match (:ENTITY{name:'31.2 hectares'}) <- [:Relationship{name:'occupies area'}]-(h),(h) - [:Relationship{name:'famous attractions'}]->(n) return distinct n.name"}, {"query": "I would like to know what are the representative works of Al-Askari [a writer]?", "cypher": "match (:ENTITY{name:'A city [author]'}) - [:Relationship{name:'representing work'}]-> (p) return p.name skip 1"}, {"query": "Can you list three famous sites with an area of 122 acres?", "cypher": "match (:ENTITY{name:'122'}) <- [:Relationship{name:'occupies area'}]- ((q) - [:Relationship{name:'famous attractions'}]->(x) return distinct x.name limit 3"}, {"query": "To list the two main achievements of Dong Zhengli, what is better than the title of Employment Advanced Person of the Capital Master's University in 2009 and the title of Outstanding Counselor of the University of Beijing in 2008?", "cypher": "match (n:ENTITY{name:'\u8463\u94f6\u82b1'}) - [:Relationship{name:'main achievement'}]->(h) where h.name <> '2009 Awarded Advanced Personal Title for Employment at Capital Master's University' and h.name <> '2008 Awarded Outstanding Counselor at Beijing University' return distinct h.name limit 2"}, {"query": "Help me find five of Cao's paintings.", "cypher": "match (:ENTITY{name:'\u66f9\u690d'}) <- [:Relationship{name:'author'}]-(m) return distinct m.name limit 5"}, {"query": "Can you write me five messages about the collapse of the construction site of 11.13 in Shijiazhuang?", "cypher": "match (:ENTITY{name:'11.13 Stonehouse One construction site collapse accident'}) --(p) with p order by p.name return p.name limit 5"}, {"query": "It is said that the 3rd Shanghai International Liquid Food Processing and Packaging Technology Expo 2011 is short-lived, can you tell me the exact time of the exhibition?", "cypher": "match ((p:ENTITY{name:'2011 Third Shanghai International Liquid Food Processing and Packaging Technology Exhibition'}) - [:Relationship{name:' Exhibition time'}]-> (q) return q.name"}, {"query": "Can you name three people who have a relationship with the rose garden on the third level of the label?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'crow's nest'}) return distinct n.name limit 3"}, {"query": "Which music event is held at 751D-Park Beijing Fashion Design Square?", "cypher": "match (:ENTITY{name:'751D-Park Beijing Fashion Design Square'}) <- [:Relationship{name:'location held'}]- (n) return n.name"}, {"query": "Can you find me three tags for a 1957 26mm signal gun?", "cypher": "match (q:ENTITY{name:'1957 model year 26mm signal gun'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 3"}, {"query": "Can you tell me where the monument to the 18th martyr is located?", "cypher": "match ((:ENTITY{name:'Triple-Eighteen Martyrs' Monument'}) - [:Relationship{name:'Location'}]-> (m) return m.name"}, {"query": "Can you find me two license plates where Cloud J is and introduce them?", "cypher": "match (:ENTITY{name:'cloud J'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Can you tell me the English name of the Dickinson jellyfish?", "cypher": "match (:ENTITY{name:'Dickinson Jellyfish'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'foreign name'}]->(q) return distinct q.name"}, {"query": "What do you understand about the 100 classic laws of management in the field of anthropology?", "cypher": "match (p:ENTITY{name:'100 classic laws of management'}) --(m) with m order by m.name where m.name <> 'anthropology' return m.name"}, {"query": "What kind of relationships are there in the two layers that Chen Dazhi is talking about?", "cypher": "The following pages link to The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns"}, {"query": "Help me find a drug for the polysaccharide hormone.", "cypher": "match (:ENTITY{name:'polypeptide hormone'}) <- [:Relationship{name:'type'}]- ((m) return distinct m.name limit 1"}, {"query": "What are the tags for each game? Please list them in order of the number of tags for each game.", "cypher": "match (n:ENTITY{name:'doggy backyard'}) - [:Relationship{name:'area'}]->(:ENTITY) <- [:Relationship{name:'area'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Give me five actors, where they were born.", "cypher": "match (:ENTITY{name:' actor'}) <- [*]-(m), (m) - [:Relationship{name:' place of birth'}]->(n) return m.name, n.name limit 5"}, {"query": "The film is a sequel to the film The Last of Us.", "cypher": "match (:ENTITY{name:'03 watch the movie'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "Find out the five facts about the person named Homsi Majd.", "cypher": "match (n:ENTITY{name:'Homsi Majd'}) - [*]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "Can you help me find the molecule of methane?", "cypher": "match (:ENTITY{name:'sodium methane'}) - [:Relationship{name:'molecular mass'}]-> (x) with x order by x.name return x.name"}, {"query": "Please help me find five books for $100 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'100.00\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "What is the shortest path between the two levels of the new Dragon Gate and the new Dragon Gate?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Snow White'}) - [*..2]-(b:ENTITY{name:'Snow White'2'})) return count ((p)"}, {"query": "Tell us about the story of the two-tiered relationship between the mother of the mini-novel stealer?", "cypher": "match (n:ENTITY{name:' stealth mother'}) - [:Relationship*1..2]->(x) where x.name <> 'micro novel' return distinct x.name"}, {"query": "Can you please provide me with five profiles of Ladner Luca in the five levels of his relationship?", "cypher": "match (n:ENTITY{name:'Ladner Luca'}) - [*1..5]->(x) where x.name<> 'person' return distinct x.name limit 5"}, {"query": "What else do you know about von Kamen, apart from the Jews?", "cypher": "match (:ENTITY{name:'J.K.Kamen'}) - [*1..2]->(p) where p.name <> 'Jews' return p.name limit 20"}, {"query": "What are the types of relationships within the three layers of the seven emerging industries that you can tell us about?", "cypher": "The following is a list of the major industries in the world by their market capitalization."}, {"query": "The Asian Club Cup was held in which year? Who won?", "cypher": "match (:ENTITY{name:'Asian Club Cup'}) - [:Relationship{name:'time'}]->(n) return n.name as name union all match (:ENTITY{name:'Asian Club Cup'}) - [:Relationship{name:'champion'}]->(m) return m.name as name"}, {"query": "Can you find me three species of bats and describe them?", "cypher": "match (:ENTITY{name:'Nightwing'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "The book was published in which year?", "cypher": "match (:ENTITY{name:'laughing your ass off'}) <- [:Relationship{name:'book name'}]- ((p) - [:Relationship{name:'publication time'}]->(n) return distinct n.name"}, {"query": "Can you list me some of the stainless steel available in GB/T 1220-1992 standard?", "cypher": "The following is a list of the most commonly used parameters for the calculation of the value of a variable:"}, {"query": "Can you tell me about the four labels of Philippe Soutto besides the athlete?", "cypher": "match (:ENTITY{name:'Philipe Soutto'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'athlete' return p.name limit 4"}, {"query": "I'm wondering if you can tell me which ships have a speed of 32 knots?", "cypher": "match (:ENTITY{name:'32 section'}) <- [:Relationship{name:'flight speed'}]- (x) return distinct x.name"}, {"query": "Can you list the eight novels in the series?", "cypher": "match (:ENTITY{name:'in the connection'}) <- [:Relationship{name:'in the connection'}]- (q) return q.name limit 8"}, {"query": "The following is a list of 32 CCTV programs that are available in Japan.", "cypher": "match (n:ENTITY{name:'CCTV program supporting book\u00b7Japanese session123'}) - [:Relationship*1..2]->(x) where x.name <>'32' return distinct x.name"}, {"query": "Can you tell me about the five social medicine relationships within the sixth level of Shenzhen Shao Tong Hospital?", "cypher": "match (n:ENTITY{name:'Shenzhen Shaoshan National Hospital'}) - [*1..6]->(x) where x.name <>'social practice' return distinct x.name limit 5"}, {"query": "Do you know what Han Xiaozhi does for a living?", "cypher": "match (:ENTITY{name:'Han xiaozhi'}) <- [:Relationship{name:'foreign language name'}]-(p) - [:Relationship{name:'profession'}]->(m) return distinct m.name limit 1"}, {"query": "The most recent hot millennial Guardian: I'm a snake girl I'm afraid of whose novel, what genre of novel?", "cypher": "match ((:ENTITY{name:'Millennium guard: I am the snake woman I fear'}) - [:Relationship{name:'novel type'}]-> (n) return n.name"}, {"query": "The first is that the Muslims are not allowed to go to the mosque, but they are allowed to go to the mosque.", "cypher": "match (n:ENTITY{name:'space-time-specifically open'}) - [:Relationship*1..3]->(x) where x.name <> 'repeated' return distinct x.name"}, {"query": "Can you get me two medical books and tell me who wrote them?", "cypher": "match (:ENTITY{name:' medical books'}) <- [:Tag{name:' labels'}]-(h),(h) - [:Relationship{name:' author'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Have you heard of the game?", "cypher": "match (n:ENTITY{name:'card'}) --(x) return x.name"}, {"query": "There is a software that is responsible for payments and remittances, this software is called nickname?", "cypher": "match (:ENTITY{name:'payment, refund and transfer etc'}) <- [:Relationship{name:'service project'}]- (p) return p.name"}, {"query": "What journals were published in 2008? Can you recommend two?", "cypher": "match (:ENTITY{name:'2008'}) <- [:Relationship{name:'publication time'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='journal' return m.name limit 2"}, {"query": "Do you know about the main award of this school in the national key town of Zhejiang, Sichuan Province? Please give me 5 articles.", "cypher": "match (:ENTITY{name:'Relationship{name:'main award'}]->(p) return p.name order by p.name limit 5"}, {"query": "Can you find me three books priced at $29 and when they will be published?", "cypher": "match (:ENTITY{name:'29\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Can you give me some information about the 118114 website?", "cypher": "match (:ENTITY{name:'118114 group'}) --(p) with p order by p.name where p.name <> 'website' return p.name"}, {"query": "Please tell me what is the relationship between the third layer of labels and the verbal novel?", "cypher": "The following pages link to The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Story of a Girl: The Girl: The Story of a Boy: The Story of a Girl: The Story of a Boy: The Story of a Boy: The Story of a Boy: The Story of a Boy: The Story of a Boy: The Story of a Boy: The Story of a Boy: The Story of a Boy: The Story of a Boy"}, {"query": "I wonder what Matzka does for a living now?", "cypher": "match (:ENTITY{name:'Matzka'}) - [:Relationship{name:'profession'}]-> (h) return h.name order by h.name"}, {"query": "Do you know of five profiles of Dulin Brice, born in Agen, with no more than four levels of relationships?", "cypher": "match (n:ENTITY{name:'Dulin Brice'}) - [*1..4]->(x) where x.name<>'Agen' return distinct x.name limit 5"}, {"query": "I wonder what William Francis Gibbs does for a living?", "cypher": "match (:ENTITY{name:'William Francis Gibbs'}) <- [:Relationship{name:' Chinese name'}]- ((n) - [:Relationship{name:' profession'}]->(x) return distinct x.name limit 1"}, {"query": "GodMobi Huawei Asus Eee PC U3 4400mm Laptop Battery What color is it?", "cypher": "match (:ENTITY{name:'GodMobi \u534e Asus Eee PC U3 4400 mAh laptop battery, is an electronic product, the battery type is lithium ion battery .'}) <- [:Describe{name:'description'}]-(n) - [:Relationship{name:'product color'}]->(m) return distinct m.name"}, {"query": "Can you tell me the main work of 10 weeks of umbrellas?", "cypher": "match (:ENTITY{name:'week umbrella'}) - [:Relationship{name:'main work'}]-> (x) return x.name limit 10"}, {"query": "Can you recommend a game software with seven-card studs?", "cypher": "match (:ENTITY{name:'seven-sided board'}) <- [:Relationship{name:'game content'}]- (p) return distinct p.name"}, {"query": "The .grf file should be presented with no more than ten tags.", "cypher": "match (:ENTITY{name:'.grf file'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 10"}, {"query": "Do you know what the main awards are for people with Italian citizenship?", "cypher": "match (:ENTITY{name:' Italy'}) <- [:Relationship{name:' nationality'}]-(p) - [:Relationship{name:' main award'}]->(n) return n.name order by n.name limit 10"}, {"query": "I'm not sure if you can tell me anything about the book, but I'm not sure if you can tell me anything about the book.", "cypher": "match (:ENTITY{name:'(LL*) integer'}) --(h) with h order by h.name where h.name <> 'books' return h.name"}, {"query": "What are the other names of the Eastern Tiger Camp? Can you name three?", "cypher": "match (:ENTITY{name:'Tonghua Tiger Camp'}) <- [:Relationship{name:'Chinese name'}]-(n) - [:Relationship{name:'alpha name'}]->(q) return distinct q.name limit 3"}, {"query": "Can you help me find an English quarterly?", "cypher": "match (p:ENTITY{name:'quarterly'}) <--(x) --> ((q:ENTITY{name:' in English'}) return x.name"}, {"query": "Can you get me two management books and tell me their price?", "cypher": "match (:ENTITY{name:'manager's book'}) <- [:Tag{name:'tag'}]-(h),(h) - [:Relationship{name:'pricing'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "Where is the main editor of the 2012 Zhejiang Accounting Practice Qualification Exam - Primary Accounting Computerised Exam Briefing and Classification Problem Book?", "cypher": "match ((q:ENTITY{name:'2012 Zhejiang Accounting Practice Qualification Paperless Exam - Primary Accounting Computation Exam Briefing and Classification Question Book'}) - [:Relationship{name:'main editor'}]-> (h) return h.name"}, {"query": "I want to know about the school in the second level of relations between the University of Yamato, where Zhang Weiqi is the current president?", "cypher": "match (n:ENTITY{name:'Yakuta University'}) - [:Relationship*1..2]->(x) where x.name <>'Zhang Weiqi' return distinct x.name"}, {"query": "Can anyone name two people who have a relationship with Gao Xiaowen?", "cypher": "The name of the game is \"Tag\" (sometimes called \"Tag\") and the name of the game is \"Tag\" (sometimes called \"Tag\")"}, {"query": "This guy's brokerage is Scream Productions, do you know what his five professions are?", "cypher": "match (:ENTITY{name:'screaming factory'}) <-[:Relationship{name:'brokerage company'}]-(n) -[:Relationship{name:'profession'}]->(q) return q.name order by q.name limit 5"}, {"query": "What are the labeling characteristics of the industrial product called C12-14-cholestyramine?", "cypher": "match (:ENTITY{name:'C12-14-tetrahydrocannabinol'}) - [:Tag{name:'label'}]-> (p) with p order by p.name where p.name <> 'industrial product' return p.name"}, {"query": "What are the three professions that Zhejiang Yanxians can do besides being party secretaries?", "cypher": "match (:ENTITY{name:'Zhejiang Shan'}) <- [:Relationship{name:'birthplace'}]-(h) - [:Relationship{name:'profession'}]->(q) where q.name <> 'party secretary' return distinct q.name limit 3"}, {"query": "Can you tell me about the 10 things you can do about the series, the Heroes of Chaos 2?", "cypher": "match (:ENTITY{name:'Gran Shadow of the Moon 2 \u9ed1\u9f99\u5e2e'}) --(x) with x order by x.name return x.name limit 10"}, {"query": "Find out what chemical boils at 98.4\u00b0C.", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What is the shortest path between the two levels of Enzo Village and Teaching Camp?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'\u6069\u7956\u6751'}) -[:Relationship*..2]-(b:ENTITY{name:'Teaching camp'})) return count ((p)"}, {"query": "Do you know the details of Wang Yang's gift of the sky in the old three-tier relationship?", "cypher": "match (n:ENTITY{name:'Tang\u6c60\u8d60\u9001\u8001'}) - [:Relationship*1..2]->(x) where x.name<>'\u738b\u6d0b' return distinct x.name"}, {"query": "What is the shortest distance between the site of Sihu and the site of the Neolithic site of the Three Kingdoms?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Situation of the Western Hemisphere'}) - [*..2]-(b:ENTITY{name:'Situation of the Neolithic Era of the Three Kingdoms'})) return count ((p)"}, {"query": "I want five pieces of information about Barzak's Euryne Granta.", "cypher": "match (n:ENTITY{name:'O.Y.Grantai'}) - [:Relationship*]->(x) where x.name <>'Barzak' return distinct x.name limit 5"}, {"query": "Do you know what is the brand name of Baidu Online Network Technology Limited?", "cypher": "match (:ENTITY{name:'Baidu Online Network Technology Ltd'}) <- [:Relationship{name:' Production company'}]- (q) return distinct q.name"}, {"query": "Can you name the names of the five Lu Chanbens?", "cypher": "match (:ENTITY{name:'Lu Ch'i'ben'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'alpha name'}]->(h) return h.name order by h.name limit 5"}, {"query": "What models of Dell's exterior and other products are there? Can you name nine?", "cypher": "match (q:ENTITY{name:'del'}) <-[:Relationship{name:'brand'}]- (h) return h.name limit 9"}, {"query": "Please list me the three main departments of the Jilin Academy of Animation's Film and Television Drama School.", "cypher": "match (:ENTITY{name:'Chilean Academy of Animation's Film and Television Theatre School'}) - [:Relationship{name:'Main Faculty'}]-> (p) return distinct p.name limit 3"}, {"query": "What exhibition is coming on October 26th and 28th?", "cypher": "match (:ENTITY{name:'October 26, 2011 to October 28, 2011'}) <- [:Relationship{name:'time'}]- (h) return h.name"}, {"query": "The situation on Mount Fuji, can you explain something?", "cypher": "match (:ENTITY{name:'Vojun Mountain'}) --(q) return distinct q.name limit 1 The name of the match is"}, {"query": "Can you list some TV channels on January 1, 1998?", "cypher": "match (:ENTITY{name:'January 1, 1998'}) <- [:Relationship{name:'time of start'}]- (q) return distinct q.name"}, {"query": "How big is the model of the war axe?", "cypher": "Match (:ENTITY{name:'Taxaxax[Easyriders Stream-liner]]'}) - [:Relationship{name:'model size'}]->(m) return distinct m.name"}, {"query": "Can you tell me about the five relationships that are included in the four tiers of the Xinjiang Yuzhou-Kazakhstan Autonomous Region?", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:' Xinjiang Yinjiang Autonomous Region'}) UNWIND relations(path) AS rel RETURN rel.name limit 5"}, {"query": "What software has been released by Shanghai Star Computer Software Ltd?", "cypher": "match (:ENTITY{name:' Shanghai Astro Computer Software Co. Ltd'}) --(x) return distinct x.name"}, {"query": "What is the name of the neutron star discovered by Robert Duncan?", "cypher": "match (:ENTITY{name:'Robert Duncan'}) <- [:Relationship{name:'discoverer'}]- ((m), (m) - [:Relationship{name:'classification'}]->(n) where n.name='neutron star' return distinct m.name"}, {"query": "I need to know 5 things about this organization Cool TV?", "cypher": "match (n:ENTITY{name:'cool on TV'}) - [*]->(x) where x.name <> 'organization' return distinct x.name limit 5"}, {"query": "Can you tell me which books are published on 9/1/2012?", "cypher": "match (:ENTITY{name:'2012/9/1'}) <- [:Relationship{name:' time of publication'}]- ((x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name"}, {"query": "And what are the labels of each of these people, and how many of them are listed from big to small by the number of labels?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "I want a great horror novel with a plot and a cynical doctor with no less than two levels of relationship details.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name<>' a plot is best for a horror fantasy' return distinct x.name"}, {"query": "Can you recommend the three novels that are currently being re-released?", "cypher": "The following pages link to List of Chinese novels by name:"}, {"query": "Help me find the five types of snakes in the family of the belly snakes.", "cypher": "match (:ENTITY{name:' family of snakes'}) <- [:Relationship{name:' family of snakes'}]-(m) return distinct m.name limit 5"}, {"query": "The first thing I did was to find out about the five 32 dollar reverse dream, fearless information resources.", "cypher": "match (n:ENTITY{name:'reverse dream, fearless'}) - [:Relationship*]->(x) where x.name <>'32' return distinct x.name limit 5"}, {"query": "Can you find me 5 books priced at $16 and when they will be published?", "cypher": "match (:ENTITY{name:'16\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "And tell me about the 12.23 Jun Jun State crash?", "cypher": "match (:ENTITY{name:'12.23 Yangzhou special accident'}) --(q) with q order by q.name return q.name"}, {"query": "You don't know what the three levels of relationships are that are covered by the primary and secondary schools in Chiricahua?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Chongqing City Primary School'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "Can you list the personal information of the Frenchman Hugues R\u00e9my's third level of relationship?", "cypher": "match (n:ENTITY{name:'Hugues R\u00e9my'}) - [*1..3]->(x) where x.name <>'France' return distinct x.name"}, {"query": "This C programming experimental guide and homework book that the teacher made us buy, when is the release date?", "cypher": "match ((:ENTITY{name:'C programming experiment guidance and homework set'}) - [:Relationship{name:'publish date'}]-> (p) return p.name"}, {"query": "What other tags are there for 0554 Returns Net with technical tag attributes?", "cypher": "match (:ENTITY{name:'0554 return net'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'technology' return x.name"}, {"query": "Do you know where the meeting that closed on August 20, 2017 was?", "cypher": "match (h:ENTITY{name:'August 20, 2017'}) <- [:Relationship{name:' closing time'}]- (x) return distinct x.name"}, {"query": "What is the CAS number of 1-acetylmethacrylate, please help me see?", "cypher": "match ((:ENTITY{name:'1-ethyl chloride'}) - [:Relationship{name:'CAS number'}]-> (p) return p.name"}, {"query": "What is the difference between the old and the new ink paintings?", "cypher": "match (:ENTITY{name:'\u5143\u4ee3'}) <- [:Relationship{name:' date of creation'}]-(m), (m) - [:Relationship{name:' painting type'}]->(n) where n.name='ink painting' return distinct m.name"}, {"query": "What type of drip panel has a standard test condition of 1000W/m2, 25\u00b0C, AM1.5?", "cypher": "The value of the data is calculated by the following equation:"}, {"query": "What is the shortest path between the cone and the cone 2?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortestpaths'}) -[:Relationship*..2]-(b:ENTITY{name:'shortestpaths'})) return count ((p)"}, {"query": "Do you know the specific situation of Ben-Gurion, B?", "cypher": "match (m:ENTITY{name:'B\u00b7'}) --(q) return distinct q.name"}, {"query": "Tell me the Chinese names of the three river umbrellas.", "cypher": "match (:ENTITY{name:'\u4e00\u5ddd\u70df\u96e8'}) - [:Relationship{name:'Chinese name'}]-> (h) with h order by h.name return h.name limit 3"}, {"query": "The following is a list of the top 10 political figures in the country:", "cypher": "match (n:ENTITY{name:'\u8bb8\u5143'}) - [*1..4]->(x) where x.name <> 'political figure' return distinct x.name"}, {"query": "What is the name of the philosophical genre that belongs to empiricism and idealism?", "cypher": "match (:ENTITY{name:' empiricism and idealism'}) <- [:Relationship{name:' philosophical genre'}]- (p) return distinct p.name"}, {"query": "Can you recommend some RPGs?", "cypher": "match (:ENTITY{name:'RPG role-playing game'}) <- [:Relationship{name:'game type'}]- (q) return distinct q.name"}, {"query": "Can you list three main achievements of this Chinese person?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]- ((n) - [:Relationship{name:'main achievements'}]->(p) return p.name skip 1 limit 5"}, {"query": "Can you recommend seven books for history class?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Please list me the top three schools with the International Education Academy as their main department.", "cypher": "match (:ENTITY{name:' International School of Education'}) <- [:Relationship{name:' Major School of Education'}]- (x) return x.name order by x.name limit 3"}, {"query": "Tell me, apart from being nominated for Best Actor at the 2nd Korea Nights Film Awards and Best Newcomer at the 35th Korea Film Awards, what are the two main achievements of Anja?", "cypher": "match (n:ENTITY{name:'Anzai-chan'}) - [:Relationship{name:'Main achievement'}]->(h) where h.name <> 'Best Actor at the 2nd Korea Nights Film Awards' and h.name <> 'Nominated for Best Newcomer at the 35th Korea Aquarius Film Awards' return distinct h.name limit 2"}, {"query": "Can you tell me the main achievements of Nurblit?", "cypher": "match (:ENTITY{name:'Nurbuly'}) - [:Relationship{name:'Main achievements'}]-> (h) return h.name order by h.name"}, {"query": "Did any of the competitions in 2014 succeed? Can you tell me 15?", "cypher": "match (:ENTITY{name:'2014'}) <- [:Relationship{name:' time of holding'}]- (h) return h.name limit 15"}, {"query": "Can you list the 5 honorary awards that all the schools affiliated with Guangzhou University have received?", "cypher": "match (:ENTITY{name:'Changzhou University affiliated secondary school'}) <- [:Relationship{name:'Chinese name'}]-(x) - [:Relationship{name:'main award'}]->(q) return distinct q.name limit 5"}, {"query": "So, what are the top 5 facts about the new 022 missile speedboat?", "cypher": "match (:ENTITY{name:'022 new type missile speedboat'}) --(m) with m order by m.name return m.name limit 5"}, {"query": "The company is a small business, but it is a very small business.", "cypher": "match (p:ENTITY{name:'Simple Happy Company'}) return p.time"}, {"query": "Which exhibition is on 17 May 2012 or 19 May 2012?", "cypher": "match (:ENTITY{name:'May 17, 2012 19th'}) <- [:Relationship{name:' Exhibition time'}]- (p) return p.name"}, {"query": "What are some words associated with mining?", "cypher": "match (:ENTITY{name:'mining'}) <- [:Relationship{name:'field'}]- (x) return distinct x.name"}, {"query": "The report also highlights the need for a global strategy to combat corruption and corruption.", "cypher": "match (:ENTITY{name:'people'}) <- [:Relationship{name:'object'}]- (q) return distinct q.name"}, {"query": "What is the name of the Hindu and Jain architectural complexes in India in the Middle Ages?", "cypher": "match (:ENTITY{name:' Medieval Hindu and Jain architectural complexes in India\u3002'}) --(x) return distinct x.name"}, {"query": "The film is called 100 meters of sky and is there any other label?", "cypher": "match (:ENTITY{name:'100 meters of sky'}) - [:Tag{name:'tags'}]-> (n) with n order by n.name where n.name <> 'film' return n.name"}, {"query": "Can you tell me about the three layers of relationships involved in the welfare of birds?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'beneficial bird'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "I want to know about 007 One Key Root?", "cypher": "match (:ENTITY{name:'007 one key Root'}) --(h) with h order by h.name return h.name"}, {"query": "Find out about the personal information in the four-tier relationship of Karlsson Kim, who has five footballs?", "cypher": "match (n:ENTITY{name:'Karlsson Kim'}) - [*1..4]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "I'm not sure if you can tell me about the profile of the three-tiered relationship called \"Scented\" in Chinese.", "cypher": "match (n:ENTITY{name:'sweet'}) - [:Relationship*1..3]->(x) where x.name <>'sweet' return distinct x.name"}, {"query": "Do you know which clubs the player who joined in January 2000 played for? Can you name three?", "cypher": "match (:ENTITY{name:'January 2000'}) <- [:Relationship{name:'time in team'}]- ((x) - [:Relationship{name:'has played'}]->(m) return distinct m.name limit 3"}, {"query": "What is the shortest path between the International Politics major and the Diplomacy major in the two levels?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'international politics major'}) - [:Relationship*..2]-(b:ENTITY{name:'diplomacy major'})) return count ((p)"}, {"query": "What tourist attractions are there in Yangon?", "cypher": "match (:ENTITY{name:'Lenin Province Liaoning City'}) - [:Relationship{name:'the area'}] - ((m), (m) - [:Relationship{name:'famous places'}] - ((n)? return distinct m.name,n.name"}, {"query": "I wonder what the scope of application of history is?", "cypher": "match (n:ENTITY{name:' history'}) <- [:Relationship{name:' applied discipline'}]- ((m),(m) - [:Relationship{name:' scope of application'}]->(q) return distinct q.name limit 3"}, {"query": "Please help me find the names of the first five representatives of Christopher Simeonescu.", "cypher": "match (:ENTITY{name:'Christopher Simeonescu'}) - [:Relationship{name:'representing work'}]-> (n) return n.name order by n.name limit 5"}, {"query": "A label says 100W/200WLED industrial mine light?", "cypher": "match (:ENTITY{name:'100W/200WLED industrial mine lamp'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 1"}, {"query": "What are the main features of the newly developed 19talk software?", "cypher": "match ((:ENTITY{name:'19talk'}) - [:Relationship{name:'main function'}]-> (p) return p.name"}, {"query": "What is the name of the school in the town center of White Tower in the Bo mountains?", "cypher": "match (:ENTITY{name:'Bohasan area White Tower Town Center School'}) - [:Relationship{name:' abbreviated'}]-> (p) return distinct p.name"}, {"query": "What basketball events have the NBA hosted? Name 14?", "cypher": "match (:ENTITY{name:'NBA'}) <- [:Relationship{name:'hosting organization'}]- (x) return x.name limit 14"}, {"query": "Can you recommend eight Eastern fantasy novels?", "cypher": "The title of the game is \"Relationship\" (Relationship)"}, {"query": "When was Searchlight founded?", "cypher": "match (p:ENTITY{name:'Brighton Company'}) return p.time The name of the match is"}, {"query": "What do you know about the poem \"Bird's Song\"? Help me find the other four pieces of information in the 2nd layer.", "cypher": "match (:ENTITY{name:'bird song'}) - [:Relationship*1..2]-(p) where p.name <> 'poem' return p.name limit 4"}, {"query": "Please do you know who sang \"Leave It to the Moon\"?", "cypher": "match (:ENTITY{name:'release in the month of January'}) --(m) return m.name order by m.name limit 1"}, {"query": "What else is there to know about the 1957 release of the Mountain Top Black Dog Brothers?", "cypher": "match (:ENTITY{name:'Hilltop black dog brother'}) - [:Relationship*1..3]-(p) where p.name <> '1957' return p.name limit 6"}, {"query": "Please help me find three books for $200 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'100.00\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Help me find out who are the stars of three sci-fi dramas.", "cypher": "match (:ENTITY{name:'science fiction'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'starring'}]->(n) return m.name,n.name limit 3"}, {"query": "I want to translate the work of Hu Jintao: The Love: Five profiles of me and Dulas?", "cypher": "match (n:ENTITY{name:'the love: me and Duras'}) - [:Relationship*]->(x) where x.name <>'Manjigaru.Tropical courtyard' return distinct x.name limit 5"}, {"query": "Can you tell me about the three companies that were founded in 2013?", "cypher": "match (:ENTITY{name:'2013'}) <- [:Relationship{name:'time of establishment'}]-(n) - [:Relationship{name:'company name'}]->(q) return distinct q.name limit 3"}, {"query": "Is it true that the song is called the most beautiful bride?", "cypher": "match (n:ENTITY{name:'most beautiful bride'}) where n is not null return 1"}, {"query": "Do you have any great works by writers who died in 1966?", "cypher": "match (:ENTITY{name:'1966'}) <- [:Relationship{name:'date of death'}]-(m),(m) - [:Relationship{name:'representative work'}]->(h) return distinct h.name limit 1"}, {"query": "Do you have any people or things or skills that are related to basketball?", "cypher": "match (x:ENTITY{name:'basketball'}) <- [:Relationship{name:'sports program'}]- (p) return p.name limit 10"}, {"query": "Can you name five music albums released by Universal Records?", "cypher": "match (:ENTITY{name:'Universal Records'}) <- [:Relationship{name:'Record company'}]- (n) return distinct n.name limit 5"}, {"query": "Can you list the times of the 20 hour drive?", "cypher": "match (:ENTITY{name:'20 hours'}) <- [:Relationship{name:'run time'}]- (q) return q.name"}, {"query": "What are the names of the characters who are in the same rank as Cao Yanbo? What are their respective labels? Please list them in order of their number of labels from small to large.", "cypher": "match (n:ENTITY{name:'\u66f9\u826f\u6ce2'}) - [:Relationship{name:'\u519b'}]->(:ENTITY) <- [:Relationship{name:'\u519b'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Can you recommend some games for me to play in the costume category?", "cypher": "match (:ENTITY{name:'dressed'}) <- [:Relationship{name:'game category'}]- (q) return distinct q.name"}, {"query": "I would like to know the name of the novel in Chinese that is being published on the Chinese website.", "cypher": "match (:ENTITY{name:' starting point Chinese web'}) <- [:Relationship{name:' linking site'}]-(h),(h) - [:Relationship{name:' Chinese name'}]->(x) return distinct x.name limit 1"}, {"query": "In which publishing houses did Diderot's books appear?", "cypher": "match (:ENTITY{name:'Didro'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'publisher'}]->(q) return distinct q.name"}, {"query": "What chemical has the linear molecular formula C6H4ClNO2?", "cypher": "The name of the match is \"Relationship\" (Relationship)"}, {"query": "The book was published by the China Young Children's Press, and helped me find 10 books.", "cypher": "match (:ENTITY{name:'China Youth Children's Publishing House'}) <- [:Relationship{name:'China Youth Children's Publishing House'}]- (mn) return mn.name limit 10"}, {"query": "JB/Julia Bardera/Harudera Yuria have a voice for what character?", "cypher": "match (:ENTITY{name:'JB/Julia Bardera/Harudera Yuria'}) <- [:Relationship{name:'other names'}]- ((q),(q) - [:Relationship{name:'sounding'}]->(n) return distinct n.name limit 2"}, {"query": "You don't know what this lady does for a living? Can you name three things?", "cypher": "match (:ENTITY{name:' female'}) <- [:Relationship{name:' gender'}]-(p) - [:Relationship{name:' profession'}]->(q) return q.name order by q.name limit 3"}, {"query": "Can you find me three plants in the family of the ginger beetles and describe them?", "cypher": "match (:ENTITY{name:'Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What is the name of the TV series directed by Wang Min, starring Liu Wenhui, Liu Li, and others?", "cypher": "match (:ENTITY{name:'\u9ec4\u514b\u654f'}) <- [:Relationship{name:'director'}]-(m), (m) - [:Relationship{name:'lead actress'}]->(n) where n.name='Jin, Jin, Jin, Jin, Jin, Jin, Jin, Jin' return m.name"}, {"query": "Can you name the three different names of this place with the postal code 213000?", "cypher": "match (:ENTITY{name:'213000'}) <- [:Relationship{name:'postal area code'}]-(p),(p) - [:Relationship{name:'alias'}]->(h) return h.name order by h.name limit 3"}, {"query": "I want to know about the other 6 levels of this software.", "cypher": "match (:ENTITY{name:'Best children's park'}) - [*1..3]-(p) where p.name <> 'software' return distinct p.name limit 6"}, {"query": "I want to know about the label attributes of 1/4 theater?", "cypher": "match (:ENTITY{name:'1/4 play'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "If you are familiar with the online shopping platform 5054 Mall, tell us about its main business and what its products include.", "cypher": "match ((:ENTITY{name:'5054 shopping mall'}) - [:Relationship{name:'main business'}]-> (x) return x.name"}, {"query": "How much do you know about Sebastian LeRoy's major achievements?", "cypher": "match (p:ENTITY{name:'Sebastian Lelio'}) - [:Relationship{name:'major achievement'}]-> (h) return h.name order by h.name"}, {"query": "Can you tell me what other features this thing has, including the tourist shoes?", "cypher": "match (:ENTITY{name:'shoes'}) <-[:Relationship{name:'includes'}]-(x),(x) -[:Relationship{name:'attributes'}]->(n) return n.name order by n.name limit 10"}, {"query": "Can you tell me what his English name is Shandong Airlines Limited?", "cypher": "match (:ENTITY{name:'Santon Airlines Limited'}) <- [:Relationship{name:'company name'}]- ((x),(x) - [:Relationship{name:'foreign language name'}]->(q) return distinct q.name"}, {"query": "Can you list four movies that are going to be released in theaters?", "cypher": "match (:ENTITY{name:'drama film'}) <- [*]-(m), (m) - [:Relationship{name:'release time'}]->(n) return m.name, n.name limit 4"}, {"query": "I would like to know if any of the meetings are being attended by state-owned China.", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'Chamber of Commerce'}]- (p) return distinct p.name"}, {"query": "Where is Forty Pages located?", "cypher": "match (p:ENTITY{name:'forty-page company'}) return p.location"}, {"query": "Can you find an oil painter in Shanghai?", "cypher": "match (:ENTITY{name:' Shanghai'}) <- [:Relationship{name:'\u7c4d\u8d2f'}]- (mn) - [:Relationship{name:'profession'}]->(n:ENTITY{name:'painter'}) return mn.name"}, {"query": "Can you help me find a tag about the 2011 Shanghai International Agricultural Storage Equipment and Preservation Technology Expo?", "cypher": "match (:ENTITY{name:'2011 Shanghai International Agricultural Storage Equipment and Freshness Technology Exhibition'}) - [:Tag{name:'label'}]-> (p) with p order by p.name return p.name limit 1"}, {"query": "What journals were published in 2003? Can you recommend two?", "cypher": "match (:ENTITY{name:'2003'}) <- [:Relationship{name:'publication time'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='journal' return m.name limit 2"}, {"query": "What is the main career of the artist who has achieved the pioneering role of the Latter-day Saint?", "cypher": "match (h:ENTITY{name:'Relationship{name:' major achievement'}) - ((x),(x) - [:Relationship{name:' profession'}]->(m) return distinct m.name"}, {"query": "I'm not sure if it's good to have five pieces of information from the 83kg Frankie Sempero.", "cypher": "match (n:ENTITY{name:'Semporo Frankie'}) - [*]->(x) where x.name <>'83 kg' return distinct x.name limit 5"}, {"query": "eGoBuy software is his platform you know?", "cypher": "match (:ENTITY{name:'eGoBuy'}) <- [:Relationship{name:'software name'}]- ((x),(x) - [:Relationship{name:'software platform'}]->(q) return distinct q.name"}, {"query": "How about three graduates from Imperial University of Tokyo?", "cypher": "match (:ENTITY{name:'Tokyo Imperial University'}) <- [:Relationship{name:' Graduate School'}]- ((x) return distinct x.name limit 3]"}, {"query": "How many companies have been in business for 20 years?", "cypher": "match (p:ENTITY{time:'2020'}) return count ((p)"}, {"query": "Do you know which places and parks are on the 5th level of the label relationship?", "cypher": "The following is a list of the most commonly used tags in the game."}, {"query": "Can you name a match in the WNBA Super Series?", "cypher": "match (q:ENTITY{name:'World Futsal Super Series'}) <- [:Relationship{name:' belongs to series'}]- (p) return p.name"}, {"query": "Please tell me what is the relationship between the third tier label and the stock dividend?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'in share rate'}) RETURN distinct n.name"}, {"query": "Which books are in the same literary genre as Ms. Yang, and what are the labels on each?", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Z"}, {"query": "Can you tell me something else about 1237.", "cypher": "match (:ENTITY{name:'1237 year'}) --(q) with q order by q.name return q.name limit 1"}, {"query": "The first representative work of a person born in 1961 was?", "cypher": "match (:ENTITY{name:'1961'}) <- [:Relationship{name:'date of birth'}]-(x),(x) - [:Relationship{name:'representative work'}]->(n) return n.name order by n.name limit 1"}, {"query": "You have the top 5 messages from Paulo Trancoso?", "cypher": "match (m:ENTITY{name:'Paulo Trancoso'}) --(n) return distinct n.name limit 5 The name of the game is the same as the name of the game itself."}, {"query": "Please list the games in which Gretzky scored a goal.", "cypher": "match (:ENTITY{name:'Relationship{name:'goalkeeper'}]- (p) return distinct p.name"}, {"query": "Please answer one of the thirteen swords buried in heaven, who is the one who sounds a thousand palaces of smoke?", "cypher": "match (:ENTITY{name:'One of the thirteen knives of the heavenly tombs, the thousand-square-foot palace'}) <- [:Relationship{name:'identity'}]-(m),(m) - [:Relationship{name:'sounding'}]->(p) return distinct p.name"}, {"query": "Can you recommend five urban romance novels?", "cypher": "match (:ENTITY{name:'city idiom'}) <- [:Relationship{name:'novel type'}]- (x) return distinct x.name limit 5"}, {"query": "I'm not a street person, so you don't know?", "cypher": "match (:ENTITY{name:' I'm a passerby'}) --(q) return q.name order by q.name"}, {"query": "Do you know what kind of jobs are there for you to be a positive person in?", "cypher": "match (:ENTITY{name:'Shyun-woo was born in Taiwan, studied in Taiwan, served in the Taiwanese army, and then went to the United States, France for further studies\u3002'}) <- [:Describe{name:'description'}]-(x) - [:Relationship{name:'profession'}]->(m) return distinct m.name limit 5"}, {"query": "What is the blood type of six Japanese actors?", "cypher": "match (:ENTITY{name:'Japanese actor'}) <- [*]-(m), (m) - [:Relationship{name:'blood type'}]->(n) return m.name, n.name limit 6"}, {"query": "Cat's Paw is located in which city?", "cypher": "match (p:ENTITY{name:' Cat's Paw Company'}) return p.location The name of the company is not known"}, {"query": "What is the software information within the C++ language's Ruby-ROM Assistant 3 layer relationship?", "cypher": "match (n:ENTITY{name:'ROM assistant'}) -[:Relationship*1..3]->(x) where x.name<>'C++' return distinct x.name"}, {"query": "Can you recommend 5 real estate blocks for sale?", "cypher": "match (:ENTITY{name:' for sale'}) <- [:Relationship{name:' for sale'}]- (x) return distinct x.name limit 5"}, {"query": "The three professions that graduates of Hunan University are employed in", "cypher": "match (:ENTITY{name:'Hunan University'}) <- [:Relationship{name:'Graduate School'}]-(n) - [:Relationship{name:'Profession'}]->(q) return distinct q.name limit 3"}, {"query": "The book on the daily education of the 0-3 year old baby in your bookshelf, which publisher published it?", "cypher": "match ((:ENTITY{name:'0-3 year old baby's daily upbringing'}) - [:Relationship{name:'publisher'}]-> (n) return n.name"}, {"query": "What ingredients are used to make healthy, low-calorie food that everyone can eat?", "cypher": "match (:ENTITY{name:'weight loss MM, breakfast energy source for diabetics--Wood sugar alcohol whole wheat turmeric After making some turmeric, I personally prefer wood sugar alcohol whole wheat turmeric, because it is healthy and low in calories! and can be eaten by the whole family."}, {"query": "Do you have any information about the relationships within the three layers that this person is involved in?", "cypher": "The following pages link to The Unknown:"}, {"query": "It's too complicated for this compound, can you write the chemical formula?", "cypher": "match ((:ENTITY{name:' for the binary methyl double [for the aminoacetyl acetate]'}) - [:Relationship{name:' chemical formula'}]-> (x) return x.name"}, {"query": "What is the purpose of enhancing epithelial cell regeneration and preventing skin aging?", "cypher": "match (n:ENTITY{name:' Enhance epidermal cell regeneration and prevent skin aging'}) <- [:Relationship{name:' uses'}]- (mn) return mn.name"}, {"query": "What chemical has a molecular weight of 69.07?", "cypher": "The name of the function is the name of the function."}, {"query": "Can you tell me three facts about football?", "cypher": "match (:ENTITY{name:' football'}) --(n) return distinct n.name limit 3"}, {"query": "Can you tell me which philosophers were born in 1861?", "cypher": "match (:ENTITY{name:'1861'}) <- [:Relationship{name:'date of birth'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='philosopher' return m.name"}, {"query": "Is it good to talk about a male profession?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(m),(m) - [:Relationship{name:'occupation'}]->(x) return distinct x.name limit 1"}, {"query": "What label did Christopher Columbus have in 1492 besides the action film?", "cypher": "match (:ENTITY{name:'1492, Christopher Columbus'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'action film' return m.name"}, {"query": "Please help me find two books for $25.00 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'25.00\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "What are the differences between the number of people born in a country with a rose label and the number of people born in a country with a rose label?", "cypher": "match (n:ENTITY{name:'Third River'}) - [:Relationship{name:'Native place'}]->(:ENTITY) <- [:Relationship{name:'Native place'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Can you find me a 1315 creative park outside of geography?", "cypher": "match (:ENTITY{name:'1315 creative park'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'geography' return h.name"}, {"query": "What is the name of the data engine developed by Inprise?", "cypher": "match (:ENTITY{name:'Inprise company'}) <- [:Relationship{name:' belongs to '}]-(m), (m) - [:Relationship{name:' category'}]->(n) where n.name=' database engine' return distinct m.name"}, {"query": "Can you name six Chinese government employees?", "cypher": "match (q:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]- (h) return h.name limit 6 This is a list of all the different ways China is credited in the database."}, {"query": "I only know that Chongqing Choc Chamber Symphony Orchestra is a classical music group that was founded on October 8, 2013.", "cypher": "match (n:ENTITY{name:'Chongqing Chakula Chamber Orchestra'}) -->(h) with h order by h.name where h.name <> 'classical music' and h.name <> '2013/10/8' return h.name limit 6"}, {"query": "How many PhDs and Masters do the ROC have?", "cypher": "match (:ENTITY{name:'Relationship{name:'Doctorate'}}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'Master'}}) ->(m) return m.name as name"}, {"query": "What are the best representative works of a writer born in 1909? Can you list 10?", "cypher": "match (:ENTITY{name:'1909'}) <- [:Relationship{name:'date of birth'}]- ((m) - [:Relationship{name:'representative work'}]->(q) return distinct m.name limit 10"}, {"query": "I wonder what the main prize is for Batman: The Animated Series?", "cypher": "match (:ENTITY{name:'Batman: The Dark Knight Rises'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'main prize'}]->(x) return distinct x.name limit 1"}, {"query": "Can you recommend two books with simple Chinese characters?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What is the name of the actress who is the representative of the work of the Queen of the Underworld, the Queen of the Underworld, the Queen of the Underworld?", "cypher": "match (:ENTITY{name:'Relationship'}- ((n), ((n) - ((Relationship{name:' alias'}) -> ((q) return distinct q.name)"}, {"query": "Can you tell me where Chamb\u00e9ry graduated from?", "cypher": "match (:ENTITY{name:'Changberli'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'Graduate college'}]->(n) return distinct n.name"}, {"query": "Can you name five Chinese occupations?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(n),(n) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 5"}, {"query": "What chemical has a melting point of 190-192\u00b0C?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "I'm not sure if you're going to send me a list of all the labels for 2001's pathological?", "cypher": "match (:ENTITY{name:'2001 pathologist'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "I'm not sure if you're interested in finding a Mongolian and listing one of his major achievements.", "cypher": "match (x:ENTITY{name:'Mongolian'}) <- [:Relationship{name:'ethnicity'}]- ((q) - [:Relationship{name:'main achievements'}]->(m) return q.name order by q.name,m.name limit 1"}, {"query": "What are the main works of this person of the zodiac that you know about? Can you name five?", "cypher": "match (:ENTITY{name:'Big Dipper'}) <- [:Relationship{name:'Big Dipper'}]-(h),(h) - [:Relationship{name:'Major work'}]->(p) return p.name order by p.name limit 5"}, {"query": "Did you know the single I Was Gonna Cancel?", "cypher": "match (:ENTITY{name:'I Was Gonna Cancel'}) --(m) with m order by m.name where m.name <> 'single' return m.name"}, {"query": "And where is their publisher, for six publications?", "cypher": "match (:ENTITY{name:'published'}) <- [*]-(m), (m) - [:Relationship{name:'published'}]->(n) return m.name, n.name limit 6"}, {"query": "What do medical graduates from Nanjing Central University do?", "cypher": "match (:ENTITY{name:'Nanjing Central University Medical School'}) <- [:Relationship{name:'Graduate School'}]-(x),(x) - [:Relationship{name:'Profession'}]->(n) return distinct n.name"}, {"query": "Do you know who was identified as a suspect in the 9/11 Chechen parliament bombing?", "cypher": "match ((:ENTITY{name:'10\u00b719 Russian Chechen Parliament building explosion'}) - [:Relationship{name:'suspect'}]-> (m) return m.name"}, {"query": "What chemical is CAS number 21902-38-5?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "The total number of businesses in the city of Ibiza?", "cypher": "match (p:ENTITY{location:'Kashmir'}) return count ((p)"}, {"query": "The book was published by which publisher?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'publisher'}]->(q) return distinct q.name"}, {"query": "Can you help me find two songs with lyrics by Chen Wei and lyrics by Liu Xiaobo?", "cypher": "match (:ENTITY{name:'\u8c26'}) <- [:Relationship{name:'fillup'}]-(m), (m) - [:Relationship{name:'script'}]->(n) where n.name='Chen Wei' return m.name limit 2"}, {"query": "Do you know of any other names for ants besides the whitefly and the caterpillar?", "cypher": "match (n:ENTITY{name:''}) - [:Relationship{name:'alias'}]->(h) where h.name <> 'whites' and h.name <> 'parasites' return distinct h.name limit 2"}, {"query": "Do you know what the English name for oral thrush is?", "cypher": "match ((:ENTITY{name:' mouthpiece'}) - [:Relationship{name:' English name'}]-> (n) return n.name"}, {"query": "Please tell me what event is going to be held on September 3, 4, and 9.", "cypher": "match (q:ENTITY{name:'March, April, September'}) <- [:Relationship{name:'time of holding'}]- (h) return distinct h.name"}, {"query": "Tell me more about the King and Queen in person?", "cypher": "match (:ENTITY{name:'The King and I's in Love'}) --(h) with h order by h.name return h.name"}, {"query": "Can anyone tell me what famous places are in Jiangnan? Can I recommend two?", "cypher": "match (:ENTITY{name:'Jiangnan, literally meaning south of the Yangtze, in the human geographical concept of south of the lower reaches of the Yangtze River\u3002'}) <-[:Describe{name:'description'}]-(q) -[:Relationship{name:'famous attractions'}]->(m) return distinct m.name limit 2"}, {"query": "The article also highlighted the importance of the fact that the Chinese government has not yet given any official information about the activities of the company.", "cypher": "match (:ENTITY{name:'Jining Peak Consultancy Co. Ltd'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'organization' return p.name limit 1"}, {"query": "What is the shortest relationship path between the two layers of the poem Autumn and Dream Day?", "cypher": "The following pages link to List of all-time shortest paths in the history of the world:"}, {"query": "Can you name some of the characters representing the work on the road?", "cypher": "match (:ENTITY{name:'on the way'}) <- [:Relationship{name:'representing work'}]- (m) return m.name order by m.name limit 5"}, {"query": "(S) -3-aminodinol has a very good labeling characteristic?", "cypher": "match (:ENTITY{name:'(S)-3-aminobutyric acid'}) - [:Tag{name:'label'}]-> (q) with q order by q.name return q.name"}, {"query": "I would like to know the introduction of the four layers of relations between the research of the book and the development of IP policy.", "cypher": "match (n:ENTITY{name:' Intellectual property development policy research'}) - [*1..4]->(x) where x.name <> 'book name' return distinct x.name"}, {"query": "Do you know what this guy does who graduated from Southwest Transportation University? Can you name five?", "cypher": "match (:ENTITY{name:'Southwest Transportation University'}) <- [:Relationship{name:' Graduate School'}]-(m),(m) - [:Relationship{name:' Career'}]->(q) return q.name skip 2 limit 10"}, {"query": "What is the shortest relationship path between the Greek men's national football team and the Argentine men's national football team in the two tiers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'The Greek national men's football team'}) - [:Relationship*..2]-(b:ENTITY{name:'The Argentine national men's football team'})) return count ((p)"}, {"query": "What are the main works of people born on April 22, 1988?", "cypher": "match (:ENTITY{name:'22 April 1988'}) <- [:Relationship{name:'date of birth'}]-(p) - [:Relationship{name:'main work'}]->(h) return distinct h.name"}, {"query": "You sure don't know about UFOs?", "cypher": "match (n:ENTITY{name:'UFO'}) where n is not null return 1"}, {"query": "In addition to the city of Simfon, what other areas have license plates for vehicles with the number \"B\"?", "cypher": "match (:ENTITY{name:' B'}) <- [:Relationship{name:'plate code'}]-(m) where m.name <> 'Chenfeng County' return distinct m.name"}, {"query": "Besides being a private university, can you tell me about the six things you know about the Hunan Transportation Engineering College on the second floor?", "cypher": "match (:ENTITY{name:' International Sports Information Association'}) - [:Relationship*1..2]->(p) where p.name <> 'private university' return p.name limit 6 The name of the university is not known"}, {"query": "Can you help me find out which companies have a turnover of \u20ac19.3 billion next year and tell me how many employees they have?", "cypher": "match (:ENTITY{name:'193 billion euros'}) <- [:Relationship{name:'yearly turnover'}]-(h),(h) - [:Relationship{name:'number of employees'}]->(q) return distinct h.name,q.name"}, {"query": "What is the shortest path between the two levels of Moon Village and Kiru Village?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'\u6708\u7259\u6751[Yunnan Province, Changchun County, Jiangsu Province]'}) - [*..2]-(b:ENTITY{name:'Kiru village'})) return count ((p)"}, {"query": "What is Zhang Yiwei's first name?", "cypher": "match (:ENTITY{name:'s) - [:Relationship{name:'s}]-> (x) return distinct x.name"}, {"query": "What else do you know about it besides the fact that the ELISA test box was invented in the 60s and 70s?", "cypher": "match (:ENTITY{name:'elisa test box'}) - [*1..3]-(p) where p.name <> '60-70s' return p.name limit 6"}, {"query": "Tell me a simple introduction to the software within the two-tier relationship of Chinese software wholesale assistant?", "cypher": "match (n:ENTITY{name:' wholesale assistant'}) - [:Relationship*1..2]->(x) where x.name<>'simplified Chinese' return distinct x.name"}, {"query": "Please help me find the names of 10 companies in Chengdu.", "cypher": "match (:ENTITY{name:'\u6210\u90fd'}) <--(m) ,(m) - [:Relationship{name:' company name'}]->(n) return n.name limit 10"}, {"query": "I'm not sure if you can find a name for this animal species.", "cypher": "match (q:ENTITY{name:'animal domain'}) <-[:Relationship{name:'animal domain'}]-(h),(h) -[:Relationship{name:'alias'}]->(x) return distinct x.name limit 1"}, {"query": "Did you have trouble asking about the two-tier relationship of Uzamukunda Elias, who weighs 77 kg?", "cypher": "match (n:ENTITY{name:'Uzamukunda Elias'}) - [*1..2]->(x) where x.name <>'77 kg' return distinct x.name"}, {"query": "The last chapter of the book is the chapter of the book of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, the last chapter is the chapter of the dead, how many words are there, the writing progress is what progress is?", "cypher": "match (:ENTITY{name:'thing is not yesterday'}) - [:Relationship{name:'last chapter'}]->(n) return n.name as name union all match (:ENTITY{name:'thing is not yesterday'}) - [:Relationship{name:'word'}]->(m) return m.name as name union all match (:ENTITY{name:'thing is not yesterday'}) - [:Relationship{name:'writing progress'}]->(r) return r.name as name"}, {"query": "Which books and which books are published by the same publisher and what are the labels?", "cypher": "The following is a list of all the different ways The Great Wall of China is credited in the database: [https://www.theworldwarfare.org/wiki/The Great Wall of China]"}, {"query": "Who among us is a French-born illusionist?", "cypher": "match (:ENTITY{name:'philosopher'}) <- [:Relationship{name:'profession'}]- ((m), (m) - [:Relationship{name:'place of birth'}]->(n) where n.name='French Maisons-Laffitte' return m.name"}, {"query": "Can you recommend me some topics for the National Practitioner Qualification Test series?", "cypher": "match (:ENTITY{name:' National Practising Physician Qualification Exam Test Series'}) <- [:Relationship{name:'spoonful name'}]- (m) return m.name"}, {"query": "Can you find me the names of the five associate professors and their colleges?", "cypher": "match (:ENTITY{name:'adjunct professor'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'graduate college'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "I would like to share with you the top 5 articles.", "cypher": "match (:ENTITY{name:'Lio City Experimental Secondary School'}) --(q) return q.name order by q.name limit 5"}, {"query": "The group was also named the most visible group in the 2014 \"Media of the Year\" by the BBC.", "cypher": "match (:ENTITY{name:'2014 Silicon Media - most visible group'}) <- [:Relationship{name:' major achievements'}]- (h) return distinct h.name"}, {"query": "The Ming Dynasty was a period of great change in the history of China.", "cypher": "match (:ENTITY{name:'Relationship{name:'year'}) - ((n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'author'}) - ((m) return m.name as name"}, {"query": "The film premiered on August 29, 2014 and is titled What's Your Name?", "cypher": "Match (:ENTITY{name:'August 29, 2014'}) <- [:Relationship{name:'premiere time'}]- (p) return distinct p.name"}, {"query": "What do people in Fujian do?", "cypher": "match (:ENTITY{name:'Fujiang Yuen'}) <- [:Relationship{name:'\u7c4d\u8d2f'}]- ((m) - [:Relationship{name:'profession'}]->(n) return distinct n.name"}, {"query": "Is it a good idea to fight?", "cypher": "match (n:ENTITY{name:'Zhang Zhang'}) --(x) return distinct x.name"}, {"query": "Can you name three people or works related to Laos?", "cypher": "match (:ENTITY{name:'spoon'}) --(n) return distinct n.name limit 3"}, {"query": "The first is the idea of a new kind of literature, a new kind of literature, a new kind of literature, a new kind of literature.", "cypher": "match (n:ENTITY{name:' and rich'}) - [:Relationship*1..3]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "Do you know the area code of Taihara, a city in the former Shaanxi province?", "cypher": "match (:ENTITY{name:'the area code of Taihara City, Taihara Prefecture, Hasanasi Province'}) <- [:Relationship{name:'0351'}]- (p) return p.name"}, {"query": "The female role in the film is?", "cypher": "match (p:ENTITY{name:'Please six-man lineup'}) <--(x) -->(q:ENTITY{name:'woman'}) return x.name"}, {"query": "I heard that there were many babies at the first boutique jewelry fair in 2013 in Shanxi, do you know the scope of the exhibition?", "cypher": "match ((:ENTITY{name:'2013 Shanxi Grand Prix at the first boutique jewelry exhibition'}) - [:Relationship{name:'scale of exhibition'}]-> (p) return p.name"}, {"query": "Please help me find out what are the three desserts and their ingredients?", "cypher": "match (:ENTITY{name:' dessert'}) <- [*]-(m), (m) - [:Relationship{name:' accessory'}]->(n) return m.name, n.name limit 3 The name of the game is not available in English"}, {"query": "I wonder what the relationship is between the five levels involved in the Villa Beach Hotel?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'Bivilla Beach Hotel'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What is the shortest path between the twin boys and the rose dance on the 2nd floor?", "cypher": "Match p=allshortestpaths (((a:ENTITY{name:'Both boys'}) - [:Relationship*..2]-(b:ENTITY{name:'The dance of the flowers'})) return count ((p)"}, {"query": "Where are the 168 people doing? Write three I's", "cypher": "match (:ENTITY{name:'168cm'}) <- [:Relationship{name:'height'}]-(q),(q) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 3"}, {"query": "What is the shortest path between the two levels of the village and the training camp?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' to replace block village'}) - [*..2]-(b:ENTITY{name:' to teach camp'})) return count ((p)"}, {"query": "Can you tell us about some of the most representative works of Lu Xun?", "cypher": "match (:ENTITY{name:'Landlock'}) - [:Relationship{name:'representing work'}]-> (m) return m.name skip 2"}, {"query": "Do you know which legal books are available? Please introduce me to 5 of them.", "cypher": "match (:ENTITY{name:' legal books'}) <- [:Tag{name:' labels'}]-(x),(x) - [:Relationship{name:' book names'}]->(q) return distinct q.name limit 5"}, {"query": "The book is a collection of short stories, including a book about the life of the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a book about the sea, a sea, a book about the sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a sea, a", "cypher": "match (n:ENTITY{name:'Marine literature encyclopedia 53: The Yellow Book of the House of Liu'}) - [*]->(x) where x.name <>'470 pages' return distinct x.name limit 5"}, {"query": "Can you tell me about the 1000 border label?", "cypher": "match (:ENTITY{name:'1000 boundary'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 1"}, {"query": "Do you have any information about the names of the relationships at the two levels involved?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'\u67f3\u5c0f\u5c0f'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "The Chinese and foreign joint ventures are all called what?", "cypher": "match (:ENTITY{name:' limited liability company ((China and foreign joint venture) '}) <--(n) return n.name limit 5"}, {"query": "The main achievements of Maren Ad are mentioned.", "cypher": "match (:ENTITY{name:'Marlon Ad'}) - [:Relationship{name:'major achievement'}]-> (x) return x.name skip 1"}, {"query": "What is the name of a spinach made from flowers, cherries, and oranges?", "cypher": "match (:ENTITY{name:'flower, field pepper'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='spinach' return distinct m.name"}, {"query": "Do you know the language used in this film and other films to describe the same as the one used in The Exorcist 2015? Tell me what the labels are for each of these films, and how they are listed in order of the number of labels for each film?", "cypher": "match (n:ENTITY{name:'ghostdriver2015'}) - [:Relationship{name:'for white language'}]->(:ENTITY) <-[:Relationship{name:'for white language'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) BY ORDER c"}, {"query": "Tell me about the Shandong Civil Service Exam Network?", "cypher": "match (n:ENTITY{name:'Santon Civil Servants Examination Network'}) --(x) return distinct x.name"}, {"query": "What are the films produced in Poland? Can you tell me five lines?", "cypher": "match (:ENTITY{name:'Poland'}) <- [:Relationship{name:'production area'}]- (n) return n.name limit 5"}, {"query": "Tell me more about the 125 buy-in?", "cypher": "match (:ENTITY{name:'125 group purchase'}) --(x) with x order by x.name return x.name"}, {"query": "Can you tell me about the relationship between the two layers of the four infinite holy heavens?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' the infinite nearness of heaven'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "Can you tell me the Chinese name of Zarah's child?", "cypher": "match (:ENTITY{name:'Zarah kid'}) <- [:Relationship{name:'author'}]-(n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 1"}, {"query": "I need to know him.", "cypher": "match (:ENTITY{name:'Peter Helm'}) --(p) return distinct p.name"}, {"query": "Who can find the 5 tags for 18/22?", "cypher": "match (:ENTITY{name:'18/22'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "What are the 3GPP standards?", "cypher": "match (:ENTITY{name:'3GPP'}) - [:Relationship{name:'standard'}]->(m) return distinct m.name"}, {"query": "What happened in the collapse of a demolition house in Beijing's Soyang district on 12/23?", "cypher": "match ((:ENTITY{name:'12\u00b723 Beijing Xiaoying area demolition house collapse accident'}) - [:Relationship{name:' incident'}]-> (m) return m.name"}, {"query": "Do you know how many 26th volume of the manga series are there? Can you recommend 6?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Which companies and which brands of clothes were founded on the same day as RIZAN SHINA Clothing Ltd. in Manchuria? Please list the companies in order of number of labels, from large to small.", "cypher": "match (n:ENTITY{name:'Rizhanshina Clothing Limited'}) - [:Relationship{name:'time of establishment'}]->(:ENTITY) <-[:Relationship{name:'time of establishment'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) ORDER BY DESC "}, {"query": "What is the shortest path between the two layers of learning, Marxist political economy innovation and the construction of a contemporary harmonious society and communication principles?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Marxist political economy innovation and the construction of a contemporary harmonious society'}) - [*..2]-(b:ENTITY{name:'Communication principles learning guidance'})) return count ((p)"}, {"query": "Do you know which chemical has the symbol Xi for danger?", "cypher": "match (:ENTITY{name:'Xi'}) <- [:Relationship{name:'danger symbol'}]- (x) return distinct x.name"}, {"query": "Don't talk to strangers Do you know the time of the movie?", "cypher": "match (:ENTITY{name:'Do not talk to strangers'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'release time'}]->(n) return distinct n.name"}, {"query": "I want to go to the company of the head of the company, where should I go?", "cypher": "match (p:ENTITY{name:'Pinkhead Company'}) return p.location The name of the company is P.P.P.P."}, {"query": "Can you recommend 9 TV series that are on Eastern Television?", "cypher": "match (:ENTITY{name:'Eastern Defence'}) <- [:Relationship{name:' broadcast platform'}]- (q) return q.name limit 9"}, {"query": "The year the Trojans were developed?", "cypher": "match (:ENTITY{name:'Cherokee-type hydrogen anti-tank missile'}) - [:Relationship{name:'Research and development'}]->(m) return distinct m.name"}, {"query": "The following is a list of the four levels of relationships that the fisherman Ao has with the word \"alcohol\" when he advises the worker to use it.", "cypher": "match (n:ENTITY{name:' fisherman arrogant; admonishes the customer to drink when singing'}) - [*1..4]->(x) where x.name <> 'word' return distinct x.name limit 5"}, {"query": "Can you tell me what kind of relationships are covered in the paint job network in the 3 layers? Can you list 3?", "cypher": "The following pages link to the list of UNWIND relationships:"}, {"query": "Please help me find two books for $10.8 and tell me when they will be available.", "cypher": "match (:ENTITY{name:'10.8\u5143'}) <- [:Relationship{name:' priced'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 2"}, {"query": "How do you describe the appearance of Kangaroo net semihydrate in physical terms?", "cypher": "match ((:ENTITY{name:'Cangler net semihydrate'}) - [:Relationship{name:' appearance'}]-> (m) return m.name"}, {"query": "The party committee chairman, who is in charge of the overall work of the party, asked Li Xiaozhuo to give 10 different types of job titles.", "cypher": "match (:ENTITY{name:'Presiding over the overall work of the Party Committee, contacting Li Xiaozhi Village'}) <-[:Relationship{name:'work'}]-(q) -[:Relationship{name:'profession'}]->(h) where h.name <> 'person big chairman' return distinct h.name limit 10"}, {"query": "Besides the wax, can you tell me three things you know about the two layers of the Chinese Western mother-of-pearl painting?", "cypher": "match (:ENTITY{name:'Changzhou's painting of the Western mother-child's painting'}) - [*1..2]->(p) where p.name <> 'Changzhou' return distinct p.name limit 3"}, {"query": "What events have been held at the Dalian Star Bay Expo Center?", "cypher": "match (:ENTITY{name:'Dalian Star Sea Convention Centre'}) <- [:Relationship{name:'Holding place'}]- (q) return q.name"}, {"query": "It's interesting to hear about the 2012 China International Health and Beauty Expo, do you know the date?", "cypher": "match ((:ENTITY{name:'2012 China International Health and Beauty Fair'}) - [:Relationship{name:' Exhibition date'}]-> (x) return x.name"}, {"query": "Can you list the main works of the three actors who graduated from the acting department of the 2007 JNU?", "cypher": "match (x:ENTITY{name:'2007 class of performing arts department'}) <- [:Relationship{name:'graduate school'}]-(q),(q) - [:Relationship{name:'main works'}]->(h) return distinct h.name limit 3"}, {"query": "Did you find the three tags for 12345?", "cypher": "match (:ENTITY{name:'12345 fuel'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 3"}, {"query": "Can you recommend two completed novels?", "cypher": "match (:ENTITY{name:' completed'}) <- [:Relationship{name:' connected state'}]- (h) return h.name limit 2"}, {"query": "And what will explain to you the story of the Quraysh?", "cypher": "match (n:ENTITY{name:'cheng da xing'}) where n is not null return 1"}, {"query": "Can you tell me about the five most prominent jobs in Pan?", "cypher": "match (:ENTITY{name:'Pan Zhong'}) <--(x) -[:Relationship{name:'Profession'}]->(m) return m.name order by m.name limit 5"}, {"query": "What is the Chinese name of Revelation 11?", "cypher": "match (:ENTITY{name:'11 Revelation'}) - [:Relationship{name:'Chinese name'}]-> (q) with q order by q.name return distinct q.name"}, {"query": "The incident in the Sichuan city of Xiamen, on the other hand, is a major social event.", "cypher": "match (:ENTITY{name:'11.27 Sichuan Huizhou fort collapse accident'}) --(x) with x order by x.name where x.name <> 'social event' return x.name"}, {"query": "Where is the collection of the King's Musical Works? How many are there?", "cypher": "match (:ENTITY{name:'Shanghai's Songbook'}) - [:Relationship{name:'Collected in '}]->(n) return n.name as name union all match (:ENTITY{name:'Shanghai's Songbook'}) - [:Relationship{name:'Shanghai's Songbook'}]->(m) return m.name as name"}, {"query": "Can you tell me the three professions of this man? He is of the Great Khmer Nation.", "cypher": "match (:ENTITY{name:'big and ethnic'}) <-[:Relationship{name:'ethnic'}]-(q) -[:Relationship{name:'profession'}]->(n) return n.name skip 2 limit 10"}, {"query": "I wonder who was born in Augsburg, Bavaria?", "cypher": "match (:ENTITY{name:'Bavaria Augsburg'}) <- [:Relationship{name:'place of birth'}]-(p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name"}, {"query": "Find me one of the biggest Southeast Asian regional sports events that is held every few years.", "cypher": "match (:ENTITY{name:'Big comprehensive regional sporting event in Southeast Asia'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'every gap'}->(n) return m.name,n.name limit 1"}, {"query": "Pick three types of openings [starting platinum-selling novel by a dancing writer] that are relevant to the author other than dancing?", "cypher": "match (:ENTITY{name:'Thanks for the help]}) --(m) with m order by m.name where m.name <> 'dance' return distinct m.name limit 3"}, {"query": "What kind of song language is used in the solo single Ringa Linga by the singing group BigBang member Sun?", "cypher": "match ((:ENTITY{name:'Ringa Linga'}) - [:Relationship{name:'Language of the song'}]-> (m) return m.name"}, {"query": "Can you tell us about the two-tiered relationship of the Little Witch's Legend published by Jinnan Publishing?", "cypher": "match (n:ENTITY{name:'Little Witch Legend'}) - [:Relationship*1..2]->(x) where x.name <>'Jinan Publishing' return distinct x.name"}, {"query": "What is the main ingredient of rabbit meat?", "cypher": "Match (:ENTITY{name:'crow's nest'}) - [:Relationship{name:'main ingredient'}]-> (m) return distinct m.name"}, {"query": "What are some of the most iconic works of Carrie King?", "cypher": "match (:ENTITY{name:'Kelly Kim'}) - [:Relationship{name:'representing work'}]-> (m) return distinct m.name"}, {"query": "Please help me find three books published by China Standard Publishing, who are the authors?", "cypher": "match (:ENTITY{name:'China Standard Publishing'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'author'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Can you name the occupations of Chinese people? Name three, please?", "cypher": "match (n:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(p),(p) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 3"}, {"query": "In addition to Kingdom Hearts, which other films has Libra actors been in?", "cypher": "match (:ENTITY{name:'Libra'}) <- [:Relationship{name:'star'}]-(x),(x) - [:Relationship{name:'representative work'}]->(n) where n.name <> 'Heavenly love' return distinct n.name limit 1"}, {"query": "What are the exhibition activities on luxury goods? Name eight?", "cypher": "match (:ENTITY{name:'luxury'}) <- [:Relationship{name:'industry'}]- (h) return h.name limit 8"}, {"query": "Tell me about the three-tiered relationship between the five Tang Dynasty suburb lyrics, Prince Zhou Zhenzong and this piece.", "cypher": "match (n:ENTITY{name:' suburbia lyrics\u00b7 enjoy the secret prince's orchestra\u00b7 sincerity and '}) - [*1..5]->(x) where x.name <>'\u5510' return distinct x.name limit 5"}, {"query": "I'm not sure if you're familiar with the story, but I'm not sure if you're familiar with the story.", "cypher": "match (:ENTITY{name:'Ousmane [Senegalese novelist]'}) --(h) return h.name order by h.name"}, {"query": "What brands of tobacco are used in the Long Spring cigarette factory?", "cypher": "match (:ENTITY{name:'Changchun Tobacco Factory'}) <- [:Relationship{name:'Affiliated company'}]- (mn) - [:Relationship{name:'Affiliated industry'}]->(n:ENTITY{name:'Tobacco'}) return mn.name"}, {"query": "Tell us about five things about Yang Liyun, a Beijing-born Chinese writer.", "cypher": "match (n:ENTITY{name:'Yun'}) - [*]->(x) where x.name<>'Beijing' return distinct x.name limit 5"}, {"query": "Can you tell me some of the tricks?", "cypher": "match (:ENTITY{name:'Third Party'}) <- [:Relationship{name:'Program type'}]- (n) return distinct n.name"}, {"query": "Can you help me find the ICP file number for 028 Chengdu Training Network?", "cypher": "match ((:ENTITY{name:'028 Chengdu training network'}) - [:Relationship{name:'ICP file number'}]-> (h) return h.name"}, {"query": "Check out the personal information in Diack Robbie's six-level relationship in South Africa.", "cypher": "match (n:ENTITY{name:'Diack Robbie'}) - [*1..6]->(x) where x.name <> 'South Africa' return distinct x.name limit 5"}, {"query": "The article was written by a journalist from the city of Chiang Mai, who is also a journalist.", "cypher": "match (x:ENTITY{name:'Patrick Mario Bernard'}) - [:Relationship{name:'profession'}]-> (m) return distinct m.name"}, {"query": "The author of the book Science and Art, written by Liu Xiaobo, born in September 1938, recommends another of his works to me.", "cypher": "match (:ENTITY{name:'September 1938'}) <- [:Relationship{name:'date of birth'}]-(q) - [:Relationship{name:'representative work'}]->(p) where p.name <> 'Relationship' return distinct p.name limit 1"}, {"query": "Can you find me five publications published by the People's Court Press?", "cypher": "match (:ENTITY{name:'People's Court Publishing House'}) <- [:Relationship{name:'People's Court Publishing House'}]-(h),(h) - [:Relationship{name:'Book name'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Who was the historical figure born on March 30, 1764?", "cypher": "match (:ENTITY{name:'30 March 1764'}) <- [:Relationship{name:'date of death'}]- (m) return m.name"}, {"query": "I'm not sure what the name of the novel is, but I'm sure it's a novel.", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you tell me how many songs ZENTA has written?", "cypher": "match (:ENTITY{name:'ZENTA'}) <- [:Relationship{name:'compiled'}]- (m) return distinct m.name"}, {"query": "I'm going to ask you about the artistic activities of the artists' category. Can you list five?", "cypher": "match (:ENTITY{name:' artist'}) <- [:Tag{name:' tag'}]- ((h) - [:Relationship{name:' activity'}]->(x) return distinct x.name limit 5"}, {"query": "Can you name one thing that 1-methylglycerol has that is not natural?", "cypher": "match (:ENTITY{name:'1-methanal glycerol'}) --(p) with p order by p.name where p.name <> 'natural' return p.name limit 1"}, {"query": "What is the profession of people born on November 21?", "cypher": "match (:ENTITY{name:'November 21'}) <- [:Relationship{name:' date of birth'}]- ((q),(q) - [:Relationship{name:' profession'}]->(p) return distinct p.name"}, {"query": "Which two authors' books were published by Sichuan University of Electronics and Technology?", "cypher": "match (:ENTITY{name:' Sichuan University of Electronics and Technology'}) <- [:Relationship{name:' publisher'}]-(x),(x) - [:Relationship{name:' author'}]->(q) return distinct q.name limit 2"}, {"query": "What is the purpose of the pronoun that provides the necessary information?", "cypher": "match (:ENTITY{name:' provided necessary information'}) <- [:Relationship{name:' purpose'}]- (q) return distinct q.name"}, {"query": "What is the name of the yellow-bellied parrot in English?", "cypher": "match (:ENTITY{name:' yellow ventricle'}) <- [:Relationship{name:' species'}]- ((x) - [:Relationship{name:' English name'}]->(q) return distinct q.name limit 1"}, {"query": "Are you familiar with the material properties of 18Mn2CrMoBA?", "cypher": "match ((:ENTITY{name:'18Mn2CrMoBA'}) - [:Relationship{name:'material properties'}]-> (n) return n.name"}, {"query": "Please check out the main awards that this person, Selena Peak, has won, I will give you two awards in addition to the Swedish Masters Mixed Doubles Championship in 2015 and the Dutch Grand Prix Women's Doubles Championship in 2014.", "cypher": "match (n:ENTITY{name:'Selena Pick'}) - [:Relationship{name:'main award'}]->(h) where h.name <> '2015 Swedish Badminton Masters mixed doubles champion' and h.name <> '2014 Dutch Badminton Grand Prix women's doubles champion' return distinct h.name limit 2"}, {"query": "Can you see the 281 pages of the bi-layered relationship between life sentence and environmental crime research?", "cypher": "match (n:ENTITY{name:' Life Criminal Law and Environmental Criminal Law Research'}) - [:Relationship*1..2]->(x) where x.name <>'281 pages' return distinct x.name"}, {"query": "Can you help me find 50 works of literature with 16 pages?", "cypher": "The following is a list of all the characters that appear in the game."}, {"query": "The 15th century is the 15th century in history.", "cypher": "Match (:ENTITY{name:'15th century'}) <- [:Relationship{name:'century'}]- (n) return n.name"}, {"query": "Which people have the same birthday as L\u00fadv\u00edksson Magn\u00fas M\u00e1r and what tags do they have?", "cypher": "The following is a list of all the different ways L\u00fadv\u00edksson Magn\u00fas M\u00e1r is credited in the database:"}, {"query": "What chemical substance has the molecular formula C6H11O2?", "cypher": "The name of the matching element is \"Relationship\" (Relationship)"}, {"query": "What are the labels of the organizations that offer training courses for software engineers and web marketers?", "cypher": "match (:ENTITY{name:' training class for software engineers and training class for web marketers'}) <- [:Relationship{name:' scope of operations'}]-(q) - [:Tag{name:' tag'}]->(p) return distinct p.name limit 1"}, {"query": "Which park has a bronze statue of King George V and Queen Mary?", "cypher": "match (:ENTITY{name:'Bronze statue of King George V and Queen Mary'}) <--(m), (m) -->(n) where n.name='park' return distinct m.name"}, {"query": "Help me find five dishes made with yogurt.", "cypher": "match (:ENTITY{name:'Key'}) <- [:Relationship{name:'main ingredient'}]-(m) return distinct m.name limit 5"}, {"query": "What is the shortest route between Lipari and Kanoan?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Lipari Island'}) - [*..2]-(b:ENTITY{name:'Canoan Island'})) return count ((p) The name of the island is not known"}, {"query": "Please list the representative works of Fresh Pirates Youth Group.", "cypher": "match (:ENTITY{name:'fresh pirate boys' team'}) - [:Relationship{name:'representative work'}]-> (x) return distinct x.name"}, {"query": "I would like to know the personal profile of Pi\u00f1on Lima, born in Milan, in a three-tier relationship?", "cypher": "match (n:ENTITY{name:'Piponi Lima'}) - [*1..3]->(x) where x.name <>'Milan' return distinct x.name"}, {"query": "Can you help me find 60 black and white science fiction movies?", "cypher": "match (:ENTITY{name:'science fiction film'}) <--(m), (m) --(n) where n.name='black and white' return distinct m.name limit 60"}, {"query": "What is the motive power of the Type 096 ballistic missile nuclear submarine in China?", "cypher": "match ((:ENTITY{name:'096 type ballistic missile nuclear submarine'}) - [:Relationship{name:'power'}]-> (x) return x.name"}, {"query": "What is the exhibition on March 15-18, 2013?", "cypher": "match (:ENTITY{name:'March 15-18, 2013)) <- [:Relationship{name:'season'}]- (p) return distinct p.name"}, {"query": "Can you explain to me the three pieces of information that entertainment initially has, besides the publication?", "cypher": "match (:ENTITY{name:'entertainment'}) --(m) with m order by m.name where m.name <> ' publication' return distinct m.name limit 3"}, {"query": "Ask for the Si content of a material such as 00Cr25Ni20Nb stainless steel.", "cypher": "The name of the game is \"Stainless Steel\" (Stainless Steel)"}, {"query": "I wonder who else wrote the script for Death Save the Brethren besides Huang Yilong and Zhou Yue An?", "cypher": "match (n:ENTITY{name:'Relationship{name:'writer'}]->(h) where h.name <> 'Huang Yilong' and h.name <> 'Zhou Xiaoming' return distinct h.name limit 3"}, {"query": "What else do you know about the Suzhou Uni-Fong Wood Industries Limited? Can you help me find out 5 information about the company within the 3 levels?", "cypher": "match (:ENTITY{name:'Suzhou Union Fong Wood Industry Limited'}) - [*1..3]-(p) where p.name <> 'Suzhou city' return distinct p.name limit 5"}, {"query": "Can you provide the full profile of this Chinese person named Yu Yu?", "cypher": "match (n:ENTITY{name:'\u5b87'}) - [*]->(x) where x.name <> '\u5b87' return distinct x.name"}, {"query": "I need information on the two and the fake London 3 tag relationship, do you have it?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'false London'}) return distinct n.name limit 2"}, {"query": "Could you tell me what the chemical is for CAS number 2386-54-1?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What is the shortest connection between the two levels of the Beijing Olympic Water Park and the Beijing Olympic Park?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Beijing Olympic Water Park'}) - [:Relationship*..2]-(b:ENTITY{name:'Beijing Olympic Park'})) return count ((p) This is the list of all the shortest paths in the world."}, {"query": "The company was founded in 1968 can you tell me two things?", "cypher": "match (n:ENTITY{name:'1968'}) <- [:Relationship{name:'time of establishment'}]- (mn) return mn.name limit 2"}, {"query": "What is the shortest relationship between the two layers of tofu and tofu?", "cypher": "Match p=allshortestpaths (((a:ENTITY{name:'sweet tofu'}) - [:Relationship*..2]-(b:ENTITY{name:'sweet tofu'})) return count ((p)"}, {"query": "What about literary works and Zhang Yanqi's introduction to the three layers of the Moon?", "cypher": "match (n:ENTITY{name:' and Zhang Yanyiq Mid-Autumn to Moon'}) - [*1..3]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "Chinese Academy of Sciences software research all the PhDs?", "cypher": "match (:ENTITY{name:'Relationship{name:'Doctorate'}}) ->(n) return n.name as name union all match (:ENTITY{name:'Software Institute of the Chinese Academy of Sciences'}) -[:Relationship{name:'Master's'}]->(m) return m.name as name"}, {"query": "Do you know which works and which chronology of the years of Liu Xiaobo were written by the same publisher? What are the labels of each of these works? Please sort them in order of the number of labels of your brother's works?", "cypher": "match (n:ENTITY{name:'\u5c11\u6e38\u5e74\u8c31\u957f\u7f16'}) - [:Relationship{name:'publisher'}]->(:ENTITY) <- [:Relationship{name:'publisher'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Do you know when the book Teaching Children How to Be Human was printed before they were 10?", "cypher": "match ((:ENTITY{name:'Teach your child how to be a person before he is 10'}) - [:Relationship{name:'print time'}]-> (h) return h.name"}, {"query": "Can you tell me the five professions of actors?", "cypher": "match (:ENTITY{name:' actor'}) <- [:Relationship{name:' profession'}]- (m) return distinct m.name limit 5"}, {"query": "The problem is that you can tell us what kind of relationships are there in the three levels of the international service market?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' International service market'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What else do you know about the second spring of Lao-mo besides the Taiwanese drama?", "cypher": "match (:ENTITY{name:'The second spring of Grandma's'}) - [:Relationship*1..2]-(p) where p.name <> 'Taiwanese film' return p.name limit 10"}, {"query": "The project is a collaboration between the Ministry of Education and the Ministry of Education and the Ministry of Education.", "cypher": "match (n:ENTITY{name:' decoration and decoration project budget homework and training guide'}) - [:Relationship*1..2]->(x) where x.name <>'Yun Wang Junsan' return distinct x.name"}, {"query": "Can you tell me what kind of relationship is involved in the two layers of the relationship?", "cypher": "The following pages link to The Unknown:"}, {"query": "The number of companies in Fujairah is estimated at about 7 million.", "cypher": "match (p:ENTITY{location: Fuji) return count ((p)"}, {"query": "Do you know what year Du Jan was born?", "cypher": "MATCH (n:ENTITY{name:'Du Chan'}) - [:Relationship{name:'date of birth'}]->(m) return substring ((m.name, 0,5))"}, {"query": "Can you give me 3 Space Task Force 5 Moon-backed UFO's besides the cultural activities?", "cypher": "match (:ENTITY{name:'Space Task Force 5\u00b7Lunar-backed giant UFO'}) --(m) with m order by m.name where m.name <> 'cultural activities' return distinct m.name limit 3"}, {"query": "The article is about the most important event in the history of the country.", "cypher": "match (:ENTITY{name:'June 2nd'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 5"}, {"query": "Can you list five personal details of Endzanga Wilfrid, a Congolese national?", "cypher": "match (n:ENTITY{name:'Endzanga Wilfrid'}) - [*]->(x) where x.name<>'Congo' return distinct x.name limit 5"}, {"query": "What is the difference between aspx and asp pages?", "cypher": "match (:ENTITY{name:'aspx web page'}) - [:Describe{name:'describe'}]->(n) return n.name"}, {"query": "Who is the prominent leader of the Kyaw Kyaw Kyaw Mieng people's anti-Qin uprising?", "cypher": "match (:ENTITY{name:'Dark Kyaw Ka-wan, prominent leader of the Miyan people's anti-Chen uprising'}) --(x) return distinct x.name"}, {"query": "Which companies are registered with the CARICOM Market Regulatory Authority?", "cypher": "match (:ENTITY{name:'Relationship{name:'Registration authority'}}) - (h) return h.name limit 5"}, {"query": "Did you know that yoga is a 1+N multi-efficient weight lifting procedure?", "cypher": "match (:ENTITY{name:'1+N multi-efficient heavy surgery'}) --(m) with m order by m.name return m.name"}, {"query": "How many species of ants are there?", "cypher": "The name of the group is the same as the name of the other group. The name of the group is the same as the name of the other group."}, {"query": "Can you describe the EMS enhanced audio text message in no more than five words?", "cypher": "match (:ENTITY{name:'EMS enhanced audio text message'}) --(n) with n order by n.name return n.name limit 5"}, {"query": "Do you know what the name of the drug for the confidence pill is?", "cypher": "match ((:ENTITY{name:'confidence pill'}) - [:Relationship{name:'name of drug'}]-> (q) return q.name"}, {"query": "Do you know the name of the area at an altitude of 1,397.00 meters?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "The contest is being held from August 29 to September 3 and the name of the contest is:", "cypher": "match (:ENTITY{name:'August 29 to September 3'}) <- [:Relationship{name:'time of holding'}]- (x) return distinct x.name"}, {"query": "Tell me about a J.H. Wellman career, but not an actor and a screenwriter?", "cypher": "match (n:ENTITY{name:'J.H. Wheeman'}) -[:Relationship{name:'profession'}]->(h) where h.name <> 'actor' and h.name <> 'writer' return distinct h.name limit 1"}, {"query": "What are the tag features of 10Base-FL?", "cypher": "match (:ENTITY{name:'10Base-FL'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "In which country was Qunu?", "cypher": "Match (:ENTITY{name:'Knu was'}) - [:Relationship{name:'nationality'}]->(n) return n.name"}, {"query": "Did you know that the three types of relationships are contained within the Quanzhou ship?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Kuzunou ship'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you tell me about the top 10 largest car models?", "cypher": "match (:ENTITY{name:'medium-sized'}) <- [:Relationship{name:'car level'}]- (h) return h.name limit 10"}, {"query": "The following companies are listed in alphabetical order by number of labels:", "cypher": "match (n:ENTITY{name:'Lingting Atomic Explosion Engineering Ltd'}) - [:Relationship{name:'time of establishment'}]->(:ENTITY) <- [:Relationship{name:'time of establishment'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "Please tell me where the concert is on 2012.7.4?", "cypher": "match (:ENTITY{name:'2012.7.4'}) <- [:Relationship{name:' time of show'}]- (m) return m.name"}, {"query": "What is the shortest relationship path between the Arabian stingray and the elongated conch shark in the two layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Arabian stingray'}) - [:Relationship*..2]-(b:ENTITY{name:'shortest shark'})) return count ((p)"}, {"query": "Please let me know when the 11th edition of the 2011 Multi-Person Printing and Label Printing Exhibition will be held, I am preparing very early.", "cypher": "match ((:ENTITY{name:'2011 11th Multi-person Printing and Label Printing Exhibition'}) - [:Relationship{name:' Exhibition time'}]-> (q) return q.name"}, {"query": "I have been asked to name four artists and their nationality.", "cypher": "match (:ENTITY{name:'artist'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'nationality'}]->(n) return m.name,n.name limit 4"}, {"query": "How many awards has Guangzhou Chinese Medical University won?", "cypher": "match (:ENTITY{name:' Guangzhou Chinese Medical University'}) - [:Relationship{name:' major award'}]->(n) return count(n)"}, {"query": "Do you know what the research area of immunotoxicology is?", "cypher": "match (:ENTITY{name:'immunotoxicology'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'research area'}]->(n) return distinct n.name"}, {"query": "Have you been to the 2011 China National Electricity Expo in Shanghai, where is it being held in Shanghai?", "cypher": "match ((:ENTITY{name:'2011 China [Shanghai] Home Appliance Expo'}) - [:Relationship{name:' Location'}]-> (q) return q.name"}, {"query": "What are the main achievements and representative works of Tan Taneda?", "cypher": "match (:ENTITY{name:'Karan'}) - [:Relationship{name:'main achievements'}]->(n) return n.name as name union all match (:ENTITY{name:'Karan'}) - [:Relationship{name:'representative work'}]->(m) return m.name as name"}, {"query": "Please tell me what kind of relationship is involved in the two levels of lung cancer?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' town of lung cancer'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you explain to me the term \"1.5-tier city\"?", "cypher": "match (:ENTITY{name:'1.5 line city'}) --(p) with p order by p.name return p.name"}, {"query": "What is the name of the ACG?", "cypher": "match (:ENTITY{name:'ACG'}) <- [:Relationship{name:' abbreviated '}]- (p) return distinct p.name"}, {"query": "Can you tell me what kind of labels two pillows have that don't include nature and culture?", "cypher": "match (n:ENTITY{name:'door pillow'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'nature' and h.name <> 'culture' return distinct h.name limit 2"}, {"query": "What else do you know about the pillar stone other than that it is from Myanmar?", "cypher": "match (:ENTITY{name:'square-column stone'}) - [*1..2]-(p) where p.name <> 'Mongolian state of Myanmar' return p.name limit 10"}, {"query": "Do you have any other labels besides non-sport and personality?", "cypher": "match (n:ENTITY{name:'practice true true'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'non-sport' and h.name <> 'person' return distinct h.name limit 1"}, {"query": "Help me find a soup made from shark.", "cypher": "match (:ENTITY{name:'shrimp'}) <- [:Relationship{name:'main ingredient'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='soup' return distinct m.name limit 1"}, {"query": "Can you tell me when Muhammad II [historical figure] died?", "cypher": "match ((:ENTITY{name:'Muhammad II [historical figure]'}) - [:Relationship{name:'date of death'}]-> (n) return n.name"}, {"query": "I'm wondering what the accident was that caused five construction workers to lose their connection?", "cypher": "match (:ENTITY{name:'5 construction workers lost contact'}) <- [:Relationship{name:'casualties'}]- (q) return distinct q.name"}, {"query": "Can you list 10 supplements that taste fresh and fresh?", "cypher": "match (:ENTITY{name:'sweet, fresh'}) <- [:Relationship{name:'flavor'}]-(h),(h) - [:Relationship{name:'supplement'}]->(p) return distinct p.name limit 10"}, {"query": "What is the range and accuracy of the magnetic disk's directional measurement?", "cypher": "match (:ENTITY{name:'disc'}) - [:Relationship{name:'navigation measurement range'}]->(n) return n.name as name union all match (:ENTITY{name:'disc'}) - [:Relationship{name:'navigation accuracy:'}]->(m) return m.name as name"}, {"query": "Do you know what the characteristics of love in 1977 are?", "cypher": "match (:ENTITY{name:'1977 love'}) --(h) with h order by h.name return h.name"}, {"query": "Tell me which games are next in the 2018 Pyeongchang Winter Olympics?", "cypher": "match (:ENTITY{name:'2018 Winter Olympics in Pyeongchang'}) <- [:Relationship{name:'next edition'}]- (n) return distinct n.name"}, {"query": "The number of books in the world is three.", "cypher": "match (:ENTITY{name:' three'}) <- [:Relationship{name:' number'}]- (n) return n.name"}, {"query": "What are the most representative works of the author born in 1943? Name three?", "cypher": "match (h:ENTITY{name:'1943'}) <- [:Relationship{name:'date of birth'}]- ((q),(q) - [:Relationship{name:'represents work'}]->(n) return distinct n.name limit 3"}, {"query": "Apart from the Internet, what are the three labels of People's Life Information Technology [Beijing] Limited?", "cypher": "match (:ENTITY{name:'People Car Life Information Technology [Beijing] Limited'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'Internet' return p.name limit 3"}, {"query": "What are the main minerals and minerals that make up serpentine rocks?", "cypher": "match (:ENTITY{name:' serpentine rock'}) - [:Relationship{name:' main constituent mineral'}]->(n) return n.name as name union all match (:ENTITY{name:' serpentine rock'}) - [:Relationship{name:' related mineral'}]->(m) return m.name as name"}, {"query": "Can you name five social events?", "cypher": "match (:ENTITY{name:' social event'}) <--(n) return n.name limit 5"}, {"query": "Do you have any doctors with PhDs? Can you find three for me?", "cypher": "match (:ENTITY{name:'doctor'}) <- [:Relationship{name:'degree'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='doctor' return m.name limit 3"}, {"query": "What is the subject of 02 with 5 messages?", "cypher": "match (:ENTITY{name:'02 subject'}) --(x) with x order by x.name return x.name limit 5"}, {"query": "Which exam materials are on sale for 7.5 discount lately?", "cypher": "Match (s) (m) return m.name (s) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m)"}, {"query": "I want to know who the editors are.", "cypher": "match (:ENTITY{name:'composer'}) --(q) return q.name skip 2"}, {"query": "The first is the fact that the government has not yet decided on the issue.", "cypher": "match (n:ENTITY{name:'stringSL-F02'}) --(x) return x.name"}, {"query": "I would like to ask you how many of the main departments of the Higher Technical School in Mecca are there?", "cypher": "match (:ENTITY{name:' that is, the City of Mecca's High School of Engineering'}) - [:Relationship{name:' the main faculty'}]-> (p) return p.name skip 1"}, {"query": "Can you tell me which company is mainly involved in channel promotion and mobile internet research and development?", "cypher": "match (:ENTITY{name:'Channel promotion and mobile Internet research and development'}) <- [:Relationship{name:' business'}]- (m) return m.name"}, {"query": "Can you recommend 20 ACT-type games for me?", "cypher": "Match (:ENTITY{name:'ACT'}) <- [:Relationship{name:'game type'}]- (h) return h.name limit 20"}, {"query": "I wonder what kind of warships are there with a width of 16 meters and a length of 16 meters?", "cypher": "match (:ENTITY{name:'16 m'}) <- [:Relationship{name:'ship width'}]- (x) return x.name"}, {"query": "In addition to the 600*800*1700V range, what are the three voltage ranges that a 40KVA T-series can operate in?", "cypher": "match (:ENTITY{name:'T series 40KVA'}) <- [:Relationship{name:'Chinese name'}]-(q) - [:Relationship{name:'voltage range'}]->(p) where p.name <> '600*800*1700V' return distinct p.name limit 3"}, {"query": "What books are priced at $8? Can you help me find three?", "cypher": "match (:ENTITY{name:'8\u5143'}) <- [:Relationship{name:'priced'}]-(h),(h) - [:Relationship{name:'book name'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Please help me find the other 5 information about the Black Dog Brothers 2 on the mountain.", "cypher": "match (:ENTITY{name:' black dog brother'}) - [*1..2]-(p) where p.name <> 'record' return p.name limit 5"}, {"query": "Do you know what types of relationships are contained in the three layers of the inner-mountain pineapple?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' mountain pineapple'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "I'm going to be a little bit more specific about George Blankpohn, but I'm not sure if I'm going to be able to tell you about him.", "cypher": "match (h:ENTITY{name:'George Blankbourn'}) --(q) return q.name skip 3 The name of the game is the same as the name of the game itself."}, {"query": "What is the most representative work of the husband of the mayor of Rouen?", "cypher": "match (:ENTITY{name:'roadmaster'}) <- [:Relationship{name:'husband'}]-(x),(x) - [:Relationship{name:'representative work'}]->(m) return distinct m.name limit 10"}, {"query": "Do you know what Baidu does for a living?", "cypher": "match (:ENTITY{name:'Bei Yu'}) <- [:Relationship{name:'Chinese name'}]- ((m) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 1"}, {"query": "Fire Speed tells me about the different tags for .at domain names?", "cypher": "match (n:ENTITY{name:'.at domain name'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you introduce me to the book The Windmill of God?", "cypher": "match (:ENTITY{name:'Windmill of God'}) <- [:Relationship{name:'book name'}]-(x),(x) - [:Tag{name:'tag'}]->(q) return distinct q.name"}, {"query": "Which chemicals are 99.0% pure? Name nine?", "cypher": "match (:ENTITY{name:'\u226599.0%'}) <- [:Relationship{name:' purity'}]- (n) return n.name limit 9"}, {"query": "I want to purify phenylalanine, do you know where it boils?", "cypher": "match ((:ENTITY{name:'nonphenylen'}) - [:Relationship{name:'boiling point'}]-> (x) return x.name"}, {"query": "Can you give me details of the three-tier relationship of Morev Andrey from Kazakhstan?", "cypher": "match (n:ENTITY{name:'Morev Andrey'}) - [*1..3]->(x) where x.name<>'Kazakhstan' return distinct x.name"}, {"query": "The first thing I want to ask you is, which warship is 112.7 meters long?", "cypher": "match (:ENTITY{name:'112.7 m'}) <- [:Relationship{name:'full length'}]- (x) return distinct x.name"}, {"query": "Can you list the most representative works of the name Pug?", "cypher": "match (:ENTITY{name:'penname'}) <- [:Relationship{name:'alias'}]-(h),(h) - [:Relationship{name:'representing work'}]->(n) return distinct n.name"}, {"query": "Can you tell me about the types of relationships in the two layers of the four-tiered banana?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Relationship'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 4"}, {"query": "What is the shortest connection path between the closed stairway and the smoke-proof stairway on the 2nd floor?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'closed stairway'}) - [*..2]-(b:ENTITY{name:'smokeproof stairway'})) return count ((p)"}, {"query": "What is the name of the publication called 100 times crying?", "cypher": "match (:ENTITY{name:'100 times crying'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> 'publication' return h.name"}, {"query": "The article is about the life of Miguel Riveras.", "cypher": "match (:ENTITY{name:'Miguel Riveras'}) --(q) return distinct q.name limit 3 The name of the game is the same as the name of the game itself."}, {"query": "Do you have other aliases for brands like Odai, Haiba, Marun, Japan ASAHI?", "cypher": "match (:ENTITY{name:'\u5927,\u6d77\u99ac,\u5143,\u65e5\u672cASAHI etc'}) <- [:Relationship{name:'brand'}]- ((n) - [:Relationship{name:'alias'}]->(q) return distinct n.name"}, {"query": "What else did you do besides singing at a party?", "cypher": "match (:ENTITY{name:'Relationship{name:'Relationship'}) <- [Relationship{name:'Relationship'}]-(m) where m.name <> 'Relationship' return distinct m.name"}, {"query": "What nationality is Joey Vandenborg of whom we are talking today?", "cypher": "Match ((:ENTITY{name:'Joy Van Den Bosch'}) - [:Relationship{name:'nationality'}]-> (p) return p.name The name of the game is the same as the name of the game."}, {"query": "I'm going to show you the work of five people in Scorpio.", "cypher": "match (:ENTITY{name:'Scorpio'}) <- [:Relationship{name:'Scorpio'}]-(h),(h) - [:Relationship{name:'representing work'}]->(p) return p.name order by p.name limit 5"}, {"query": "What is the shortest distance between the two levels of General Zhang Leiping and Zhang Chongwen?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Zhang Leiping [People's Liberation Army Major General]'}) - [*..2]-(b:ENTITY{name:'Zhang Chongwen [Linghai City Township, Zhejiang Province]')) return count ((p)"}, {"query": "What is the 800 Questions for Infant and toddler intellectual development written by Zhang Zhen?", "cypher": "match (:ENTITY{name:'0~6 years old Infant and toddler intellectual development 800 questions'}) --(x) with x order by x.name where x.name <> 'Zhang's' return x.name"}, {"query": "What are the three types of TV shows produced by East East Productions Limited?", "cypher": "match (:ENTITY{name:'Just East Production Limited'}) <- [*]-(m), (m) - [:Relationship{name:' type'}]->(n) return distinct m.name, n.name limit 3"}, {"query": "The following is a list of some of the topics that Hamzic A has been involved in.", "cypher": "match (n:ENTITY{name:'Hamzic A'}) - [*1..2]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "Do you know what medical treatment Wang Min invented?", "cypher": "match (:ENTITY{name:'Wang Min'}) <- [:Relationship{name:'creator'}]- (h) return distinct h.name"}, {"query": "Can you list the top 10 books written by Capricorn writers?", "cypher": "match (:ENTITY{name:'Scorpio'}) <- [:Relationship{name:'Scorpio'}]- ((h) - [:Relationship{name:'main work'}]->(m) return distinct m.name limit 10"}, {"query": "Can you find me the address of the headquarters of three listed companies?", "cypher": "match (:ENTITY{name:'listed company'}) <- [:Relationship{name:'company nature'}]- ((n) - [:Relationship{name:'headquarters location'}]->(q) return distinct q.name limit 3"}, {"query": "What are the main achievements of graduates of the Chinese Military Police Command Academy?", "cypher": "match (:ENTITY{name:'China Military Police Officer Commanding Academy'}) <- [:Relationship{name:'Graduate Academy'}]- ((h) - [:Relationship{name:'Main achievements'}]->(x) return distinct x.name"}, {"query": "Can you tell me the types of relationships within the two layers of the Red Square?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Red City Temple'}) UNWIND relationships(path) AS rel return distinct rel.name limit 5"}, {"query": "Can you tell me what this Chinese person does for a living? Please tell me three.", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(x),(x) - [:Relationship{name:'profession'}]->(h) return h.name skip 2 limit 3"}, {"query": "Can you recommend me five free books and magazines?", "cypher": "match (:ENTITY{name:'free'}) <- [:Relationship{name:'price'}]- (n) return distinct n.name limit 5"}, {"query": "Can you tell me about the five famous places in China?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'country'}]-(p) - [:Relationship{name:'famous places'}]->(n) return distinct n.name limit 5"}, {"query": "What are the plants in the genus of the orchid besides the watermelon? Can you name five?", "cypher": "match (:ENTITY{name:'sect'}) <-[:Relationship{name:'sect'}]-(m) where m.name <>'Plain Lake Watermelon' return distinct m.name limit 5"}, {"query": "Can you tell me which earthquake was 45.4 degrees north latitude and 132.0 degrees east longitude?", "cypher": "match (:ENTITY{name:'Northeast 45.4 degrees, east 132.0 degrees'}) <- [:Relationship{name:'Earthquake in the northern latitude'}]- (n) return distinct n.name"}, {"query": "What is the shortest relationship path between the two layers of sugar and caramel?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'sugar loaf'}) -[:Relationship*..2]-(b:ENTITY{name:'sugar loaf'})) return count ((p)"}, {"query": "Can you recommend seven songs with a duration of 3 minutes and 38 seconds?", "cypher": "match (:ENTITY{name:'3 min 38 seconds'}) <- [:Relationship{name:'music length'}]- (q) return q.name limit 7"}, {"query": "The abbreviation for the Center for Social Media Research at Peking University is CSMR, and it belongs to the organization.", "cypher": "match (n:ENTITY{name:'Socialized Media Research Center of Peking University'}) -->(h) with h order by h.name where h.name <> 'CSMR' and h.name <> 'organization' return h.name limit 2"}, {"query": "Can you list 10 representative works of Chinese literature?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(m),(m) - [:Relationship{name:'representative work'}]->(q) return distinct q.name limit 10"}, {"query": "Can you find me five films that Dingri is a producer on?", "cypher": "match (:ENTITY{name:'dingri'}) <- [:Relationship{name:'producer'}]-(p) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 5"}, {"query": "Help me find 10 painters.", "cypher": "match (:ENTITY{name:'painter'}) <- [:Relationship{name:'profession'}]-(m) return distinct m.name limit 10"}, {"query": "Which exhibition is coming on September 21, 2011?", "cypher": "match (n:ENTITY{name:'21 September 2011 23 September 2011'}) <- [:Relationship{name:'exhibition time'}]- (m) return m.name"}, {"query": "I want to buy something at 123 Easy Taobao, do you know any shopping tips?", "cypher": "match ((:ENTITY{name:'123 easy-to-find-online'}) - [:Relationship{name:'shopping tips'}]-> (n) return n.name"}, {"query": "Can you give me some examples of the famous sights in the southern Ghassanflower Seaport?", "cypher": "Match (:ENTITY{name:'Southern Grasshopper Scenic Area'}) - [:Relationship{name:'Famous attractions'}]-> (n) return n.name skip 2"}, {"query": "Help me find 10 A-level hospitals.", "cypher": "match (:ENTITY{name:'level A and similar'}) <- [:Relationship{name:'hospital grade'}]-(m) return distinct m.name limit 10"}, {"query": "When is the anniversary of the Victory in the Battle of Stalingrad and where is the institution?", "cypher": "match (m:ENTITY{name:'Victory Day of the Battle of Stalingrad'}),(m) - [:Relationship{name:'set time'}]->(n), (m) - [:Relationship{name:'set location'}]->(h) return n.name,h.name"}, {"query": "The school is a great place to learn about the history of the country, and the school is a great place to learn about the history of the country.", "cypher": "match (:ENTITY{name:'Young aspiring, achieving future\u3002'}) <- [:Relationship{name:'Teacher's remark'}]-(p),(p) - [:Relationship{name:'Known alumnus'}]->(x) return distinct x.name limit 1"}, {"query": "My classmates, this Visual C+++.NET university tutorial you have in your hands, does anyone know the original name of it?", "cypher": "match ((:ENTITY{name:'Visual C++.NET University Tutorial'}) - [:Relationship{name:'original name'}]-> (m) return m.name"}, {"query": "Help me find five species of squirrels.", "cypher": "match (:ENTITY{name:' family of squirrels'}) <- [:Relationship{name:' family of squirrels'}]-(m) return distinct m.name limit 5"}, {"query": "1322 Games has a plugin for the tag?", "cypher": "match (:ENTITY{name:'1322 game'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'software' return q.name"}, {"query": "The New Zealand South Island earthquake of 11/14 summarized in five tags:", "cypher": "match (:ENTITY{name:'11\u00b714 New Zealand South Island earthquake'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 5"}, {"query": "The following is a list of articles about Fulbright's work in the United States:", "cypher": "match (:ENTITY{name:'Fulberto Yulu'}) - [:Relationship{name:'profession'}]-> (x) return x.name order by x.name"}, {"query": "The film, Intellect and Emotion, cost him how much to make?", "cypher": "match (:ENTITY{name:'Reasonable and Emotional'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'Production cost'}]->(n) return distinct n.name"}, {"query": "The following are the five features of the tag that are not tech products.", "cypher": "match (:ENTITY{name:'155 browser'}) --(m) with m order by m.name where m.name <> 'technology product' return m.name limit 5"}, {"query": "The molecular formula for S-1-N-O-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-C-O-O-C-O-C-O-O-C-O-O-C-O-O-C-O-O-C-O-O-O-C-O-O-O-O-C-O-O-O-O-O-O-O-C-O-O-O-O-O-O-", "cypher": "match ((:ENTITY{name:'(S)-1-N-oxygen-3-hydrogen-alkyl group'}) - [:Relationship{name:'molecular group'}]-> (h) return h.name"}, {"query": "I want to know about the author's simulated circuit and its application to the other 6 layers of this book.", "cypher": "match (:ENTITY{name:'Analog circuits and their applications'}) - [*1..2]-(p) where p.name <> 'HopeBoshy' return p.name limit 6"}, {"query": "The following is a list of some of the most popular and well-known names in the business world.", "cypher": "match (:ENTITY{name:' Josh Trunk'}) - [:Relationship{name:' profession'}]-> (p) return p.name order by p.name"}, {"query": "When was Meijin born?", "cypher": "match (n:ENTITY{name:'Melissa'}) return n.born"}, {"query": "Please list a small and medium-sized profession for me.", "cypher": "match (:ENTITY{name:' small and medium-sized}) - [:Relationship{name:' profession'}]-> (q) return distinct q.name limit 1"}, {"query": "Find out what the six engineers represent.", "cypher": "match (:ENTITY{name:' engineer'}) <- [*]-(m), (m) - [:Relationship{name:' representing work'}]->(n) return m.name, n.name limit 6"}, {"query": "How much are the books of Lefty Ivender priced?", "cypher": "match (:ENTITY{name:'Zoefeld K.W.'}) <-[:Relationship{name:'author'}]-(n) -[:Relationship{name:'pricing'}]->(q) return distinct q.name limit 2"}, {"query": "What are the occupations of graduates of the business school of Suzhou University?", "cypher": "match (:ENTITY{name:'Suzhou University Business School'}) <- [:Relationship{name:'Graduate School'}]-(p),(p) - [:Relationship{name:'Profession'}]->(m) return distinct m.name"}, {"query": "Do you know how much the book written by Ansoo and Lei Ming is worth?", "cypher": "match (:ENTITY{name:'Anzo, Ray Min'}) <- [:Relationship{name:'author'}]- ((x),(x) - [:Relationship{name:'pricing'}]->(q) return distinct q.name"}, {"query": "What is the shortest path between the two layers of integrated electronics design and practice and industrial communication technology principles and applications?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Integrated electronic design and practice'}) - [*..2]-(b:ENTITY{name:'Principles and applications of industrial communications technology'})) return count ((p)"}, {"query": "Find out who is the main character in two Thai dramas.", "cypher": "match (:ENTITY{name:'Thailand'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'Starred in'}]->(n) return m.name,n.name limit 2"}, {"query": "What are the main awards that 13+ rated movies have won?", "cypher": "match (:ENTITY{name:'??? ? 13+'}) <- [:Relationship{name:' ranking'}]- ((h),(h) - [:Relationship{name:' major award'}]->(q) return distinct q.name"}, {"query": "Help me find 20 sports projects", "cypher": "match (:ENTITY{name:'sports project'}) <- [:Tag{name:'tag'}]-(m) return distinct m.name limit 20"}, {"query": "I asked if there were any other tags besides the subject of the post, Ms. Fork.", "cypher": "match (:ENTITY{name:'forked waist'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'topical person' return p.name limit 1"}, {"query": "Who is the author of the book? Where did he come from?", "cypher": "match (:ENTITY{name:'the author'}) - [:Relationship{name:'the work originated'}]->(n) return n.name as name union all match (:ENTITY{name:'the author'}) - [:Relationship{name:'the author'}->(m) return m.name as name"}, {"query": "The main department of Hubei's BPO Construction School is Engineering Measurement and Construction Construction Management.", "cypher": "match (n:ENTITY{name:'Hubei Real Estate Construction School'}) - [:Relationship{name:'main faculty'}]->(h) where h.name <> 'engineering measurement specialist' and h.name <> 'building construction management specialist' return distinct h.name limit 1"}, {"query": "Which two labels are God's pain pills besides life?", "cypher": "match (:ENTITY{name:'God grant pain'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'life' return p.name limit 2"}, {"query": "Where is the area of the village of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of the port of", "cypher": "match (:ENTITY{name:'Gangzhou county's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port town's main port's main port's main port's main port's main port's main port's main port's main port's port's main port's port's port's port's port's port's port's port's port's port's port'"}, {"query": "Recommend 5 other representative actors as witches", "cypher": "match (:ENTITY{name:'actor'}) <- [:Relationship{name:'profession'}]-(m) - [:Relationship{name:'representative work'}]->(h) where h.name <> 'witch's urgency' return distinct h.name limit 5"}, {"query": "Which tournament was held from September 18 to October 1, 1983?", "cypher": "match (:ENTITY{name:'September 18, 1983 to October 1, 1983)) <- [:Relationship{name:'match time'}]- (m) return distinct m.name"}, {"query": "Do you know what accident happened at the intersection of Yiwu Futa Street Mall and 310 Provincial Road?", "cypher": "match (:ENTITY{name:'Yuu Fueda Street Mall Avenue and 310 Provincial Road junction'}) <- [:Relationship{name:'Accident location'}]- (m) return distinct m.name"}, {"query": "Find out if there are two primary schools in Yangzhou County, Anhui Province, public or private schools.", "cypher": "match (:ENTITY{name:'Anhui Province'}) <- [*]-(m), (m) - [:Relationship{name:' category'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "The school, which was founded in 1984, won the main award for its work and told me one thing.", "cypher": "match (:ENTITY{name:'1984'}) <- [:Relationship{name:'time of creation'}]- ((m),(m) - [:Relationship{name:'main award'}]->(q) return q.name skip 3 limit 1"}, {"query": "I'm not sure if you can tell me about the three main achievements of Kyan Tan.", "cypher": "match (:ENTITY{name:'Keng Tan Chun'}) <- [:Relationship{name:'Chinese name'}]-(m),(m) - [:Relationship{name:'main achievement'}]->(q) return q.name order by q.name limit 3"}, {"query": "What is the shortest distance between Beijing Kimwan Weng Technology Development Co. Ltd. and Sichuan Huayang Real Estate Development Co. Ltd. within the two levels?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Beijing Kim Vong Technology and Development Co. Ltd'}) - [*..2]-(b:ENTITY{name:'Sichuan Huayang Real Estate Development Co. Ltd'})) return count ((p) The name of the company is not known."}, {"query": "Please list the first 3 characters.", "cypher": "match (:ENTITY{name:'Dora public pronunciation: \u6749\u7530\u667a and '}) <- [:Relationship{name:'sounding'}]- (p) return p.name order by p.name limit 3"}, {"query": "The book is a five-sentence summary of the growth of the 0-6 year old.", "cypher": "match (:ENTITY{name:'0-6 years growth assessment'}) --(n) with n order by n.name where n.name <> 'books' return n.name limit 5"}, {"query": "What is the content of the selection activity of Chan Si-sen: National Spine? Yang En-Zhen: Life is like a mirror? Sheng Yan-Shan: Is there a mirror? Zhong Tieng-Rong, Hu Xue-Li: Reng Rin-Li? Chen Xiaolan: Doctors?", "cypher": "match (:ENTITY{name:'Chang Shih-Soon: National Spine ? Liu En-Zhen: Life is like a motherfucker ? Sheng Yan-Shan: Is there a link ? Zhong-Ting-Rung , Hu Xue-Li: Reng Rin-Li ? Chen Xiaolan: Da-Doctor-Doctor-Heart '})"}, {"query": "Ask the National Institute of Administration; what is the report released by the National Information Center?", "cypher": "match (:ENTITY{name:'National School of Administration; National Information Center'}) <- [:Relationship{name:'Founding Unit'}]- (q) return distinct q.name"}, {"query": "Can you recommend some import-grade SUVs?", "cypher": "match (:ENTITY{name:'import level attributes of SUV'}) <- [:Relationship{name:'domain attributes'}]- (p) return distinct p.name"}, {"query": "Find out five personal details about this man named Novikov Yevgeni in Russian.", "cypher": "match (n:ENTITY{name:'Novikov Jevgeni'}) - [*]->(x) where x.name <>' foreign name m' return distinct x.name limit 5"}, {"query": "What is the main ingredient of soap?", "cypher": "match (:ENTITY{name:'Shu Skinny'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'main ingredient'}]->(n) return distinct n.name"}, {"query": "Do you know what the match is on June 28th and September 15th?", "cypher": "match (:ENTITY{name:'June 28th to September 15th'}) <- [:Relationship{name:'time of the match'}]- (x) return distinct x.name"}, {"query": "Do you know what art-themed activities are going on?", "cypher": "match (:ENTITY{name:' artwork'}) <- [:Relationship{name:' subject'}]- (m) return distinct m.name"}, {"query": "0551 is a real estate company, do you know who is the president of this company?", "cypher": "match ((:ENTITY{name:'0551 enterprise'}) - [:Relationship{name:'president'}]-> (x) return x.name"}, {"query": "Can you name the five main works of this person Ben Wong Tin-Dok?", "cypher": "match (:ENTITY{name:'Ben Wong Tin-Dok'}) <- [:Relationship{name:'foreign language name'}]-(m),(m) - [:Relationship{name:'main work'}]->(x) return x.name skip 1 limit 5"}, {"query": "Can you list the photography awards that were presented in October?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What are the films directed by Huang Zhiyuan? Can you tell me about five?", "cypher": "The film was released on DVD in the United States on July 15, 2010, by Columbia Pictures."}, {"query": "Who is the coach of the young lady?", "cypher": "match (:ENTITY{name:' [Chinese swimmer]'}) - [:Relationship{name:'coach'}]->(r) return r.name"}, {"query": "Can you recommend five films made in mainland China?", "cypher": "match (:ENTITY{name:'Mainland China'}) <- [:Relationship{name:'Manufacturing area'}]- (x) return distinct x.name limit 5"}, {"query": "What is the area code for the city with the postal code 675,000?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "I want to read the two-layer relationship between Chinese and Sanskrit poetry.", "cypher": "match (n:ENTITY{name:'reading Chinese and Sanskrit poetry'}) - [:Relationship*1..2]->(x) where x.name <>'poetry' return distinct x.name"}, {"query": "I'm not sure if you're familiar with the game, but I'm interested in the game itself.", "cypher": "match (n:ENTITY{name:'Warship'}) - [*1..3]->(x) where x.name <> 'game' return distinct x.name"}, {"query": "Please tell me which hurricane season has 6 major hurricanes in total?", "cypher": "match (:ENTITY{name:'6'}) <- [:Relationship{name:' total number of major hurricanes'}]- (n) return n.name"}, {"query": "What is David Rogers's role in the film?", "cypher": "match (q:ENTITY{name:'David Rogers'}) - [:Relationship{name:'representing work'}]-> (h) with h order by h.name return h.name"}, {"query": "Can you tell us about the personal information within the four-tier relationship related to Langiagne Cassim in Grenada?", "cypher": "match (n:ENTITY{name:'Langiagne Cassim'}) - [*1..3]->(x) where x.name<>'Grenada' return distinct x.name"}, {"query": "The Chinese version of the online novel, \"The Battle of the Sheep\", was published on which platform?", "cypher": "match ((:ENTITY{name:'Yingchuang[link in original Chinese]'}) - [:Relationship{name:'Yingchuang'}]-> (n) return n.name"}, {"query": "I'm not sure what you mean by that, but I'm not sure what you mean by that, but I'm not sure what you mean by that.", "cypher": "match (:ENTITY{name:'enemy forest'}) <--(m) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 3"}, {"query": "Can you give me 5 words about 3-ethyl-4-vinylcarbazole 95 in English?", "cypher": "match (n:ENTITY{name:'3-ethyl-4-methacrylate acetate'}) - [*]->(x) where x.name<>'N-ETHYL-2-VINYLCARBAZOLE 95' return distinct x.name limit 5"}, {"query": "Can you tell me the first three things about Lake Beidou?", "cypher": "match (p:ENTITY{name:'Beidou Lake'}) --(x) return x.name order by x.name limit 3"}, {"query": "I learned that the rectangular leafy green belongs to the rat family Li, and is distributed in Guangdong, Anhui, Zhejiang and other places.", "cypher": "match (n:ENTITY{name:'rectangular leafy green'}) -->(h) with h order by h.name where h.name <> 'distributed in Guangdong, Anhui, Zhejiang and other places\u3002' and h.name <> 'Rat Lee Ko' return h.name limit 5"}, {"query": "Where is the county of Yangon located? What tourist attractions are there?", "cypher": "match (:ENTITY{name:'\u53bf'}) - [:Relationship{name:'geographical location'}]->(n) return n.name as name union all match (:ENTITY{name:'\u53bf'}) - [:Relationship{name:'famous attractions'}]->(m) return m.name as name"}, {"query": "Can you name five profiles of Australian head coach Corika Steve in no less than five levels of relationships?", "cypher": "match (n:ENTITY{name:'Corica Steve'}) - [*1..5]->(x) where x.name <>'Corica Steve, Australian head coach\u3002' return distinct x.name limit 5"}, {"query": "Do you know what Jarrell Benimmon's foreign name is? What kind of athlete is he? What position does he play in the game?", "cypher": "match (:ENTITY{name:'Jerry Benimmon'}) - [:Relationship{name:'foreign name'}]->(n) return n.name as name union all match (:ENTITY{name:'Jerry Benimmon'}) - [:Relationship{name:'sporting project'}]->(m) return m.name as name union all match (:ENTITY{name:'Jerry Benimmon'}) - [:Relationship{name:'place on the field'}->(r) return r.name as name"}, {"query": "I wonder if you have a 188 salon in your eyes?", "cypher": "match (:ENTITY{name:'188salon'}) --(q) with q order by q.name return q.name"}, {"query": "He is a Yang Liang (now Henan Open) man, a Changyang (now Zhejiang Hangzhou) man, a painter of iterations, please describe his representation?", "cypher": "match (m:ENTITY{name:'Suhang ((1094-1172), Liu Liang ((now Henan opened) man, first said to be a money-lender ((now Zhejiang Hangzhou) man, period painter\u3002'}) <-[:Describe{name:'describe'}]-(x),(x) -[:Relationship{name:'represents works'}]->(nameq) return distinct q."}, {"query": "Help me find two soldiers.", "cypher": "match (:ENTITY{name:' military'}) <- [:Relationship{name:' profession'}]-(m) return distinct m.name limit 2"}, {"query": "Find a simplified Chinese textbook in the city of Guangzhou; Primary language extension reading training: 2nd grade 3rd level relationship materials?", "cypher": "match (n:ENTITY{name:'Tongqing school textbook\u00b7 Primary language extension reading training: 2nd grade'}) - [:Relationship*1..3]->(x) where x.name<>'simplified Chinese' return distinct x.name"}, {"query": "Can you help me find the exhibition in Shanghai in 2014?", "cypher": "match (:ENTITY{name:'2014'}) <- [:Relationship{name:'exhibition time'}]- (mn) - [:Relationship{name:'exhibition location'}]->(n:ENTITY{name:'Shanghai City'}) return mn.name"}, {"query": "Please provide two publications priced at 100 yuan", "cypher": "The following is a list of the most commonly used keywords in the search results."}, {"query": "Tell me about the relationship between the three layers of the folk tale of Taejo-chun?", "cypher": "match (n:ENTITY{name:'Taizu Chun'}) - [*1..3]->(x) where x.name <> 'folk legend' return distinct x.name"}, {"query": "Can you tell me about the five novels that are still in print?", "cypher": "match (:ENTITY{name:'in the connection'}) <- [:Relationship{name:'in the connection'}]- (m) return m.name limit 5"}, {"query": "Can you provide me with the link to Chia Michael, born in Bolzano, in the 1-3rd floor?", "cypher": "match (n:ENTITY{name:'Chia Michael'}) - [*1..3]->(x) where x.name <>'Bolzano' return distinct x.name"}, {"query": "I'm not sure what kind of job Kong Min-jung does.", "cypher": "match (:ENTITY{name:'Khongming Rong'}) <- [:Relationship{name:'Chinese name'}]- ((m) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 3"}, {"query": "I want to know the details of the 85kg Halfpenny Leigh 5th floor relationship.", "cypher": "match (n:ENTITY{name:'Halfpenny Leigh'}) - [*1..5]->(x) where x.name <>'85 kg' return distinct x.name limit 5"}, {"query": "Can you recommend me 5 places to visit for 1-2 hours?", "cypher": "match (n:ENTITY{name:'1-2 hours'}) <- [:Relationship{name:'recommended playing time'}]- (mn) return mn.name limit 5"}, {"query": "I would like to know which of the three representative works are published by Brazilian authors?", "cypher": "match (:ENTITY{name:'Brazil'}) <- [:Relationship{name:'nationality'}]-(m),(m) - [:Relationship{name:'representing work'}]->(x) return distinct x.name limit 3"}, {"query": "Which three major awards have been given to films and TV productions shot in Yunnan, China?", "cypher": "match (q:ENTITY{name:'China Yunnan'}) <- [:Relationship{name:' location of filming'}]- ((h) - [:Relationship{name:' major award'}]->(m) return distinct m.name limit 3"}, {"query": "Please tell me who this Korean is and what he has done to represent him.", "cypher": "match (:ENTITY{name:'Korea'}) <- [:Relationship{name:'nationality'}]-(x),(x) - [:Relationship{name:'representing work'}]->(h) return x.name,h.name skip 2 limit 1"}, {"query": "What is the first representation of a type A person?", "cypher": "match (:ENTITY{name:'A'}) <- [:Relationship{name:'Blood type'}]-(x) - [:Relationship{name:'represents work'}]->(q) return q.name order by q.name limit 1"}, {"query": "The series is called \"The Five Books of the Golden Chain\".", "cypher": "match (n:ENTITY{name:' fantasy master series: platinum chain'}) - [:Relationship*]->(x) where x.name <>'Chen-Yue-Ming' return distinct x.name limit 5"}, {"query": "Can you find five songs that are inspired by the music of the original song?", "cypher": "Match (:ENTITY{name:'witch's enlightenment'}) <- [:Relationship{name:'original song'}]- (mn) - [:Tag{name:'tag'}]->(n:ENTITY{name:'musical work'}) return mn.name limit 5"}, {"query": "In which year was the Faculty of Mechanical and Electrical Engineering of Fujian Agricultural Forest University established?", "cypher": "match (:ENTITY{name:'Food and Agriculture University of Fujian's School of Mechanical and Electrical Engineering'}) - [:Relationship{name:'time of creation'}]-> (m) return distinct m.name"}, {"query": "Find another school with a 30,000 square meter building outside the computer department.", "cypher": "match (:ENTITY{name:'30,000 square metres'}) <- [:Relationship{name:'building area'}]-(p) - [:Relationship{name:'main faculty'}]->(h) where h.name <> 'computer' return distinct h.name limit 1"}, {"query": "Do you know what kind of relationships are involved in the three layers of good morning?", "cypher": "The following is a list of all the different ways Match path=(n) <- [:Relationship*3]-(p:ENTITY{name:'good morning'}) UNWIND relationships(path) AS rel return rel.name limit 3"}, {"query": "What is the name of the 1987th album by mainland musician Liang Xiaosheng, written and sung by Liang Xiaosheng?", "cypher": "match ((:ENTITY{name:'1987th'}) - [:Relationship{name:' album to which belongs'}]-> (q) return q.name"}, {"query": "Can you name a person known as Yuan Wen, one of his representative works?", "cypher": "match (p:ENTITY{name:'\u60a0\u626c\u7434\u98ce'}) <-[:Relationship{name:' alias'}]-(h),(h) -[:Relationship{name:' representing work'}]->(n) return n.name order by n.name limit 1"}, {"query": "Do you know what happened at 7pm on October 31, 2014?", "cypher": "match (:ENTITY{name:'31 October 2014 at 7pm'}) <- [:Relationship{name:'event'}]- (m) return distinct m.name"}, {"query": "The following are some of the main achievements of the man who is originally named Tang.", "cypher": "match (:ENTITY{name:'Tang'}) <- [:Relationship{name:'original name'}]-(m) - [:Relationship{name:'main achievement'}]->(n) return n.name order by n.name limit 3"}, {"query": "Can you tell me about the 106 petrol, the industrial product?", "cypher": "match (p:ENTITY{name:'106 gasoline'}) --(h) with h order by h.name where h.name <> 'industrial product' return h.name"}, {"query": "I need to know 5 personal information about the 1.83m Pedrosa, OK?", "cypher": "match (n:ENTITY{name:'Pedrosa'}) - [:Relationship*]->(x) where x.name <>'1.83 m' return distinct x.name limit 5"}, {"query": "Where is the production area of the left bank of the river where Chen Changyu directed the TV series in 2014?", "cypher": "match ((:ENTITY{name:'On the Left Bank of the River [2014 TV series directed by Chen Changming]'}) - [:Relationship{name:'Production Area'}]-> (n) return n.name"}, {"query": "How old is Busan Pottery?", "cypher": "match (:ENTITY{name:'Boshan Ceramics'}) - [:Relationship{name:'History'}]-> (m) return distinct m.name"}, {"query": "Can you tell us about all the relationships that are contained in the six layers?", "cypher": "match path=(n) <- [:Relationship*6]- ((p:ENTITY{name:'\u4f59\u6d0b'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you tell me everything you know about South Korean Prime Minister Park Geun-hye?", "cypher": "match (:ENTITY{name:'Park's column'}) - [:Relationship*1..3]-(p) return p.name limit 10"}, {"query": "Do you know who's representative is Julia?", "cypher": "match (:ENTITY{name:'Juliet'}) <- [:Relationship{name:'representing work'}]- (m) return distinct m.name"}, {"query": "I need to know the information from Christopher Kimball. Do you have it?", "cypher": "match (:ENTITY{name:'Christopher Kimball'}) --(h) return distinct h.name"}, {"query": "I would like to know which school won the main prize for the Civilization Unit of the whole of the Yangon county.", "cypher": "match (:ENTITY{name:'Tonghua County Civilization Unit'}) <- [:Relationship{name:'Main award'}]- (h) return h.name order by h.name"}, {"query": "You see what the newspapers say about the cause of the fire in the 12/19 Turungalau Hotel in the Philippines?", "cypher": "match ((:ENTITY{name:'12\u00b719 Philippines Turungalau Hotel fire'}) - [:Relationship{name:'cause of fire'}]-> (p) return p.name"}, {"query": "Can you tell me who Sunny Red is?", "cypher": "The name of the game is \"Skype\""}, {"query": "What five films has the director from Liaoning directed besides \"The Day of the Red Dragon\"?", "cypher": "match (n:ENTITY{name:'Lang-ning'}) <- [:Relationship{name:'place of birth'}]-(m) - [:Relationship{name:'representative work'}]->(x) where x.name <> 'red days' return distinct x.name limit 5"}, {"query": "What is the opposite of the near and far equivalent of peaches?", "cypher": "match (:ENTITY{name:'Relationship{name:'near term'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'counter term'}]->(m) return m.name as name"}, {"query": "I love racing cars so much, do you know what the top speed of this 1968 Lamborghini Espada is?", "cypher": "The game is played from a first-person perspective."}, {"query": "What are the next five works by Liu Bei that will be presented in the four relationships related to the Far East?", "cypher": "match (n:ENTITY{name:' distant\u4ead'}) - [*1..4]->(x) where x.name <>'square' return distinct x.name limit 5"}, {"query": "I would like to know the 103 pages of world literature titled: Tea Flower Girl and Related Information on the Two Levels of Relationships?", "cypher": "match (n:ENTITY{name:' difficult to fold children's paper size'}) - [:Relationship*1..2]->(x) where x.name <>'103 pages' return distinct x.name"}, {"query": "Please let me know about this person, Mick Foley.", "cypher": "match (:ENTITY{name:'Mick Foley'}) --(p) return distinct p.name"}, {"query": "Do you know the details of the book Nutritional Recipes for Infants 0-3 years old?", "cypher": "match (x:ENTITY{name:'0-3 years old infant and toddler nutritional supplement'}) --(n) with n order by n.name where n.name <> 'books' return n.name"}, {"query": "Can you find me the name of a doctor by profession?", "cypher": "match (:ENTITY{name:'doctor'}) <- [:Relationship{name:'profession'}]-(n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "What movies have been released in 2016/9/23? Can you name eight?", "cypher": "Match (:ENTITY{name:'September 23, 2016'}) <- [:Relationship{name:'release time'}]- (h) return h.name limit 8"}, {"query": "Please list five representative works of this person born on July 22, 1976.", "cypher": "match (h:ENTITY{name:'22 July 1976'}) <- [:Relationship{name:'date of birth'}]-(n),(n) - [:Relationship{name:'represents work'}]->(m) return m.name skip 1 limit 5"}, {"query": "I would like to know the English name of the white-eye fungus, can you help me?", "cypher": "match ((:ENTITY{name:' white-colored rickets'}) - [:Relationship{name:' English alias'}]-> (n) return n.name"}, {"query": "I'm asking you, VIP Lover 2: Again, what is the first lady's novel genre?", "cypher": "Match ((:ENTITY{name:'VIP Lover 2: Meet the First Lady'}) - [:Relationship{name:'novel type'}]-> (n) return n.name"}, {"query": "The 2.5% of the total amount of the liquid is used in the suspension of the micro-capsule.", "cypher": "match ((:ENTITY{name:'2.5% sodium chloride net microscope suspender'}) - [:Relationship{name:' manufacturer'}]-> (q) return q.name"}, {"query": "Can you tell us about the professions of Jim Abrams?", "cypher": "match (:ENTITY{name:'Jim Eberly Hamms'}) - [:Relationship{name:'profession'}]-> (x) return x.name order by x.name"}, {"query": "Which dynasty was Li Xue emperor?", "cypher": "match (:ENTITY{name:'Lee Seung-Yu'}) - [:Relationship{name:'profession'}]-> (m) return distinct m.name"}, {"query": "Can you list the explosions that have caused one person to be injured?", "cypher": "match (:ENTITY{name:'1 person injured'}) <- [:Relationship{name:'injured'}]- (q) return distinct q.name"}, {"query": "Black and white format company?", "cypher": "match (p:ENTITY{name:' black and white format company'}) return p.location"}, {"query": "I would like to know all the information about the technical regulations for the functional zoning of nature reserves published by the National Forestry Administration.", "cypher": "match (n:ENTITY{name:'Technical protocol for functional demarcation of nature reserves'}) - [:Relationship*]->(x) where x.name <> 'National Forestry Bureau' return distinct x.name"}, {"query": "Can you describe in three sentences a model of excellence in performance management that achieves 100% of the goals?", "cypher": "match (:ENTITY{name:'100% achieving the goal'}) --(m) with m order by m.name return m.name limit 3"}, {"query": "What is the nature of the initial cash flow and what funds are included?", "cypher": "match (:ENTITY{name:' initial cash flow]'}) - [:Relationship{name:' essence'}]->(n) return n.name as name union all match (:ENTITY{name:' initial cash flow'}) - [:Relationship{name:' including '}]->(m) return m.name as name"}, {"query": "Help me find five species of animals that fall under the category of membrane-winged.", "cypher": "match (:ENTITY{name:' membrane wing'}) --(x) return distinct x.name limit 5"}, {"query": "The Chinese government has been trying to get the Chinese to leave the country.", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnicity'}]-(p),(p) - [:Relationship{name:'profession'}]->(q) return q.name skip 1 limit 1"}, {"query": "Can you tell me about the author of this book, who is building and managing digital cities?", "cypher": "match (:ENTITY{name:'Digital City Building and Management'}) <- [:Relationship{name:'Book name'}]- ((p) - [:Relationship{name:'author'}]->(n) return distinct n.name"}, {"query": "Can you tell me about the three companies that were founded in 2017?", "cypher": "match (:ENTITY{name:'2017'}) <- [:Relationship{name:'time of establishment'}]-(n) - [:Relationship{name:'company name'}]->(q) return distinct q.name limit 3"}, {"query": "What is the history of the Maghreb culture and what are its main findings?", "cypher": "match (:ENTITY{name:'Magnetic Mountain Culture'}) - [:Relationship{name:'Epoch'}]->(n) return n.name as name union all match (:ENTITY{name:'Magnetic Mountain Culture'}) - [:Relationship{name:'Major discovery 1'}]->(m) return m.name as name union all match (:ENTITY{name:'Magnetic Mountain Culture'}) - [:Relationship{name:'Major discovery 2'}->(r) return r.name as name"}, {"query": "Who is the songwriter and publisher of crazy?", "cypher": "match (:ENTITY{name:'crazy[original song]'}) - [:Relationship{name:'original song'}]->(n) return n.name as name union all match (:ENTITY{name:'crazy[original song]'}) - [:Relationship{name:'issue company'}]->(m) return m.name as name"}, {"query": "What are the game labels for each game? Please sort by the number of labels from small to large.", "cypher": "The game is also available in English, Spanish, French, German, Italian, Spanish, Portuguese, Italian, Spanish, Italian, Portuguese, Spanish, Italian, Italian, Portuguese, Italian, Italian, Portuguese, Italian, Portuguese, Italian, Portuguese, Spanish, Portuguese, Portuguese, Portuguese, Spanish, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese, Portuguese"}, {"query": "Can you find information on the three levels of relationship between your aunt and uncle?", "cypher": "match (n:ENTITY{name:'presented as aunt and uncle'}) - [*1..3]->(x) where x.name <> '' return distinct x.name"}, {"query": "Please tell me what is the earthquake at 124.1\u00b0 latitude?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Is there any other information documented about the 12 core single-mode optical cable technology?", "cypher": "match (:ENTITY{name:'12 core mono-mode optical cable'}) --(q) with q order by q.name where q.name <> 'technology' return q.name"}, {"query": "What are the attributes of the tags that should be matched 100 days ago?", "cypher": "match (:ENTITY{name:'100 days ago'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Can you give me an example of five famous alumni of this school? This school is a historic key secondary school in Yao City, the famous secondary school in Yao City, Yang Han Yun Secondary School.", "cypher": "match (q:ENTITY{name:'Yangon City Historic Key Secondary School, Yangon City well-known secondary school, Yang Han\u6e90\u4e00\u4e2d\u3002'}) <-[:Describe{name:'Description'}]-(n) -[:Relationship{name:'Known alumni'}]->(m) return m.name order by m.name limit 5"}, {"query": "Can you tell me if Xinjiang is not the kind of relationship that guests are involved in in the four-tier dream?", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:'Xinjiang is not a guest in dreams'}) UNWIND relationships(path) AS rel RETURN rel.name limit 1"}, {"query": "What are the most representative works of people named Guo Gong in Chinese?", "cypher": "match (:ENTITY{name:'consortium'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'representative work'}]->(h) return distinct h.name"}, {"query": "What kind of lyric poems does Li Wei have?", "cypher": "match (:ENTITY{name:'Lee White'}) <- [:Relationship{name:'author'}]-(m), (m) - [:Relationship{name:'body style'}]->(n) where n.name='\u4e50\u5e9c\u8bd7' return m.name"}, {"query": "Is there a book called 100 Gambling Wisdoms and can you find information about it?", "cypher": "match (:ENTITY{name:'100 games of wisdom'}) --(m) with m order by m.name where m.name <> 'books' return m.name"}, {"query": "I'm not sure what the mechanism is for college students to study for two years.", "cypher": "match (:ENTITY{name:' two years of college student'}) <- [:Relationship{name:' called'}]- (p) return p.name"}, {"query": "Can you tell me the names of five Chinese people?", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnicity'}]- ((q) return distinct q.name limit 5"}, {"query": "The following is a list of Chinese people who are known to have been involved in the three-tiered relationship of Wu Medjun:", "cypher": "match (n:ENTITY{name:'\u6b66\u4ef2\u5143'}) - [:Relationship*1..3]->(x) where x.name <>'China' return distinct x.name"}, {"query": "I remember a fire in a closet, and my name is coming up?", "cypher": "match (:ENTITY{name:' closet, lots of clothes'}) <- [:Relationship{name:' clothes'}]- (p) return p.name"}, {"query": "Can you tell me about the five car shows?", "cypher": "match (:ENTITY{name:' car show'}) <- [:Relationship{name:' show type'}]- (x) return x.name limit 5"}, {"query": "Please tell me which one of the most representative works of art is the seduction of the mother: the confessional of a marriage counselor?", "cypher": "match (p:ENTITY{name:'Relationship's a marriage counselor's confession'})"}, {"query": "Do you know which exhibitions are held in Shanghai? Please provide five.", "cypher": "match (:ENTITY{name:' Shanghai'}) <- [:Relationship{name:' Exhibition city'}]- (q) return q.name limit 5"}, {"query": "What are the three jobs that graduates of the Department of Industrial Economics at the People's University of China can do besides being an associate professor at the University of Foreign Trade and Economics?", "cypher": "match (:ENTITY{name:'Industrial Economics Department'}) <- [:Relationship{name:' Graduate School'}]-(q),(q) - [:Relationship{name:' Occupation'}]->(x) where x.name <> 'Associate Professor at the University of Foreign Trade and Economics' return distinct x.name limit 3"}, {"query": "I'm not sure what I'm going to do if I get a job that three British people would do.", "cypher": "match (:ENTITY{name:'UK'}) <- [:Relationship{name:'nationality'}]- ((m) - [:Relationship{name:'profession'}]->(h) return distinct h.name limit 3"}, {"query": "Please tell me I'm not there to watch this movie.", "cypher": "match (:ENTITY{name:'Hey I'm not there'}) --(m) return m.name order by m.name limit 5"}, {"query": "Can you get me five books for 10 bucks?", "cypher": "match (:ENTITY{name:'10\u5143'}) <- [:Relationship{name:' priced'}]-(m), (m) - [:Relationship{name:' category'}]->(n) where n.name='report' return m.name limit 5"}, {"query": "The following is a list of the 1st to 3rd level relationships of personal information about Shevchenko S.", "cypher": "match (n:ENTITY{name:'Shevchenko S'}) - [*1..3]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "I'm not sure if I can find a rep for Ben Block.", "cypher": "match (:ENTITY{name:'block'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'representing work'}]->(n) return distinct n.name limit 1"}, {"query": "Do you have a Chinese nickname for the 7th?", "cypher": "match (:ENTITY{name:'Seventh Museum'}) - [:Relationship{name:'Chinese name'}]-> (q) with q order by q.name where q.name <> 'Seventh Museum' return q.name"}, {"query": "What are the publications of the Beijing Language University Press and what are the prices?", "cypher": "match (:ENTITY{name:'Peking Language University Press'}) <- [:Relationship{name:'Publications'}]-(h),(h) - [:Relationship{name:'Pricing'}]->(q) return distinct h.name,q.name"}, {"query": "Who among the actors graduated from China Media University?", "cypher": "match (:ENTITY{name:'China Media University'}) <- [:Relationship{name:'Graduate School'}]-(m), (m) - [:Tag{name:'tag'}]->(n) where n.name='actor' return distinct m.name"}, {"query": "How did I get to be successful and what is the shortest path to the three layers of book enlightenment?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'How did I succeed'}) - [*..3]-(b:ENTITY{name:'the book's path'})) return count ((p)"}, {"query": "Do you know what happened on the night of October 22, 2017?", "cypher": "match (:ENTITY{name:'October 22, 2017 at night'}) <- [:Relationship{name:'time of occurrence'}]- (m) return distinct m.name"}, {"query": "I want to know.", "cypher": "match (:ENTITY{name:'.gs'}) --(m) with m order by m.name return m.name"}, {"query": "I'm not sure what you mean by \"stop\" but I'm not sure what you mean by \"stop\".", "cypher": "match (:ENTITY{name:'\u7136\u800c\u6b62'}) <- [:Relationship{name:'Chinese name'}]- ((n) - [:Relationship{name:'translated'}]->(q) return distinct q.name"}, {"query": "Please tell me what content awards are included in the selection, including the Business Awards, Innovation Awards, and the People of the Cloud Awards?", "cypher": "match (:ENTITY{name:' enterprise award, innovation product, figure of the cloud'}) <- [:Relationship{name:' award'}]- (p) return distinct p.name"}, {"query": "Do you have any information about the two-tiered relationship involved in the NPC?", "cypher": "The following pages link to The Unknown:"}, {"query": "Is 2-methylbenzene safe to be used in five knowledge points?", "cypher": "match (:ENTITY{name:'2-methacrylate and methyl methacrylate'}) --(q) with q order by q.name return q.name limit 5"}, {"query": "What is the name of the film written by Liu Xiaobo?", "cypher": "Match (:ENTITY{name:'Relationship{name:'writer'}]- (n) return distinct n.name"}, {"query": "The 09MND cold-pressed steel pipe we developed is mainly used for what?", "cypher": "match ((:ENTITY{name:'09MND cold-pressure steel pipe'}) - [:Relationship{name:'use'}]-> (n) return n.name"}, {"query": "There is a scientific category for 00Cr17Ni12Mo2, what else do you know about it?", "cypher": "match (:ENTITY{name:'00Cr17Ni12Mo2'}) --(h) with h order by h.name where h.name <> 'science' return h.name"}, {"query": "Can you describe this person, what are his labels?", "cypher": "The name of the game is the same as the name of the game itself. The name of the game is the same as the name of the game itself."}, {"query": "Do you know what chemical is C5H7N?", "cypher": "match (:ENTITY{name:'C5H7 N'}) <- [:Relationship{name:'molecular'}]- (m) return distinct m.name"}, {"query": "I'm interested in three things.", "cypher": "match (:ENTITY{name:' diamond pencil tip award'}) --(q) return distinct q.name limit 3"}, {"query": "Can you tell me how many companies that offer exhibition services you know about?", "cypher": "match (:ENTITY{name:' exhibition services'}) <- [:Relationship{name:' business scope'}]- (x) return x.name limit 5"}, {"query": "Which of Charles Edward Barber's works is the Barber 10 and Barber 25?", "cypher": "match (n:ENTITY{name:'Charles Edward Barber'}) - [:Relationship{name:'represents works'}]->(h) where h.name <> 'Barber 10 cents' and h.name <> 'Barber 25 cents' return distinct h.name limit 1"}, {"query": "Can you tell me about 10 incidents of fire?", "cypher": "match (:ENTITY{name:'fire'}) <- [:Relationship{name:'event type'}]- (p) return p.name limit 10"}, {"query": "Do you know the Chinese Hong Kong film distributor for the film Generation Flowers?", "cypher": "match ((:ENTITY{name:'a generation of names'}) - [:Relationship{name:'a company of issuers'}]-> (p) return p.name"}, {"query": "Can you describe in one sentence the E-6-sub-alkyl-1,3-dimethyl-dihydroxy-2-,4-,1-H,3H-dihydroxy?", "cypher": "match (:ENTITY{name:'1.18 Hebei County Tang District Fireworks Bombing Accident'}) --(q) with q order by q.name return distinct q.name skip 1 limit 1"}, {"query": "What does it mean to break the boundaries?", "cypher": "match (:ENTITY{name:'delimitation'}) - [:Relationship{name:'interpretation'}]-> (m) return distinct m.name"}, {"query": "The first thing I want to do is to find out about the four-tiered relationship between the mainstream and the small-town cucumbers.", "cypher": "match (n:ENTITY{name:'squirt'}) - [*1..4]->(x) where x.name <>'squirt, piss too much' return distinct x.name"}, {"query": "How many versions of the software can you tell me about? What is the size of the software? How many people have downloaded it?", "cypher": "match (:ENTITY{name:'Relationship{name:'software version'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'software size'}) ->(m) return m.name as name union all match (:ENTITY{name:'Relationship{name:'downloads'}) ->r) return r.name as name"}, {"query": "What is the name of the relationship involved in the 5th floor of the Guangzhou Samsung Decoration Company?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' Guangzhou Samsung Decoration Co. '}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "What college did you graduate from?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'Graduate school'}]->(n) return distinct n.name"}, {"query": "The problem is that you mention two labels of the Psychological Association of the Hubei Vocational Institute of Technology, but not universities and education.", "cypher": "match (n:ENTITY{name:'Psychological Association of Hubei Vocational Institute of Technology'}) - [:Tag{name:'tag'}]->(h) with h order by h.name where h.name <> 'university' and h.name <> 'education' return h.name limit 2"}, {"query": "What books are there in the history class? Can you help me find two?", "cypher": "The following is a list of the most commonly used tags in the history of the world."}, {"query": "Do you know what regulations were approved on July 27, 2014?", "cypher": "match (:ENTITY{name:'July 27, 2014'}) <- [:Relationship{name:'approved date'}]- (p) return distinct p.name"}, {"query": "Who wrote the film Pearl of Great Price and what is its genre?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'writer'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'type'}]->(m) return m.name as name"}, {"query": "Do you know what chemical has CAS number 313223-00-6?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "The name of a work is called Seven O'Clock Faces, and what is the name of the other one?", "cypher": "match (:ENTITY{name:'seven o'clock face'}) <- [:Relationship{name:'work alias'}]- (x) return x.name"}, {"query": "Who was the first education minister of the National Government?", "cypher": "match (:ENTITY{name:'first Minister of Education'}) <- [:Relationship{name:'main achievements'}]- ((m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name, n.name"}, {"query": "Do you know how many exhibitions are in Guangzhou, China?", "cypher": "match (:ENTITY{name:'China Guangzhou'}) <- [:Relationship{name:'Exhibition city'}]- (n) return n.name limit 12"}, {"query": "Please help me find out the scope of the Media.", "cypher": "match (:ENTITY{name:'Media'}) - [:Relationship{name:'Scope of operations'}]->(m) return distinct m.name"}, {"query": "What is the full name of OPML?", "cypher": "match (:ENTITY{name:'OPML'}) - [:Relationship{name:'Chinese name'}]-> (m) return distinct m.name"}, {"query": "Can you tell me about the exhibition in Jinan?", "cypher": "match (:ENTITY{name:'Jinan'}) <- [:Relationship{name:'Showcase city'}]- (m) return m.name"}, {"query": "What was the NBA shutdown of 1964?", "cypher": "match ((:ENTITY{name:'1964 NBA suspension'}) - [:Relationship{name:'event'}]-> (n) return n.name"}, {"query": "What is the Chinese name for a man named Ye-Ye-Ye-Ye-Ye?", "cypher": "match (:ENTITY{name:'Yule'}) <- [:Relationship{name:'Chinese name'}]- ((p),(p) - [:Relationship{name:'profession'}]->(m) return distinct m.name"}, {"query": "Which film won the Special Contribution Award at the 24th Golden Globe Film Festival?", "cypher": "match (:ENTITY{name:'24th Golden Raspberry Film Festival Special Contribution Award'}) <- [:Relationship{name:'main award'}]- (m) return distinct m.name"}, {"query": "The following is a list of the top 10 most popular websites in the world, ranked by the number of people who have visited the site:", "cypher": "match (n:ENTITY{name:'Calull Marc'}) - [:Relationship*1..3]->(x) where x.name <>'1.73 m' return distinct x.name"}, {"query": "Is there any other information about the river besides the Yellow River Water Press?", "cypher": "match (:ENTITY{name:'Waterfall'}) --(m) with m order by m.name where m.name <> 'Waterfall' return distinct m.name limit 4"}, {"query": "What is the shortest distance between Nakin Village and Mantai Village on the second floor?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Najin village'}) - [*..2]-(b:ENTITY{name:'Man\u5c3e\u6751'})) return count ((p)"}, {"query": "Three pieces of information about 0-1 year old science feeding?", "cypher": "match (x:ENTITY{name:'0-1 years of scientific feeding'}) --(q) with q order by q.name return q.name limit 3"}, {"query": "What other names are there for people of Chinese ethnicity, list three?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(m),(m) - [:Relationship{name:'othername'}]->(q) return distinct q.name limit 3"}, {"query": "The following literary works are in the context of the two-tier relationship between Snow Revival and the events of the 18th and 19th of this month.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <> 'literature' return distinct x.name"}, {"query": "The film directed by Lee Min Hoon, Lee Seung-Foo, won the KBS Acting Award for Best Actress and the other awards for which she won.", "cypher": "match (:ENTITY{name:'Lee Min Hoon, Lee Si Fu'}) <- [:Relationship{name:'director'}]-(x) - [:Relationship{name:'main award'}]->(m) where m.name <> 'KBS acting award for best actress award Zhang Nara' return distinct m.name limit 10"}, {"query": "Tell me about the two-tier relationship between the organization and Shanghai Shengyuan Intelligent Technology Co., Ltd.", "cypher": "match (n:ENTITY{name:'Shanghai Traveling Intelligent Technology Co. Ltd'}) - [*1..2]->(x) where x.name<>'organization' return distinct x.name"}, {"query": "Do you want to find a literary work, close your eyes, and embrace the message of your two-tiered relationship?", "cypher": "match (n:ENTITY{name:'close your eyes, hug you'}) - [*1..2]->(x) where x.name <>'literary work' return distinct x.name"}, {"query": "What is the price of the three books published by Jiangsu Sheng Art Publishing House?", "cypher": "match (:ENTITY{name:'Jiangsu Yang Art Publishing House'}) <- [*]-(m),(m) - [:Relationship{name:'Price'}]->(n) return m.name,n.name limit 10"}, {"query": "When is the date of publication of this new edition of the 2011 Shandong Provincial Civil Servants Recruitment Examination Special Materials Statement?", "cypher": "match ((x:ENTITY{name:'2011 new edition Shandong Province civil servant recruitment exam special material statement'}) - [:Relationship{name:'published date'}]-> (m) return m.name"}, {"query": "The book was published in the United States by the publisher of The King's Glory.", "cypher": "match (:ENTITY{name:'King Glory \u7f16'}) <- [:Relationship{name:'author'}]- ((n) - [:Relationship{name:'publisher'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know when Three Stone was founded?", "cypher": "match (p:ENTITY{name:'Six Stone Company'}) return p.time The name of the match is"}, {"query": "What is the theme of the 2012 Chinese Higher Education Design Art Competition?", "cypher": "match ((:ENTITY{name:'2012 First Chinese Higher Education Institute Design Art Competition'}) - [:Relationship{name:'Contest theme'}]-> (q) return q.name"}, {"query": "The examples of Gardner's representative works are given here.", "cypher": "match (:ENTITY{name:'Gardner'}) - [:Relationship{name:'represents work'}]-> (p) return distinct p.name"}, {"query": "The following is a list of information about the relationship between the two sides of the Shining, who is a Chinese police officer.", "cypher": "match (n:ENTITY{name:'\u76db\u96ea'}) - [:Relationship*1..2]->(x) where x.name <>'Chinese police' return distinct x.name"}, {"query": "What are the labels of the current historical events 1.3 Fukushima high-speed auto accidents?", "cypher": "match (:ENTITY{name:'1.3 Kwin Tong High-Speed Accident'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'contemporary historical event' return q.name limit 10"}, {"query": "Do you know the name of the author whose work is the capture of the geometrical geometry of the geometrical features of the random number problem?", "cypher": "match (n:ENTITY{name:'capture the structure of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays of the arrays"}, {"query": "Please list all the relationship information within the 2 layers related to the rental criteria.", "cypher": "The following is a list of all the different ways Match path=(n) <- [:Relationship*2]-(p:ENTITY{name:'rent standard'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What is the profession of a cook?", "cypher": "match (h:ENTITY{name:'\u82b8'}) <--(m) -[:Relationship{name:'profession'}]->(x) return distinct x.name limit 1"}, {"query": "Can you tell me which authors weighing 66 kg have representative works?", "cypher": "match (:ENTITY{name:'66'}) <- [:Relationship{name:'weight'}]- ((q),(q) - [:Relationship{name:'represents work'}]->(p) return distinct p.name"}, {"query": "Tell us about the main achievements of Noi Bussakorn, the top 5 lines?", "cypher": "match (:ENTITY{name:'Noi Bussakorn'}) - [:Relationship{name:'main achievement'}]-> (p) return p.name order by p.name limit 5"}, {"query": "Did you find any relevant information about the eight other Desperate Baby titles besides the comic book?", "cypher": "match (:ENTITY{name:'desperate baby'}) --(m) with m order by m.name where m.name <> 'comic' return distinct m.name limit 8"}, {"query": "Please give me 10 facts about fantasy novels.", "cypher": "match (:ENTITY{name:' fantasy fiction'}) --(n) return n.name order by n.name limit 10"}, {"query": "I'm not sure there are any books that say that women should be better off with their clothes on.", "cypher": "match (n:ENTITY{name:'Women are better off with spit'}) where n is not null return 1"}, {"query": "Can you recommend 8 books for $30?", "cypher": "The value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value of the value"}, {"query": "Where are the main green pillar production sites?", "cypher": "match (:ENTITY{name:' green pillar'}) - [:Relationship{name:' major mineral'}]-> (m) return distinct m.name"}, {"query": "What is the genus of the Yunnan winged tree?", "cypher": "match (:ENTITY{name:' Yunnan wing tree'}) - [:Relationship{name:' branch'}]->(m) return distinct m.name"}, {"query": "Do you know what government reports the government has?", "cypher": "match (:ENTITY{name:'government report'}) <- [:Relationship{name:'file type'}]- (n) return distinct n.name"}, {"query": "What were the final results of the 1894 Hong Kong Plague reported in the newspapers?", "cypher": "match ((:ENTITY{name:'1894 Hong Kong plague'}) - [:Relationship{name:'results'}]-> (x) return x.name"}, {"query": "Can you find out the names of the three members of the Association of Artists of Liaoning Province?", "cypher": "match (:ENTITY{name:'Member of the Association of Artists of Liaoning Province'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'date of birth'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Can you tell me how long it has been since there were no casualties?", "cypher": "match (:ENTITY{name:' none'}) <- [:Relationship{name:' casualties'}]- (m) return m.name limit 5"}, {"query": "Tell me about the 2003 Autumn High School World's Modern History book?", "cypher": "match (:ENTITY{name:'03 autumn high school world modern history book'}) --(m) with m order by m.name return m.name"}, {"query": "I'm not sure if you can pick out three messages from the 17 November Revolutionary Organization besides social events.", "cypher": "match (:ENTITY{name:'17 November Revolutionary Organization'}) --(m) with m order by m.name where m.name <> 'social event' return distinct m.name limit 3"}, {"query": "Is there a work of art written by the stone root? Can you tell me three?", "cypher": "match (:ENTITY{name:'Pyramid'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'representative work'}]->(h) return distinct h.name limit 3"}, {"query": "Do you remember the name of one of the accidents that killed 1 and injured 14 people?", "cypher": "match (:ENTITY{name:'1 dead, 14 wounded'}) <- [:Relationship{name:'accidentally injured'}]- (h) return distinct h.name"}, {"query": "So let me do the equation for the line.", "cypher": "match (:ENTITY{name:'linear surface'}) - [:Relationship{name:'equation'}]-> (m) return distinct m.name"}, {"query": "Have you any information that I can give you?", "cypher": "match (q:ENTITY{name:'\u6881\u575a'}) --(x) return distinct x.name limit 1"}, {"query": "What is the postal code of Pingu, Zhejiang?", "cypher": "Match (:ENTITY{name:'036800'}) <- [:Relationship{name:'Pingru postcode'}]- (p) return p.name"}, {"query": "The price of a ticket to the Qianlong Wall [Beijing Palace Shadow Wall] is how much?", "cypher": "match ((:ENTITY{name:'Kyunlong wall [Beijing's former palace shadow wall]'}) - [:Relationship{name:'ticket price'}]-> (n) return n.name"}, {"query": "Please tell me 10 of the main achievements of this celebrity, whose most representative work is the rap and theater art overview.", "cypher": "match (:ENTITY{name:'Relationship'}) <- [Relationship's name: 'representative work'}]- ((q) - [Relationship's name: 'main achievement'}]->(p) return p.name order by p.name limit 10"}, {"query": "What are the publications of the Economic Science Press? When are they published? Could you give me a list of five?", "cypher": "match (:ENTITY{name:' Economic Science Publishing'}) <- [:Relationship{name:' Economic Science Publishing'}]- ((h),(h) - [:Relationship{name:' Publishing time'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "I would like to know what is the content of the old work on the relationship between the three layers of the old house of the old house of the old house of the old house of the old house of the old house of the old house of the old house of the old house of the old house of the old house of the old house of the old house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of the new house of", "cypher": "match (n:ENTITY{name:'Visiting the old'}) - [*1..3]->(x) where x.name <>'return' return distinct x.name"}, {"query": "What albums have been released in Japan? Can you recommend 5?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'Region of release'}]- (p) return p.name limit 5"}, {"query": "Can you tell us who is the author of the book, and what era and genre it was written in?", "cypher": "Match (:ENTITY{name:'Cold War'}) - [:Relationship{name:'Author'}]->(n) return n.name as name union all match (:ENTITY{name:'Cold War'}) - [:Relationship{name:'Years'}->(m) return m.name as name union all match (:ENTITY{name:'Cold War'}) - [:Relationship{name:'Body Style'}->(r) return r.name as name"}, {"query": "The company is based in the Eastern District of Beijing and is headed by the Eastern District Justice Department. Please help me find out about three more of these law firms.", "cypher": "match (n:ENTITY{name:'Beijing City Nine\u4f17\u5f8b\u5e08\u4e8b\u52a1\u6240'}) -->(h) with h order by h.name where h.name <> 'East City' and h.name <> 'East City Justice Department' return h.name limit 3"}, {"query": "The known 2-methylmethacrylate is a scientific category, can you tell us more about it?", "cypher": "match (:ENTITY{name:'2-methyl methacrylate methane'}) --(q) with q order by q.name where q.name <> 'science' return q.name"}, {"query": "Can you tell me about the first five descriptions of the Blue Lotus from the other side?", "cypher": "match (:ENTITY{name:'Beyond the Blue Lotus'}) --(h) with h order by h.name return h.name limit 5"}, {"query": "The Chinese Academy of Astronautics' 2009 Academic Annual Report is available in various formats.", "cypher": "match (:ENTITY{name:'2009 Chinese Academy of Astronautics Academic Annual Paper Collection'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "Can you find me all the labels for the 0-3 year old baby's Intelligent Enlightenment training?", "cypher": "match (:ENTITY{name:'0-3 years old baby intelligent enlightenment training'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "What other names are there for this place that costs 10 yuan? Can you name five?", "cypher": "match (:ENTITY{name:'10.00'}) <- [:Relationship{name:'ticket price'}]-(p),(p) - [:Relationship{name:'alias'}]->(h) return h.name order by h.name limit 5"}, {"query": "Can you recommend 10 books published in 2013-11?", "cypher": "match (:ENTITY{name:'2013-11'}) <- [:Relationship{name:' time of publication'}]- (q) return q.name limit 10"}, {"query": "Find out what kind of books are in the six books.", "cypher": "match (:ENTITY{name:'exam book'}) <--(m), (m) - [:Relationship{name:'type'}]->(n) return m.name, n.name limit 6"}, {"query": "Can you find me three public universities?", "cypher": "match (:ENTITY{name:'public office university'}) <- [:Relationship{name:' category'}]-(p) - [:Relationship{name:' Chinese name'}]->(n) return distinct n.name limit 3"}, {"query": "I recommend 5 episodes of 20 episodes or so on YouTube.", "cypher": "match (:ENTITY{name:'Unicode'}) <- [:Relationship{name:'online play platform'}]-(n),(n) - [:Relationship{name:'set'}]->(x) where x.name <> '20 episodes' return distinct x.name limit 5"}, {"query": "The article is about the two-tiered relationship between the captain of the Red Guard and the captain of the Malaya Red Guard.", "cypher": "match (n:ENTITY{name:'paragraph has meaning'}) - [:Relationship*1..2]->(x) where x.name <>'Captain of the Red Guard' return distinct x.name"}, {"query": "Do you know what Chen Meiyu's profession is?", "cypher": "match (:ENTITY{name:'Chen Mei'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 1"}, {"query": "Can you tell me the message of the beauty queen of the sunshine state?", "cypher": "match (:ENTITY{name:'Miss Sunshine'}) --(p) return p.name order by p.name limit 5"}, {"query": "The first thing I want to know is what is the name of the restaurant that sells the apple egg sandwich?", "cypher": "match (n:ENTITY{name:'Apple egg sandwich'}) - [:Relationship*]->(x) where x.name<>'food' return distinct x.name"}, {"query": "Is there a legend about a monster called the Hungry Wolf?", "cypher": "match (n:ENTITY{name:'hungry wolf'}) where n is not null return 1"}, {"query": "To use the distillation method to purify the acetylsalicylic acid, first of all you need to ask what is the boiling point of the banana?", "cypher": "match ((:ENTITY{name:'Bacillus subtilis'}) - [:Relationship{name:'boiling point'}]-> (q) return q.name"}, {"query": "What is the shortest path between the crazy cornfield and the officers and the boy on the third floor?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'crazy wheat seed'}) - [*..3]-(b:ENTITY{name:'officer and boy'})) return count ((p))"}, {"query": "The book is a collection of 13 high school tourism management exclusives: new information about the relationship between the two layers of tourism aesthetics.", "cypher": "match (n:ENTITY{name:'Higher education tourism management exclusives'}) - [:Relationship*1..2]->(x) where x.name<>'13' return distinct x.name"}, {"query": "Who looks as tall as Beck Mark, and what tags do these people each have?", "cypher": "The following is a list of all the different ways Beck Mark is credited in the database:"}, {"query": "Can you tell us about the five levels of Najib Chafik's four-level relationships, born in Bourgon?", "cypher": "match (n:ENTITY{name:'Najib Chafik'}) - [*1..4]->(x) where x.name<>'Bourgon' return distinct x.name limit 5"}, {"query": "Can you find me the senior national art dealer and his graduation school?", "cypher": "match (:ENTITY{name:'Senior National Art Identifier'}) <- [:Relationship{name:'profession'}]-(h),(h) - [:Relationship{name:'graduate college'}]->(q) return distinct h.name,q.name"}, {"query": "What kind of work is the famous monk's rumor?", "cypher": "match (:ENTITY{name:'renowned monk's legend'}) <-[:Relationship{name:'work'}]-(n) -[:Relationship{name:'category'}]->(h) return distinct h.name limit 1"}, {"query": "Help me find 10 species of ants.", "cypher": "match (:ENTITY{name:'subclass'}) <-[:Relationship{name:'subclass'}]-(m) return distinct m.name limit 10"}, {"query": "The temple of Taitus was built by which emperor?", "cypher": "match (:ENTITY{name:'Third Temple'}) - [:Relationship{name:'Founder'}]->(m) return distinct m.name"}, {"query": "What important events happened to the people of Leeds United?", "cypher": "match (:ENTITY{name:'Leeds United'}) <- [:Relationship{name:' belonging to a sports team'}]- ((h) - [:Relationship{name:' important event'}]->(p) return distinct p.name"}, {"query": "The story of the 12/3 bank robbery in Lima, Peru, and the hostage situation in the country.", "cypher": "match (:ENTITY{name:'12\u00b73 Peruvian Lima Bank robbery hostage situation'}) --(x) with x order by x.name return x.name limit 1"}, {"query": "The only thing that I can think of is that the only way to get rid of all the barriers is to get rid of the purest of all the barriers.", "cypher": "match (:ENTITY{name:'to remove all barriers to the path of pure Toroni'}) <- [:Relationship{name:'full name'}]-(m),(m) - [:Relationship{name:'alias'}]->(q) return distinct q.name limit 2"}, {"query": "Do you know what day is the national day of the UK?", "cypher": "match (:ENTITY{name:'UK'}) <- [:Relationship{name:'abbreviated as '}]-(x),(x) - [:Relationship{name:'National Day'}]->(q) return distinct q.name limit 1"}, {"query": "The first is to describe a cultural figure and his corresponding professional nature.", "cypher": "match (:ENTITY{name:'cultural person'}) <- [:Tag{name:'tag'}]-(h),(h) - [:Relationship{name:'profession'}]->(x) return h.name order by h.name,x.name limit 1"}, {"query": "Do you know some of the representative works of this Chichen Itza-born artist?", "cypher": "match (:ENTITY{name:'Zhi'}) <- [:Relationship{name:'birthplace'}]-(q) - [:Relationship{name:'representative work'}]->(n) return n.name order by n.name limit 5"}, {"query": "What do you know about the relationship names that are involved in the Five Levels of Hebei Funing?", "cypher": "The following pages link to The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns"}, {"query": "What is the English name for the resort?", "cypher": "match (:ENTITY{name:'resort'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'foreign name'}]->(n) return distinct n.name"}, {"query": "Can you summarize the quarrelsome veil in three articles?", "cypher": "match (:ENTITY{name:'swan's fight'}) --(p) with p order by p.name return p.name limit 3"}, {"query": "Can you tell me about the school at Yan'an University? I want you to tell me about 5 things.", "cypher": "match (:ENTITY{name:'Yuan University'}) <- [:Relationship{name:'Chinese name'}]-(n) - [:Relationship{name:'attribute'}]->(p) return p.name order by p.name limit 5"}, {"query": "The following five facts about Ahnash Jawad, a Qatari national, are available here:", "cypher": "match (n:ENTITY{name:'Ahnash Jawad'}) - [*]->(x) where x.name<>'Qatar' return distinct x.name limit 5"}, {"query": "Can you identify the five calligraphers? Where were they born?", "cypher": "match (:ENTITY{name:'scrivener'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'place of birth'}]->(n) return m.name, n.name limit 5"}, {"query": "Help me find two love stories.", "cypher": "match (:ENTITY{name:' love drama'}) <- [:Tag{name:' tag'}]-(m) return distinct m.name limit 2"}, {"query": "The secret of the grave is the Book. He is the priceless.", "cypher": "match (:ENTITY{name:'secret of the tomb'}) <- [:Relationship{name:'book name'}]- ((n) - [:Relationship{name:' pricing'}]->(q) return distinct q.name"}, {"query": "Can you please list the local companies in the camp?", "cypher": "match (p:ENTITY{location:' camp'}) return p.name"}, {"query": "I'm not sure if you're familiar with the story of the two young men who were in a relationship.", "cypher": "match (n:ENTITY{name:'relationship*1..2]->(x) where x.name<>'' return distinct x.name"}, {"query": "What is the relationship between literary works and the three layers of the virtual platform?", "cypher": "match (n:ENTITY{name:'send a virtual person to the skies'}) - [*1..3]->(x) where x.name <> 'literature' return distinct x.name"}, {"query": "Please tell me about the Roshi Nursery in Shandong County.", "cypher": "match (:ENTITY{name:'Shanghai County Ro Bridge Nursery'}) --(m) return distinct m.name limit 1"}, {"query": "Can you search for local companies in Asia?", "cypher": "match (p:ENTITY{location:'space'}) return p.name"}, {"query": "I have a book published by the People's Press Agency, can you find me three books?", "cypher": "match (:ENTITY{name:'People's Publishing House'}) <- [:Relationship{name:'People's Publishing House'}]- ((n) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 3"}, {"query": "Do you know of a suspect named Zhukhua?", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild"}, {"query": "Please tell me if you can find out 5 things about the next iteration of Zhang Jianping who is still in the 4th tier relationship.", "cypher": "match (n:ENTITY{name:'Shanghai Jiangyuan please continue to hold office'}) - [*1..4]->(x) where x.name<>'' return distinct x.name limit 5"}, {"query": "Have you heard about the specific case of the accident on the 10/1 Xi'an An Jia Road?", "cypher": "match (:ENTITY{name:'10\u00b71\u897f\u5ef6\u5b89\u67a3\u8d3e\u516c\u8def\u4ea4\u901a\u4e8b\u6545'}) --(x) with x order by x.name return x.name"}, {"query": "Do you know this person, Alexa Davies?", "cypher": "match (:ENTITY{name:'Alexa Davies'}) --(q) return distinct q.name"}, {"query": "I wonder who is the chief accountant of the Hellenic Institute of Economics?", "cypher": "match (x:ENTITY{name:'Chief Accountant of the Hellenic Institute of Finance'}) <- [:Relationship{name:'profession'}]-(p),(p) - [:Relationship{name:'Chinese name'}->(n) return distinct n.name"}, {"query": "I just watched The Adventures of Ding Dong 3: The Blue Lotus and the Mysterious Snowman with my son a few days ago, did you check the time of the premiere?", "cypher": "match ((:ENTITY{name:'Dingding Chronicles 3: Blue Lotus and the Mysterious Snowman'}) - [:Relationship{name:'Release time'}]-> (m) return m.name"}, {"query": "Can you tell me when the social media labels are running? Name three?", "cypher": "match (:ENTITY{name:' society'}) <- [:Tag{name:' tag'}]- ((m) - [:Relationship{name:' runtime'}]->(x) return distinct x.name limit 3"}, {"query": "I would like to know the personal profiles of the five people who worked in the Beijing Municipal Committee Party Schools in the four-tiered relationship of Kon Sang-mei.", "cypher": "match (n:ENTITY{name:'Con Gyan Mei'}) - [*1..5]->(x) where x.name<>'Peking City Committee Party School' return distinct x.name limit 5"}, {"query": "Are there any free places open from 09:00-17:00?", "cypher": "match (:ENTITY{name:'09:00-17:00'}) <- [:Relationship{name:'open hours'}]-(m), (m) -->(n) where n.name='free' return m is not null"}, {"query": "Can you recommend seven novels that are available on the Chinese website?", "cypher": "match (:ENTITY{name:'start point Chinese web'}) <- [:Relationship{name:'connecting platform'}]- (h) return h.name limit 7"}, {"query": "What are the main achievements of the graduates of Southeastern University?", "cypher": "match (:ENTITY{name:'Southeastern University'}) <- [:Relationship{name:' Graduate School'}]-(n),(n) - [:Relationship{name:' Major achievements'}]->(q) return distinct q.name limit 1"}, {"query": "What is the shortest relationship path between the Boxer armored personnel carrier and the Grey Bear armored personnel carrier on the second floor?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'boxer armored personnel carrier'}) - [*..2]-(b:ENTITY{name:'Grey Bear armored vehicle'})) return count ((p)"}, {"query": "What do you know about the molecular formula for the title citrine?", "cypher": "match (:ENTITY{name:'title siding'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'molecular form'}]->(q) return distinct q.name"}, {"query": "Please do you know of any software that supports WinXp/vista/win7/win8/2000/2003 systems?", "cypher": "The following is a list of the most commonly used and used Windows operating systems."}, {"query": "What are the different labels of the films that are available on the same company as the first love fighter? Please list them by the number of labels of each film, from small to large.", "cypher": "match (n:ENTITY{name:'first love warrior'}) - [:Relationship{name:'output company'}]->(:ENTITY) <- [:Relationship{name:'output company'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) BY ORDER c"}, {"query": "Can you tell me where Happy Planet 1 was filmed?", "cypher": "match (:ENTITY{name:'Happy Planet1'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'Place of filming'}]->(n) return distinct n.name"}, {"query": "What are the main awards that Zhu Shih-hui, who is the head of the school's editorial board, and Liang Liang-ming have won?", "cypher": "match (:ENTITY{name:'Zhu Shih's \u7b11\u5bd2'}) <- [:Relationship{name:'School stickers general manager'}]- ((q) - [:Relationship{name:'main award'}]->(p) return distinct q.name limit 2"}, {"query": "Talk about a collection of records of growth from 0-18 years old?", "cypher": "match (:ENTITY{name:'0-18 years growth record'}) --(n) with n order by n.name return n.name"}, {"query": "Help me find a 5A scenic area in Zhouzhou, Henan Province.", "cypher": "match (:ENTITY{name:'Kocho City, Henan Province'}) <- [:Relationship{name:'City'}]-(m), (m) - [:Relationship{name:'Visitation level'}]->(n) where n.name='AAAAA level' return distinct m.name limit 1"}, {"query": "Can you find me six books published in 1998 by a Chinese agricultural publisher?", "cypher": "match (:ENTITY{name:'1998'}) <- [:Relationship{name:'publication time'}]-(m), (m) - [:Relationship{name:'publishing house'}]->(n) where n.name='China Agricultural Publishing House' return m.name limit 3"}, {"query": "The film is about a young boy who is forced to grow up in a house full of problems.", "cypher": "match (:ENTITY{name:'growing up'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'leading role'}]->(n) return distinct n.name"}, {"query": "Find out about five scientific software that Lock has in his possession, okay?", "cypher": "match (n:ENTITY{name:'Placed on lock'}) - [*]->(x) where x.name<>'science' return distinct x.name limit 5"}, {"query": "Help me find a group of women with a combined strength of more than three.", "cypher": "match (:ENTITY{name:'star'}) <- [:Relationship{name:'profession'}]-(m), (m) - [:Relationship{name:'number of members'}]->(n) where n.name>'3' return distinct m.name limit 1"}, {"query": "What about 199 pages of information about making toys with children that doesn't have more than three layers of relationships?", "cypher": "match (n:ENTITY{name:'doing toys with children'}) - [:Relationship*1..3]->(x) where x.name<>'199 page' return distinct x.name"}, {"query": "The first is to find out the profile of Cook Matt, a Canadian citizen, in no less than five levels of relationships.", "cypher": "match (n:ENTITY{name:'Cooke Matt'}) - [*1..5]->(x) where x.name<>'Canada' return distinct x.name limit 5"}, {"query": "Can you tell me the name of the relationship in the two layers of the red-leafed spider?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'green leaf spiny'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the molecular formula of the drug known as succubi-pure?", "cypher": "match (:ENTITY{name:'bittermelon, puree, green pepper, pepper'}) <- [:Relationship{name:'drug alias'}]- ((m),(m) - [:Relationship{name:'molecular'}]->(n) return distinct m.name,n.name"}, {"query": "Can you list five labels of love that don't work?", "cypher": "match (:ENTITY{name:'love, unfruit'}) - [:Tag{name:'tag'}]-> (p) return distinct p.name limit 5"}, {"query": "Can you tell me three things about the park?", "cypher": "match (x:ENTITY{name:'Inh Lake Park'}) --(m) return distinct m.name limit 3"}, {"query": "What is the profession of Gao Xie Yong?", "cypher": "match (:ENTITY{name:'highly intelligent'}) <--(m),(m) - [:Relationship{name:'profession'}]->(h) return distinct h.name limit 1"}, {"query": "In addition to farmers, what are the four types of identity information that you can provide?", "cypher": "match (:ENTITY{name:'Ning-ch'}) --(m) with m order by m.name where m.name <> 'farmer' return distinct m.name limit 4"}, {"query": "So I heard that 13X molecule silicon is very useful, what is its wear rate?", "cypher": "match ((m:ENTITY{name:'13X molecular sieve'}) - [:Relationship{name:'absorption rate'}]-> (n) return n.name"}, {"query": "What are the national unwillingnesses?", "cypher": "MATCH (:ENTITY{name:' country level'}) <- [:Relationship{name:' non-hereditary level'}]- ((m) return m.name skip 0 limit 10"}, {"query": "Find 10 totally free mobile games.", "cypher": "The game is free to play on the PC, but you can play it on the PC with the same name."}, {"query": "What are the prices for tickets to the 2013 FTISLAND Beijing concert reported online?", "cypher": "The song was released on November 8, 2013 as the lead single from the album, \"Sexy\" by American record label RCA Records."}, {"query": "Please list the characters who have been dubbed in Hong Kong.", "cypher": "match (:ENTITY{name:'showdowns (Hong Kong) '}) --(p) return distinct p.name"}, {"query": "Find out what chemical has a melting point of 204-206\u00b0C?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Do you have any entertainment works for young people? Find me 20 novels.", "cypher": "match (:ENTITY{name:'youth novel'}) <- [:Tag{name:'tag'}]- (mn) - [:Tag{name:'tag'}]->(n:ENTITY{name:'entertainment work'}) return mn.name limit 20"}, {"query": "You tell me which are the main departments of the Central School of Drama?", "cypher": "match (:ENTITY{name:'Central Theatre School'}) - [:Relationship{name:'Main Faculty'}]-> (h) return h.name order by h.name limit 1"}, {"query": "I need all the information about the Guangdong Moan Sea Erosion Protected Area approved in 2003. Can you give me five?", "cypher": "match (n:ENTITY{name:' Guangdong Tsuen-an Sea Erosion Provincial Nature Reserve'}) - [:Relationship*]->(x) where x.name <>'2003' return distinct x.name limit 5"}, {"query": "What is the chemical equation of FeS2?", "cypher": "match (:ENTITY{name:'FeS2'}) --(x) return distinct x.name"}, {"query": "What does it mean to not touch the door?", "cypher": "match (:ENTITY{name:'not touching'}) - [:Tag{name:'tag'}]-> (m) return distinct m.name"}, {"query": "Do you know which universities have English as their main department?", "cypher": "match (x:ENTITY{name:' English department'}) <- [:Relationship{name:' major department'}]- (m) return distinct m.name"}, {"query": "The following is a list of words that end with super 10000 words.", "cypher": "match (n:ENTITY{name:'The secret of the English vocabulary: super 10000 words'}) - [:Relationship*1..3]->(x) where x.name <>'Fan Cheng Yu' return distinct x.name"}, {"query": "I wonder if there are any good articles that focus on the Mapping Software Exchange platform?", "cypher": "match (p:ENTITY{name:' focused on machine mapping software exchange platform'}) <- [:Relationship{name:' content'}]-(h),(h) - [:Relationship{name:' excellent article'}]->(n) return distinct n.name"}, {"query": "There is an analog technology with the classification number O241.82-39, do you know the technical name?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Ask about the personal profile of the two-tiered relationship that Lonsaki Tulov, played by actor Yoshida Doudeng, has.", "cypher": "match (n:ENTITY{name:'\u9f99\u5d0e\u90c1\u592b'}) - [*1..2]->(x) where x.name <>' actor Yoshida Dudoich' return distinct x.name"}, {"query": "Do you know what the relationship is with the Anhui Forestry Vocational College on the 5th floor?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'Anhui Forestry Vocational College'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "The book is a great book for children of all ages, and it is a great book for children of all ages.", "cypher": "match (p:ENTITY{name:'0~3 years old healthy parenting knows everything'}) --(m) with m order by m.name where m.name <> 'books' return m.name"}, {"query": "Can you get me three books for reading in Chinese literature?", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Zelda: Breath of Z"}, {"query": "Where did the spelling \"shi me\u00e8i\" come from?", "cypher": "match (:ENTITY{name:'z\u01d0m\u00e8i'}) <- [:Relationship{name:'spelling'}]- ((x) - [:Relationship{name:'from'}]->(p) return distinct p.name limit 1"}, {"query": "I learned that the Alexander III egg, also known as the Alexander III egg, is only 9.5 cm tall, can you help me find three more information about it?", "cypher": "match (n:ENTITY{name:'Alexander III's third century egg'}) -->(h) with h order by h.name where h.name <> '9.5 cm' and h.name <> 'in memory of Alexander III' return h.name limit 3"}, {"query": "What are the main ingredients of the 10 drinks?", "cypher": "match (:ENTITY{name:'drink'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'main ingredient'}]->(n) return m.name, n.name limit 10"}, {"query": "Tell me about the 10 biggest miners that consume this economic term?", "cypher": "match (:ENTITY{name:'10 big potters consumption'}) --(h) with h order by h.name where h.name <> 'economic term' return h.name"}, {"query": "MX video player with video image category?", "cypher": "match (:ENTITY{name:'MX video player'}) --(p) with p order by p.name where p.name <> 'video image' return p.name limit 1"}, {"query": "Do you know what the two-layer relationship is about the painting? Can you name three?", "cypher": "The following is a list of all the different ways Match path=(n) <- [:Relationship*2]-(p:ENTITY{name:'Drawing away'}) UNWIND relationships(path) AS rel RETURN rel.name limit 3"}, {"query": "Please tell me what installation project includes a shortcut to install the converter?", "cypher": "match (:ENTITY{name:'conversion installation shortcut'}) <- [:Relationship{name:'installation shortcut'}]- (n) return distinct n.name"}, {"query": "What other three professions do you know about this politician?", "cypher": "match (:ENTITY{name:'political figure'}) <- [:Tag{name:'tag'}]-(q),(q) - [:Relationship{name:'profession'}]->(m) return m.name skip 2 limit 3"}, {"query": "I need information about people who believe in communism in the three-tiered relationship of the Shinto community.", "cypher": "match (n:ENTITY{name:' in meeting'}) - [:Relationship*1..3]->(x) where x.name <> 'communism' return distinct x.name"}, {"query": "The book published by Gilin Literature Publishing introduced me to two books.", "cypher": "match (:ENTITY{name:'Gilin Literature Publishing House'}) <- [:Relationship{name:'Gilin Literature Publishing House'}]-(p) - [:Relationship{name:'Book name'}]->(n) return distinct n.name limit 2"}, {"query": "Please help me to introduce you to the 10 places to visit in Jilin Province, in the city of Matsuhara, in the province of Jilin.", "cypher": "match (:ENTITY{name:'Relationship{name:'Geographical location'}]-(h) -[:Relationship{name:'Famous attractions'}]->(n) where n.name <> 'East wall, West wall, North wall, South wall' return distinct n.name limit 10"}, {"query": "Ask Hegland if his name is Kim.", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What is the name of a novel by a man named He Weiwei?", "cypher": "match (:ENTITY{name:'\u79be\u66ae'}) <- [:Relationship{name:'man's husband'}]- (n) return distinct n.name"}, {"query": "Is there anything that Kate Blanchett's partner has accomplished?", "cypher": "match (:ENTITY{name:'Kate Blanchett'}) <- [:Relationship{name:'partner'}]- ((h) - [:Relationship{name:'major achievement'}]->(m) return distinct m.name"}, {"query": "What happened to the 2010 Chinese Cultural Tourism Festival?", "cypher": "match (:ENTITY{name:'2010 China Liu Guoqiang Cultural Tourism Festival'}) --(m) with m order by m.name return m.name"}, {"query": "Which comedy action films has Martin Blaster been involved in producing?", "cypher": "The game is based on the film of the same name by the same name."}, {"query": "Find the content of the Shandong Rural Statistics Yearbook 2011 published by the Shandong Provincial Statistics Bureau.", "cypher": "match (n:ENTITY{name:'Santongo Rural Statistical Yearbook 2011'}) - [:Relationship*1..2]->(x) where x.name <> 'Santongo Provincial Statistical Office' return distinct x.name"}, {"query": "Where is the area of the natural village of Pingping Qingjiang? And what is the license plate code of this place? Tell me again about the main industry of this place.", "cypher": "match (:ENTITY{name:'Pingqing Qingjiang Natural Village'}) - [:Relationship{name:'Pingqing Qingjiang Natural Village'}) - >(n) return n.name as name union all match (:ENTITY{name:'Pingqing Qingjiang Natural Village'}) - [:Relationship{name:'Pingqing Qingjiang Natural Village'}) - [:Relationship{name:'Pingqing Qingjiang Natural Village'}->(m) return m.name as name union all match (:ENTITY{name:'Pingqing Qingjiang Natural Village'}) - [:Relationship{name:'Pingqing Qingjiang Natural Village'}->(r) return r.name as name"}, {"query": "Do you know the actors in the movie \"Extreme Warning\"?", "cypher": "match (:ENTITY{name:'Please be alert'}) --(m) return m.name order by m.name"}, {"query": "Do the Shanghai Day Care Centers have elevators? What is the architecture like?", "cypher": "match (x:ENTITY{name:' Shanghai Jade Daycare'}),(x) - [:Relationship{name:' configuration'}]-> (m), (x) - [:Relationship{name:' building'}]->(n) return m.name,n.name"}, {"query": "How deep was the epicenter of the famous 9/11 earthquake in Chapas, Mexico?", "cypher": "match ((:ENTITY{name:'11\u00b71 Mexico Chapas earthquake'}) - [:Relationship{name:'depth of the quake'}]-> (h) return h.name"}, {"query": "Did you know that the boxing program has a grand prize?", "cypher": "match (:ENTITY{name:'boxing'}) <- [:Relationship{name:'sporting project'}]-(m) - [:Relationship{name:'main prize'}]->(q) return distinct q.name limit 1"}, {"query": "Do you know which Japanese soldiers were killed in China during World War II?", "cypher": "match (:ENTITY{name:' Japanese officer killed in action in China during World War II'}) <- [:Relationship{name:' summary'}]- (m) return m.name"}, {"query": "The Chinese Automobile Culture Development Management Board is a Chinese government agency.", "cypher": "match (:ENTITY{name:'China Automotive Culture Development Management Board'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Tag{name:'label'}]->(q) return distinct q.name limit 1"}, {"query": "What is the number in Arabic numerals for the Roman numeral XC?", "cypher": "match (:ENTITY{name:'XC'}) <- [:Relationship{name:'Roman numerals'}]- (n) return distinct n.name"}, {"query": "When was the founding of the Cantonment Camping Cable Company Limited? Where is the headquarters?", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'Hall of Residence'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [Relationship'}->(m) return m.name as name"}, {"query": "I'm not sure what kind of cars were built in 1954?", "cypher": "match (:ENTITY{name:'1954'}) <- [:Relationship{name:'time of creation'}]- (q) return q.name"}, {"query": "Please recommend 10 famous places where Shanshee Doong is located.", "cypher": "Match (:ENTITY{name:'Shanshanshan'}) <- [:Relationship{name:'Famous attractions'}]- (n) return n.name limit 10"}, {"query": "Can you tell me what the CPU main frequency parameters are for Intel type desktops?", "cypher": "match (:ENTITY{name:'Intel for type of desktop'}) <- [:Relationship{name:'chip manufacturer'}]-(m) - [:Relationship{name:'CPU mainframe'}]->(x) return distinct x.name"}, {"query": "Can you tell me about a peaceful career?", "cypher": "match (:ENTITY{name:'Wang and Wen'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 1"}, {"query": "Which study book is Xiaozhou coming from?", "cypher": "Match (:ENTITY{name:'Xiaoyang'}) <- [:Relationship{name:'author'}]- (x) return x.name The name of the game is the same as the name of the game itself."}, {"query": "I want to retrieve the tag information for the 1st Choice FTPPro V8.77085?", "cypher": "match (q:ENTITY{name:'1st Choice FTPPro V8.77085'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "The main achievement of the author is the novel \"The Love of the Midnight\".", "cypher": "match (:ENTITY{name:' middle novel \u7532\u5348\u4e4b\u604b\u3002'}) <- [:Relationship{name:' major achievement'}]- (n) return n.name order by n.name limit 3"}, {"query": "Do you know the types of relationships within the four layers of the renewable energy profession?", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:'new energy specialist'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What do people born in Yueyang County do?", "cypher": "match (:ENTITY{name:'\u5cb3\u9633\u53bf'}) <- [:Relationship{name:'place of birth'}]- ((m) - [:Relationship{name:'profession'}]->(q) return distinct m.name"}, {"query": "Where are the high brake lights installed?", "cypher": "match (:ENTITY{name:' high brake light'}) - [:Relationship{name:' installation location'}]->(m) return distinct m.name"}, {"query": "Could you please tell me the name of the company registered under number 612700100027135?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "The three-tiered relationship of Iranzi Jean Claude, who played football for me?", "cypher": "match (n:ENTITY{name:'Iranzi Jean Claude'}) - [*1..3]->(x) where x.name<> 'football' return distinct x.name"}, {"query": "The person who graduated from Guangzhou Central Medical School, what is his profession? Can you tell me 5 things?", "cypher": "match (:ENTITY{name:'Canton Medical College'}) <- [:Relationship{name:'Graduate College'}]- ((q),(q) - [:Relationship{name:'Profession'}]->(x) return x.name skip 1 limit 5"}, {"query": "The Chinese Taiwanese and Malaysian citizens are all cooks.", "cypher": "match (:ENTITY{name:'Malaysia, China, Taiwan'}) <- [:Relationship{name:'nationality'}]- ((m) - [:Relationship{name:'profession'}]->(x) return distinct x.name"}, {"query": "I love hearing Chinese stories, can you tell me what kind of stories they are?", "cypher": "match ((:ENTITY{name:'Chinese story'}) - [:Relationship{name:'type'}]-> (p) return p.name"}, {"query": "What is the weight of the car at 864 horsepower/ton?", "cypher": "match (:ENTITY{name:'864 horsepower/hp'}) <- [:Relationship{name:'weight to'}]- (n) return distinct n.name"}, {"query": "I want to check all the labels of the 1.5 star Samsung I9100 4.0 ROM?", "cypher": "match (:ENTITY{name:'1.5 Samsung I9100 4.0 ROM'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "The two-tiered relationship of Yuskov, who is 171 cm tall, is described in the article.", "cypher": "match (n:ENTITY{name:'Yuskov'}) - [:Relationship*1..2]->(x) where x.name <>'171 cm' return distinct x.name"}, {"query": "I'm curious about this compound called 2-acetylheptyl (III) nitrate, what is its CAS NO?", "cypher": "match ((:ENTITY{name:'2-ethyl sulfate ((III) '}) - [:Relationship{name:'CASNO'}]-> (n) return n.name"}, {"query": "What is the name of the blue rock shark and where is it mainly found?", "cypher": "match (:ENTITY{name:'Blue Rock'}) - [:Relationship{name:'do not call'}]->(n) return n.name as name union all match (:ENTITY{name:'Blue Rock'}) - [:Relationship{name:'distribution area'}]->(m) return m.name as name"}, {"query": "The first thing I did was find out who the university professor is who won the National Natural Science Foundation?", "cypher": "match (:ENTITY{name:'National Natural Science Foundation'}) <- [:Relationship{name:'main achievements'}]- (mn) - [:Relationship{name:'profession'}]->(n:ENTITY{name:'university professor'}) return mn.name"}, {"query": "Which of the major departments are included in the Shanghai area universities?", "cypher": "match (:ENTITY{name:' Shanghai'}) <- [:Relationship{name:' area'}]- ((q),(q) - [:Relationship{name:' major department'}]->(x) return distinct x.name limit 5"}, {"query": "I need to replicate the work of the gift of the three layers of relationships.", "cypher": "match (n:ENTITY{name:'presented'}) - [:Relationship*1..3]->(x) where x.name <>'present' return distinct x.name"}, {"query": "Can you describe the diesel engine in five words?", "cypher": "match (:ENTITY{name:'* ship diesel engine'}) --(p) with p order by p.name return p.name limit 5"}, {"query": "Can you name the top 10 people who are screenwriters?", "cypher": "match (:ENTITY{name:' writer'}) --(n) return n.name order by n.name limit 10"}, {"query": "Can you tell me the relationship information within the five layers of the 5-86kg Sial Chris?", "cypher": "match (n:ENTITY{name:'Siale Chris'}) - [*1..5]->(x) where x.name<>'86 kg' return distinct x.name limit 5"}, {"query": "Avery Bradley, born in Tacoma, Washington, USA, is a writer and photographer who lives in the city of Tacoma, Washington.", "cypher": "match (:ENTITY{name:' Avery Bradley'}) - [*1..4]-(p) where p.name <> 'Tacoma, Washington, USA' return distinct p.name limit 6"}, {"query": "What is the shortest path between a family name and a family name in the two layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' painted surname'}) - [:Relationship*..2]-(b:ENTITY{name:' east gate surname'})) return count ((p)"}, {"query": "Can you tell us about the three main achievements of this man, born in January 1962, and what he has achieved?", "cypher": "match (h:ENTITY{name:'January 1962'}) <- [:Relationship{name:'date of birth'}]-(q),(q) - [:Relationship{name:'main achievements'}]->(p) return p.name skip 1 limit 3"}, {"query": "Do you have a CAS registration number for 7-Cyan-4-Cyan on your profile?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "I'm going to ask you, do you know if Brian Gordon has any representative works?", "cypher": "match (:ENTITY{name:'Brian Gordon'}) - [:Relationship{name:'represents work'}]-> (q) return distinct q.name limit 3"}, {"query": "I need to know the relationship between the two layers of the Jiao Tong Complete Selection of Literary Works?", "cypher": "match (n:ENTITY{name:'2013 Chinese interior design thesis collection'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "Who is 188 in height and lists three of his works?", "cypher": "match (:ENTITY{name:'6 feet 2 inches ((188cm) '}) <- [:Relationship{name:'height'}]-(m),(m) - [:Relationship{name:'represents work'}]->(q) return m.name order by m.name,q.name limit 3"}, {"query": "Three words that describe what you know about 11-alpha-glycine?", "cypher": "match (:ENTITY{name:'11-alpha-alkylated cannibals'}) --(m) with m order by m.name where m.name <> 'chemical' return m.name limit 3"}, {"query": "Speaking of the 1+1 easy winner; Special training: Primary school mathematics graphics and geometry different from the first label content of the publication?", "cypher": "match (:ENTITY{name:'1+1 easily crowned; special training: elementary school mathematics graphics and geometry'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name where h.name <> ' publications' return h.name limit 1"}, {"query": "In no more than three words, describe the tech product 210-D that you know?", "cypher": "match (:ENTITY{name:'210-D'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'technology product' return n.name limit 3"}, {"query": "What can you tell me about Zeljko Joksimovic's profession?", "cypher": "match (:ENTITY{name:'Zeljko Joksimovic'}) <- [:Relationship{name:'foreign language name'}]-(q) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 2"}, {"query": "Where is the address of the Royal Wealth Company?", "cypher": "match (p:ENTITY{name:'Royal Wealthy Company'}) return p.location The name of the company is not known"}, {"query": "Can you tell me everything you know about the double-clawed frog?", "cypher": "match (:ENTITY{name:' double strawberry'}) - [:Relationship*1..3]-(p) return distinct p.name limit 10"}, {"query": "Please provide 10 book titles in 310,000 words.", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What is the purpose of the school in Jiangxi Province's Jian City 5th Secondary School?", "cypher": "match (:ENTITY{name:'Kongqing Primary School founded by Jiangsu Five-Chinese Association in the first year of the Republican Party, later renamed to Township West Primary School, renamed to Shaanxi Primary School during the anti-Japanese War, renamed to Fifth Secondary School in Jiangsu Province in 1970 and still exists."}, {"query": "The following is a list of 5 characters who can be considered screenwriters.", "cypher": "match (:ENTITY{name:' writer'}) --(h) return distinct h.name limit 5"}, {"query": "Do you know how many counties are located in western India? Name three?", "cypher": "match (:ENTITY{name:'West of India'}) <- [:Relationship{name:'geographical location'}]- (m) return m.name limit 3"}, {"query": "When was the Taipei Lake Bridge built and when did it open?", "cypher": "match (:ENTITY{name:'Thailand's Bridge'}) - [:Relationship{name:'Thailand's Bridge'}]->(n) return n.name as name union all match (:ENTITY{name:'Thailand's Bridge'}) - [:Relationship{name:'Thailand's Bridge'}->(m) return m.name as name"}, {"query": "I need to start the topic essay series on 13: Central exam math hot topic essay introduction to information in the relationship layer 2?", "cypher": "match (n:ENTITY{name:'theme type exam series: middle school math hot topic exam'}) - [:Relationship*1..2]->(x) where x.name <>'13' return distinct x.name"}, {"query": "What other information can you give me besides music? Please help me find 8 information in 3 layers.", "cypher": "match (:ENTITY{name:'musical work'}) - [*1..3]-(p) where p.name <> 'the door of the delight' return p.name limit 8"}, {"query": "I want to know all the personal information about the seven-word-style frog girl, Gif Muaro [Oak Tree]?", "cypher": "match (n:ENTITY{name:'frognet daughter gift Murunga [oak tree]'}) - [:Relationship*]->(x) where x.name <>'seven words' return distinct x.name"}, {"query": "The first label attribute in the language book of the first grade is?", "cypher": "match (:ENTITY{name:'09 spring 1st grade language [under]'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 1"}, {"query": "Can you tell me 10 things you know about the two levels of the TV station that are not in the Xiamen area?", "cypher": "match (:ENTITY{name:'Alam TV station'}) - [*1..2]->(p) where p.name <> 'Alam City Alam Island Shiming District Lake North' return p.name limit 10"}, {"query": "What is the profession of this person born in October 1963? Can you tell me one?", "cypher": "match (:ENTITY{name:'October 1963'}) <- [:Relationship{name:'date of birth'}]- ((p),(p) - [:Relationship{name:'profession'}]->(x) return x.name skip 2 limit 1"}, {"query": "Have you been impressed with the 0712 Love Movie Network label?", "cypher": "match (:ENTITY{name:'0712 Love Movie Network'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name"}, {"query": "In six messages, I'm getting to know who we are as young and old as we are, and who is not involved in youth.", "cypher": "match (:ENTITY{name:'Dedicated to the young and old'}) --(h) with h order by h.name return h.name limit 6"}, {"query": "What is the name of the active volcano in the Hawaiian Islands?", "cypher": "match (:ENTITY{name:'Hawaiian Sea Island'}) <- [:Relationship{name:'location'}]-(m), (m) - [:Relationship{name:'nature'}]->(n) where n.name='living volcano' return distinct m.name"}, {"query": "Can you name 15 words that come to mind when you think of America?", "cypher": "match (:ENTITY{name:' United States'}) <- [:Relationship{name:' country'}]- (x) return x.name limit 15 The name of the match is the name of the country."}, {"query": "What are the works of Zhang Jianhui?", "cypher": "match (:ENTITY{name:'Chang Soon-jin'}) <- [:Relationship{name:'Years'}]-(m), (m) - [:Relationship{name:'Author'}]->(n) where n.name='Chang Soon-jin' return distinct m.name"}, {"query": "Can you find me the name of the professor?", "cypher": "match (:ENTITY{name:'professor'}) <- [:Relationship{name:'profession'}]-(n) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "Can you list a school that has a 3 jump label relationship with Yangzhou Normal University of Technology in Jiangsu?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'Canton University of Technology, Jiangsu Province'}) return distinct n.name limit 1"}, {"query": "How many people live in Changchun County?", "cypher": "Match ((:ENTITY{name:' Changchun County'}) - [:Relationship{name:' Population'}]-> (n) return n.name"}, {"query": "I need information about the relationship between the two layers of this book.", "cypher": "match (n:ENTITY{name:'lever of the platform'}) - [*1..2]->(x) where x.name <> 'book name' return distinct x.name"}, {"query": "Who is the author of the Chinese arms embargo?", "cypher": "match (:ENTITY{name:'China weapon'}) - [:Relationship{name:'author'}]->(m) return distinct m.name"}, {"query": "What cars have front-wheel-drive rear-wheel-drive?", "cypher": "match (:ENTITY{name:' front disc rear drum'}) <- [:Relationship{name:' brake mode'}]- (p) return p.name limit 17"}, {"query": "The question is, what technology can be used to treat coal mine water?", "cypher": "match (:ENTITY{name:' coal mine water'}) <- [:Relationship{name:' processing target'}]- (q) return q.name"}, {"query": "Can you give me a list of five people who are models in this profession?", "cypher": "match (:ENTITY{name:' model'}) --(q) return distinct q.name limit 5"}, {"query": "Have you seen the work of Saint-Jean published on the Chinese website?", "cypher": "match (:ENTITY{name:'Sancho'}) --(n) with n order by n.name where n.name <> 'longitudinal Chinese net' return n.name"}, {"query": "Do you have an English name for the 2015 Copa Am\u00e9rica in Chile, what is it?", "cypher": "match ((h:ENTITY{name:'2015 Chilean American Cup'}) - [:Relationship{name:'English name'}]-> (n) return n.name"}, {"query": "The book is based on the life of a young man who was killed in a car accident in the early 1990s.", "cypher": "match ((:ENTITY{name:'1/7th birthday also game'}) - [:Relationship{name:'publisher'}]-> (m) return m.name"}, {"query": "What is the shortest distance between Hunan Software Vocational College and Hunan Transportation Engineering College on the second level?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Hunan Software Vocational College'}) - [:Relationship*..2]-(b:ENTITY{name:'Hunan School of Transportation Engineering'})) return count ((p)"}, {"query": "Who are the soldiers in Huang An, Hubei?", "cypher": "match (:ENTITY{name:'Hubei Huang'an'}) <- [:Relationship{name:'place of birth'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='military' return distinct m.name"}, {"query": "What are the works of the Chinese light industry publishers and when are they published?", "cypher": "match (:ENTITY{name:'China light industry'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:'publication time'}]->(q) return distinct h.name,q.name"}, {"query": "Find 123 Happy Learning Centers and no more than five new labels besides education?", "cypher": "match (h:ENTITY{name:'123 happy learning center'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name where n.name <> 'education' return n.name limit 5"}, {"query": "Find out the manufacturers of professional logos: Can you tell us about the 5 companies that are related to Shenzhen Shenzhen Shenmue Industrial Products Co., Ltd.?", "cypher": "match (n:ENTITY{name:' Shenzhen City Shenzhen Mining Processing Products Co., Ltd. '}) - [*]->(x) where x.name<>' Shenzhen Mining Processing is a Chinese professional brand and trademark manufacturer, located in Shenzhen, Guangdong."}, {"query": "Do you remember who was the host of the 3/15 evening show on Central TV in 2014?", "cypher": "match ((:ENTITY{name:'2014 Central TV 3\u00b715 evening'}) - [:Relationship{name:'host'}]-> (x) return x.name"}, {"query": "Is there a representation of the contemporary playwright Dingming?", "cypher": "match (:ENTITY{name:'Dinming [contemporary playwright]'}) - [:Relationship{name:'represents work'}]-> (x) return distinct x.name"}, {"query": "Tell me what you know about Chen Qianwei as another representative of the Wu family.", "cypher": "match (:ENTITY{name:'Chen Qianwen'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'representative work'}]->(q) where q.name <> 'Rouwater family' return distinct q.name limit 1"}, {"query": "I need to introduce myself in a two-tiered relationship with a Chinese man named Deediat Ramli.", "cypher": "match (n:ENTITY{name:'DJDYAT Ramli'}) - [*1..2]->(x) where x.name <> 'Chinese name' return distinct x.name"}, {"query": "I'm wondering if there's a novel called Face on the Roof, Mysterious Grey Tower, Eyes Hanging in the Sky, Night Train, 12:00 midnight, what kind of novel is this?", "cypher": "match (:ENTITY{name:'face on the roof of a mysterious grey building hanging eyes in the sky night spirit car at midnight'}) <-[:Relationship{name:'alias'}]- (x) return x.name"}, {"query": "What is the shortest relationship path between the two layers of the Great Barrier Reef and the Taiwanese Mountain Barrier Reef?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Big bean'}) -[:Relationship*..2]-(b:ENTITY{name:'Taiwanese bean'})) return count ((p)"}, {"query": "What is the effect of a taste bud?", "cypher": "match (:ENTITY{name:'a functional unit'}) - [:Relationship{name:'effect'}]-> (m) return distinct m.name"}, {"query": "Can you explain 3-hydroxybenzylbenzene and its compounds in 3 sentences?", "cypher": "match (:ENTITY{name:'3-metric base and order'}) --(m) with m order by m.name return m.name limit 3"}, {"query": "Can you tell us about the three professions that Li Weiwei has?", "cypher": "match (:ENTITY{name:'Li Ving'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'profession'}]->(h) return h.name order by h.name limit 3"}, {"query": "Please tell me who is the historical celebrity of Scorpio? Name 11?", "cypher": "Match (n:ENTITY{name:'Relationship{name:'Star'}}) - (m) return m.name limit 11 The name of the match is not shown."}, {"query": "I'm a Taiwanese born in China, can you tell me about the people in the three-tiered relationship between Taiwan and China?", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name<>'Relationship' return distinct x.name"}, {"query": "Can you give me three examples of countries in Europe whose capitals are in the same country?", "cypher": "match (:ENTITY{name:'Europe'}) <- [:Relationship{name:'the continent'}]- ((x),(x) - [:Relationship{name:'the capital'}]->(q) return distinct q.name limit 3"}, {"query": "In which schools are the Humanities and Social Sciences faculties?", "cypher": "match (:ENTITY{name:'Faculty of Humanities and Social Sciences'}) --(h) return distinct h.name"}, {"query": "What is the main business of assisting in the sale of financial instruments issued by fundraisers?", "cypher": "match (:ENTITY{name:'assisting in the sale of financial instruments issued by the funder's issuer'}) <- [:Relationship{name:'distinction'}]- ((x),(x) - [:Relationship{name:'main business'}]->(n) return distinct n.name limit 1"}, {"query": "What is the area code of the Zhuzhou district in Fujian province?", "cypher": "match (:ENTITY{name:'Relationship{name:'area'}) - (q) return q.name"}, {"query": "What is the shortest path between the two layers of aviation engine test vehicle technology and modern rural logistics finance research", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Aero engine trial vehicle process'}) - [*..2]-(b:ENTITY{name:'Modern rural logistics financial research'})) return count ((p)"}, {"query": "Problems, can you tell me what the 4th floor tag is with the city?", "cypher": "The following is a list of all the different ways Match (n) - [:Tag*4{name:'tag'}]->(p:ENTITY{name:'city'}) RETURN distinct n.name"}, {"query": "Do you know when the company was founded?", "cypher": "match (p:ENTITY{name:'Jump Company'}) return p.time The name of the match is the name of the company."}, {"query": "For the book 0 3 years old: The best start in life for children can you bet the label?", "cypher": "match (:ENTITY{name:'03 years old: Best start in life for children'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'books' return x.name"}, {"query": "Russian Chechen parliament building explosion with a nice label", "cypher": "match (:ENTITY{name:'10\u00b719 Russian Chechen Parliament building explosion'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "Can you list 7 chemicals that are 98% pure?", "cypher": "The following is a list of the most commonly used names in the game."}, {"query": "I'm going to tell you about the five levels of relationships that are relevant to the mother of Lord Moon.", "cypher": "match (n:ENTITY{name:'same'}) - [*1..5]->(x) where x.name <>'\u8bb8\u6708\u537f' return distinct x.name limit 5"}, {"query": "I'm looking for a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new book, a new, a new book, a new book, a new, a new book", "cypher": "match (:ENTITY{name:'Absolute demon hunter's wife'}) --(m) with m order by m.name where m.name <> 'long day one bit' return distinct m.name limit 4"}, {"query": "What is the shortest contact path between the two layers of the 75-mm 130 mm multiple rocket gun and the 75-mm 155 mm self-propelled grenade?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'75-type 130mm multiple rocket gun'}) - [*..2]-(b:ENTITY{name:'Japanese 75-type 155mm self-propelled grenade gun'})) return count ((p)"}, {"query": "I want to know who Danny Menting is. Can you tell me about him?", "cypher": "match (n:ENTITY{name:'Danny Menting'}) --(m) return m.name order by m.name"}, {"query": "I'm curious about the nicknames for bitter wheat flour, can you tell me the top 10?", "cypher": "match (:ENTITY{name:'bitter wheat flour'}) - [:Relationship{name:'alias'}]-> (x) return x.name order by x.name limit 10"}, {"query": "Which transducer has a zero point of 0.5 percent at 55 degrees Celsius?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "I'm not sure how much you know about Jia Jiacom.", "cypher": "match (h:ENTITY{name:'Jia Jia'}) --(p) return p.name skip 1 This is a list of all the different ways Jia Jia is credited in the database."}, {"query": "I need to counterfeit with Solomon: The Last Judgment: Can I judge a movie from the same company? What are the labels on each of these films? Please sort by the number of labels from small to large.", "cypher": "match (n:ENTITY{name:'Solomon's forgery: post-post; trial'}) - [:Relationship{name:'production company'}]->(:ENTITY) <- [:Relationship{name:'production company'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) BY ORDER c)"}, {"query": "I'm wondering if there are any competitions in Yangzhou (Canton of the Monkey) ?", "cypher": "match (:ENTITY{name:'Shanghai River'}) <- [Relationship{name:'Holding place'}]- (q) return distinct q.name"}, {"query": "What does the equatorial magnetic gradient of the magnetic slope and the geomagnetic equator mean?", "cypher": "match (:ENTITY{name:'magnetic tilt'}) - [:Relationship{name:'equal magnetic tilt'}]->(n) return n.name as name union all match (:ENTITY{name:'magnetic tilt'}) - [:Relationship{name:'geomagnetic equator'}]->(m) return m.name as name"}, {"query": "The following are the top five facts about the industry:", "cypher": "match (n:ENTITY{name:''}) - [*]->(x) where x.name <> 'industry person' return distinct x.name limit 5"}, {"query": "What are the 10 most common occupations of Chinese people?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(m),(m) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 10"}, {"query": "What information do you know about dancers who are in a two-tier relationship with the exception of the artist?", "cypher": "match (:ENTITY{name:'asphalt[dance artist]'}) - [*1..2]->(p) where p.name <> 'artist' return p.name limit 10"}, {"query": "Optical products with multiple zooms of 12x optical zoom + 4x digital zoom are classified under which 3 labels?", "cypher": "match (:ENTITY{name:'12x optical zoom + 4x digital zoom'}) <- [:Relationship{name:'focal number'}]-(m) - [:Tag{name:'tag'}]->(x) return distinct x.name limit 3"}, {"query": "What chemical is C26H45NO9?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "How many species of flying insects do you know? Can you name five?", "cypher": "match (:ENTITY{name:'square'}) <-[:Relationship{name:'square'}]- (x) return x.name limit 5"}, {"query": "What else do you know about the respirator, apart from its simple structure? Find 8 information in 3 layers.", "cypher": "match (:ENTITY{name:' Respirator'}) - [*1..3]-(p) where p.name <> ' structure simple, operation quick and easy ' return p.name limit 8"}, {"query": "K ((AlSi2O6) is the chemical equation for what substance?", "cypher": "match (:ENTITY{name:'K(AlSi2O6)'}) --(x) return distinct x.name"}, {"query": "What are the labels of Edgar VanCilla? Can you tell me the first one?", "cypher": "match (:ENTITY{name:'Edgar Chanchilla'}) - [:Tag{name:'tag'}]-> (q) return q.name order by q.name limit 1"}, {"query": "What academic category does Bayes' decision theory fall into?", "cypher": "match (:ENTITY{name:'Bayez decision theory'}) <- [:Relationship{name:'theory'}]- (m) return m.name"}, {"query": "Help me find two plants in the genus Acropteryx.", "cypher": "match (:ENTITY{name:'Relationship'}) <- [Relationship{name:'Relationship'}]-(m) return distinct m.name limit 2"}, {"query": "Anne Waldman is a cook? Can you name her three jobs?", "cypher": "match (:ENTITY{name:'Annie Waldman'}) <- [:Relationship{name:'Chinese name'}]-(h) - [:Relationship{name:'profession'}]->(p) return distinct p.name limit 3"}, {"query": "I need to know the boiling point of cyclohexanedioxyethane, can you help me?", "cypher": "match ((:ENTITY{name:'ring-self-based trioxide ketone'}) - [:Relationship{name:'boiling point'}]-> (x) return x.name"}, {"query": "Who is it?", "cypher": "match (:ENTITY{name:'\u3084\u3059\u3060\u307e\u3044'}) <--(n) return n.name The name of the match is"}, {"query": "Do you know how many companies are operating in Shanghai?", "cypher": "match (p:ENTITY{location:' Shanghai'}) return count ((p)"}, {"query": "Do you know which hotels have check-in hours from 15:00-18:00? Name 3?", "cypher": "match (:ENTITY{name:'15:00-18:00'}) <- [:Relationship{name:'time of entry'}]- (q) return q.name limit 3 The name of the game is the same as the name of the game itself."}, {"query": "What are the properties of 3D Vibration Mouse besides being an Internet product?", "cypher": "match (p:ENTITY{name:'3D vibrating mouse'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'Internet product' return q.name limit 3"}, {"query": "I'm curious to know who the Tit-Fid case is, can you tell me?", "cypher": "match (:ENTITY{name:'Titefeed event'}) <- [:Relationship{name:'represented work'}]- (n) return distinct n.name"}, {"query": "Please tell me what is in the Nanjing City License for the Marketing of Clenbuterol [Retail Application No. 2015009507].", "cypher": "match (:ENTITY{name:' Nanjing City Pharmaceutical License for the manufacture of acupuncture [Retail declaration No. 2015009507]'}) --(q) return distinct q.name limit 1"}, {"query": "You went to the bookstore and checked the publication date of this book on foreign fairy tales, thank you.", "cypher": "match ((:ENTITY{name:'Foreign Fairy Tale'}) - [:Relationship{name:'Published date'}]-> (h) return h.name"}, {"query": "The show is so amazing, do you know what year it's coming out?", "cypher": "match ((:ENTITY{name:'10 at I'm good God'}) - [:Relationship{name:'release time'}]-> (x) return x.name"}, {"query": "Sb ((3+) Sb ((5+) O4 is the chemical equation for what substance?", "cypher": "match (:ENTITY{name:'Sb(3+)Sb(5+)O4'}) --(x) return distinct x.name"}, {"query": "I know that the Taiji Cultural Park is in Xinjiang, Yangtze City, and is open all day, so give me 5 more details about this place.", "cypher": "match (n:ENTITY{name:'Kouji Park'}) -->(h) with h order by h.name where h.name <> 'Yanjing City, Yangzhou' and h.name <> 'All weather' return h.name limit 5"}, {"query": "What is TIM's nickname?", "cypher": "match (n:ENTITY{name:'Tim'}) <- [:Relationship{name:'alias'}]- (m) return distinct m.name"}, {"query": "Do you know the relationship between the sub-plant gate and which plants are the second level gate? Describe five to me.", "cypher": "match (n) - [:Relationship*2{name:'gate'}]->(p:ENTITY{name:'gate'}) RETURN distinct n.name limit 5"}, {"query": "Please tell me what are the three types of relationships that are involved in the two layers of the flower?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'plain branch chickpea flower'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "Do you want to know more about the relationship between the two levels of the teacher Cao Cao?", "cypher": "match (n:ENTITY{name:'Cao Xue'}) - [*1..2]->(x) where x.name <> 'teacher' return distinct x.name"}, {"query": "Which novel has reached a cumulative reading of 113,1871 times?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "The first EP with a pop music label, what other label is it?", "cypher": "match (x:ENTITY{name:'1st EP'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'pop music' return q.name"}, {"query": "Can you find two American R-rated movies?", "cypher": "match (:ENTITY{name:' USA:R'}) <- [*]-(m), (m) - [:Relationship{name:' Director'}]->(n) return distinct m.name, n.name limit 2"}, {"query": "What is the alias of the fighter?", "cypher": "match (:ENTITY{name:'Relationship{name:' alias'}]-(m) return distinct m.name"}, {"query": "Ro lists 7 labyrinth romance novels that are not labeled as teenage romance.", "cypher": "match (:ENTITY{name:' Labyrinth Romanesque'}) --(m) with m order by m.name where m.name <> 'girl' return distinct m.name limit 7"}, {"query": "What are the occupations of people who are considered to be industry personalities?", "cypher": "match (:ENTITY{name:'person in the industry'}) <- [:Tag{name:'tag'}]-(h),(h) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 5"}, {"query": "1039 A48 Knowledge in 5 words?", "cypher": "match (:ENTITY{name:'1039 A48'}) --(x) with x order by x.name return x.name limit 5"}, {"query": "What are the applications of products with muscle, drainage, feedback, protection, isolation functions?", "cypher": "match (:ENTITY{name:'add, drain, feedback, protection, isolation'}) <- [:Relationship{name:'product function'}]- ((q),(q) - [:Relationship{name:'technical application'}]->(x) return distinct x.name limit 3"}, {"query": "Can you recommend me 5 sites for group shopping?", "cypher": "match (:ENTITY{name:' group shopping site'}) <- [:Relationship{name:' site type'}]- (p) return p.name limit 5"}, {"query": "I want to go to the Shanghai station for the May 2012 concert, can you check online for me how much the tickets cost?", "cypher": "match ((:ENTITY{name:'2012 May Day Concert Shanghai Station'}) - [:Relationship{name:'Ticket price'}]-> (x) return x.name"}, {"query": "What exhibitions have been organized by the Guangdong Provincial Lighting Association?", "cypher": "match (:ENTITY{name:' Guangdong Provincial Lighting Association'}) <- [:Relationship{name:' Hosted Unit'}]- (h) return h.name"}, {"query": "The Philippines has been hit by a series of earthquakes, including the first one in the Philippines in 2010.", "cypher": "match (:ENTITY{name:'10?15 Philippines earthquake'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "I'm writing this afternoon, how many years has this been published?", "cypher": "match (:ENTITY{name:'written to this afternoon'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'published years'}]->(q) return distinct q.name limit 1"}, {"query": "Find out about the 5 pieces of artwork that are related to the secondary and the gift to the calling of the caller.", "cypher": "match (n:ENTITY{name:'secondary and gift-to-call'}) - [*]->(x) where x.name <>'once upon a time' return distinct x.name limit 5"}, {"query": "Which of the following people is represented by a straight line of the Broththa Strait?", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}}) - (h) return distinct h.name"}, {"query": "There is a book that is a good subject to read, and should be about science.", "cypher": "match (:ENTITY{name:' good subject reading, both should be about science'}) <- [:Relationship{name:' resume'}]- (n) return n.name"}, {"query": "Can you give me three pieces of information about the 12580 businessmen's union?", "cypher": "match (:ENTITY{name:'12580 merchant union'}) --(x) with x order by x.name return x.name limit 3"}, {"query": "What is the nickname of the same DNA triplets?", "cypher": "match (:ENTITY{name:'The same DNA triplets'}) - [:Relationship{name:'alias'}]-> (m) return distinct m.name"}, {"query": "Do you know anything else about 1-amino-2-alkenols with chemical properties?", "cypher": "match (:ENTITY{name:'1-amino-2-phenols'}) --(x) with x order by x.name where x.name <> 'chemistry' return x.name"}, {"query": "The following are 10 other professions in which you can work in addition to teaching.", "cypher": "match (p:ENTITY{name:' in sequence'}) <- [:Relationship{name:' in Chinese name'}]-(n),(n) - [:Relationship{name:' profession'}]->(m) where m.name <> 'professor' return distinct m.name limit 10"}, {"query": "Did you know that there are guaranteed brick companies?", "cypher": "match (p:ENTITY{location:'guaranteed'}) return p.name"}, {"query": "The three men were given jobs that they could do besides being associate professors at the Northwestern Teachers College's School of Foreign Languages.", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(n),(n) - [:Relationship{name:'profession'}]->(x) where x.name <> 'Associate Professor at the School of Foreign Languages at Northwestern Teachers College' return distinct x.name limit 3"}, {"query": "I would like to introduce you to Pedro Verona Rodriguez P\u00e9rez.", "cypher": "match (:ENTITY{name:'Pedro Verona Rodr\u00edguez P\u00e9rez'}) --(m) return m.name order by m.name"}, {"query": "Can you help me find out about the public school in Mid-Saharan?", "cypher": "match (:ENTITY{name:'Nigeria'}) <- [:Relationship{name:'Region'}]- (mn) - [:Relationship{name:'Category'}]->(n:ENTITY{name:'Public school'}) return mn.name"}, {"query": "Can you help me find two people born in Taiwan?", "cypher": "match (:ENTITY{name:'Taiwan'}) <- [:Relationship{name:'place of birth'}]-(x),(x) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 2"}, {"query": "The three main departments of the school, which specialize in the three areas of the province of Guizhou, are not listed in the list of mechanical engineering and clothing.", "cypher": "match (n:ENTITY{name:'Relationship{name:'main faculty'}]->(h) where h.name <> 'mechanics' and h.name <> 'clothing' return distinct h.name limit 3"}, {"query": "Can you recommend a song that is 4 minutes and 8 seconds long?", "cypher": "match (:ENTITY{name:'4 min 8 sec'}) <- [:Relationship{name:' song length'}]- (n) return distinct n.name"}, {"query": "What are the words that describe a perfect match?", "cypher": "match (:ENTITY{name:'describe a very similar interest'}) --(x) return distinct x.name"}, {"query": "Please tell us about the organization and the details of the four-tier relationship between the environmental protection agency of Mangan Township.", "cypher": "match (n:ENTITY{name:'Shanghai Township Environmental Protection Agency'}) - [*1..3]->(x) where x.name <> 'organizing agency' return distinct x.name"}, {"query": "What are the public universities in Hong Kong, China?", "cypher": "match (:ENTITY{name:'public university'}) <- [:Relationship{name:' category'}]-(m), (m) - [:Relationship{name:' area'}]->(n) where n.name='China Hong Kong' return distinct m.name"}, {"query": "Do you know what the link is to H5N1 with tier 3 labeling?", "cypher": "The following is a list of the most commonly used H5N1 viruses."}, {"query": "The director of this exclusive documentary about the Hobbit, the Hobbit, has 10 things to say about the film:", "cypher": "match (:ENTITY{name:'Relationship{name:' Director'}}-> (n) with n order by n.name return n.name limit 10"}, {"query": "Can you tell me which famous attractions are open from 8:30 to 17:30?", "cypher": "match (x:ENTITY{name:'8:3017:30'}) <- [:Relationship{name:'open hours'}]-(m),(m) - [:Relationship{name:'famous attractions'}]->(p) return p.name order by p.name limit 1"}, {"query": "Where are the people who speak the Ainu dialect?", "cypher": "match (n:ENTITY{name:'Ainu language'}) <- [:Relationship{name:'dialect'}]- (mn) return mn.name"}, {"query": "What are the species of insects in the genus Don aquatic?", "cypher": "match (:ENTITY{name:'Dong water'}) <- [:Relationship{name:'Dong water'}]- (n) return n.name limit 9"}, {"query": "What is Amberpin's alias?", "cypher": "match (:ENTITY{name:'Amberping'}) <- [:Relationship{name:'Chinese name'}]- ((q) - [:Relationship{name:'alias'}]->(n) return distinct n.name limit 1"}, {"query": "What is the active power of the 200-2 type of non-combustible cooker in our factory?", "cypher": "match ((:ENTITY{name:'200-2 type free-burning cookers'}) - [:Relationship{name:'host power'}]-> (q) return q.name"}, {"query": "How do you spell the past tense of drink?", "cypher": "match (:ENTITY{name:'drink'}) - [:Relationship{name:'past form'}]->(m) return distinct m.name"}, {"query": "Can you tell me about 20 books and novels, magazines, published in 2014?", "cypher": "match (:ENTITY{name:'2014'}) <- [:Relationship{name:' time of publication'}]- (n) return n.name limit 20"}, {"query": "1+1 easily won the championship. Synchronized commentary: Politics in 7th grade has a rubber tag, tell me three, okay?", "cypher": "match (:ENTITY{name:'1+1 easily crowned; synchronized narration: 7th grade politics'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "Do you know which of the 3 labels are related to the Beijing Research Center for the Humanities at the People's University of China?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'People's University of China Beijing Research Center for the Humanities'}) return distinct n.name"}, {"query": "Can you get me two books published by Zhejiang Literature Publishing?", "cypher": "match (:ENTITY{name:'Zhejiang Literary Publishing House'}) <- [:Relationship{name:'Publishing House'}]-(x),(x) - [:Relationship{name:'Book name'}]->(q) return distinct q.name limit 2"}, {"query": "I would like to know about this person Li Gaoyu, please tell me about it.", "cypher": "match (:ENTITY{name:' Lee Gyu'}) --(q) return q.name skip 1"}, {"query": "The Chinese government has said that the ten Han Chinese people represent", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(p) - [:Relationship{name:'representative work'}]->(n) return n.name order by n.name limit 10"}, {"query": "Tell me about the three levels of relationships that the Red Army Victory Memorial in Pichinchao is involved in. Can you name three?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Pink Kawahara Red Army Symbol Victory Memorial'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3 This is a list of all the different ways REL is credited in the database."}, {"query": "The following is a list of four-level relationships between different rooms for artwork.", "cypher": "match (n:ENTITY{name:' find different room'}) - [*1..4]->(x) where x.name <> 'artwork' return distinct x.name"}, {"query": "Did you have trouble asking about the five-level relationship of Alabi Rasheed, who weighs 80kg?", "cypher": "match (n:ENTITY{name:'Alabi Rasheed'}) - [*1..5]->(x) where x.name<>'80 kg' return distinct x.name limit 5"}, {"query": "What is the name of the memory used to store and store data at random?", "cypher": "match (:ENTITY{name:' used to store and store data'}) <- [:Relationship{name:' function'}]-(m), (m) - [:Relationship{name:' full name'}]->(n) where n.name=' random access memory' return distinct m.name"}, {"query": "I would like to know about five things about Caruana Jonathan, who plays football.", "cypher": "match (n:ENTITY{name:'Caruana Jonathan'}) - [*]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "What is the profession of people born in Shandong Province's Shandong City?", "cypher": "match (:ENTITY{name:'Shandong Province'}) <- [:Relationship{name:'place of birth'}]-(m),(m) - [:Relationship{name:'profession'}]->(p) return distinct m.name"}, {"query": "What do people born in Vancouver, Canada do?", "cypher": "match (:ENTITY{name:'Vancouver, Canada'}) <- [:Relationship{name:'place of birth'}]- ((n) - [:Relationship{name:'occupation'}]->(m) return distinct m.name"}, {"query": "What should be the label of the sound card/network card with integrated chips?", "cypher": "match (:ENTITY{name:' sound card/network card'}) <- [:Relationship{name:' integrated chip'}]- ((q),(q) - [:Tag{name:' tag'}]->(x) return distinct x.name limit 5"}, {"query": "Do you know what the main ingredient is for making a banana cake?", "cypher": "match (:ENTITY{name:'chickpea'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'main ingredient'}]->(n) return distinct n.name"}, {"query": "Can you list the three types of relationships involved in the 5th floor Neva Village?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'Wawang Chong Village'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 3"}, {"query": "Do you have the address of the company in the USA?", "cypher": "match (p:ENTITY{name:'Pacific and Pacific'}) return p.location"}, {"query": "What is the molecular formula of C22H22O8?", "cypher": "match (:ENTITY{name:'C22H22O8'}) --(x) return distinct x.name"}, {"query": "The book, written by Wen Mei-ping, is a study of the Chinese Communist Party's financial thinking.", "cypher": "match ((:ENTITY{name:'Financial Thought Research of the Communist Party of China'}) - [:Relationship{name:'word count'}]-> (n) return n.name"}, {"query": "The actor, who was born in Kyoto, Japan, is best known for his work in the anime series Dragon Ball Z.", "cypher": "match (:ENTITY{name:'Japan Tokyo'}) <- [:Relationship{name:'place of birth'}]-(m) - [:Relationship{name:'main works'}]->(p) where p.name <> 'Wildcat' return distinct p.name limit 1"}, {"query": "Can you name five messages that are attributed to wine?", "cypher": "match (:ENTITY{name:' when attributed to wine[vii]'}) --(h) return h.name limit 5"}, {"query": "I need to know the profile of the Italian athlete Rainieri Nanni in the 4th tier?", "cypher": "match (n:ENTITY{name:'Raineri Nanni'}) - [*1..4]->(x) where x.name <>'Raineri Nanni, Italian athlete\u3002' return distinct x.name"}, {"query": "Do you know what the relationship is with the three-tiered Neptune nickname?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'town nickname'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Who else but Li Wenping is the founder of the Chinese Village School?", "cypher": "match (:ENTITY{name:'China countryside'}) - [:Relationship{name:'founder'}]-> (h) with h order by h.name where h.name <> 'Lee Hsingping' return h.name"}, {"query": "What are the songs that are as long as the song and the longer the sweeter the song, and are they labeled with the same number of tags? Show me the number of labels from more to less.", "cypher": "The song is also known as \"The Song of the Sun\", which is a song by the band The Beatles."}, {"query": "Help me find the synonyms and antonyms for ice skating", "cypher": "match (:ENTITY{name:'like to wear thin ice'}) - [:Relationship{name:'like to wear thin ice'}]->(n) return n.name as name union all match (:ENTITY{name:'like to wear thin ice'}) - [:Relationship{name:'like to wear thin ice'}]->(m) return m.name as name"}, {"query": "I wonder what the five professions Chinese people do?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(p) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 5"}, {"query": "Please tell me about the two-tier relationship in Chongqing's Cedar Peach Data Valley, which is located in the northern part of Chongqing's Zhejiang District.", "cypher": "match (n:ENTITY{name:'Chongqing Cedar Peach Data Valley'}) - [:Relationship*1..2]->(x) where x.name <>'Chongqing City's Yanghe District' return distinct x.name"}, {"query": "Can you list the profile information of the 1st and 2nd level of the relationship of this person, Agius Edmond?", "cypher": "match (n:ENTITY{name:'Agius Edmond'}) - [*1..2]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "Tell me who is the first Chinese champion of the Chinese good whistle.", "cypher": "match (:ENTITY{name:'First Chinese champion in Chinese chess chess championship'}) --(q) return q.name order by q.name"}, {"query": "Can you list the most representative works of the Alpine Flying Eagle?", "cypher": "match (h:ENTITY{name:'Relationship{name:'representative work'}) - (n) return n.name order by n.name"}, {"query": "The year in which the Ottoman Empire was overthrown by the Ottoman Empire and replaced by the Ottoman Empire?", "cypher": "match (:ENTITY{name:' replaced by the ruler'}) <- [:Relationship{name:' except for the turkey'}]- (m) return m.name"}, {"query": "Can you tell me about the types of relationships within the three layers of the Tomb of Juliet Museum?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Julian Tomb Museum'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "Can you tell me one line of information about the types of relationships that are involved in the 5 tier ECO?", "cypher": "The following is a list of all the different ways Unwind is credited in the database:"}, {"query": "If you want to attend the 2011 CCTV China Summit, check the date to plan ahead.", "cypher": "match ((m:ENTITY{name:'2011 CCTV China listed company summit'}) - [:Relationship{name:' date held'}]-> (n) return n.name"}, {"query": "What is the name of the earwig? Where is it mainly distributed?", "cypher": "match (:ENTITY{name:'large ear'}) <- [:Relationship{name:'other name'}]-(m), (m) - [:Relationship{name:'distribution area'}]->(n) return distinct m.name,n.name"}, {"query": "Can you find me three Chinese video publications?", "cypher": "match (:ENTITY{name:'China recording video'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:'book name'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "What is Zhong Zhongfu's profession? What is his graduation school? What are his main achievements?", "cypher": "match (:ENTITY{name:'Chorus'}) - [:Relationship{name:'Career'}]->(n) return n.name as name union all match (:ENTITY{name:'Chorus'}) - [:Relationship{name:'Graduate School'}]->(m) return m.name as name union all match (:ENTITY{name:'Chorus'}) - [:Relationship{name:'Main achievements'}]->(r) return r.name as name"}, {"query": "What exhibitions are held in Nanjing International Exhibition Center?", "cypher": "match (:ENTITY{name:'Nanchang International Exhibition Centre'}) <- [:Relationship{name:' hosting address'}]- (p) return p.name"}, {"query": "The book is called \"The New Age of Colorful Books\", and it is called \"The New Age of Colorful Books\".", "cypher": "match (:ENTITY{name:'0-3 years old; early learning: colour'}) - [:Tag{name:'label'}]-> (x) with x order by x.name where x.name <> 'books' return x.name"}, {"query": "I'm going to have to get two tags for the other person in the industry, please.", "cypher": "match (:ENTITY{name:'paying a visit'}) --(m) with m order by m.name where m.name <> 'industry figure' return distinct m.name limit 2"}, {"query": "The story is about the magic night and the other four messages in the second level of the drama.", "cypher": "match (:ENTITY{name:'Magic Night'}) - [:Relationship*1..2]-(p) where p.name <> 'dialogue' return p.name limit 4"}, {"query": "I know that the company, which is based in Quanzhou, is a company that sells toiletries, water heating equipment, and ceramic products.", "cypher": "match (n:ENTITY{name:'Kuzhou City Shenzhen Kitchenware Technology Co., Ltd'}) -->(h) with h order by h.name where h.name <> '1989' and h.name <> 'Water cleaning utensils, water heating devices, ceramic utensils' return h.name limit 4"}, {"query": "I'm doing this song for you, who is the original singer?", "cypher": "match ((:ENTITY{name:'I did your thing'}) - [:Relationship{name:'song originally sung'}]-> (p) return p.name"}, {"query": "Help me find 10 science fiction movies with stars.", "cypher": "match (:ENTITY{name:'science fiction film'}) <- [:Relationship*]-(m) ,(m) - [:Relationship{name:'starring'}]->(n) return m.name,n.name limit 10"}, {"query": "Find me a mentor for the nine personality schools and help me introduce them.", "cypher": "match (:ENTITY{name:'Nine-character school teacher'}) <- [*]-(m), (m) - [:Describe{name:'description'}]->(n) return distinct m.name,n.name limit 1"}, {"query": "Do you know how to make a nutritious breakfast in 15 minutes?", "cypher": "match (:ENTITY{name:'15 minutes to get a nutritious breakfast'}) --(m) with m order by m.name return m.name"}, {"query": "Can you find out the names of the five internet personalities and where are their shirt numbers?", "cypher": "match (:ENTITY{name:'Internet personality'}) <--(m), (m) - [:Relationship{name:'graduate college'}]->(n) return m.name, n.name limit 5"}, {"query": "The 10 professional departments of the Sichuan Wenchuan Vocational College were recommended, but the management engineering college was not included.", "cypher": "match (:ENTITY{name:'Sichuan Literature and Professional College' is a full-time private, general-purpose, higher education institution approved by the People's Government of Sichuan in 2013 and registered by the Ministry of Education of Sichuan Province in the city of Changzhou, Sichuan Province."}, {"query": "What books are published by the People's Military Medical Press?", "cypher": "match (:ENTITY{name:'People's Military Medical Publishing'}) <- [:Relationship{name:'publishing'}]-(x),(x) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 3"}, {"query": "Can you provide the knowledge points of 3 5-amino-2-acetoxyl ketones?", "cypher": "match (:ENTITY{name:'5-amino-2-ethyl peroxide'}) --(m) with m order by m.name return distinct m.name skip 1 limit 3"}, {"query": "Help me find three bamboo letters next to each other and the structure up and down.", "cypher": "match (:ENTITY{name:'bamboo'}) <- [:Relationship{name:'\u90e8\u9996'}]-(m), (m) - [:Relationship{name:'structure'}]->(n) where n.name='up and down structure' return distinct m.name limit 3"}, {"query": "Can you tell me about the 10 founders of the Global Federation of Chios?", "cypher": "match (:ENTITY{name:'Founder of the Global Quaker Federation'}) --(p) return distinct p.name limit 10"}, {"query": "Which of the following three regions has a subtropical monsoon and humid climate?", "cypher": "match (:ENTITY{name:'subtropical monsoon wet climate'}) <- [*]-(m), (m) - [:Relationship{name:' area'}]->(n) return m.name,n.name limit 3"}, {"query": "Please provide me with the official statement of the Standing Committee of the People's Congress of the city of Songguan on law enforcement inspections, which provides details of the relationship of no less than three levels.", "cypher": "match (n:ENTITY{name:'Regulations of the Standing Committee of the People's Representative Assembly of the City of Xinjiang on Law Enforcement Inspections'}) - [*1..3]->(x) where x.name <> 'publications' return distinct x.name"}, {"query": "Can anyone tell me what Sarah Thompson's main accomplishments are?", "cypher": "match (:ENTITY{name:'Sarah Thompson'}) <- [:Relationship{name:'Chinese name'}]- ((p),(p) - [:Relationship{name:'main achievement'}]->(h) return distinct h.name limit 5"}, {"query": "Did you know that the school that I started in 2002 has a yoga department?", "cypher": "match (:ENTITY{name:'2002'}) <- [:Relationship{name:'time of creation'}]-(p),(p) - [:Relationship{name:'main faculty'}]->(q) return q.name order by q.name limit 10"}, {"query": "What is the Bear-Bow-Doo rank and what are its major achievements?", "cypher": "match (:ENTITY{name:'\u718a\u5e94\u5802'}) - [:Relationship{name:'\u519b'}]->(n) return n.name as name union all match (:ENTITY{name:'\u718a\u5e94\u5802'}) - [:Relationship{name:'main achievement'}]->(m) return m.name as name"}, {"query": "What is the purpose of laser radar?", "cypher": "match (:ENTITY{name:' laser radar [a type of mechanical facility]'}) - [:Relationship{name:' use'}]->(m) return distinct m.name"}, {"query": "What is the name of the song?", "cypher": "match (p:ENTITY{name:'spoiler'}) --(n) with n order by n.name return n.name limit 1"}, {"query": "What is the function of blood-fibrotein solution?", "cypher": "match (:ENTITY{name:'blood fiber protein soluble'}) - [:Relationship{name:'function'}]->(n) return n.name as name union all match (:ENTITY{name:'blood fiber protein soluble'}) - [:Relationship{name:'other name'}]->(m) return m.name as name"}, {"query": "Help me find out all the information about Wang Iron.", "cypher": "match (n:ENTITY{name:' Wang Ti[Deputy Chairman of the Standing Committee of the Henan Provincial People's Congress]'}) --(x) return distinct x.name"}, {"query": "Can you say that these are the professions of Ivan Victor?", "cypher": "match (:ENTITY{name:'Ivan Victor'}) - [:Relationship{name:'profession'}]-> (m) return distinct m.name"}, {"query": "You know that thing about the year-old chicken?", "cypher": "match (:ENTITY{name:'0000 year old'}) --(x) return distinct x.name limit 10"}, {"query": "Can you tell me when Happy Planet 1 will be released?", "cypher": "match (:ENTITY{name:'Happy Planet1'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'output time'}]->(n) return distinct n.name"}, {"query": "Would you like to ask about the five personal details of Dutch citizen Wijnhard Clyde?", "cypher": "match (n:ENTITY{name:'Wijnhard Clyde'}) -[:Relationship*]->(x) where x.name<>'Netherlands' return distinct x.name limit 5"}, {"query": "Do you know which sports have a limit of 10 people?", "cypher": "match (:ENTITY{name:'10 people'}) <- [:Relationship{name:'the number of people the match specifies'}]- (p) return distinct p.name"}, {"query": "Can you tell me about An Jian-shek?", "cypher": "match (:ENTITY{name:'Anjian\u96c4'}) --(x) return x.name order by x.name"}, {"query": "Can you tell me the aliases of the five AV actresses?", "cypher": "match (:ENTITY{name:'AV actress'}) <- [:Relationship{name:'profession'}]-(x),(x) - [:Relationship{name:'alias'}]->(h) return distinct h.name limit 5"}, {"query": "He is Chinese, so do you know what other professions he has? Can you name the top 10?", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnicity'}]- ((x) - [:Relationship{name:'profession'}]->(m) return m.name skip 2 limit 10"}, {"query": "Can you please describe the five representative works of the gallery?", "cypher": "match (:ENTITY{name:'crowd'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'representative work'}]->(h) return h.name order by h.name limit 5"}, {"query": "The problem is, what are the jobs of the students who graduated from the Fung Lake School?", "cypher": "match (:ENTITY{name:'Fong Lake Library'}) <- [:Relationship{name:' Graduate School'}]-(n),(n) - [:Relationship{name:' Profession'}]->(p) return distinct p.name"}, {"query": "Can you name 10 of the novels that are available on Start Girl Network?", "cypher": "match (:ENTITY{name:'starting point girl network'}) <- [:Relationship{name:'contact platform'}]- (x) return x.name limit 10"}, {"query": "Can you tell me which three pieces represent the 2015 summit concert in Guangzhou besides Flying Higher and Furious Life?", "cypher": "match (n:ENTITY{name:'2015 Guangzhou Concert'}) - [:Relationship{name:'represents works'}]->(h) where h.name <> 'flying higher' and h.name <> 'angry life' return distinct h.name limit 3"}, {"query": "What plant subgenus is the subgenus Cercidothrix?", "cypher": "match (:ENTITY{name:'Cracks of the subgenus Cercidothrix'}) <- [:Relationship{name:'subgenus'}]- (h) return distinct h.name"}, {"query": "Can you tell me about six earthquakes of magnitude 7.3?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What are the names of people born in Chiang Kai-shek during the Qing Dynasty?", "cypher": "match (:ENTITY{name:'Ching Dynasty'}) <- [:Relationship{name:'at the time'}]- (mn) - [:Relationship{name:'at the place of birth'}]->(n:ENTITY{name:'Ching Dynasty'}) return mn.name"}, {"query": "Have you heard of the entertainment show called 111 Girls?", "cypher": "match (q:ENTITY{name:'111 girls'}) --(n) with n order by n.name where n.name <> 'entertainment work' return n.name"}, {"query": "Can you help me find out the climate type of Katliyan?", "cypher": "The following is a list of the most common types of climate change:"}, {"query": "What are the representative works of actor Lee Jianyang?", "cypher": "Match (:ENTITY{name:'Li Jianyang'}) - [:Relationship{name:'represented works'}]->(m) return distinct m.name"}, {"query": "Tell me about the school in the 2nd level relationship of the Dentsey Private Enterprise Accounting Service Center, where schooling is for integrity and quality first.", "cypher": "match (n:ENTITY{name:'Dancey Private Enterprise Accounting Services Center'}) - [:Relationship*1..2]->(x) where x.name <> 'Integrity is value, quality first' return distinct x.name"}, {"query": "I'm not sure if I can get a rep for 10 actors.", "cypher": "match (:ENTITY{name:' actor'}) <- [:Relationship{name:' profession'}]-(m) - [:Relationship{name:' representing work'}]->(n) return n.name order by n.name limit 10"}, {"query": "I would like to know about the school attributes of the 61st secondary school in Victory, Do you have them?", "cypher": "match (:ENTITY{name:'School of the Year'}) - [:Relationship{name:'School Attributes'}]-> (h) return h.name order by h.name"}, {"query": "What is the HDMI resolution of the 12 frame splitter used today?", "cypher": "The following is a list of the most commonly used image types:"}, {"query": "Please tell me who was appointed president in 1985 by military leader Manuel Antonio Noriega", "cypher": "match (:ENTITY{name:'In 1985 appointed president by military leader Manuel Antonio Noriega'}) --(m) return distinct m.name"}, {"query": "Can you recommend four free games for me?", "cypher": "match (:ENTITY{name:' free'}) <- [:Relationship{name:' fee method'}]- (h) return h.name limit 4"}, {"query": "What is the approximate meaning of \"go to the room\"?", "cypher": "match (:ENTITY{name:'go into the room'}) --(x) return distinct x.name"}, {"query": "The world is a mess for babies 0-3 years old: numbers?", "cypher": "match (:ENTITY{name:'0-3 year old baby recognizes the world: number'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name"}, {"query": "What is the chemical formula for C20H22O6? Can you provide two?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "I need information on the relationship between Zhejiang Yunkai Pharmaceutical Company Limited and the two-tiered pharmacy chain for chronic special diseases.", "cypher": "match (n:ENTITY{name:'Zhejiang Yunkai Asia-America Pharmacy Chain Limited'}) - [:Relationship*1..2]->(x) where x.name <> 'chronic special disease drug' return distinct x.name"}, {"query": "I'm not sure who the person who gave the cold voice to the moon is.", "cypher": "match (:ENTITY{name:'\u6708\u5bd2'}) <- [:Relationship{name:'identity'}]-(x),(x) - [:Relationship{name:'sounding'}]->(q) return distinct q.name"}, {"query": "Do you know who's song is Are You for Great Sex?", "cypher": "match (:ENTITY{name:'Are You for Great Sex?'}) <- [:Relationship{name:'main work'}]- (m) return distinct m.name"}, {"query": "What is 17Vee Disney MI Cool?", "cypher": "match (:ENTITY{name:'17Vee Disney MI Cool'}) --(m) with m order by m.name return m.name"}, {"query": "When was the date when the Sudanese rebels attacked Khartoum?", "cypher": "match (:ENTITY{name:'Sudanese insurgents have taken over Khartoum'}) <- [:Relationship{name:'event'}]- (h) return h.name"}, {"query": "There is a show that premiered on Friday at 22:55 and was repeated on Saturday at 15:30, called \"Yue?\"", "cypher": "match (:ENTITY{name:' Friday 22:55 minutes premiere  Saturday 15:30 replay'}) <- [:Relationship{name:' air time'}]-(h),(h) - [:Relationship{name:' Chinese name'}]->(m) return distinct m.name limit 1"}, {"query": "Please help me find books by Sun Yat-sen and tell me their publisher.", "cypher": "match (:ENTITY{name:'Sun Yang \u7f16'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Relationship{name:'publisher'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know what chemical has CAS number 7228-47-9?", "cypher": "Match (:ENTITY{name:'7228-47-9'}) <- [:Relationship{name:'CASNo'}]- (n) return distinct n.name"}, {"query": "I'm not sure if you're familiar with the three-tiered relationship between sports personalities like Gao Qiu and Yu Fan.", "cypher": "match (n:ENTITY{name:'sportsman'}) - [*1..3]->(x) where x.name <> 'sportsman' return distinct x.name"}, {"query": "Can you name a place that has a second-tier label relationship with the Sand River Village?", "cypher": "match (n) <- [:Tag*2{name:'tag'}]- ((p:ENTITY{name:'Sand River Village'}) RETURN distinct n.name"}, {"query": "Can you find the 3 tags for the 9/11 hostage crisis in Wisconsin, USA, which is a contemporary historical event?", "cypher": "match (:ENTITY{name:'11\u00b729 Wisconsin High School Hostage Crisis'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'contemporary historical event' return q.name limit 3"}, {"query": "I wonder what jobs graduates from the Royal Military Academy do?", "cypher": "match (:ENTITY{name:'Royal Military School'}) <- [:Relationship{name:' Graduate School'}]- ((q) - [:Relationship{name:' Profession'}]->(n) return distinct q.name limit 5"}, {"query": "Do you know where the Neapolitan football club is located?", "cypher": "match ((:ENTITY{name:'Napoli Football Club'}) - [:Relationship{name:'the area to which belongs'}]-> (n) return n.name"}, {"query": "The story of the two layers of the relationship between the chapters of ancient legends and the mythology of the ancient myths.", "cypher": "match (n:ENTITY{name:' chapter of ancient legend'}) - [:Relationship*1..2]->(x) where x.name <> 'ancient myth' return distinct x.name"}, {"query": "What is the name of the current secretary of the Yuen Long? Can you give me one?", "cypher": "match (:ENTITY{name:'sweet'}) <- [:Relationship{name:'current secretary'}]- ((q) - [:Relationship{name:'sweet'}]->(n) return n.name order by n.name limit 1"}, {"query": "What is the shortest distance between the Ming Dynasty site and the North Dynasty site on the second floor?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Mingkoang Palace site'}) - [*..2]-(b:ENTITY{name:'North Palace site'})) return count ((p)"}, {"query": "The book is called 09 Chinese Architecture Performance Integrated 1.", "cypher": "match (:ENTITY{name:'09 Chinese architectural performance integrated 1'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'books' return q.name"}, {"query": "What are some of Sun's most iconic works?", "cypher": "match (:ENTITY{name:'Sunny's Swinging'}) - [:Relationship{name:'represents the work'}]->(m) return distinct m.name"}, {"query": "I'm not sure if you can tell me what Anton Chekhov wrote.", "cypher": "match (:ENTITY{name:'Anton Chetkov'}) <- [:Relationship{name:'author'}]- (p) return distinct p.name"}, {"query": "The 10/11 Shenzhen fire reported in the news, do you know what type of incident?", "cypher": "match ((:ENTITY{name:'10\u00b711 Shenzhen fire incident'}) - [:Relationship{name:' event type'}]-> (h) return h.name"}, {"query": "Did you have trouble telling me the personal profiles of five people named Arroquis Guedrius in Chinese?", "cypher": "match (n:ENTITY{name:'Alroquis Giedrius'}) - [*1..4]->(x) where x.name <>' Chinese name' return distinct x.name limit 5"}, {"query": "What job did the person born in 1942 give me five", "cypher": "match (:ENTITY{name:'1942'}) <- [:Relationship{name:'date of birth'}]- ((h) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 5"}, {"query": "Who is the director of this film?", "cypher": "Match (n:ENTITY{name:'Yay sister'}) - [:Relationship{name:'director'}]-> (h) return h.name"}, {"query": "Apart from the Princess of the Two Worlds, which five films were directed by graduates of the Beijing Film Academy?", "cypher": "match (:ENTITY{name:'Beijing Film Academy'}) <- [:Relationship{name:'Graduate School'}]-(x),(x) - [:Relationship{name:'Representative work'}]->(h) where h.name <> 'Dublin's Queen' return distinct h.name limit 5"}, {"query": "Can you tell me what the chief accomplishment of the sun?", "cypher": "match (:ENTITY{name:'Zho Xiaojun, male, professor at Zhengzhou University, formerly head of the Department of Foreign Languages, and head of the Department of Foreign Language Teaching at the university\u3002'}) <- [:Describe{name:'description'}]-(p) - [:Relationship{name:'main achievements'}]->(x) return distinct p.name"}, {"query": "The Great Wall of China is a monument to the history of the city.", "cypher": "Match (:ENTITY{name:'drinking horse's long wall}) - [:Relationship{name:'creation year'}]-> (m) return distinct m.name"}, {"query": "What is the name of the family of sea cucumbers?", "cypher": "match (:ENTITY{name:'Relationship{name:'category'}]-> (m) return distinct m.name"}, {"query": "I want to hear about the relationship between the two tiers of the wholesale clothing market in the Yellow River.", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Tiger Gate Yellow River clothing wholesale market'}) UNWIND relationships(path) AS rel return rel.name"}, {"query": "What is the shortest path between the three layers of the Western gills and the spiny gills?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Western spider'}) - [*..3]-(b:ENTITY{name:'Thorn-bearing spider'})) return count ((p)"}, {"query": "What do you know about the Empire State Building?", "cypher": "match (:ENTITY{name:' Empire State Building'}) --(h) return h.name order by h.name"}, {"query": "Please describe the product in the following language called Rokitamycin, which is a product with a 2-layer relationship to Rokatazin.", "cypher": "match (n:ENTITY{name:'Rokitamycin'}) - [:Relationship*1..2]->(x) where x.name<>'Rokitamycin' return distinct x.name"}, {"query": "Can you tell me about the types of relationships that are involved in the two layers of Kyla Collins?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Kyra Collins'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "Do you know what the Chinese name of the novel by the author of the web series Seven Nights of the Devil is?", "cypher": "match (:ENTITY{name:'\u5996\u4e03\u591c'}) <- [:Relationship{name:' author'}]-(p) - [:Relationship{name:' Chinese name'}]->(h) return distinct h.name limit 4"}, {"query": "Can you name the top 10 messages from Harry Connick Jr.?", "cypher": "match (:ENTITY{name:'Harry Connick jr'}) --(q) return q.name order by q.name limit 10"}, {"query": "Do you know which natural disaster caused the number of victims to reach 10.15 million?", "cypher": "Match (:ENTITY{name:'1015 million'}) <- [:Relationship{name:'number of people affected'}]- (m) return m.name"}, {"query": "What is the name of the famous person who died in 1895?", "cypher": "match (:ENTITY{name:'1895'}) <- [:Relationship{name:'time of death'}]- ((m) - [:Relationship{name:'name'}]->(n) return distinct m.name"}, {"query": "Please introduce me to the three main departments of this full-time school.", "cypher": "match (:ENTITY{name:'full-time'}) <- [:Relationship{name:'school type'}]-(x) - [:Relationship{name:'main faculty'}]->(h) return h.name order by h.name limit 3"}, {"query": "Please give me 10 tags for the Shandong University Sports Carnival.", "cypher": "match (:ENTITY{name:'Santondo University Sports Carnival'}) - [:Tag{name:'tag'}]-> (q) return distinct q.name limit 10 The name of the game is the same as the name of the game itself."}, {"query": "Do you know what the name of the thing is that Liu Wei took his son on a trip?", "cypher": "match (:ENTITY{name:'sweet'}) <- [:Relationship{name:'sweet'}]- (p) return distinct p.name"}, {"query": "What else do you know about the publication date of this book, which is 2008? Find the other 6 information in the 3 layers.", "cypher": "match (:ENTITY{name:' Network communications and integrated wiring technology'}) - [*1..3]-(p) where p.name <> '2008/9/1' return p.name limit 6"}, {"query": "Can you name three main achievements of this Chinese man?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(q) - [:Relationship{name:'main achievements'}]->(x) return x.name order by x.name limit 3"}, {"query": "I want to write a book about the light classics of the series Emotions and Desire: Relationships in Two Levels of Life.", "cypher": "match (n:ENTITY{name:'light classic; emotion and desire series: lifetime'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "How about the sleeping queen who is the wicked wind that blows through the autumn night?", "cypher": "match (:ENTITY{name:'Sleeping Queen of the Night'}) --(x) with x order by x.name where x.name <> 'wind of the autumn night' return x.name"}, {"query": "What is the price of the books published by the Oriental Publishing Center? Please tell me 5 things.", "cypher": "match (:ENTITY{name:'Eastern Publishing Center'}) <- [:Relationship{name:'publishing house'}]-(h),(h) - [:Relationship{name:' pricing'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you help me find three people who are both actors and singers?", "cypher": "match (:ENTITY{name:'film and television actor'}) <- [:Relationship{name:'profession'}]-(m), (m) - [:Relationship{name:'profession'}]->(n) where n.name='pop singer' return m.name limit 3"}, {"query": "What are the sci-fi movies? Can you tell me five?", "cypher": "The game is based on the movie of the same name."}, {"query": "Which asteroids and asteroid 8216 have the same discoverer and what labels do they have? Tell me the order in order of the number of labels for each asteroid.", "cypher": "The name of the asteroid is given by the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name of the asteroid's namesake, the name, the name of the asteroid's name, the name, the name of the asteroid's name, the name, the name of the name of the asteroid, the asteroid, the name, the name of the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the asteroid, the"}, {"query": "There is a school that requires TOEFL, SSAT and telephone interviews, and one of its famous alumni is Mitt Romney.", "cypher": "match (:ENTITY{name:'TOF, SSAT score, telephone interview'}) <- [:Relationship{name:'admission requirements'}]- ((q),(q) - [:Relationship{name:'known alumni'}]->(m) where m.name <> 'Mitt Romney' return distinct m.name limit 5"}, {"query": "How many universities are there in Songjiang University City?", "cypher": "match (:ENTITY{name:'Songjiang University City'}) - [:Relationship{name:'Entering college'}]->(n) return n.name"}, {"query": "What are the songs or singers that were released in 2014? Can you name 10?", "cypher": "match (:ENTITY{name:'2014'}) <- [:Relationship{name:'release time'}]- (h) return h.name limit 10"}, {"query": "Where are the Chinese wrinkled guards mainly located?", "cypher": "match (:ENTITY{name:'China's Curtain Guarding Palace'}) - [:Relationship{name:'Distributed area'}]-> (m) return distinct m.name"}, {"query": "Do you know what evolutionary branches of the plumed dragon are?", "cypher": "match (:ENTITY{name:'squid'}) <- [:Relationship{name:'squid'}]- (p) return distinct p.name"}, {"query": "Can you tell us about the relationship between the five Northern Witches and the five levels of the Immortal Doll?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'Witch of the North and the Immortal Godfather'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "What else do you know about Merton College, Oxford University? Help me find the other four information in the 2nd layer.", "cypher": "match (:ENTITY{name:' Merton College of the University of Oxford'}) - [:Relationship*1..2]-(p) where p.name <> 'school' return p.name limit 4"}, {"query": "What is the basic relationship between the five layers of medical technology and the joint eradication of vaginal cancer?", "cypher": "match (n:ENTITY{name:' joint root canal for vaginal cancer'}) - [*1..5]->(x) where x.name <> 'medicine' return distinct x.name"}, {"query": "I'm having trouble asking you about the Fuhrbaum cognitive diagram: The book is related to the four layers of relationships in the book?", "cypher": "match (n:ENTITY{name:'Full-body image: color'}) - [*1..4]->(x) where x.name<>'Full-body image: color' return distinct x.name limit 5"}, {"query": "The following is a list of five of Sooyoung's works:", "cypher": "match (n:ENTITY{name:'paraphrase'}) - [*]->(x) where x.name <>'Sou' return distinct x.name limit 5"}, {"query": "Can you find me two memorial parks and show me about them?", "cypher": "match (:ENTITY{name:' memorial park'}) <- [:Relationship*]-(m),(m) - [:Describe{name:' description'}]->(n) return m.name,n.name limit 2"}, {"query": "Who is the same height as Hlatswayo Thulani and what are the labels of each of these people?", "cypher": "The following is a list of the most commonly used tags for the game of basketball:"}, {"query": "Can you give me the first message from George Hervey?", "cypher": "match (:ENTITY{name:' George Hervey'}) --(x) return x.name order by x.name limit 1"}, {"query": "Do you know what the main achievements of people born in Yangon are?", "cypher": "match (:ENTITY{name:'\u65b0\u5e02'}) <- [:Relationship{name:'birthplace'}]- ((n) - [:Relationship{name:'main achievements'}]->(x) return distinct x.name limit 1"}, {"query": "What is the relationship between the labels of the third layer of archaeological artifacts?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'artifact archaeology'}) RETURN distinct n.name limit 3"}, {"query": "I can't wait to hear about the '0-3 years old baby's intellectual development - Baby 0-3 years old series?", "cypher": "match (:ENTITY{name:'0-3 years old baby's intellectual development - baby 0-3 years old series'}) --(q) with q order by q.name return q.name"}, {"query": "What did NUM, a Thai artist, do?", "cypher": "match (:ENTITY{name:'NUM[Thai artist]'}) - [:Relationship{name:'profession'}]-> (q) return distinct q.name"}, {"query": "I'm not sure what the accident was, but I'm not sure what the accident was.", "cypher": "match (:ENTITY{name:'5 dead'}) <- [:Relationship{name:'casualty situation'}]- (m) return m.name limit 10"}, {"query": "What does it mean to be a stock market cut? How do you say it in English?", "cypher": "match (:ENTITY{name:'cut meat'}) - [:Tag{name:'tag'}]->(n) return n.name as name union all match (:ENTITY{name:'cut meat'}) - [:Relationship{name:'foreign name'}]->(m) return m.name as name"}, {"query": "I'm going to give you five entertainers, what are their brokerage companies?", "cypher": "match (:ENTITY{name:'entertainment person'}) <- [*]-(m), (m) - [:Relationship{name:'brokerage company'}]->(n) return m.name, n.name limit 5"}, {"query": "Please list three of the areas of application for the substance described in the article.", "cypher": "match (:ENTITY{name:'Antimatter is the anti-state of normal matter\u3002'}) <- [:Describe{name:'description'}]-(x) - [:Relationship{name:'scale of application'}]->(p) return p.name order by p.name limit 3"}, {"query": "Can you spell the letter for me?", "cypher": "match ((:ENTITY{name:'letter'}) - [:Relationship{name:'spelling'}]-> (n) return n.name order by n.name"}, {"query": "Can you recommend a video site with a joke?", "cypher": "match (:ENTITY{name:'joke'}) <- [:Relationship{name:'work'}]- (h) return h.name"}, {"query": "001x7 ((732) What are the labels of the strong sodium ion exchange resin? Write the first five", "cypher": "match (:ENTITY{name:'001x7(732) strong acid ion exchange resin'}) - [:Tag{name:'label'}]-> (q) with q order by q.name return q.name limit 5"}, {"query": "Tell me about the other 10 professions of a talk show host born in 1986.", "cypher": "match (:ENTITY{name:'1986'}) <- [:Relationship{name:'date of birth'}]-(p),(p) - [:Relationship{name:'profession'}]->(m) where m.name <> 'departure show host' return distinct m.name limit 10"}, {"query": "Can you tell me about five funny shows?", "cypher": "match (:ENTITY{name:'funny show'}) <-[:Tag{name:'tag'}]-(h) return h.name skip 1 limit 5"}, {"query": "The Chinese government has been trying to get the Chinese to leave the country.", "cypher": "match (:ENTITY{name:'Hangul'}) <- [:Relationship{name:'ethnicity'}]-(q),(q) - [:Relationship{name:'profession'}]->(p) return p.name skip 2 limit 1"}, {"query": "Please help me find three of Yang's most iconic works.", "cypher": "Match ((:ENTITY{name:'Relationship{name:'represented work'}}) -> (n) return n.name limit 3"}, {"query": "Can you tell me the three names of this thing that belongs to the genus of the water lizard?", "cypher": "match (:ENTITY{name:' waterfall'}) <- [:Relationship{name:' species'}]-(p) - [:Relationship{name:' alias'}]->(q) return q.name order by q.name limit 3"}, {"query": "The historical event of the naming of the eight flags, the naming of the king's wife and wife by the Ministry of Culture, etc. happened in which year?", "cypher": "match (:ENTITY{name:'clear eight flags, Ministry of Culture prescribed king and other wives' cap numbers'})"}, {"query": "Help me find 10 foreign universities", "cypher": "match (:ENTITY{name:' foreign university'}) --(x) return distinct x.name limit 10"}, {"query": "What is the link to the Hydro-Triangular Synthesis?", "cypher": "match (:ENTITY{name:'Hydrogen is the same as '}) <--(n) return n.name"}, {"query": "Can you name three sports events in Manila, Philippines?", "cypher": "match (:ENTITY{name:'Manila, Philippines'}) <- [:Relationship{name:'place of holding'}]- (p) return p.name limit 3"}, {"query": "I'm going to ask you a question about the project: Is there any information about the project in relation to the second floor of the building?", "cypher": "match (n:ENTITY{name:'theme ever new\u666f\u82cf\u4e3b\u7c3f\u68af\u4e91\u697c'}) - [:Relationship*1..2]->(x) where x.name <> '\u4e07\u91cc' return distinct x.name"}, {"query": "The first three are: \"What are the most important things in the history of spitting?\"", "cypher": "match (:ENTITY{name:'spitting history'}) --(n) return n.name order by n.name limit 5"}, {"query": "Do you know what the names of the people who worked in 1981 and who were the deputy director of the office of the district headquarters in the city of Shijiazhuang, deputy director of the party administration, deputy minister of the armed forces, minister, deputy secretary of the party committee, secretary of the disciplinary committee, and the current deputy secretary of the party committee in Mazu town, secretary of the disciplinary committee in Shijiazhuang, and what their current positions are?", "cypher": "match (:ENTITY{name:'1981 participated in work, was Deputy Director of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office of the District Office the District Office of the District Office the District Office the District Office the District Office the District Office the District Office the District Office the District"}, {"query": "Can you tell us about two other The Wrecking Crew releases outside of the Oculus Rift?", "cypher": "match (:ENTITY{name:'The Wrecking Crew'}) --(m) with m order by m.name where m.name <> 'Karanjo' return distinct m.name limit 2"}, {"query": "Do you know which plane first took off on January 23, 1970?", "cypher": "match (h:ENTITY{name:'January 23, 1970'}) <- [:Relationship{name:'first flight time'}]- (x) return distinct x.name"}, {"query": "Do you know which major departments are in this school, which was founded in July 2008?", "cypher": "match (:ENTITY{name:'July 2008'}) <- [:Relationship{name:'time of creation'}]-(q),(q) - [:Relationship{name:'main faculty'}]->(x) return x.name order by x.name limit 1"}, {"query": "What is the shortest relationship path between the two layers of the poem Man Jiang Red and the song?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Manjang Red; Seishu and Hunsher and Jensis Mahan Chapter's overseer'}) - [*..2]-(b:ENTITY{name:'Manjang Red; BiLum and Sit Guo'})) return count ((p)"}, {"query": "I would like to know which software platforms are the same as the one in the app, and what are the different labels for each app?", "cypher": "match (n:ENTITY{name:'Beautiful life'}) - [:Relationship{name:'software platform'}]->(:ENTITY) <- [:Relationship{name:'software platform'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "And what will make you know what the penny is?", "cypher": "match (:ENTITY{name:'five coins'}) - [:Relationship{name:'unit'}]->(n) return n.name"}, {"query": "Do you know what the Tibetan mountain is called?", "cypher": "match (:ENTITY{name:'Tibet Mountain'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'other name'}]->(n) return distinct n.name"}, {"query": "What chemical is the cas number 6334-18-5?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Do you know the name of the conference held by the Chinese Telecommunications, Telecommunications and Mobile Cooperation Unit?", "cypher": "match (:ENTITY{name:'China Telecommunications, United Communications, Mobile'}) <- [:Relationship{name:' Cooperative Unit'}]- (p) return p.name"}, {"query": "What is the shortest relationship path between the hk11a1 7.62mm light machine gun and the French Hatch-Keeper M1922 8mm light machine gun?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'hk11a1 type 7.62mm light machine gun'}) - [*..2]-(b:ENTITY{name:'French Hachette M1922 type 8mm light machine gun'})) return count ((p)"}, {"query": "Can you tell me about the Second Military Medical University in Shanghai?", "cypher": "match (x:ENTITY{name:'Shanghai Second Military Medical University'}) --(m) return m.name order by m.name"}, {"query": "The Bible says that \"the earth is the Lord's, and the fullness thereof, and the abundance thereof; and the earth is the Lord's\".", "cypher": "match (:ENTITY{name:'Charles Edward Barber'}) --(p) return p.name order by p.name"}, {"query": "You tell me about South Ojibwa, I'd rather know about him.", "cypher": "match (:ENTITY{name:'Southern wave'}) --(p) return p.name skip 3"}, {"query": "Can you list what Ma Majeed is up to?", "cypher": "match (:ENTITY{name:'Machine'}) --(q) return q.name order by q.name"}, {"query": "What are the formal characteristics of the plants of the Dry Macropods?", "cypher": "match (:ENTITY{name:'Dry giant squid group, about 26 species, distributed in Central Asia, Pamir Plateau, Tian Shan, Soviet Turkmenistan, Balkhash and other regions.\u3002'}) <-[:Describe{name:'description'}]-(n) -[:Relationship{name:'form characteristics'}]->(p) return distinct p.name limit 2"}, {"query": "Do you know what music was written in 1929-1931?", "cypher": "match (:ENTITY{name:'1929-1931'}) <- [:Relationship{name:' time of creation'}]- (m) return distinct m.name"}, {"query": "The following is a list of the classic reenactments of the courtyard: A detailed introduction to the relationship between the three layers of the desert of the people of the desert.", "cypher": "match (n:ENTITY{name:'recreation of classic: The Owl Desert'}) - [:Relationship*1..3]->(x) where x.name <>'Owl Desert' return distinct x.name"}, {"query": "Find out more about Nusserbayev N, a Kazakh with no more than three relationships.", "cypher": "match (n:ENTITY{name:'Nusserbayev N'}) - [*1..3]->(x) where x.name<>'Kazakhstan' return distinct x.name"}, {"query": "Could you please give me five things about Duani Rami, an Israeli, in a four-tier relationship?", "cypher": "match (n:ENTITY{name:'Duani Rami'}) - [*1..4]->(x) where x.name<>'Israel' return distinct x.name limit 5"}, {"query": "If you know Mike [Thai actor], tell me about him.", "cypher": "match (:ENTITY{name:'mike [Thai actor]'}) --(h) return h.name order by h.name"}, {"query": "Do you know the profession of this man, born in Berlin on January 6, 1873 and graduated from Leipzig on April 27, 1950?", "cypher": "match (q:ENTITY{name:'born 6 January 1873 in Berlin, graduated 27 April 1950 in Leipzig\u3002'}) <- [:Describe{name:'description'}]-(x) - [:Relationship{name:'profession'}]->(m) return m.name order by m.name limit 1"}, {"query": "What is the name of the Anglo-Saxon people and what are their main achievements?", "cypher": "match (:ENTITY{name:'Anglo-Saxon'}) <- [:Relationship{name:'ethnicity'}]- ((x) - [:Relationship{name:'major achievement'}]->(n) return distinct x.name,n.name"}, {"query": "Do you know which match will be played on 15 May - 1 July 2018?", "cypher": "match (:ENTITY{name:'May 15 to July 1, 2018'}) <- [:Relationship{name:'time of holding'}]- (m) return distinct m.name"}, {"query": "Do you have any information about the two layers of the relationship involved in fruit science?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Fruit nuclear science'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Do you know about another profession of Xu Xian, besides being an artist?", "cypher": "match (:ENTITY{name:'Shuang'in'}) <- [:Relationship{name:'Chinese name'}]-(h) - [:Relationship{name:'profession'}]->(x) where x.name <> 'artist' return distinct x.name limit 1"}, {"query": "Do you know which disk is running on the international Internet?", "cypher": "match (:ENTITY{name:'international internet network'}) <- [:Relationship{name:'run'}]- (m) return m.name"}, {"query": "Apart from the Hong Kong production, what information is there in the two-tiered relationship between the film, The Black Society 2: You Know and You Forgive Me?", "cypher": "match (:ENTITY{name:'Black society 2: with sum as precious'}) - [*1..2]->(p) where p.name <> 'China Hong Kong' return distinct p.name limit 50"}, {"query": "What are the main departments of the universities that offer undergraduate and master's degrees?", "cypher": "match (:ENTITY{name:' undergraduate, master's'}) <- [:Relationship{name:' graduate level'}]- ((q),(q) - [:Relationship{name:' major department'}]->(m) return distinct m.name"}, {"query": "What is the magnitude of the recent quake in the 11-16 Rift Valley?", "cypher": "match ((:ENTITY{name:'11?16 Shandong River crossings earthquake'}) - [:Relationship{name:'earthquake level'}]-> (p) return p.name"}, {"query": "The publication called 0 Archives has a rubber tag?", "cypher": "match (:ENTITY{name:'0 file'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'publication' return p.name"}, {"query": "Please see the top 10 most important monuments in Daegu.", "cypher": "match (:ENTITY{name:'Kazak'}) --(q) return q.name order by q.name limit 10"}, {"query": "Do you know which songs Huang Yi-da composed?", "cypher": "match (:ENTITY{name:'\u9ec4\u4e49\u8fbe'}) <- [:Relationship{name:'compiled'}]- (m) return distinct m.name"}, {"query": "What are the famous sights built between 1736 and 1795?", "cypher": "match (:ENTITY{name:'1736-1795'}) <- [:Relationship{name:'time of construction'}]- ((p) - [:Relationship{name:'famous attractions'}]->(n) return distinct n.name"}, {"query": "06Cr17Ni12Mo2 is the weirdest thing you've ever heard of.", "cypher": "match (:ENTITY{name:'06Cr17Ni12Mo2'}) --(h) with h order by h.name return h.name"}, {"query": "Retrieve all attribute tags for the field standardised work application manuals for 10kV distribution lines?", "cypher": "match (:ENTITY{name:'10kV distribution line field standardized task application manual'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name"}, {"query": "Do you know the nationality of Anne Heatherway?", "cypher": "Match (:ENTITY{name:'Anne Heatherway'}) - [:Relationship{name:'nationality'}]-> (m) return distinct m.name"}, {"query": "Can you summarize the unparalleled war of the otherworld in three words?", "cypher": "match (:ENTITY{name:'the otherworldly undead warrior'}) --(p) with p order by p.name return p.name limit 3"}, {"query": "What is the Spanish version of the tournament in Trinidad and Tobago?", "cypher": "match (:ENTITY{name:'Port of Spain in Trinidad and Tobago'}) <- [:Relationship{name:'place of hosting'}]- (m) return distinct m.name"}, {"query": "Can you find me three people who were born in Nagoya, Japan?", "cypher": "match (:ENTITY{name:'Nagoya, Japan'}) <- [:Relationship{name:'place of birth'}]- ((x),(x) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name limit 3"}, {"query": "What chemical is CAS No. 105-55-5?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Please label the 104 measuring stations as \"excluded from society\"?", "cypher": "match (:ENTITY{name:'104 measurement center'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name where q.name <> 'society' return q.name"}, {"query": "The book was published in which country?", "cypher": "match (:ENTITY{name:'land use'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'publisher'}]->(q) return distinct q.name"}, {"query": "The recipe for this delicacy was explained in detail in 5 articles. It requires ingredients like peanut butter, yellow bean paste, sugar, low-fat flour, whole eggs, milk, butter, and a little soda.", "cypher": "match (:ENTITY{name:' ingredients fine peanut butter, yellow bean meal, sugar, low-fat flour, whole egg, milk, butter, a little bit of soda. ')"}, {"query": "Do you know anything about the representative work of this person with type A blood?", "cypher": "The following is a list of characters that appear in the game The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of the Wild: The Legend of Zelda: Breath of Zelda: Breath of the Wild: The Brave and the Fantastic Four"}, {"query": "Please describe to me 10 jobs far from the city of Xiamen.", "cypher": "match (:ENTITY{name:'town far away'}) <--(m) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 10"}, {"query": "What are the main achievements of the editorial team of the series \"China Reform and Development\"?", "cypher": "match (:ENTITY{name:'September 1942, Shandong, University of Culture, CPC member, former manager, deputy secretary of the Party Group, senior civil engineer of the Shandong County Economic Development Investment Company, Shandong Province, currently retired), special editor of the series of books on China's reform and development."}, {"query": "Can you put together a list of the most representative works of Ivan Chen?", "cypher": "match (:ENTITY{name:'evan chen'}) <- [:Relationship{name:'foreign language name'}]-(n) - [:Relationship{name:'representing work'}]->(m) return distinct m.name"}, {"query": "Can you tell us about the artwork in the two-tier relationship?", "cypher": "match (n:ENTITY{name:'sub'}) - [:Relationship*1..2]->(x) where x.name <>'geographic terrain' return distinct x.name"}, {"query": "Can you find a prescription for 10 doses of the drug?", "cypher": "match (:ENTITY{name:'prescription drug'}) <- [:Relationship{name:'is prescription drug'}]- (mn) - [:Relationship{name:'type of drug'}]->(n:ENTITY{name:'prescription drug'}) return mn.name limit 10"}, {"query": "Which novels are in the same category as The Mirror's Night Journey? What are the labels for each? Please list them in order of number of labels, from small to large.", "cypher": "The following is a list of the most commonly used types of data sets:"}, {"query": "Do you want to know about the sixth edition of 100 Fortune International Mountain in no more than ten words?", "cypher": "match (:ENTITY{name:'100 Fu International Mountain Sixth Edition'}) --(m) with m order by m.name return m.name limit 10"}, {"query": "The film was released on April 3, 2015 and was released in theaters on April 3, 2015.", "cypher": "match (:ENTITY{name:'03 April 2015'}) <- [:Relationship{name:'time of premiere'}]-(n),(n) - [:Relationship{name:'type'}]->(q) return distinct q.name limit 5"}, {"query": "Help me find 10 species of fish that are vertebrate and have a porous shape.", "cypher": "match (:ENTITY{name:'backbone'}) <- [:Relationship{name:'backbone'}]-(m), (m) - [:Relationship{name:'eye'}]->(n) where n.name='eye' return m.name limit 10"}, {"query": "The building of the temple in the Gothic style is a matter of great interest to the people of the region.", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name <>'Gothic' return distinct x.name"}, {"query": "Can I have five tags for the address 0714?", "cypher": "match (:ENTITY{name:'0714'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 5"}, {"query": "The first BRICS Summit was held in the United Kingdom, in the United States, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United States, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom, in the United Kingdom.", "cypher": "match (x:ENTITY{name:'the first BRICS Summit'}),(x) - [:Relationship{name:'participating country'}]-> (m), (x) - [:Relationship{name:'location'}]->(n) return m.name,n.name"}, {"query": "Can you tell us about the two types of relationships that Chongqing Heart Technology Co. Ltd. is involved in?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Chongqing heart and technology company limited'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "Do you know this man, born in Yangzhou (now in the city of Lei) in Shandong Province, whose 10 works are representative?", "cypher": "match (:ENTITY{name:'Santongo Province, Liaoning County, Liaoning Province, Liaoning Province) }) <- [:Relationship{name:'Born'}]- ((q) - [:Relationship{name:'Representing work'}]->(x) return x.name order by x.name limit 10"}, {"query": "Can you tell me five things you know about Borough Primorats 2 besides being part of Arsenal Football Club?", "cypher": "match (:ENTITY{name:'Boro Primorats'}) - [*1..2]->(p) where p.name <> 'Arsenal football club' return p.name limit 5"}, {"query": "What does it mean to eat a chicken?", "cypher": "match (:ENTITY{name:'Relationship{name:'definition'}]->(m) return distinct m.name"}, {"query": "Is there a way to get a virus that exploits a vulnerability in the ARP protocol to come out?", "cypher": "match (:ENTITY{name:' exploiting a vulnerability in the arp protocol'}) <- [:Relationship{name:' principle'}]- (p) return p.name"}, {"query": "Where is the middle school?", "cypher": "match (:ENTITY{name:'Relationship{name:' area'}]-> (m) return distinct m.name"}, {"query": "Who is the sister of the 166 cm tall man?", "cypher": "match (:ENTITY{name:'166cm'}) <- [:Relationship{name:'height'}]-(p),(p) - [:Relationship{name:'sister'}]->(h) return distinct h.name"}, {"query": "The song is sung by Zhang Yimou, \"Are you the one I want to love?\"", "cypher": "match ((:ENTITY{name:'Are you the one I want to love'}) - [:Relationship{name:'word'}]-> (x) return x.name"}, {"query": "You know that the bloodthirsty fox is not just a comic book artist, but he has four messages in his two layers.", "cypher": "match (:ENTITY{name:'bloodthirstyfox'}) - [*1..2]-(p) where p.name <> 'cartoonist' return distinct p.name limit 4"}, {"query": "The author of the article, who is a member of the family of the accused, asked:", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}}) - (p) return p.name"}, {"query": "Chemistry of yellow crystalline powder", "cypher": "match (:ENTITY{name:' yellow crystal powder'}) <- [:Relationship{name:' characteristics'}]-(h),(h) - [:Relationship{name:' alias'}]->(n) return distinct n.name limit 1"}, {"query": "Does the person known as Sharotti Lamplin have a tattoo?", "cypher": "match (:ENTITY{name:'Sharonette Lamplin'}) <- [:Relationship{name:'alias'}]-(n),(n) - [:Relationship{name:'represents work'}]->(q) return distinct q.name"}, {"query": "Where did Wang Longlin graduate from?", "cypher": "match (:ENTITY{name:' Wang Yanglin [Nanjing Frontline Civic Union dialogue actor]'}) - [:Relationship{name:' Graduate School'}]->(m) return m.name"}, {"query": "The following is a list of all the relevant information about male polycystic ovary syndrome.", "cypher": "match (n:ENTITY{name:'man-in-the-middle'}) -[:Relationship*]->(x) where x.name <> 'man' return distinct x.name"}, {"query": "Do you know what 32 books are selling for $15.8?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Can you recommend a book for a quick class on building engineering skills?", "cypher": "match (:ENTITY{name:' Construction engineering skills and abilities'}) <- [:Relationship{name:' category'}]- (p) return distinct p.name"}, {"query": "I would like to know about the organization's relationship with Kim City Hemp Development Co. Ltd.", "cypher": "match (n:ENTITY{name:' from Kimyo-shi Hen developed Enterprises Limited'}) - [*1..4]->(x) where x.name<>'organization' return distinct x.name"}, {"query": "What are the most representative works of a writer born in Jilin? Can you tell me three?", "cypher": "match (:ENTITY{name:'Jilin Province'}) <- [:Relationship{name:'place of birth'}]-(q),(q) - [:Relationship{name:'representative work'}]->(p) return distinct p.name limit 3"}, {"query": "What is the Chinese name of Love in Christmas? When was the song released?", "cypher": "The name of the song is \"Love in Christmas\" (Relationship) and the name of the song is \"Love in Christmas\" (Relationship)."}, {"query": "Can you show me a brief description of the two-tier relationship between the station and the station on the Sanjay Ganges Road?", "cypher": "match (n:ENTITY{name:'Panoah River Road Station'}) - [:Relationship*1..2]->(x) where x.name<>'station' return distinct x.name"}, {"query": "Please tell me the nationality of Konstantin Dmitrievich Ushensky, please.", "cypher": "match (:ENTITY{name:'Konstantin Dmitrievich Ushensky'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'nationality'}]->(q) return distinct q.name"}, {"query": "Please introduce me to the first three articles of Charles Knapp.", "cypher": "match (:ENTITY{name:'Charles Knapp'}) --(h) return h.name order by h.name limit 3"}, {"query": "The company was founded in what year?", "cypher": "match (p:ENTITY{name:' long sign company'}) return p.time"}, {"query": "Please tell me what are the main achievements of Zornik?", "cypher": "match (:ENTITY{name:'Zornik'}) - [:Relationship{name:'main achievement'}]-> (q) return distinct q.name"}, {"query": "What is the label attribute of a 1020 social event?", "cypher": "match (:ENTITY{name:'1020'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'social event' return p.name limit 1"}, {"query": "What were the occupations of the Ming Dynasty?", "cypher": "match (:ENTITY{name:'Ming'}) <- [:Relationship{name:'at the time'}]-(h),(h) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 5"}, {"query": "I'm not sure if you're familiar with the topic.", "cypher": "match (n:ENTITY{name:'scholarly life'}) --(x) return x.name"}, {"query": "Super Hacker is back in action game is there anything similar? 10 games to play.", "cypher": "match (n:ENTITY{name:'Super Hacker is back in the best version'}) <-[:Relationship{name:'Chinese name'}]-(p),(p) -[:Relationship{name:'game size'}]->(q) where q.name <> 'action game' return distinct q.name limit 10"}, {"query": "Do you know what the names of the relationships within the two levels of the Ole Hotel are?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Ole Hotel'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "The following is a list of the top 10 best online accounting courses in the world.", "cypher": "match (n:ENTITY{name:' Higher education institution twelve-fifths planning material: accounting principles'}) - [:Relationship*1..3]->(x) where x.name<>'Hang Mengfei' return distinct x.name"}, {"query": "Can you list all the relationships within the two tiers of Social Security income?", "cypher": "The following pages link to The Unknowns:"}, {"query": "Do you know what concerts were held at Shanghai Stadium?", "cypher": "match (:ENTITY{name:'Shanghai Stadium'}) <- [:Relationship{name:'Show venue'}]- (x) return distinct x.name"}, {"query": "What is the shortest relationship path between the respiratory and the pyloric veins?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'breathing path'}) -[:Relationship*..2]-(b:ENTITY{name:'pillar jamming path'})) return count ((p)"}, {"query": "I just finished watching 007: The Skybreaker, do you know when it was filmed?", "cypher": "Match (s) (h) return (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h) (h ("}, {"query": "The Chinese website started with eight non-verbal works.", "cypher": "match (:ENTITY{name:' starting point Chinese web'}) <--(m), (m) -->> ((n) where n.name <> 'speech' return distinct m.name limit 8"}, {"query": "Can you tell me which celebrity's husband is Wen Shen?", "cypher": "match (:ENTITY{name:'Wen Hsien'}) <- [:Relationship{name:'husband'}]- ((x) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name"}, {"query": "Can you tell me which institutions have a tier 3 label relationship with scientific research institutions?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'research institution'}) return distinct n.name limit 6"}, {"query": "The traditional line drawings of characters are good for more than simple Chinese.", "cypher": "match (:ENTITY{name:'Chinese painting: traditional line drawing characters'}) --(m) with m order by m.name where m.name <> 'Simplified Chinese' return distinct m.name limit 2"}, {"query": "Please tell me what kind of work I do as an American citizen?", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(n),(n) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 3"}, {"query": "Can you tell me about the three famous alumni of the school that was founded in 1960?", "cypher": "match (:ENTITY{name:'1960'}) <- [:Relationship{name:'time of founding'}]- ((p),(p) - [:Relationship{name:'known alumni'}]->(x) return x.name skip 1 limit 3"}, {"query": "How many species of animals are known by the Latin name Diptera?", "cypher": "match (n:ENTITY{name:'DIPTERA'}) <- [:Relationship{name:'Latin name'}]- (m) return m.name limit 4"}, {"query": "Did you know that Zhang Shaoqi works as a cook?", "cypher": "match (:ENTITY{name:'Zhang Shaoqi'}) <- [:Relationship{name:'Chinese name'}]-(x),(x) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 1"}, {"query": "What is the biggest award in civil engineering?", "cypher": "match (n:ENTITY{name:'the largest award established in civil engineering'}) --(x) return distinct x.name"}, {"query": "Wang Bingfeng has three other achievements besides being the person responsible for the advanced land management in Huanggang City.", "cypher": "match (:ENTITY{name:'Wang Bingbing'}) <- [:Relationship{name:'Chinese name'}]- ((q) - [:Relationship{name:'main achievements'}]->(n) where n.name <> 'Advanced person in land management in Huanggang City' return distinct n.name limit 3"}, {"query": "Please tell me what events and institutions are happening in Gujarat?", "cypher": "match (:ENTITY{name:'for the county'}) <-[:Relationship{name:'place'}]- (x) return distinct x.name"}, {"query": "Do you know of any other works by a person with a fresh, unconventional, and unique style of songwriting?", "cypher": "match (:ENTITY{name:'fresh out of the box, unusual'}) <-[:Relationship{name:'tracklist style'}]-(h) -[:Relationship{name:'representing work'}]->(q) return q.name order by q.name limit 5"}, {"query": "Tell me about the 10 most relevant topics in the road transport tourism map of Shanghai, Jiangsu, Jiangsu, and Anhui.", "cypher": "match (:ENTITY{name:'07- Shanghai Jiangsu Zhejiang Anhui region-road traffic tourism details'}) --(x) with x order by x.name return x.name limit 10"}, {"query": "I need to know the details of the 10/13 Guangnan High Speed Gun Hostage Abduction.", "cypher": "match (:ENTITY{name:'10\u00b713 Guangnan high-speed gun-wielding hostage case'}) --(p) with p order by p.name where p.name <> 'social event' return p.name"}, {"query": "What else do you know about Lang Chow Show besides being a female singer? Find 10 information in 2 layers.", "cypher": "match (:ENTITY{name:'Lang-Yun-Shui'}) - [:Relationship*1..2]-(p) where p.name <> 'high-pitched female singer' return distinct p.name limit 10"}, {"query": "Do you know what kind of events are held at the Honshu Stadium?", "cypher": "match (:ENTITY{name:'Hong Kong Stadium'}) <- [:Relationship{name:'Show venue'}]- (q) return q.name"}, {"query": "Can you name 10 of the famous sights of the Gossip Shrine?", "cypher": "match (:ENTITY{name:'Relationship'}) <- [:Relationship{name:'Relationship' type'}]- ((p) - [:Relationship{name:'Famous attractions'}]->(n) return n.name order by n.name limit 10"}, {"query": "And what do you know of the first three verses?", "cypher": "match (x:ENTITY{name:'P'}) --(p) return p.name order by p.name limit 3"}, {"query": "Can you find me the website of this company?", "cypher": "match (:ENTITY{name:'resident business'}) <-[:Relationship{name:'Chinese name'}]-(p) -[:Relationship{name:'official website'}]->(n) return distinct n.name"}, {"query": "Is there any specific label for the 2.19 magnitude earthquake?", "cypher": "match (:ENTITY{name:'2.19 triple earthquake'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name where x.name <> 'natural' return x.name"}, {"query": "Baby's cognitive picture book: How does a baby recognize food?", "cypher": "match (:ENTITY{name:'0-2 years old baby's cognitive picture book: baby recognizes food'}) - [:Tag{name:'label'}]-> (m) with m order by m.name where m.name <> 'publication' return m.name"}, {"query": "I would like to know the relevant information about this person Oikonomou in the four levels of relationships?", "cypher": "match (n:ENTITY{name:'Oikonomou'}) - [*1..4]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "Which book has the barcode 9787564208752 on the top?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What are the advantages and disadvantages of distributed processing?", "cypher": "The name of the function is the name of the function itself. The name of the function is the name of the function itself."}, {"query": "Do you know which exhibitions have a floor area of 46,000 square meters?", "cypher": "match (:ENTITY{name:'46000 square metres'}) <- [:Relationship{name:'exhibition area'}]- (m) return m.name"}, {"query": "Do you know what the main prizes are for this 105kg man? Please give me 10 of them.", "cypher": "match (:ENTITY{name:'105KG'}) <- [:Relationship{name:'weight'}]-(m) - [:Relationship{name:'main prize'}]->(x) return x.name order by x.name limit 10"}, {"query": "What is the name of the social event published by Deng Kwun Che?", "cypher": "match (:ENTITY{name:'Relationship{name:' publisher'}]- (x) return x.name"}, {"query": "Can you name an anime agency in Anhui?", "cypher": "match (:ENTITY{name:'Anhui Huangsan'}) <- [:Relationship{name:'location'}]- (n) return distinct n.name"}, {"query": "Please tell me what is the third level of the Chinese university label?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'University of China'}) return distinct n.name"}, {"query": "I would like to know the name of this Chinese person and his last name, can you tell me five lines?", "cypher": "The following is a list of the most commonly used characters in the game."}, {"query": "I would like to know the main achievements of this teacher and researcher.", "cypher": "match (:ENTITY{name:'teacher and researcher'}) <- [:Relationship{name:'profession'}]- ((m) - [:Relationship{name:'main achievement'}]->(x) return x.name skip 2 limit 5"}, {"query": "I'm not sure how to say the word animal in English.", "cypher": "match (:ENTITY{name:'animal domain'}) <- [:Relationship{name:'domain'}]-(n),(n) - [:Relationship{name:'name'}]->(x) return distinct x.name limit 1"}, {"query": "I'm currently working on a book called Industrial Design Instructional Materials for Higher Education: The Three Levels of Design Psychology.", "cypher": "match (n:ENTITY{name:' Higher education institution industrial design planning teaching material: design psychology'}) - [:Relationship*1..3]->(x) where x.name <> 'publication' return distinct x.name"}, {"query": "The following is a list of five personal information in the five levels of relationship of sports personality Midori Kimura.", "cypher": "match (n:ENTITY{name:'\u4ef2\u6751\u4eac\u96c5'}) - [*1..5]->(x) where x.name <> 'sportsman' return distinct x.name limit 5"}, {"query": "Who has the longest name of the graduate of Sichuan Art Vocational College?", "cypher": "match (:ENTITY{name:' Sichuan Art Vocational College'}) <- [:Relationship{name:' Graduate School'}]-(m) return max(m.name)"}, {"query": "I have trouble finding the Sima Yan Literature and Life Writing Exercise Book published by Electronic Industries Publishing: 5 information materials for 5th grade?", "cypher": "match (n:ENTITY{name:'Shimura Yamamoto; Lifework: 5th grade'}) - [:Relationship*]->(x) where x.name <> 'Electronic industry publisher' return distinct x.name limit 5"}, {"query": "Who are the people who helped me find the tennis players in the USA?", "cypher": "match (p:ENTITY{name:'United States'}) <--(x) --> ((q:ENTITY{name:' tennis player'}) return x.name"}, {"query": "Looking for 10 people weighing 65 kg?", "cypher": "match (:ENTITY{name:'65 kg'}) <- [:Relationship{name:'weight'}]- ((n) return distinct n.name limit 10"}, {"query": "Who has won the title of the 10 most outstanding young entrepreneurs in Enschede?", "cypher": "match (q:ENTITY{name:'The 10 most prominent young entrepreneurs in Enschede'}) --(p) return p.name order by p.name"}, {"query": "Can you tell us about the kind of relationships involved in the 23rd International Film Festival of Logano in the two layers?", "cypher": "Match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'23rd Locarno International Film Festival'}) UNWIND relations(path) AS rel RETURN distinct rel.name"}, {"query": "Can you name a company that is based in the suburbs of Yangon?", "cypher": "match (:ENTITY{name:'suburb of the city'}) <- [:Relationship{name:'headquarters location'}]- (q) return q.name"}, {"query": "The following is a list of the topics covered by the blog of the writer and the author of the book, Ranjaya.", "cypher": "match (n:ENTITY{name:' listen to Ranjay say stone\u00b7Mapawan poetry'}) - [:Relationship*1..2]->(x) where x.name <> 'literary work' return distinct x.name"}, {"query": "What are the main ingredients and additives of the mycorrhizal?", "cypher": "match (:ENTITY{name:'Pyramidal'}) - [:Relationship{name:'Main ingredient'}]->(n) return n.name as name union all match (:ENTITY{name:'Pyramidal'}) - [:Relationship{name:'Supplementary'}]->(m) return m.name as name"}, {"query": "How to find all the product information for a 5.62MB application software that is easy to learn?", "cypher": "match (n:ENTITY{name:'easy to learn'}) - [*1..5]->(x) where x.name<>'easy to learn is a 5.62MB application for Android 2.2 and above. return distinct x.name"}, {"query": "Can you tell me which school won the main prize for the 7th place in the French Business School, Figaro 2015?", "cypher": "match (:ENTITY{name:' French Business School ranked 7th, Figaro newspaper, 2015,'}) <- [:Relationship{name:' major award'}]- (q) return distinct q.name"}, {"query": "Please help me find out who the six scientists are, and what their qualifications are.", "cypher": "match (:ENTITY{name:'researchers'}) <- [*]-(m), (m) - [:Relationship{name:'academic degrees'}]->(n) return m.name, n.name limit 6"}, {"query": "What is the role of moonflower oil and where is it distributed?", "cypher": "match (:ENTITY{name:'Relationship{name:'function'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'distribution'}) ->(m) return m.name as name"}, {"query": "What other occupations does this man born on March 28, 1937 have? Do you know 10?", "cypher": "match (:ENTITY{name:'28 March 1937'}) <- [:Relationship{name:'date of birth'}]-(m),(m) - [:Relationship{name:'profession'}]->(q) return q.name order by q.name limit 10"}, {"query": "What is the name of the shellfish species known as the watermelon?", "cypher": "match (:ENTITY{name:'hybrid chickpeas, peaches, flowers'}) <- [:Relationship{name:'Chinese place name'}]-(m) return distinct m.name"}, {"query": "Do you have all the types of relationships involved in the urban market in the 4 levels?", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:' Urban Market'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "What is the definition of the '03 Platinum Generation' in 10 words?", "cypher": "match (:ENTITY{name:'03 platinum generation'}) --(q) with q order by q.name return q.name limit 10"}, {"query": "What historical events took place in the first five years of the Qing Dynasty?", "cypher": "match (:ENTITY{name:'Relationship{name:'period'}) - ((x) - [Relationship{name:'historical record'}]->(n) return distinct n.name"}, {"query": "Can you tell me the two labels of Zhou Zhen, but not sports and personality?", "cypher": "match (n:ENTITY{name:'showdown9'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'sports' and h.name <> 'person' return distinct h.name limit 2"}, {"query": "The University of Chicago-educated author lists three other works in addition to writing The Bridge on the River Kwai.", "cypher": "match (:ENTITY{name:'University of Chicago'}) <- [:Relationship{name:'Graduate School'}]-(x) - [:Relationship{name:'Representative work'}]->(m) where m.name <> 'Mother cheating mother' return distinct m.name limit 3"}, {"query": "What is the Chinese name for the animal with the same wings?", "cypher": "match (:ENTITY{name:' equal wings'}) <- [:Relationship{name:' Chinese name'}]- ((h) - [:Relationship{name:' Chinese name'}]->(x) return distinct x.name"}, {"query": "Please help me find three economists, what are their qualifications?", "cypher": "match (:ENTITY{name:'economic person'}) <- [*]-(m), (m) - [:Relationship{name:'academic degree'}]->(n) return m.name, n.name limit 3"}, {"query": "What is the name of the terrorist attack that took place in a foreign country on November 13, 2010?", "cypher": "match (:ENTITY{name:'November 13, 2010'}) <- [:Relationship{name:' time of occurrence'}]- (p) return p.name"}, {"query": "The name of the famous mountain Tibetan is from which dynasty?", "cypher": "match (:ENTITY{name:'Name'}) - [:Relationship{name:'Name'}]->(n) return n.name as name union all match ((:ENTITY{name:'Name'}) - [:Relationship{name:'Author'}]->(m) return m.name as name"}, {"query": "Can you name 13 online novels?", "cypher": "match (x:ENTITY{name:'network novel'}) <- [:Relationship{name:' type'}]- (n) return n.name limit 13"}, {"query": "Please tell me which government reporting plan has chapters in chapter 8?", "cypher": "match (:ENTITY{name:' eight chapters'}) <- [:Relationship{name:' chapter number'}]- (m) return m.name limit 3"}, {"query": "Zhu Boen was removed from the civil service, what other information?", "cypher": "match (:ENTITY{name:'Zhou's'}) --(m) with m order by m.name where m.name <> 'public servant' return distinct m.name limit 1"}, {"query": "Do you know what chemical has a molecular weight of 400.38?", "cypher": "The name of the function is the same as the name of the function itself."}, {"query": "Can you give me some information about the three levels of relationship of this person, Hategekimana Bonaventure?", "cypher": "match (n:ENTITY{name:'Hategekimana Bonaventure'}) - [*1..3]->(x) where x.name <> 'person' return distinct x.name"}, {"query": "I need to know if the work of Tan Dai is related to a two-tier relationship with less than 1?", "cypher": "match (n:ENTITY{name:' send less than 1'}) - [:Relationship*1..2]->(x) where x.name <>'\u5510' return distinct x.name"}, {"query": "The first is to find out the content of the poem in the second layer of the relationship between the theme and the light bulb.", "cypher": "match (n:ENTITY{name:'theme flashlight'}) - [:Relationship*1..2]->(x) where x.name<>'Symbol' return distinct x.name"}, {"query": "What concerts did Zhang's schoolmates have in 2011?", "cypher": "match (x:ENTITY{name:'Relationship{name:'performer'}]) - (h) return h.name"}, {"query": "What lists did Forbes publish on March 29? Can you list four?", "cypher": "match (:ENTITY{name:'March 29'}) <- [:Relationship{name:' time of publication'}]- (m) return m.name limit 4"}, {"query": "What are the methods used to do this?", "cypher": "match (:ENTITY{name:'requirement analysis'}) - [:Relationship{name:'discipline'}]->(n) return n.name as name union all match (:ENTITY{name:'requirement analysis'}) - [:Relationship{name:'method'}]->(m) return m.name as name"}, {"query": "What kind of profession does a person who believes in the Chinese Communist Party do?", "cypher": "match (:ENTITY{name:'CPC'}) <- [:Relationship{name:'faith'}]-(m),(m) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 1"}, {"query": "Which princes are there in England?", "cypher": "match (p:ENTITY{name:'UK'}) <--(x) --> ((q:ENTITY{name:'Prince'}) return x.name"}, {"query": "What else do you know about Martin Ryle besides that he is British?", "cypher": "match (:ENTITY{name:' Martin Ryle'}) - [:Relationship*1..2]-(p) where p.name <> 'UK' return distinct p.name limit 10"}, {"query": "Tell me, what is Li Zhengya's profession?", "cypher": "match (:ENTITY{name:'Li Chengzai, male, Han, born December 1964, native of Nungjiang, Heilongjiang, joined the party in August 1986, entered the party in January 1991, university education\u3002'})"}, {"query": "In which publishing houses did Mujiwara's books appear?", "cypher": "match (:ENTITY{name:'Mu\u7389\u534e'}) <- [:Relationship{name:'author'}]- ((n) - [:Relationship{name:'publisher'}]->(q) return distinct q.name limit 2"}, {"query": "I need to know three jobs for Claude Chagrin, you know?", "cypher": "match (:ENTITY{name:'Claude Chagrin'}) - [:Relationship{name:'profession'}]-> (h) return distinct h.name limit 3"}, {"query": "I'm not sure who is the collaborator of Max Martini.", "cypher": "match (:ENTITY{name:' Max Martini'}) <- [:Relationship{name:' collaborator'}]- (x) return distinct x.name"}, {"query": "In addition to accounting and computer science, what are the two main departments of Zhongning Vocational Secondary School?", "cypher": "match (n:ENTITY{name:'Zhouning Vocational Secondary School'}) -[:Relationship{name:'Main Faculty'}]->(h) where h.name <> 'Accounting major' and h.name <> 'Computer major' return distinct h.name limit 2"}, {"query": "I recently heard that Beccaro Daniel is an Italian footballer, can you tell me four more things about him?", "cypher": "match (n:ENTITY{name:'Beccaro Daniel'}) -->(h) with h order by h.name where h.name <> 'Italy' and h.name <> 'football' return h.name limit 4"}, {"query": "The minimum pressure of a storm is 993 millimeter (Pa); 29.32 inHg?", "cypher": "The name of the game is \"Relationship\" (Relationship: Minimum Pressure)"}, {"query": "The International English School of Harbin Global ATS has opened the Advanced Placement Testing Training School in addition to the main department and recommended three other important departments.", "cypher": "match (:ENTITY{name:'Harbin Global Athletic International English School'}) <- [:Relationship{name:'Chinese name'}]-(p),(p) - [:Relationship{name:'Main Faculty'}]->(q) where q.name <> 'Athletic Training Centre ' return distinct q.name limit 3"}, {"query": "So let me find the hash function expression.", "cypher": "match (:ENTITY{name:'hash function'}) - [:Relationship{name:'expression'}]->(m) return distinct m.name"}, {"query": "Do you know what kind of novels Christina wrote?", "cypher": "match (:ENTITY{name:'\u989c\u6db5_Christina'}) <- [:Relationship{name:' author'}]-(m),(m) - [:Relationship{name:' Chinese name'}]->(p) return distinct p.name limit 1"}, {"query": "Speaking of the six Virgo stars, what is their nationality?", "cypher": "match (:ENTITY{name:' virgin'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' nationality'}]->(n) return m.name, n.name limit 6"}, {"query": "He died on October 8, 1935 (Ethyl year). His name and occupation is?", "cypher": "match (:ENTITY{name:'1935 (((Ethyl) October 8'}) <- [:Relationship{name:'date of death'}]- ((h) - [:Relationship{name:'profession'}]->(m) return distinct h.name, m.name"}, {"query": "What is the shortest relationship path between the two layers of the butterflyfish and the elephant-nosed guyfish?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Pete's butterflyfish'}) - [:Relationship*..2]-(b:ENTITY{name:'Pete's elephant-nosed fish'})) return count ((p)"}, {"query": "The food labels and the food labels are not the only thing that can be used to sell food.", "cypher": "match (:ENTITY{name:'110 outlet'}) - [:Tag{name:'label'}]-> (n) with n order by n.name where n.name <> 'food' return n.name"}, {"query": "The tribal team that is leading the battle is the one that is the most popular.", "cypher": "match (:ENTITY{name:'view'}) <- [:Relationship{name:'team leader'}]- (q) return distinct q.name"}, {"query": "What is the Chinese dramatic vocal range that is close to the southern curve?", "cypher": "match (:ENTITY{name:'Southern Song'}) <- [:Relationship{name:'closest to the South Song'}]-(m), (m) - [:Relationship{name:'type'}]->(n) where n.name='one of the vocal cords' return distinct m.name"}, {"query": "Help me find the five species of pine trees", "cypher": "match (:ENTITY{name:'Pine Tree'}) <- [:Relationship{name:'Pine Tree'}]-(m) return distinct m.name limit 5"}, {"query": "I wonder what the Chinese name of Love You Seven Day is?", "cypher": "match (:ENTITY{name:'Love you seven day'}) <- [:Relationship{name:'foreign language name'}]- ((q) - [:Relationship{name:'Chinese language name'}]->(m) return distinct m.name"}, {"query": "Do you know what subfamily the spider belongs to?", "cypher": "match ((:ENTITY{name:'forked long-spotted spider'}) - [:Relationship{name:'sub-species'}]-> (m) return m.name"}, {"query": "Can you please tell me about the 0.15% of the ingredients of the plant-based herbal medicine called herbal cabinet?", "cypher": "match (:ENTITY{name:'0.15% spinach'}) --(m) with m order by m.name where m.name <> 'spinach' return m.name"}, {"query": "This 0-12 month visual stimulation card: black and white card books, which age group is targeted?", "cypher": "match ((:ENTITY{name:'0-12 months visual stimulation card: black and white card'}) - [:Relationship{name:'reader object'}]-> (m) return m.name"}, {"query": "Do you know which game makes foxes, mages, angels and fairies the main characters?", "cypher": "match (:ENTITY{name:'\u4ee4\u72d0,\u9b54\u5c0a,\u5929\u4f7f,\u7384\u4ed9,'}) <- [:Relationship{name:'main character'}]- (n) return distinct n.name"}, {"query": "What are the businesses of the Hideido Group?", "cypher": "match (:ENTITY{name:'resident group'}) - [:Relationship{name:'subsidiary'}]->(m) return distinct m.name"}, {"query": "Can you write about Kim Ji-young's three most representative works besides the great women are all in the line of duty and the golden years?", "cypher": "match (n:ENTITY{name:'\u91d1\u5fd7'}) - [:Relationship{name:'main works'}]->(h) with h order by h.name where h.name <> 'Great women are obeyed' and h.name <> 'light years' return h.name limit 3"}, {"query": "Can you list some of the trains that are rated as air-conditioned fast?", "cypher": "match (:ENTITY{name:' air conditioning fast'}) <- [:Relationship{name:' train grade'}]- (p) return distinct p.name"}, {"query": "Do you know about the progress of human rights in China in 2009?", "cypher": "match (:ENTITY{name:'Progress in China's human rights case in 2009'}) --(p) with p order by p.name return p.name"}, {"query": "What asteroids are associated with asteroid 4996 and what are their respective labels? Please list them in order of number of asteroid labels.", "cypher": "The name of the asteroid is derived from the name of the asteroid's namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name of its namesake, the name, the name of its namesake, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name, its name"}, {"query": "The first Chinese name of the two-faced princess of the Three Kingdoms?", "cypher": "match (:ENTITY{name:'Triple-faced Princess'}) - [:Relationship{name:'Chinese name'}]-> (p) with p order by p.name return p.name limit 1"}, {"query": "Can you please provide the density of NH4 2 SO3?", "cypher": "The name of the function is the same as the name of the function itself."}, {"query": "What kind of jobs do people born in Yangon do?", "cypher": "match (:ENTITY{name:'Anhui Province's Yangon City'}) <- [:Relationship{name:'place of birth'}]- ((h) - [:Relationship{name:'profession'}]->(p) return distinct p.name"}, {"query": "What is the work of this person who is a citizen of the People's Republic of China? Can you name 10?", "cypher": "match (:ENTITY{name:'People's Republic of China'}) <- [:Relationship{name:'nationality'}]- ((h) - [:Relationship{name:'representative work'}]->(p) return h.name skip 1 limit 10"}, {"query": "Can you list two books in simplified Chinese?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "What do you know about the drug 4-[4-methacrylate] methylate?", "cypher": "match (:ENTITY{name:'4-[4-methacrylate]methacrylate'}) --(h) with h order by h.name where h.name <> 'drug' return h.name"}, {"query": "What is the name of a parameter that is created in Microsoft SQL Server?", "cypher": "match (:ENTITY{name:'Microsoft SQL Server'}) <- [:Relationship{name:' created in '}]- (h) return h.name"}, {"query": "Can you tell me the 10 career secrets of this man who believes in communism?", "cypher": "match (:ENTITY{name:' Communism'}) <- [:Relationship{name:' faith'}]-(h) - [:Relationship{name:' profession'}]->(n) return n.name order by n.name limit 10"}, {"query": "What is the numerical sequence number of the agent known as methylphenidate in Chinese?", "cypher": "match (:ENTITY{name:'a-threading'}) <- [:Relationship{name:'s Chinese name'}]- (h) return h.name"}, {"query": "What are the names of people born on the same day as Cavichioli Matheus, and what are the labels on each of them?", "cypher": "The following is a list of all the different ways CAVICHIOLI MATHEUS is credited in the database:"}, {"query": "I'm not sure what kind of job a Chinese person would do.", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(h) - [:Relationship{name:'profession'}]->(m) return distinct m.name limit 1 The name of the match is not known."}, {"query": "Ask a 3S overview: What is the term for the world that controls everything?", "cypher": "match (x:ENTITY{name:' will take care of everything in the world'}) <- [:Relationship{name:'3S overview'}] - (p) return p.name"}, {"query": "The book is called The Pity Arrow.", "cypher": "match (:ENTITY{name:'pleased arrow'}) <- [:Relationship{name:'book name'}]- ((n) - [:Relationship{name:' pricing'}]->(q) return distinct q.name"}, {"query": "What other departments are there besides the horticulture department at Liaoning Agricultural Vocational Technology College?", "cypher": "match (:ENTITY{name:'Lenin Agricultural Vocational Technology College'}) - [:Relationship{name:'main faculty'}]->(n) where n.name <> 'gardening faculty' return n.name"}, {"query": "Help me find three provincial protection units.", "cypher": "match (:ENTITY{name:'provincial protected unit'}) <- [:Relationship{name:'protection level'}]-(m) return distinct m.name limit 3"}, {"query": "The first is that the government has not been able to disclose the facts of the case.", "cypher": "match (:ENTITY{name:'100 days of variation'}) --(m) with m order by m.name return m.name"}, {"query": "Can you tell me about some sports events and transportation specials started by Xi'an?", "cypher": "match (p:ENTITY{name:'Xian'}) <- [:Relationship{name:'starting point'}]- (q) return distinct q.name"}, {"query": "What games and dramas are in the 18th ban category?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Check out the other 6 stories in this film, Accident on the Mountain Road.", "cypher": "match (:ENTITY{name:'accident on the mountain road'}) - [:Relationship*1..2]-(p) where p.name <> 'film' return p.name limit 6"}, {"query": "The following is a list of the top 10 most popular websites in the world.", "cypher": "match (n:ENTITY{name:'Thank you'}) - [:Relationship*1..2]->(x) where x.name <>'seven-word clause' return distinct x.name"}, {"query": "Help me find 10 species of ants in the family.", "cypher": "match (:ENTITY{name:' umbrella family'}) <- [:Relationship{name:' family'}]-(m) return distinct m.name limit 10"}, {"query": "What chemical is the EINECS number 200-254-4?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "What books are published by China Forestry Press? 2 recommendations?", "cypher": "match (:ENTITY{name:'China Forestry Publishing'}) <- [:Relationship{name:'China Forestry Publishing'}]- (p) return p.name limit 2 The name of the game is the same as the name of the game."}, {"query": "The Chinese graduate from the People's University of China, Le Pen College, is calling out, \"Hello, is there a name for you?\"", "cypher": "match (:ENTITY{name:'People's University of China, Leibniz Academy'}) <- [:Relationship{name:'Graduate School'}]-(n) - [:Relationship{name:'representative work'}]->(m) return distinct n.name, m.name"}, {"query": "What is the shortest path between the airspace station and the spacecraft control system?", "cypher": "match p=shortestpath (((a:ENTITY{name:'airspace control station'}) - [*..2]-(b:ENTITY{name:'spacecraft control system'})) return p"}, {"query": "Chanida Pandey is from which country and what are her works?", "cypher": "match (:ENTITY{name:'Christie's'}) - [:Relationship{name:'nationality'}]->(n) return n.name as name union all match (:ENTITY{name:'Christie's'}) - [:Relationship{name:'represents work'}]->(m) return m.name as name"}, {"query": "What is the most important information about the development of the whole brain in infants and toddlers aged 0 to 10 years?", "cypher": "match (:ENTITY{name:'0-1 years old infant toddler full brain development'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "Can you recommend five novels that are still in print?", "cypher": "match (:ENTITY{name:'linked'}) <- [:Relationship{name:'status'}]- (p) return distinct p.name limit 5"}, {"query": "I'm not sure what companies are based in Shanghai.", "cypher": "match (:ENTITY{name:' Shanghai'}) <- [:Relationship{name:' Headquarters'}]- (h) return distinct h.name"}, {"query": "Please help me find out who wrote the five books on history.", "cypher": "match (:ENTITY{name:'history book'}) <- [*]-(m), (m) - [:Relationship{name:'author'}]->(n) return m.name, n.name limit 5"}, {"query": "Can you list the three types of complex supply ships?", "cypher": "match (:ENTITY{name:'complete supply ship'}) <- [:Relationship{name:'ship type'}]- (h) return h.name limit 3"}, {"query": "Can you list me 10 of the main achievements of this Chinese man?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(p) - [:Relationship{name:'main achievements'}]->(q) return q.name order by q.name limit 10"}, {"query": "I would like to know 5 personal details about footballer Evanilson Lemos da Silva.", "cypher": "match (n:ENTITY{name:'Evanilson Lemos da Silva'}) - [:Relationship*]->(x) where x.name <> 'footballer' return distinct x.name limit 5"}, {"query": "I wonder what Bridget Marquand's work is representative of?", "cypher": "Match (:ENTITY{name:'Brigitte Marquardt, female, born September 25, 1973 in Tillamook, Oregon, USA, American actress and producer\u3002'}) <-[:Describe{name:'description'}]-(h),(h) -[:Relationship{name:'represents work'}]->(x) return distinct x.name"}, {"query": "What are the main awards for this school that is fully public? Can you tell me 10 things?", "cypher": "match (:ENTITY{name:'publicly owned full secondary school'}) <- [:Relationship{name:'category'}]-(n) - [:Relationship{name:'main award'}]->(m) return m.name order by m.name limit 10"}, {"query": "Can you tell me one of the professions of this man?", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(h) - [:Relationship{name:'profession'}]->(x) return x.name order by x.name limit 1"}, {"query": "Do you know anyone who is a haematologist who graduated from the same university?", "cypher": "match (:ENTITY{name:' blood pathologist'}) <- [:Relationship{name:' profession'}]- ((m), (m) - [:Relationship{name:' graduate school'}]->(n) where n.name='Hawaiian University' return m.name"}, {"query": "The Eastern Mary's Hospital for Women is a gynecological hospital. What is the description for?", "cypher": "match (:ENTITY{name:'Eastern Mary's Hospital for Women is a women's hospital\u3002'}) <-[:Describe{name:'label'}]-(p) return max(p.name)"}, {"query": "Help me find an encyclopedic plant in the family of the crocuses", "cypher": "match (:ENTITY{name:'Copper'}) <- [:Relationship{name:'Copper'}]-(m), (m) - [:Relationship{name:'Copper'}]->(n) where n.name='Encyclopedia' return distinct m.name"}, {"query": "The most commonly used formulas for this are: \"Shark\" and \"Rice\" and \"Shark\" and \"Shark\" and \"Shark\" and \"Shark\" and \"Shark\" and \"Shark\" and \"Shark\" and \"Shark\".", "cypher": "match (n:ENTITY{name:'mostly'}) -->(h) with h order by h.name where h.name <> 'mostly' and h.name <> 'mostly' return h.name limit 3"}, {"query": "The team that has five Brazilian players in it?", "cypher": "match (:ENTITY{name:'Brazil'}) <- [:Relationship{name:'nationality'}]-(x) - [:Relationship{name:'former team'}]->(q) return q.name order by q.name limit 5"}, {"query": "Can you name a few of the most representative works of the Yantai language?", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'dynasty'}]- ((m) - [:Relationship{name:'represented work'}]->(h) return distinct h.name"}, {"query": "What did you say LTRO was?", "cypher": "match (:ENTITY{name:'LTRO'}) <--(n) return n.name The name of the match is"}, {"query": "I want to send a letter to Shengjun Shi from Nan Yue to Beijing to introduce his work on the two-tier relationship.", "cypher": "match (n:ENTITY{name:' send the teacher from South Yue out into Beijing'}) - [:Relationship*1..2]->(x) where x.name <>'seven rules' return distinct x.name"}, {"query": "What is the name of the Russian minority living in the North Caucasus?", "cypher": "match (:ENTITY{name:'Russian minority'}) <- [:Relationship{name:'nation'}]-(m), (m) - [:Relationship{name:'residence area'}]->(n) where n.name='North Caucasus region' return distinct m.name"}, {"query": "Please list the main achievements of Elisabeth Foster-Nietzsche.", "cypher": "match (:ENTITY{name:'Elizabeth Foster-Nietzsche'}) - [:Relationship{name:' major achievements'}]-> (m) return distinct m.name"}, {"query": "What is the shortest path of connection between the east and west layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'West'}) - [*..3]-(b:ENTITY{name:'West'})) return count ((p)"}, {"query": "I wonder what the labels are for the computer game category?", "cypher": "match (:ENTITY{name:' computer game'}) <- [:Relationship{name:' classification'}]-(n) - [:Tag{name:' tag'}]->(m) return distinct m.name limit 3"}, {"query": "The restaurant recommends 0048 banana, what is the name of the restaurant?", "cypher": "The game is based on the game of the same name."}, {"query": "I'm going to give you four old plays, who wrote them?", "cypher": "match (:ENTITY{name:'old-fashioned drama'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'writer'}]->(n) return m.name,n.name limit 4"}, {"query": "Please tell me what is his name? Tell me 10 things.", "cypher": "match (:ENTITY{name:'Tang-Tang' ((March 6, 1470 - January 7, 1524), born February 4, early in the sixth year of the Qing Dynasty, and died on December 2, in the second year of the Qing Dynasty."}, {"query": "What other jobs can a Chinese person do besides being a business founder?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(n) - [:Relationship{name:'profession'}]->(h) where h.name <> 'founder of the company' return distinct h.name limit 5"}, {"query": "The snow leopard is a vertebrate, and I have five pieces of information about it in two layers.", "cypher": "match (:ENTITY{name:' snow shadow wolf'}) - [*1..2]-(p) where p.name <> ' vertebrate Armenian' return distinct p.name limit 5"}, {"query": "Please find out if you have more than 14 years of experience in forex gold trading or a 1-4 level relationship with Liu Yue Hua, the best trainer in Forex and Asian Forex Network.", "cypher": "match (n:ENTITY{name:'\u60a6\u534e'}) - [*1..4]->(x) where x.name<>' has over 14 years of experience in foreign exchange gold trading, three consecutive years of CCTV Securities Information Channel special invitation to the wire trader 2007-2009 three consecutive years of CCTV Securities Information Channel, telecommunications broadcasting room, financial channel Xiamen Exchange, Forex.com, Asia FX Network's best trainer."}, {"query": "I want 5 tips on how to play the game within the 2nd level of the Fantastic Four.", "cypher": "match (n:ENTITY{name:'Relationship*1..22]->(x) where x.name <> 'wisdom game' return distinct x.name limit 5"}, {"query": "What is the main department of the Faculty of Physics and Space Sciences at Western Michigan University?", "cypher": "match (:ENTITY{name:'School of Physics and Space Sciences of Western China University of Minsk'}) - [:Relationship{name:'Main Faculty'}]-> (x) return x.name skip 3"}, {"query": "What is the relationship between the second tier label and Mibenbo?", "cypher": "match (n) <- [:Tag*2{name:'tag'}]- ((p:ENTITY{name:'Miiwenbo'}) return distinct n.name"}, {"query": "Can you say that 10 positions are the chairman of the Standing Committee of Dermatology of the Chinese Medical Association?", "cypher": "match (:ENTITY{name:' Chairman of the Standing Committee on Dermatology of the Chinese Medical Association'}) --(x) return distinct x.name limit 10"}, {"query": "When is the last date for the resolution of the 1/8 taxi parked in the Yangon region reported by journalists?", "cypher": "match ((:ENTITY{name:'1\u00b78 Changzhou area taxi parked incident'}) - [:Relationship{name:'resolved date'}]-> (m) return m.name"}, {"query": "What is the abbreviation for internal rate of return?", "cypher": "match (:ENTITY{name:' internal rate of return'}) - [:Relationship{name:' abbreviated '}]->(m) return distinct m.name"}, {"query": "The 1206 studios mentioned in the report belong to which company?", "cypher": "match ((:ENTITY{name:'1206 studio'}) - [:Relationship{name:'belongs to'}]-> (q) return q.name"}, {"query": "How many employees does Sichuan Electrical Co. Ltd. have?", "cypher": "match (:ENTITY{name:' Sichuan Electrical Co. Ltd'}) - [:Relationship{name:' Practitioner'}]-> (m) return distinct m.name"}, {"query": "What is the Chinese name for Candida Albicans?", "cypher": "match (:ENTITY{name:'Candida Albicans'}) <- [:Relationship{name:'English name'}]-(x),(x) - [:Relationship{name:'Chinese name'}]->(q) return distinct q.name"}, {"query": "The report was published by the government's official website, the People's Daily.", "cypher": "match (:ENTITY{name:'Zhang Hongyi'}) <- [:Relationship{name:'then mayor'}]- (m) return distinct m.name"}, {"query": "So let's say the prime factor is 7 times 11 times 13.", "cypher": "match (m:ENTITY{name:'7\u00d711\u00d713'}) <- [:Relationship{name:'the prime factor is '}] - (x) return x.name"}, {"query": "How much is the price of a ticket to the White Dragon Mountain?", "cypher": "Match (:ENTITY{name:'Bei Longshan'}) - [:Relationship{name:'Ticket price'}]->(m) return distinct m.name"}, {"query": "What does the flower of the four heads of the flower represent?", "cypher": "match (:ENTITY{name:'the four horsemen'}) - [:Relationship{name:'May'}]-> (m) return m.name"}, {"query": "How about a hundred ways to do something that will fail, have you heard?", "cypher": "match (:ENTITY{name:'100 ways to do exactly what you want to do and it will fail'}) --(q) with q order by q.name return q.name"}, {"query": "What is the number of words in 400,000 words of literature?", "cypher": "The name of the function is the same as the name of the function itself."}, {"query": "What is the shortest path between the middle and the old floors?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'old gutter village'}) - [*..2]-(b:ENTITY{name:'old gutter village'})) return count ((p)"}, {"query": "Can you find me two books on economics published by the Mechanical Industries Publishing House?", "cypher": "match (:ENTITY{name:' publishing house of the mechanical industry'}) <- [:Relationship{name:' publishing house'}]- ((m), (m) - [:Relationship{name:' packaging house'}]->(n) where n.name='packaging house' return m.name limit 3"}, {"query": "Can you tell me the statistics on the number of Chinese teachers?", "cypher": "match (:ENTITY{name:'teacher'}) <--(m), (m) --(n) where n.name='China' return count ((distinct m.name)"}, {"query": "What are the other names of the nine islands?", "cypher": "match (:ENTITY{name:'Nine Chapters Islands'}) <- [:Relationship{name:' geographical location'}]-(m),(m) - [:Relationship{name:' alias'}]->(x) return distinct x.name limit 2"}, {"query": "The most advanced Type 053H frigate in the world today, which country built it?", "cypher": "match ((:ENTITY{name:'053H type frigate'}) - [:Relationship{name:'building nation'}]-> (p) return p.name"}, {"query": "Please tell me what is a weapon with eight bullets for five rounds?", "cypher": "match (p:ENTITY{name:'5 hair'}) <- [:Relationship{name:'capacity'}]- (n) return n.name limit 8"}, {"query": "What was the Roman law?", "cypher": "match (:ENTITY{name:' Roman law [general name of the state of Roman slavery]'}) - [:Relationship{name:' exists in '}]->(m) return distinct m.name"}, {"query": "What songs are on the album Express?", "cypher": "match (:ENTITY{name:'Express'}) <- [:Relationship{name:' album to which belongs'}]- (q) return distinct q.name"}, {"query": "How about 20 comprehensive hospitals?", "cypher": "match (:ENTITY{name:'comprehensive hospital'}) <- [:Relationship{name:'type of hospital'}]->(n) where n is not null return distinct n.name limit 20"}, {"query": "Can you find out 5 facts about Zhang Zhengyi's stage related to Zhang Zhengyi?", "cypher": "match (n:ENTITY{name:'square'}) - [*]->(x) where x.name<>'square' return distinct x.name limit 5"}, {"query": "What was his occupation before he died on March 8, 1958? Name two?", "cypher": "match (:ENTITY{name:'8 March 1958'}) <- [:Relationship{name:'date of death'}]-(h) - [:Relationship{name:'occupation'}]->(p) return distinct p.name limit 2"}, {"query": "What happened at the Malaysian border with Vietnam, 153 nautical miles from the island of Tur-Jung in Zhejiang Province?", "cypher": "match (:ENTITY{name:'153 nautical miles off the coast of the Malay Peninsula, Vietnam, on the island of Tu Jue, Jiangsu Province'}) <- [Relationship{name:'place of occurrence'}]- (q) return distinct q.name"}, {"query": "Do you know the five messages of Serugendo Arafat of Rwanda?", "cypher": "match (n:ENTITY{name:'Serugendo Arafat'}) - [*]->(x) where x.name<>'Rwanda' return distinct x.name limit 5"}, {"query": "Can you name a few players who have been suspended by the league?", "cypher": "match (:ENTITY{name:' middle name'}) <- [:Relationship{name:' executive'}]- ((h) - [:Relationship{name:' alias'}]->(p) return distinct p.name"}, {"query": "He's a very good man, and he's a very good man.", "cypher": "match (:ENTITY{name:' his town'}) --(q) with q order by q.name return q.name limit 5"}, {"query": "I want to know the personal information of a three-tier relationship with a Chinese name Bakagui Iris.", "cypher": "match (n:ENTITY{name:'Bakaragi-Aris'}) - [*1..3]->(x) where x.name <>'s Chinese name' return distinct x.name"}, {"query": "Can you name one model produced by Audi?", "cypher": "match (:ENTITY{name:'Audi'}) <- [:Relationship{name:'production manufacturer'}]- (m) return distinct m.name"}, {"query": "Tell me about the five female professions you know?", "cypher": "match (:ENTITY{name:' female'}) <- [:Relationship{name:' gender'}]-(x) - [:Relationship{name:' profession'}]->(n) return n.name order by n.name limit 5"}, {"query": "Do you know which books are available in the social sciences? Can you name five?", "cypher": "The following is a list of the most commonly used tags for the search terms:"}, {"query": "What exhibitions have you had in Beijing, list 20?", "cypher": "match (:ENTITY{name:'Beijing'}) <- [:Relationship{name:'Exhibition city'}]- (h) return h.name limit 20"}, {"query": "Have you heard about the game, 09 Warren Servant Dress Up in New Dresses, in detail?", "cypher": "match (:ENTITY{name:'09 Warren G. Harding's new dress'}) --(m) with m order by m.name where m.name <> 'game' return m.name"}, {"query": "As the dean of the medical school at Jeju University, can you give us 10 things about his career?", "cypher": "match (:ENTITY{name:'Dean of the Faculty of Medicine, University of Gifu'}) <- [:Relationship{name:'position'}]-(m) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 10"}, {"query": "What are the top five Japanese occupations?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'nationality'}]-(x),(x) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 5"}, {"query": "The poem is written in the fourth level of the relationship between the dog and the Lord.", "cypher": "match (n:ENTITY{name:'10 from poem\u00b7dog from lord'}) - [*1..4]->(x) where x.name <>'poem' return distinct x.name limit 5"}, {"query": "Can you give me five links to the four-tiered relationship of Apsto Julian, born in Galatasaray?", "cypher": "match (n:ENTITY{name:'Aposto Julian'}) - [*1..4]->(x) where x.name<>'Garatz' return distinct x.name limit 5"}, {"query": "How does the school that won the best entrepreneurial design award in Quanzhou set up its main department?", "cypher": "match (:ENTITY{name:'Relationship's Best Design Award for the Springfield Youth'}) <- [Relationship's Best Design Award for the Springfield Youth's Best Design Award]- ((h) - [Relationship's Best Design Award for the Springfield Youth's Best Design Award]-> ((q) return distinct q.name"}, {"query": "The second male protagonist in the Japanese anime anime series SEED, and the sequel to SEED DESTINY, is one of the three main protagonists in the series.", "cypher": "match (:ENTITY{name:'Aslan Zala' ((Athrun Zala), the second main character in the Japanese anime series SEED, and one of the three main characters in the sequel SEED DESTINY."}, {"query": "I'm not sure if you can tell me the inside story of the three-tier relationship between Yuri and Yumi.", "cypher": "match (n:ENTITY{name:'memory\u00b7fifteen six'}) - [*1..3]->(x) where x.name <> 'repeated' return distinct x.name"}, {"query": "What is the name of the castle?", "cypher": "match (n:ENTITY{name:'Castle landscape'}) --(x) return distinct x.name"}, {"query": "Check out the basic relationship of Antoine Lyndon, the football player, level 6 and give me five.", "cypher": "match (n:ENTITY{name:'Antoine Lyndon'}) - [*1..6]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "Can you find me two Hong Kimbo directed TV series and introduce them?", "cypher": "match (:ENTITY{name:'\u6d2a\u91d1\u5b9d'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 2 The name of the match is not specified in the match description."}, {"query": "Can you please provide 10 pieces of jewelry?", "cypher": "match (:ENTITY{name:'Jane Love* series of letters'}) <- [:Relationship{name:' series'}]- (h) return h.name limit 10"}, {"query": "Can you list the representative works of an actor?", "cypher": "match (:ENTITY{name:' actor'}) <- [:Relationship{name:' profession'}]-(x),(x) - [:Relationship{name:' representing work'}]->(m) return distinct m.name limit 1"}, {"query": "What are the Chinese names of the new series?", "cypher": "match (:ENTITY{name:'borrowing a corpse'}) - (p) with p order by p.name return p.name limit 5"}, {"query": "The film is being distributed by which company and who is the lead actor?", "cypher": "match (x:ENTITY{name:'the red ribbon'}),(x) - [:Relationship{name:'the issuing company'}]-> (m), (x) - [:Relationship{name:'the lead actor'}]->(n) return m.name,n.name"}, {"query": "What are the different labels of people who are the same height as Streutker Jens Jurn?", "cypher": "The following is a list of the most commonly used tags for the game of basketball:"}, {"query": "Can you tell me what is the main achievement of this person born in Jilin City, Jilin Province?", "cypher": "match (:ENTITY{name:'Jilin City'}) <- [:Relationship{name:'Born'}]-(m),(m) - [:Relationship{name:'Major achievement'}]->(x) return x.name skip 2 limit 1"}, {"query": "What about the personal circumstances of Bourhis Jonathan, born in Tours?", "cypher": "match (n:ENTITY{name:'Bourhis Jonathan'}) - [*1..3]->(x) where x.name<>'Tour' return distinct x.name"}, {"query": "What is the meaning of the phrase \"no sun, no moon, no time limit\"?", "cypher": "match (:ENTITY{name:' indicates no date, no time period'}) --(x) return distinct x.name"}, {"query": "Can you recommend a hotel with 7 rooms?", "cypher": "Match (:ENTITY{name:'room'}) <- [:Relationship{name:'room'}]- (n) return n.name limit 7 This is a list of all the different ways The House of the Dead is credited in the database."}, {"query": "Tell me about your understanding of 1-methyltetrahydroceta-5-sulfur.", "cypher": "match (:ENTITY{name:'1-methyl tetrahydro-5-sulphate'}) --(p) with p order by p.name return p.name"}, {"query": "I'm wondering what the criteria are for something with a tensile strength \u2265 550? Can you name one?", "cypher": "match (:ENTITY{name:'\u2265550'}) <- [:Relationship{name:'resistance to pulling'}]-(x),(x) - [:Relationship{name:'standard'}]->(q) return q.name order by q.name limit 1"}, {"query": "How many Japanese have graduated from Kagoshima University?", "cypher": "match (:ENTITY{name:'Kagoshima University'}) <- [:Relationship{name:' Graduate School'}]- (mn) - [:Relationship{name:' Nationality'}]->(n:ENTITY{name:'Japan'}) return mn.name"}, {"query": "The top 10 tags for the 009 Super Rescue?", "cypher": "match (:ENTITY{name:'009 super big rescue'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 10"}, {"query": "Do you know the name of the tournament that will be held from July 16 to July 24?", "cypher": "match (:ENTITY{name:'July 16 to July 24'}) <- [:Relationship{name:'Holding time'}]- (q) return distinct q.name"}, {"query": "He died in 1986 in a car accident in the city of San Francisco, California.", "cypher": "match (:ENTITY{name:'1986'}) <- [:Relationship{name:'date of death'}]-(h),(h) - [:Relationship{name:'profession'}]->(q) where q.name <> 'actor' return distinct q.name limit 5"}, {"query": "Can you analyze the causes of the Russo-Turkish War of 1568 that you learned from your world history lessons?", "cypher": "match ((:ENTITY{name:'1568 Russo-Turkish War'}) - [:Relationship{name:'cause'}]-> (m) return m.name"}, {"query": "In three words, tell me about this man George Orwell.", "cypher": "match (:ENTITY{name:' George Ewell'}) --(h) with h order by h.name return h.name limit 3"}, {"query": "Can you tell me which of the artists' representative works is the first one?", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}]- (m) return distinct m.name limit 3"}, {"query": "I would like to know about the personal situation of Solbakken Staale, who is a football player with no more than six levels of relationships?", "cypher": "match (n:ENTITY{name:'Solbakken Staale'}) - [*1..6]->(x) where x.name <> 'football' return distinct x.name limit 5"}, {"query": "Can you tell me about the profile of Campanella Francesco's relationship with the football player in the second tier?", "cypher": "match (n:ENTITY{name:'Campanella Francesco'}) - [*1..2]->(x) where x.name <> 'football' return distinct x.name"}, {"query": "Can you tell me the English name of the fox subject, \"Fox\"?", "cypher": "match (:ENTITY{name:'fox'}) <- [:Relationship{name:'\u5c5e'}]-(q) - [:Relationship{name:'English name'}]->(p) return distinct p.name limit 1"}, {"query": "The following is a list of the top three links in Shinko Yao's relationship with Shinzo Abe:", "cypher": "match (n:ENTITY{name:'sinkyoo'}) - [:Relationship*1..2]->(x) where x.name <>'finished' return distinct x.name"}, {"query": "What is the reality show produced by HKTVB besides a suspicious romance?", "cypher": "match (:ENTITY{name:'HKTVB'}) <- [:Relationship{name:'production company'}]-(m) where m.name <> 'suspicious affair' return distinct m.name"}, {"query": "Can you explain in one sentence 0792?", "cypher": "match (:ENTITY{name:'0792'}) --(h) with h order by h.name return h.name limit 1"}, {"query": "I have a problem finding three Lin Min-shui non-citizens with relevant information about China.", "cypher": "match (:ENTITY{name:'\u6797\u68a6\u6cc9'}) --(m) with m order by m.name where m.name <> 'China' return distinct m.name limit 3"}, {"query": "What are the main ingredients and ingredients of silk powder?", "cypher": "match (:ENTITY{name:' silk powder'}) - [:Relationship{name:' main ingredient'}]->(n) return n.name as name union all match (:ENTITY{name:' silk powder'}) - [:Relationship{name:' accessory'}]->(m) return m.name as name"}, {"query": "What songs are full of lyrics in Chinese?", "cypher": "match (:ENTITY{name:' in Chinese'}) <- [:Relationship{name:' fill-in'}]-(p) - [:Relationship{name:' in Chinese name'}]->(n) return distinct n.name"}, {"query": "I'm wondering if you know who the founder of the company that is part of the Roman.Quint group is?", "cypher": "match (:ENTITY{name:'Roman.Quinn Group'}) <-[:Relationship{name:' company'}]-(h),(h) -[:Relationship{name:' founder'}]->(x) return x.name order by x.name limit 1"}, {"query": "Can you tell me about the type of relationship that is contained in the three-story luxury apartment in Chambly?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:' Luxury Apartments in Chambly'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "The administrative district of the town is 88.1 square kilometers, how much more can it be? I want to know 3 types.", "cypher": "match (:ENTITY{name:'\u4e61'}) <- [:Relationship{name:'administrative district category'}]-(x),(x) - [:Relationship{name:'area'}]->(n) where n.name <> '88.1 sq km' return distinct n.name limit 3"}, {"query": "Can you name three substances that are insoluble in water?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Please tell me one Himesh Reshammiya's profession.", "cypher": "match (:ENTITY{name:'Himesh Reshammiya'}) - [:Relationship{name:'profession'}]-> (m) return distinct m.name limit 1"}, {"query": "What else does an actor in the Golden Bull of the Cassanova Cave represent besides this one?", "cypher": "match (:ENTITY{name:'Taurus'}) <- [:Relationship{name:'Star'}]-(h) - [:Relationship{name:'represented works'}]->(p) where p.name <> 'Cassano Ruins' return distinct p.name limit 10"}, {"query": "The five other functions of the Pyongyang County Development and Reform Bureau that are not strategic in terms of social development are given.", "cypher": "match (:ENTITY{name:'Pyongyang County Development and Reform Bureau'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'functions'}]->(x) where x.name <> 'strategic in social development' return distinct x.name limit 5"}, {"query": "Do you know which case was the subject of the arrest operation on the night of September 8, 1996?", "cypher": "match (:ENTITY{name:'September 8, 1996 at night'}) <- [:Relationship{name:'capture time'}]- (x) return distinct x.name"}, {"query": "What was the occupation of the person who died in 1370?", "cypher": "match (:ENTITY{name:'1370'}) <- [:Relationship{name:'date of death'}]-(m),(m) - [:Relationship{name:'occupation'}]->(h) return distinct h.name"}, {"query": "Do you know what is nicknamed sulfur diethylamide?", "cypher": "match (n:ENTITY{name:'Sulfur dioxide diethylamide'}) - [:Relationship{name:' alias'}]-> (h) return distinct h.name"}, {"query": "Can you tell me about the type of relationship that is contained in the nine villages in the five levels?", "cypher": "match path=(n) <- [:Relationship*5]-(p:ENTITY{name:'\u4e5d\u53e3\u6751'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What are the most representative works of Mongolian writers? Can you list five?", "cypher": "match (:ENTITY{name:'Mongolian'}) <- [:Relationship{name:'ethnicity'}]-(m),(m) - [:Relationship{name:'representative work'}]->(h) return distinct h.name limit 5"}, {"query": "What is the most recent relationship between Step Up K208 and Step Up K128?", "cypher": "match?p=shortestpath (((a:ENTITY{name:'step by step K208'}) - [r:Relationship]-(b:ENTITY{name:'step by step K128'}))?return?count(p)"}, {"query": "Who is the founder of Hangzhou Hong Kong Enterprise Management Limited?", "cypher": "match (:ENTITY{name:'Hangzhou Huangkang Enterprise Management Limited'}) - [:Relationship{name:'founder'}]-> (q) return q.name skip 1"}, {"query": "Can you tell me how you feel?", "cypher": "match (:ENTITY{name:'Thank you'}) --(h) return h.name order by h.name"}, {"query": "What is the name of the tree?", "cypher": "match (:ENTITY{name:'Dawgwood'}) - [:Relationship{name:'door'}]->(n) return n.name as name union all match (:ENTITY{name:'Dawgwood'}) - [:Relationship{name:'program'}]->(m) return m.name as name"}, {"query": "Who is Lu Zhizheng's son? What are his main achievements? Can you name three?", "cypher": "match (:ENTITY{name:'lu\u5c55\u5f15'}) <- [:Relationship{name:'son'}]-(p),(p) - [:Relationship{name:'main achievement'}]->(q) return q.name order by q.name limit 3"}, {"query": "Can you find me three Chinese literature publications published by the Chinese Union of Literary Publishers?", "cypher": "match (:ENTITY{name:' Chinese character pronounced like 'publish'}) <- [:Relationship{name:' publish'}]-(x),(x) - [:Relationship{name:' book name'}]->(q) return distinct q.name limit 3"}, {"query": "The following is a list of all the resources for Lake Okeechobee, a flat-topped mountain with a subtropical monsoon climate.", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name<>'Subtropical monsoon climate' return distinct x.name"}, {"query": "Do you know the types of relationships in Li Fang Village that are involved in the three levels?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'\u793c\u82b3\u6751'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1 This is a list of all the different ways REL is credited in the database."}, {"query": "I would like to know the other 4 information in the 2nd level of this game.", "cypher": "match (:ENTITY{name:'Relationship*1..2]-(p) where p.name <> 'game' return p.name limit 4"}, {"query": "What is the difference between indisputable near and anti-near?", "cypher": "match (:ENTITY{name:'undoubtedly'}) - [:Relationship{name:'near term'}]->(n) return n.name as name union all match (:ENTITY{name:'undoubtedly'}) - [:Relationship{name:'undoubtedly'}]->(m) return m.name as name"}, {"query": "United Airlines What is his slogan?", "cypher": "match (:ENTITY{name:'United Airlines'}) <- [:Relationship{name:'company name'}]-(p) - [:Relationship{name:'company slogan'}]->(n) return distinct n.name"}, {"query": "The first is the use of the term \"science-based 1-hydrogen sulfide\".", "cypher": "match (:ENTITY{name:'1-\u5168\u5df1'}) --(m) with m order by m.name where m.name <> 'science' return m.name"}, {"query": "I want all the information about the two-tier relationship and the Kazakh citizen Baginsky B.", "cypher": "match (n:ENTITY{name:'Baginsky B'}) - [*1..2]->(x) where x.name<>'Kazakhstan' return distinct x.name"}, {"query": "Please tell me the name of the explosion that occurred at 13:10 on October 17, 2011.", "cypher": "match (:ENTITY{name:'17 October 2011 at 13:10'}) <- [:Relationship{name:'date'}]- (n) return n.name"}, {"query": "The following are the five profiles of Tsing Tzu-hsiang, a Chinese politician who is currently serving as the President of the People's Republic of China.", "cypher": "match (n:ENTITY{name:'switched off'}) - [*]->(x) where x.name <>'clean' return distinct x.name limit 5"}, {"query": "What else is there in the fridge besides the mustard?", "cypher": "match (:ENTITY{name:'cold disc'}) <- [:Relationship{name:'classification'}]-(m) where m.name <> 'mustard palm' return distinct m.name"}, {"query": "The University of Wudianliulng, founded in 1959 and awarded the top 10 schools in the city for education and research, has no honour now.", "cypher": "match (p:ENTITY{name:'1959'}) <- [:Relationship{name:'time of foundation'}]-(h) - [:Relationship{name:'main award'}]->(m) where m.name <> 'top ten schools in the city for education and research' return distinct m.name limit 1"}, {"query": "Please introduce me to George Awell, and I think the top 10 are good.", "cypher": "match (:ENTITY{name:' George Ewell'}) --(m) return m.name order by m.name limit 10"}, {"query": "Which TV series won the 12th Hong Kong Film Golden Globe?", "cypher": "match (:ENTITY{name:'The 12th Hong Kong Film Award for Best Feature Film'}) <- [*]-(m), (m) - [:Relationship{name:' the lead character'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "Do you know what the main achievements of the Central Party Committee member and deputy mayor of Zhejiang District in Chongqing are?", "cypher": "match (n:ENTITY{name:'Central Zheng County Party Committee member, deputy county chairman'}) <-[:Relationship{name:'main achievements'}]-(x),(x) -->(q) return distinct x.name limit 1"}, {"query": "I need to know the profile of Mehovic Anis in Luxembourg in the 3rd level of relations?", "cypher": "match (n:ENTITY{name:'Mehovic Anis'}) - [:Relationship*1..3]->(x) where x.name<>'Luxembourg' return distinct x.name"}, {"query": "He was the first student of the Shanghai Foreign Language University's Suzhou River Bay Experiment Middle School to win the 2016 8th grade district test in Mathematics. He also received five other awards.", "cypher": "match (:ENTITY{name:'Shanghai University of Foreign Languages's Su River Bay Experimental Middle School'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'main award'}]->(p) where p.name <> '2016 Eighth grade district test all-district first in mathematics' return distinct p.name limit 5"}, {"query": "Give me four foreign historical events and tell me when they happened.", "cypher": "match (:ENTITY{name:'foreign historical event'}) <--(m), (m) - [:Relationship{name:'time'}]->(n) return m.name, n.name limit 4"}, {"query": "Can you tell me about a significant event that happened to a person?", "cypher": "match (:ENTITY{name:'person'}) <- [:Tag{name:'tag'}]-(q),(q) - [:Relationship{name:'important event'}]->(h) return distinct h.name limit 1"}, {"query": "Do you know where the Arctic Monkey is from?", "cypher": "match (:ENTITY{name:'Third Arctic'}) <- [:Relationship{name:'Chinese name'}]- ((n) - [:Relationship{name:'origin'}]->(q) return distinct q.name"}, {"query": "Please help me find the three films released by Gahei Films, who are the directors?", "cypher": "match (:ENTITY{name:'Kahn Film Company'}) <--(m), (m) - [:Relationship{name:'director'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What are the books of the Whangam-Ting-Mot Publishing House and what are the labels of each book?", "cypher": "The following is a list of the most commonly used tags for the game of poker: match (n:ENTITY{name:'Relationship{name:'publishing'}}) ->(:ENTITY) <-[Relationship{name:'publishing'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c DESC"}, {"query": "I'm wondering which ship's construction unit is the Jiangxi Jiangxi Shipyard?", "cypher": "match (:ENTITY{name:'Jiangxijiang new shipyard'}) <- [:Relationship{name:'building unit'}]- (x) return x.name"}, {"query": "I wonder what the name of an accident is that killed three passengers on the spot?", "cypher": "match (:ENTITY{name:'3 passengers killed on the spot'}) <- [:Relationship{name:'consequences'}]- (q) return q.name"}, {"query": "I want to know what are the two categories of nutmeg black sugar toast apart from bread and toast?", "cypher": "match (n:ENTITY{name:'Relationship{name:'classified'}]->(h) where h.name <> 'bread' and h.name <> 'toast' return distinct h.name limit 2"}, {"query": "The main prize is the World Women's Volleyball Championship, which has won twice.", "cypher": "match (:ENTITY{name:'World Championship of Volleyball for Women 2 times'}) <- [:Relationship{name:'main award'}]- (h) return distinct h.name"}, {"query": "Can you tell me everything you know about Megawati Sugano?", "cypher": "match (:ENTITY{name:'Megawatty Sugano'}) - [:Relationship*1..3]-(p) return distinct p.name limit 10"}, {"query": "Find out where the three species of watermelon are distributed.", "cypher": "match (:ENTITY{name:'Pumpkin'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'Distributed area'}]->(n) return m.name,n.name limit 3"}, {"query": "Can you tell me about one relationship that is a two-tier relationship between the factory and the store in Taipei?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Thailand after-shop'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Did you have trouble asking about the three-layer relationship in the Bloodlines novel written by the Godfather Wizard?", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name<>'Goddess witch witch' return distinct x.name"}, {"query": "Who is the same height as Mihael Hertelendi, and who has a tattoo on each of them?", "cypher": "The following is a list of the most commonly used tags for the game of basketball:"}, {"query": "Tell me about the Type 072III tank landing ship in my military domain?", "cypher": "match (:ENTITY{name:'072III tank landing ship'}) --(h) with h order by h.name where h.name <> 'military' return h.name"}, {"query": "Can you name 17 players who used to play right-footed?", "cypher": "match (:ENTITY{name:'right foot'}) <- [:Relationship{name:'usual foot'}]- (q) return q.name limit 17"}, {"query": "Do you know what the title of the Chinese TV show that touched the Chinese audience is?", "cypher": "match (:ENTITY{name:'Central TV channel's Yue touching Chinese eye'}) <- [:Relationship{name:' Selection unit'}]- (x) return distinct x.name"}, {"query": "What are the major awards Kimberly Hill has won? Can you name five?", "cypher": "match (:ENTITY{name:'Kimberly Hill(born November 30, 1989) is an American volleyball player. She is a member of the United States women's national volleyball team and Turkish club Vakifbank."}, {"query": "Could you tell me what the Chinese meaning of The Sadly Beautiful Love of an Emperor is?", "cypher": "match (:ENTITY{name:'The sadly beautiful love of an emperor'}) <- [:Relationship{name:'foreign name'}]- (x) return x.name"}, {"query": "Do you know this man Bert Van Tuyle?", "cypher": "The name of the game is \"Bert Van Tuyle\"."}, {"query": "Can you name three of Vanessa Cobham's representative works for me?", "cypher": "match (:ENTITY{name:'Vanessa Cobham'}) - [:Relationship{name:'represents work'}]-> (h) return distinct h.name limit 3"}, {"query": "Can you recommend 6 songs that are 3 minutes and 37 seconds long?", "cypher": "match (:ENTITY{name:'3 min 37 seconds'}) <- [:Relationship{name:' song length'}]- (m) return m.name limit 6"}, {"query": "Who is the subject of the forensic research?", "cypher": "match (:ENTITY{name:'Forensic science [discipline name]'}) - [:Relationship{name:' research object'}]->(m) return distinct m.name"}, {"query": "The following 5 things about the Ming Dynasty's Emperor in the Four Levels of Relationship?", "cypher": "match (n:ENTITY{name:'Yongshushitsu King'}) - [*1..4]->(x) where x.name<>'Ming\u671d' return distinct x.name limit 5"}, {"query": "What chemical has a molecular weight of 192? Give me four.", "cypher": "match (:ENTITY{name:'192'}) <- [:Relationship{name:'molecular mass'}]- (p) return p.name limit 4 The name of the match is the same as the name of the other match."}, {"query": "How about a description of the magic treasure trove with five labels for 0-2 year olds?", "cypher": "match (:ENTITY{name:'0-2 years old magic treasure trove'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 5"}, {"query": "How about a complete description of 100 classic literature in less than 10 words?", "cypher": "match (:ENTITY{name:'100 classical literature collections'}) --(n) with n order by n.name return n.name limit 10"}, {"query": "Do you know what food and gold foil are in tier 3 labeling?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'gold roll'}) return distinct n.name"}, {"query": "The Chinese writer, who is also a writer, has written about his achievements in the field of Chinese literature.", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(x),(x) - [:Relationship{name:'main achievements'}]->(q) return q.name order by q.name limit 5"}, {"query": "The book you are looking at, the Northeast Military Factory Spiritual Archives, how many words are in the book?", "cypher": "match ((q:ENTITY{name:'Northeast Military Factory Spiritual Archive'}) - [:Relationship{name:'word count'}]-> (p) return p.name"}, {"query": "The game is the same size as the Monster Brothers games, and what are the labels for each game?", "cypher": "match (n:ENTITY{name:'monster three brothers'}) - [:Relationship{name:'game size'}]->(:ENTITY) <-[:Relationship{name:'game size'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) BY ORDER c DESC"}, {"query": "I'm going to show you a representative work by Terry Russo.", "cypher": "match (:ENTITY{name:'Tri Lucio'}) - [:Relationship{name:'represents work'}]-> (m) return distinct m.name limit 1"}, {"query": "Can you name three more names for this thing that was built in 1974?", "cypher": "match (m:ENTITY{name:'1974'}) <- [:Relationship{name:'time of construction'}]- ((q) - [:Relationship{name:'alias'}]->(x) return x.name order by x.name limit 3"}, {"query": "What are the main awards of the 6th secondary school in Amida-ku, Taipei?", "cypher": "match (:ENTITY{name:'Sixth secondary school, Amida district, Taipei, Japan, formerly known as Amida sixth secondary school, Taipei Steel Group Limited, Japan) \u25bd'}) <- [:Describe{name:'description'}]-(h) - [:Relationship{name:'main award'}]->(x) return distinct x.name"}, {"query": "Please provide the names of the people who were born in the same place as Zhou Heilen. What are the labels of each person? Please list them in order of their number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'Zhou Heilen'}) - [:Relationship{name:'birthplace'}]->(:ENTITY) <- [:Relationship{name:'birthplace'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Help me find a soup made with red beans.", "cypher": "match (:ENTITY{name:' red bean'}) <- [:Relationship{name:' main ingredient'}]-(m), (m) - [:Relationship{name:' classification'}]->(n) where n.name='pumpkin' return distinct m.name"}, {"query": "What is the boiling point of coconut oil?", "cypher": "match (:ENTITY{name:'broth'}) - [:Relationship{name:'broth'}]->(n) return n.name as name union all match (:ENTITY{name:'broth'}) - [:Relationship{name:'broth'}]->(m) return m.name as name"}, {"query": "The game is a game of chance, but it is also a game of chance.", "cypher": "match (n) - [:Relationship*2{name:' type'}]->(p:ENTITY{name:' game'}) RETURN distinct n.name limit 5"}, {"query": "Please tell me about the hotel that has a label relationship with Marwa Hostel on the 2nd floor?", "cypher": "The name of the game is \"Machine\" (Machine)"}, {"query": "What is the list of the people who were released on January 19, 2016?", "cypher": "match (:ENTITY{name:'19 January 2016'}) <- [:Relationship{name:'published time'}]- (n) return distinct n.name"}, {"query": "How about a 100 TV HD player with five words?", "cypher": "match (:ENTITY{name:'100TV HD player'}) --(q) with q order by q.name return distinct q.name skip 1 limit 5"}, {"query": "What is TCL i880?", "cypher": "match (n:ENTITY{name:'TCL i880'}) --(x) return x.name"}, {"query": "I want to know about the five smartwatches produced by Guangdong Little Genius Technology Co., Ltd.", "cypher": "match (n:ENTITY{name:'small genius phone watch'}) - [*]->(x) where x.name <>'Canton Small Genius Technology Co. Ltd' return distinct x.name limit 5"}, {"query": "If you were born on December 17, 1992, do you have a tattoo that represents your work?", "cypher": "match (:ENTITY{name:'December 17, 1992'}) <- [:Relationship{name:'date of birth'}]- ((q),(q) - [:Relationship{name:'represents work'}]->(n) return distinct n.name limit 1"}, {"query": "What is the shortest path between the two layers of Doctor Who and Godzilla 920?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortestpaths'}) - [*..2]-(b:ENTITY{name:'shortestpaths'})) return count ((p)"}, {"query": "What are the 10 occupations of people born in October 1964?", "cypher": "match (:ENTITY{name:'September 1964'}) <- [:Relationship{name:' date of birth'}]-(n),(n) - [:Relationship{name:' occupation'}]->(q) return n.name order by n.name,q.name limit 10"}, {"query": "Tell me, what is the heyday of the profession in the 21st century?", "cypher": "match (:ENTITY{name:'Twenty-first Century'}) <- [:Relationship{name:'Primordial'}]- (q) return distinct q.name"}, {"query": "What are the tags of these people? Please sort them out in order of number of tags.", "cypher": "The following is a list of all the different ways Qualter Daniel is credited in the database:"}, {"query": "Which universities and which postgraduate departments of the Graduate School of Sichuan Teachers' University belong to the same category and which labels are used by each school, please sort by the number of labels for each school from small to large.", "cypher": "match (n:ENTITY{name:'Sichuan Teaching University Graduate School Graduate Department'}) - [:Relationship{name:'category'}]->(:ENTITY) <- [:Relationship{name:'category'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) ORDER BY c"}, {"query": "Do you know the chemical formula for total foliar green protein?", "cypher": "match ((:ENTITY{name:' total leaf green'}) - [:Relationship{name:' chemical formula'}]-> (x) return x.name"}, {"query": "What are the game labels? Can you tell me 3?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "What are the books published by Tianjin University Press? When were they published? Can you list 5 good ones?", "cypher": "match (:ENTITY{name:' Tianjin University Press'}) <- [:Relationship{name:' Tianjin University Press'}]-(h),(h) - [:Relationship{name:' time of publication'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you help me find three FPS games and their developers?", "cypher": "match (:ENTITY{name:'FPS'}) <- [:Relationship{name:'game type'}]-(h),(h) - [:Relationship{name:'developer'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "I need five pieces of information about the two Sinhalese villagers in Yamuna?", "cypher": "match (n:ENTITY{name:'send countrymen to the jungle'}) - [*]->(x) where x.name <>'\u4e07\u91cc' return distinct x.name limit 5"}, {"query": "How many people have a hotline set up by the National Intellectual Property Office?", "cypher": "match (h:ENTITY{name:'Setting by the National Intellectual Property Office'}) <- [:Relationship{name:'unit'}]- (m) return m.name"}, {"query": "Can you give me a medical book about the 80 different types of double-layered relationships that occur with thyroid dysfunction?", "cypher": "match (n:ENTITY{name:'80 how to do about thyroid dysfunction'}) - [:Relationship*1..2]->(x) where x.name <> 'medicine' return distinct x.name"}, {"query": "Do you know which school Xu Zhifei is the best teacher in?", "cypher": "match (:ENTITY{name:'Huang Yue'}) <- [:Relationship{name:'Excellent teacher'}]- (q) return q.name limit 5"}, {"query": "What is the first article by Zhang Jiwa?", "cypher": "match (:ENTITY{name:' Zhang Zhihua [West double-edited as co-chair]'}) --(q) return q.name order by q.name limit 1"}, {"query": "Can you list the five types of relationships that are involved in the two layers?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'once upon a time'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5"}, {"query": "Which film won the Best Actor Award at the Venice Film Festival?", "cypher": "Match (:ENTITY{name:'Bentley's Award for Best Actor in a Television Series - Drama)"}, {"query": "What are the main achievements of Yuen Yanqing?", "cypher": "match (:ENTITY{name:'\u91ca\u5ef6, Henan, born 28 April 1972, Han Chinese \u3014'}) <- [:Describe{name:'description'}]-(n),(n) - [:Relationship{name:'main achievements'}]->(q) return distinct q.name limit 5"}, {"query": "What are the TV series produced by SBS in South Korea?", "cypher": "Match (n:ENTITY{name:'SBS TV station in South Korea'}) <- [:Relationship{name:'production company'}]- (h) return h.name"}, {"query": "The University of Tokyo recommends 10 excellent departments in addition to craft and artistic design.", "cypher": "match (:ENTITY{name:'public office university'}) <- [:Relationship{name:'category'}]-(m) - [:Relationship{name:'main faculty'}]->(q) where q.name <> 'process artwork design' return distinct q.name limit 10"}, {"query": "The top 10 Chinese names for the world's literature analysis?", "cypher": "match (:ENTITY{name:'world literature analysis'}) - [:Relationship{name:'Chinese name'}]-> (x) with x order by x.name return distinct x.name limit 10"}, {"query": "He was awarded the title of the Hanchuan City Language Standardisation Demonstration Park by the school, which was built in 1984.", "cypher": "match (:ENTITY{name:'1984'}) <- [:Relationship{name:'time of founding'}]-(q) - [:Relationship{name:'main award'}]->(m) where m.name <> 'Hanchuan City Language Standardisation Demonstration Park' return distinct m.name limit 5"}, {"query": "Who is this man's ex-girlfriend, who works at Seed Music Limited?", "cypher": "match (:ENTITY{name:'Seed Music Ltd'}) <- [:Relationship{name:'record company'}]-(h) - [:Relationship{name:'ex-girlfriend'}]->(n) return distinct n.name"}, {"query": "The Princess of the Temple is a fantasy novel, do you know how many words it has in total?", "cypher": "match ((:ENTITY{name:' Princess of the Temple'}) - [:Relationship{name:' total number of characters'}]-> (x) return x.name"}, {"query": "The number of fighter jets has reached over 700, please?", "cypher": "match (:ENTITY{name:'700 more than'}) <- [:Relationship{name:'number'}]- (m) return distinct m.name"}, {"query": "What chemical is 22224-41-5?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "I would like to know about the 21st century curriculum published by five higher education publishers: Introduction to the five-tier relationship of numerical approximation.", "cypher": "match (n:ENTITY{name:'Teachable for 21st century curriculum: numerical approximation'}) - [*1..5]->(x) where x.name <> 'Higher education publisher' return distinct x.name limit 5"}, {"query": "Please give me a personal introduction to the relationship between five Syrian Sleman Youssef in the sixth tier?", "cypher": "match (n:ENTITY{name:'Sleman Youssef'}) - [*1..6]->(x) where x.name<>'Syria' return distinct x.name limit 5"}, {"query": "You know Mad Max is an Australian production, besides that, there are 5 messages in its 3 layers.", "cypher": "match (:ENTITY{name:'Mad Max'}) - [*1..3]-(p) where p.name <> 'Australia' return distinct p.name limit 5"}, {"query": "What is the original name of the 1972 Container Customs Convention that we follow?", "cypher": "match ((:ENTITY{name:'Container Customs Convention of 1972'}) - [:Relationship{name:'original name'}]-> (n) return n.name"}, {"query": "The earthquake's magnitude was 37.6 degrees north latitude and 102.3 degrees east longitude.", "cypher": "match (:ENTITY{name:'Northeast 37.6 degrees, east 102.3 degrees'}) <- [:Relationship{name:'Earthquake latitude'}]- (x) return x.name"}, {"query": "Do you have any titles for the Tianjin-born writer?", "cypher": "match (p:ENTITY{name:' Tianjin'}) <- [:Relationship{name:' place of birth'}]- ((m) - [:Relationship{name:' representing work'}]->(h) return distinct h.name limit 2"}, {"query": "What plants can be used as medicines by the sub-plant?", "cypher": "match (:ENTITY{name:' by sub-plant gate'}) <- [:Relationship{name:' by sub-plant gate'}]-(m), (m) - [:Tag{name:' label'}]->(n) where n.name='drug' return distinct m.name limit 10"}, {"query": "What chemical has a melting point of 49-51\u00b0C?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you name a few earthquakes of magnitude 6.1?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "The people who were born in Shandong East Luizhou Province called you \"Mummy\", what are your main achievements?", "cypher": "match (:ENTITY{name:'Santondo East Road \u76ca\u90fd\u5e9c ((now Santondo Qingzhou) '}) <-[:Relationship{name:'Born'}]-(p),(p) -[:Relationship{name:'Major achievements'}]->(m) return distinct p.name,m.name"}, {"query": "Can you summarize the 2012 research report on the cable industry in three words?", "cypher": "match (:ENTITY{name:'2012 Wire Cable Industry Research Report'}) --(h) with h order by h.name return h.name limit 3"}, {"query": "Can you tell me what kind of relationship the dolls are involved in in the three layers?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'confused doll'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "The following is a list of the top 20 South Korean small business towns in order of their population, in order of their population.", "cypher": "match (:ENTITY{name:'South Korea small trading city'}) - [*1..3]-(p) return p.name order by p.name DESC limit 20"}, {"query": "The following is a list of articles related to Niyonzima Haruna, a football player from Nigeria.", "cypher": "match (n:ENTITY{name:'Niyonzima Haruna'}) - [*1..4]->(x) where x.name<> 'football' return distinct x.name limit 5"}, {"query": "Can you name the three main departments of the Laning College Sports College?", "cypher": "match (:ENTITY{name:'Lenin College Sports College'}) <- [:Relationship{name:'Chinese name'}]-(n) - [:Relationship{name:'main faculty'}]->(h) return h.name order by h.name limit 3"}, {"query": "Please tell me the company profile of the five organizations that are part of Shanghai Hebei Area High Construction Engineering Holdings Limited.", "cypher": "match (n:ENTITY{name:'Shanghai HSW High Construction Engineering Co. Ltd'}) - [*]->(x) where x.name<>'organizing entity' return distinct x.name limit 5"}, {"query": "What are the three other names of the battle besides social events and tags?", "cypher": "match (n:ENTITY{name:'Battle of Dauphin Mountain'}) - [:Tag{name:'tag'}]->(h) where h.name <> 'social event' and h.name <> 'war' return distinct h.name limit 3"}, {"query": "Please help me find five folk songs, who are the original singers?", "cypher": "match (:ENTITY{name:' ethnicity'}) <- [*]-(m) ,(m) - [:Relationship{name:' song originally sung'}]->(n) return m.name,n.name limit 5"}, {"query": "I would like to know about the information related to Spachuck Ruben in the 2nd level relationship?", "cypher": "match (n:ENTITY{name:'Spachuck Ruben'}) - [*]->(x) where x.name<>'Spachuck Ruben' return distinct x.name limit 5"}, {"query": "You don't know who the representative of the song is?", "cypher": "match (:ENTITY{name:'Relationship'}) <- [Relationship{name:'representative work'}]- (m) return distinct m.name"}, {"query": "What games were released on 21-09-25? Can you list 7?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "The exclusion type is one of the four great seal stones of traditional Chinese pottery. What else do you know about the Yellow Scroll Stone?", "cypher": "match (:ENTITY{name:'\u9ec4\u7a3f\u8001\u77f3'}) - [*1..2]-(p) where p.name <> 'One of the four great seals of Chinese traditional cuisine' return p.name limit 4"}, {"query": "Can you name two people who have a relationship with Sean Ray?", "cypher": "The name of the game is \"Return\" (RETURN)"}, {"query": "Tell me what is the second level of the relationship between talking and fighting games?", "cypher": "Match (n) - [:Tag*2{name:'tag'}]->(p:ENTITY{name:'fighting game'}) RETURN distinct n.name limit 5"}, {"query": "The book is priced at what you know?", "cypher": "match (:ENTITY{name:' internal audit'}) <- [:Relationship{name:' book name'}]- ((n) - [:Relationship{name:' pricing'}]->(q) return distinct q.name"}, {"query": "The minimum number of pencils is 10, what is the minimum total?", "cypher": "match (:ENTITY{name:'10'}) <- [:Relationship{name:'outdoor painting'}]- ((n) - [:Relationship{name:'total painting'}]->(m) return min(m.name)"}, {"query": "Can you tell me all the information about the relationship between the two layers of the relationship that is involved in the rape?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'switched off'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you please list 16 of the authors of the novels that are under A-level contracts?", "cypher": "match (n:ENTITY{name:'A-level contract'}) <- [:Relationship{name:'authorized status'}]- (p) return p.name limit 16"}, {"query": "Can you tell me what the size of the infrared touch screen type is?", "cypher": "match (:ENTITY{name:'infrared touch screen'}) <- [:Relationship{name:'screen type'}]-(h) - [:Relationship{name:'product size'}]->(m) return distinct m.name limit 4"}, {"query": "Can you tell me which year is the leap year on the lunar calendar?", "cypher": "Match (:ENTITY{name:'three years'}) <- [:Relationship{name:'year'}]- (h) return h.name"}, {"query": "Can you recommend three mainland Chinese films?", "cypher": "match (:ENTITY{name:'Mainland China'}) <- [:Relationship{name:'producer area'}]- (n) return n.name limit 3"}, {"query": "Can you find the sites created by the three generations?", "cypher": "match (:ENTITY{name:'\u5143\u4ee3'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'geographical location'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "The first prize winner of the China Flower Show, what other three awards has he won?", "cypher": "match (:ENTITY{name:'painter'}) <- [:Relationship{name:'profession'}]-(h) - [:Relationship{name:'main achievement'}]->(n) where n.name <> 'China flower painting exhibition first class prize' return distinct n.name limit 3"}, {"query": "The geographer of which dynasty was Xu Xuan?", "cypher": "match (:ENTITY{name:'Xu San'}) - [:Relationship{name:'at the time'}]->(n) return n.name"}, {"query": "I would like to know which other two stations of the Pudong-Liangyan Mountain Reservoir Railway pass through, besides Fuzhou City and Lin Bridge?", "cypher": "match (n:ENTITY{name:'Mennatayu-Hanyang Mountain Reservoir Railway'}) - [:Relationship{name:'Passing by site'}]->(h) with h order by h.name where h.name <> 'Fuji City' and h.name <> 'Lingbridge' return h.name limit 2"}, {"query": "Do you know all the details of the relationship between Nikola Dlincic and the two?", "cypher": "The following pages link to The Unknown:"}, {"query": "What are the three occupations of Liu?", "cypher": "match (:ENTITY{name:'Liang Imping, male, Han, born March 1970, born in Liaoning, Jinzhou, participated in work in July 1993, joined the Party in June 1997, university degree\u3002'})"}, {"query": "What other names are there for the drug, besides Tamoxifen and Tamoxetine?", "cypher": "match (n:ENTITY{name:'Atosetine'}) - [:Relationship{name:'alias'}]->(h) where h.name <> 'Tomoxetine' and h.name <> 'Tomoxetine' return distinct h.name limit 1"}, {"query": "I'm not sure if you're interested in the artwork, but I'm not sure if you're interested in the artwork.", "cypher": "match (:ENTITY{name:'sandbush'}) <- [:Relationship{name:'s Chinese name'}]- ((p),(p) - [:Relationship{name:'s representative work'}]->(q) return distinct q.name"}, {"query": "I'm not sure if you're familiar with the film, but I'm curious to know what other works the director has.", "cypher": "match (q:ENTITY{name:'\u9ec4\u5de8\u9f99'}) <- [:Relationship{name:'director'}]- (x) return x.name"}, {"query": "What is the shortest path between the village of Wang Fu Bay and the village of Yangtai?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Village of the King of Fujian'}) - [*..2]-(b:ENTITY{name:'Village of the King of Fujian'})) return count ((p))"}, {"query": "What profession does the person born in 1951 have besides being a famous calligrapher? Give five results.", "cypher": "match (:ENTITY{name:'1951'}) <- [:Relationship{name:'date of birth'}]-(m) - [:Relationship{name:'profession'}]->(h) where h.name <> 'famous calligrapher' return distinct h.name limit 5"}, {"query": "What else do you know about the University of T\u00fcbingen besides the public university?", "cypher": "match (:ENTITY{name:'University of T\u00fcbingen'}) - [:Relationship*1..2]-(p) where p.name <> 'public university' return p.name limit 10"}, {"query": "Can you tell me about the main achievements of Liang Zhenping?", "cypher": "match (:ENTITY{name:'Liang Yixing'}) - [:Relationship{name:'main achievements'}]-> (n) return n.name order by n.name limit 3"}, {"query": "Please list three characters represented in Violet Noziere's work.", "cypher": "match (:ENTITY{name:'Violet Nozi\u00e8re'}) <- [:Relationship{name:'represents work'}]- (p) return distinct p.name limit 3"}, {"query": "What do people who graduate from supply and distribution schools in Henan Province do for a living?", "cypher": "match (:ENTITY{name:'School of supply and supply in Henan Province'}) <- [:Relationship{name:'Graduate School'}]-(n) - [:Relationship{name:'Profession'}]->(m) return distinct m.name"}, {"query": "Please tell me about the tags of the Zhongshan nationals.", "cypher": "match (:ENTITY{name:'sound record'}) - [:Tag{name:'tag'}]-> (q) return distinct q.name"}, {"query": "I want to know 5 personal details about this guy Jo-ju.", "cypher": "match (n:ENTITY{name:'Jo Yu-chan'}) - [*]->(x) where x.name <> 'person' return distinct x.name limit 5"}, {"query": "Can you tell me about the types of relationships that exist in the two levels of Vente Square?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)"}, {"query": "I'm going to write a list of three 1-amino acids.", "cypher": "match (:ENTITY{name:'1-amino acid'}) --(q) with q order by q.name return q.name limit 3"}, {"query": "Please tell me whose representative work is better for the mother of Moses?", "cypher": "match (x:ENTITY{name:'Relationship{name:'represents work'}]- (q) return q.name order by q.name"}, {"query": "Do you know who is the actress in the movie \"The Sisterhood of the Traveling Pants\"?", "cypher": "match (:ENTITY{name:'the starry night'}) --(n) return distinct n.name"}, {"query": "Where is the origin of the three-colored squirrel?", "cypher": "match (:ENTITY{name:'Triple Squirrel'}) - [:Relationship{name:'Origin'}]->(m) return distinct m.name"}, {"query": "Do you know the Chinese name of the author of the novel 1761699378?", "cypher": "match (:ENTITY{name:'1761699378'}) <- [:Relationship{name:'author'}]-(h),(h) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name limit 1"}, {"query": "Do you have any information on Jonjo Kenny that you can give me?", "cypher": "match (q:ENTITY{name:'John Joe Kenny'}) --(m) return distinct m.name"}, {"query": "What are the works of the same year as the creation of the girl friend of the arrogant heaven? Please help me sort them in the correct order according to the number of labels of each work.", "cypher": "match (n:ENTITY{name:'spoiled girlfriend'}) - [:Relationship{name:'created time'}]->(:ENTITY) <-[:Relationship{name:'created time'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Please help me find three crime movies with the main characters.", "cypher": "match (:ENTITY{name:'crime film'}) <--(m), (m) - [:Relationship{name:'leading actor'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What are the main achievements of students who graduated from Jiangxi Business School?", "cypher": "match (:ENTITY{name:'Jiangxi School of Economics'}) <- [:Relationship{name:' Graduate School'}]- ((n) - [:Relationship{name:' Major achievements'}]->(p) return distinct p.name"}, {"query": "I only remember that the winner of the 72nd Golden Globe Awards for Best Actress in a Musical/Comedy Series was Gina Rodriguez.", "cypher": "match (:ENTITY{name:'Virgin Romance'}) - [:Relationship{name:'Main Award'}]-> (n) with n order by n.name where n.name <> '72nd Golden Globe Awards Television category Musical/comedy series Best actress Gina Rodriguez' return n.name"}, {"query": "Can you recommend the two novels that are being published online in Chinese?", "cypher": "match (:ENTITY{name:'creation Chinese language website'}) <-[:Relationship{name:'linked website'}]-(m) -[:Relationship{name:'Chinese language name'}]->(p) return distinct p.name limit 2"}, {"query": "Who is the originator of the 12P theory in marketing theory?", "cypher": "match ((:ENTITY{name:'12p'}) - [:Relationship{name:'proponent'}]-> (p) return p.name"}, {"query": "Do you know what the name of the game king is in foreign languages?", "cypher": "match (:ENTITY{name:'game king'}) <- [:Relationship{name:'login work'}]-(x),(x) - [:Relationship{name:'foreign language name'}]->(q) return distinct q.name limit 1"}, {"query": "There is a layer 6 of the network conversion protocol called representation layer, what is this gateway?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "What do students who graduated from the photography department at Seoul National University of Arts do?", "cypher": "match (:ENTITY{name:'Seoul University of the Arts' photography department'}) <- [:Relationship{name:' graduate school'}]-(n) - [:Relationship{name:' profession'}]->(m) return distinct m.name limit 1"}, {"query": "The following is a list of the three-layer relationships in the poetic work of the poet Zhang Zhen, the poet who wrote the poem, the painting of the double-headed dragon.", "cypher": "match (n:ENTITY{name:'Picture of the double quotation marks'}) - [*1..3]->(x) where x.name<>'Picture of the double quotation marks is a poetic work by the poet Zhang Zhen;' return distinct x.name"}, {"query": "What is the altitude range of Hainan purple oak trees and where are they now mainly distributed?", "cypher": "match (:ENTITY{name:'Hainan Purple Oak'}) - [:Relationship{name:'Heavenly call upper limit'}]->(n) return n.name as name union all match (:ENTITY{name:'Hainan Purple Oak'}) - [:Relationship{name:'Distributed area'}]->(m) return m.name as name"}, {"query": "Do you know who is the most representative of the artists who are in love with the actress?", "cypher": "match (:ENTITY{name:'relationship'}) <- [Relationship{name:'representative work'}]- (n) return distinct n.name"}, {"query": "Can you list 14 Japanese novels?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'region'}]- (m) return m.name limit 14"}, {"query": "What are the areas of the Shandong Peninsula Cluster of Cities and what are the famous attractions?", "cypher": "match (:ENTITY{name:'Sandong Peninsula city group'}) - [:Relationship{name:'region'}]->(n) return n.name as name union all match (:ENTITY{name:'Sandong Peninsula city group'}) - [:Relationship{name:'famous attractions'}]->(m) return m.name as name"}, {"query": "The NATO code for Operation Allied came from what event?", "cypher": "match (p:ENTITY{name:'Allied operation'}) <- [:Relationship{name:'NATO code'}]- (m) return distinct m.name"}, {"query": "Which bands are in the acid jazz style?", "cypher": "match (:ENTITY{name:'Acid Jazz'}) --(x) return distinct x.name"}, {"query": "What is the Chinese name of Stanley Matthews?", "cypher": "The name of the game is \"Relationship\" (n.e."}, {"query": "Is there any trouble finding the next entertainment film directed by Wang Yuen?", "cypher": "The film was released on DVD in the United States on July 15, 2010, by Warner Bros. Pictures."}, {"query": "Do you have any relationship names for the students' union in the 5th floor of Shenyang Master University?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'Shenyang Teachers College Student Union'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2"}, {"query": "Can you recommend a famous attraction that is open all day?", "cypher": "match (:ENTITY{name:'all day'}) <- [:Relationship{name:'open hours'}]- ((x),(x) - [:Relationship{name:'famous attractions'}]->(n) return distinct n.name limit 1"}, {"query": "In the end, the novel was a story about a couple who wanted to marry you in a two-tiered relationship.", "cypher": "match (n:ENTITY{name:'I wanted to marry you'}) - [:Relationship*1..2]->(x) where x.name <>'complete' return distinct x.name"}, {"query": "Do you know what kind of relationship exists between the two layers of security that are covered in this film?", "cypher": "The following is a list of all the links in the link:"}, {"query": "What are the other occupations of Liu, born in 1922-1998 in Hebei's Dong County, besides being a deputy secretary? List three.", "cypher": "match (:ENTITY{name:'Coward(1922-1998), Hebei Tang County man\u3002'}) <-[:Describe{name:'description'}]-(m) -[:Relationship{name:'profession'}]->(x) where x.name <> 'Deputy secretary' return distinct x.name limit 3"}, {"query": "Please tell me how many times the car body category is 25b, 25g mixed and is currently in green?", "cypher": "match (:ENTITY{name:'25b\u300125g mixed up with green brushes'}) <- [:Relationship{name:'body type'}]- (n) return distinct n.name"}, {"query": "Tell Me a Tale of a Wolf II won the main awards in addition to the Chinese Film Week Golden Lion Award for Best Film and the Best Film at the China American Film Festival.", "cypher": "match (n:ENTITY{name:'Wolf II'}) - [:Relationship{name:'main award'}]->(h) where h.name <> 'Best film of the Chinese Film Week Golden Lion Awards' and h.name <> 'Best film of the Chinese American Film Festival' return distinct h.name limit 1"}, {"query": "What instruments are not recommended to install yourself? Can you list 10?", "cypher": "match (:ENTITY{name:'not recommended to install by yourself'}) <- [:Relationship{name:'installation type'}]- (h) return h.name limit 10"}, {"query": "The film is a tribute to the late Lee Jong-il, who was the first person to be honoured with the award.", "cypher": "match (:ENTITY{name:'sweet to meet you Lee Jung-hyun'}) <- [:Relationship{name:'represents work'}]- (q) return distinct q.name"}, {"query": "Can you help me check out this literary work, Dream Return to Liangsan, how many words is it?", "cypher": "match ((:ENTITY{name:'Relationship{name:'word count'}]-> (q) return q.name)"}, {"query": "The relationship that Giljadan is involved in is one of three levels of relationships.", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Kirjan'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Help me find 10 words that read ibi.", "cypher": "match (:ENTITY{name:'b\u00ec'}) <- [:Relationship{name:'spelling'}]-(m) return distinct m.name limit 10"}, {"query": "I'm looking for a list of famous alumni of Chen Yifei's school.", "cypher": "match (:ENTITY{name:'Chen Yifei'}) <- [:Relationship{name:'known alumni'}]- (n) return distinct n.name limit 1"}, {"query": "Please tell me which four categories of tofu and cheesecake can be classified apart from grilling and baking?", "cypher": "match (n:ENTITY{name:'tofu meat and cheesecake'}) -[:Relationship{name:'category'}]->(h) where h.name <> 'grill' and h.name <> 'oven' return distinct h.name limit 4"}, {"query": "Can you tell me about Zhang's profession?", "cypher": "match (:ENTITY{name:'\u5f20\u7af9\u6e05'}) <--(q) - [:Relationship{name:'profession'}]->(m) return distinct q.name"}, {"query": "Do you know of any chemical that is \u226598% pure?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What is the profession of the writer of the story?", "cypher": "match (:ENTITY{name:'Relationship{name:'profession'}}) - ((q) return distinct q.name limit 3"}, {"query": "I wondered if the time of the expedition: Martherin flew to another message line in the universe of the two-layer relationship?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' time of exploration: Martherin flew into the universe; unfolded '}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 1"}, {"query": "Can you recommend me the top 10 most popular places to visit in Bali?", "cypher": "match (:ENTITY{name:'the top ten most beautiful places'}) - [:Relationship{name:'famous places'}]-> (x) return x.name order by x.name"}, {"query": "What file is located in the root folder under the root directory?", "cypher": "match (:ENTITY{name:'in the root folder under the root directory'}) <- [:Relationship{name:'location'}]- (q) return q.name"}, {"query": "I would like to ask you the first three questions about your blog.", "cypher": "match (:ENTITY{name:'open homepage'}) --(q) return q.name order by q.name limit 3"}, {"query": "I'm looking forward to playing another European game of the same genre with ETC.", "cypher": "match (:ENTITY{name:'Europe'}) <- [:Relationship{name:'game origin'}]-(x),(x) - [:Relationship{name:'game type'}]->(p) where p.name <> 'ETC' return distinct p.name limit 1"}, {"query": "What does summer time mean?", "cypher": "match (:ENTITY{name:'summer time'}) - [:Describe{name:'describe'}]-> (m) return distinct m.name"}, {"query": "Can you tell me who the dragon is?", "cypher": "match (:ENTITY{name:'spoon'}) --(h) return h.name order by h.name"}, {"query": "Can you list the top three articles in the three island newsletter?", "cypher": "match (:ENTITY{name:'Sisi Island'}) --(p) return p.name order by p.name limit 3"}, {"query": "Can you find me three listed companies and tell me when they were founded?", "cypher": "match (:ENTITY{name:'listed company'}) <- [:Relationship{name:'company nature'}]-(h),(h) - [:Relationship{name:'time of establishment'}]->(q) return distinct h.name,q.name limit 3"}, {"query": "Can you name three athletes who are 178 cm tall?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Do you know which family the red-flowered plant belongs to?", "cypher": "match ((:ENTITY{name:' red rose'}) - [:Relationship{name:' genus'}]-> (n) return n.name"}, {"query": "Can you list five famous alumni of pioneering, dedicated schools?", "cypher": "match (:ENTITY{name:' pioneer, dedicate'}) <- [:Relationship{name:' schoolwork'}]- ((m),(m) - [:Relationship{name:' well-known alumni'}]->(p) return distinct p.name limit 5"}, {"query": "The giant crowned warbler belongs to what family and is mainly distributed in which regions?", "cypher": "match (:ENTITY{name:'Relationship{name:'category'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'distribution area'}) ->(m) return m.name as name"}, {"query": "Show me two types of personal information in the three-tier relationship of this person Al-Alaan Rashid?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Al-Alaan Rashid'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 2 This is a list of all the different ways Al-Alaan Rashid is credited in the database."}, {"query": "When was the Guangdong Foreign Language School affiliated to the Foreign Trade University founded? Who is the principal?", "cypher": "match (:ENTITY{name:'Relationship{name:'time of foundation'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'currently rector'}) ->(m) return m.name as name"}, {"query": "Where do the Kanuri live?", "cypher": "match (:ENTITY{name:'Canurians'}) - [:Relationship{name:'residence'}]->(m) return distinct m.name"}, {"query": "I would like to know the details of the organization, the Tair\u0101hara City Education Department, the family education public benefit report, the five-tier relationship between the faculty and the teachers.", "cypher": "match (n:ENTITY{name:'Teachers' group of the Taipei City Education Department's Family Education Public Benefit Report'}) - [*1..5]->(x) where x.name <> 'organizing institution' return distinct x.name"}, {"query": "Do you know of any websites that are affiliated with the third tier of the Lifesize Network?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'lifting net'}) return distinct n.name"}, {"query": "The message of the novel No More Wish Lost Paradise?", "cypher": "match (:ENTITY{name:'No More Wish \u5931\u4e50\u56ed'}) --(x) with x order by x.name where x.name <> 'fantasy novel' return x.name"}, {"query": "What is the aurora borealis? How does it form?", "cypher": "match (n:ENTITY{name:'Southern Lights'}) - [:Relationship{name:'forming conditions'}]->(h) optional match(n) - [:Describe{name:'tags'}]->(x) return h.name,x.name"}, {"query": "Do you know the top 10 jobs that Chinese people do?", "cypher": "match (h:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]- ((p) - [:Relationship{name:'profession'}]->(q) return distinct q.name limit 10"}, {"query": "Can you tell me which game is organized by the Guangdong Provincial Football Association, the Foshan Municipal Sports Bureau?", "cypher": "match (:ENTITY{name:' Guangdong Provincial Football Association, Sports Bureau of Foshan City'}) <- [:Relationship{name:'hosting agency'}]- (h) return h.name"}, {"query": "Do you know which two primary schools in the city of Yamagata have won the most awards besides the provincial green school and the city's five-star school?", "cypher": "match (n:ENTITY{name:' Second Primary School of the City of Xiamen's Ma Store'}) - [:Relationship{name:' Major Award'}]->(h) where h.name <> ' Provincial Green School' and h.name <> ' City Five Star School' return distinct h.name limit 3"}, {"query": "The project is a collaboration between the two companies, and is a collaboration between the two companies.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name<>'' return distinct x.name"}, {"query": "Do you know whose main work is that of the youth that cries out?", "cypher": "match (:ENTITY{name:'that youth that wailed over'}) <- [:Relationship{name:'main work'}]- (h) return distinct h.name"}, {"query": "Please tell me about one of the author's representative works.", "cypher": "match (:ENTITY{name:'writer'}) <- [:Relationship{name:'profession'}]-(p) - [:Relationship{name:'representative work'}]->(x) return x.name order by x.name limit 1"}, {"query": "Can you tell us about the top three representative works of David Carmon?", "cypher": "match (:ENTITY{name:'David Carmon'}) - [:Relationship{name:'represents work'}]-> (x) return x.name order by x.name limit 3"}, {"query": "I would like to know about the English dictionary quotes in this book, besides the 481 pages, published on February 1, 2005, and the other information, you can find me 6 of them.", "cypher": "match (n:ENTITY{name:' English dictionary reference'}) -->(h) with h order by h.name where h.name <> '481 pages' and h.name <> '2005/2/1' return h.name limit 6"}, {"query": "What is the message of Little Ding except the animation?", "cypher": "match (:ENTITY{name:' little pudding'}) --(m) with m order by m.name where m.name <> 'animated image' return distinct m.name limit 1"}, {"query": "The book is priced at $2.99 per book.", "cypher": "match (:ENTITY{name:' design and reconstruction'}) <- [:Relationship{name:' book name'}]- ((n) - [:Relationship{name:' pricing'}]->(q) return distinct q.name limit 3"}, {"query": "What chemical has the CAS number 64-17-5?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "I would like to ask you if you know about the three representative works of this person born in Jiangxi.", "cypher": "match (:ENTITY{name:' Jiangxi'}) <- [:Relationship{name:' birthplace'}]-(x),(x) - [:Relationship{name:' representing work'}]->(h) return h.name order by h.name limit 3"}, {"query": "Please help me find out the names of three politicians, how long have they been in office?", "cypher": "match (:ENTITY{name:'politician'}) <--(m), (m) - [:Relationship{name:'term'}]->(n) return m.name, n.name limit 3"}, {"query": "Does anyone know what the nature of the company is of Sichuan Ryzen Family Limited?", "cypher": "match (:ENTITY{name:'Sichuan Ryzen Family Limited'}) <- [:Relationship{name:'company name'}]-(n) - [:Relationship{name:'company nature'}]->(p) return distinct p.name limit 1"}, {"query": "Can you tell me who is the representative of Chen Chen? Can you tell me 10?", "cypher": "match (:ENTITY{name:'Chen Chen's Cancan'}) <- [:Relationship{name:'Chinese name'}]- ((x) - [:Relationship{name:'representative person'}]->(h) return h.name order by h.name limit 10"}, {"query": "What other job does the group have besides running the party and personnel?", "cypher": "match (n:ENTITY{name:'Conscious group'}) - [:Relationship{name:'Career'}]->(h) where h.name <> 'responsible for party affairs' and h.name <> 'personal affairs' return distinct h.name limit 1"}, {"query": "I'd like to know about Liu Kang [the founder of finite element theory in China, pioneer of computational mathematics research], can you tell me about it?", "cypher": "match (:ENTITY{name:'Qian Kang [founder of Chinese finite element theory, pioneer of computational mathematics research]'}) --(h) return distinct h.name"}, {"query": "What country is the Karelian people from? How many people live there?", "cypher": "match (:ENTITY{name:'Karelian'}) - [:Relationship{name:'category'}]->(n) return n.name as name union all match (:ENTITY{name:'Karelian'}) - [:Relationship{name:'population'}]->(m) return m.name as name"}, {"query": "I need a game about the Agile game Owl Pump for 3 layers of relationships?", "cypher": "match (n:ENTITY{name:'Owl Pumpkin'}) - [*1..3]->(x) where x.name <>'Agile game' return distinct x.name"}, {"query": "Where will the 2013 Rage Against the Machine Pop Awards be held?", "cypher": "Match ((:ENTITY{name:'2013 annual Rage Pop Awards'}) - [:Relationship{name:' location'}]-> (h) return h.name"}, {"query": "How do you describe the 9/11 Cuban Airlines crash in 10 words?", "cypher": "match (:ENTITY{name:'11\u00b74 Cuban Airlines crash'}) --(p) with p order by p.name return p.name limit 10"}, {"query": "What are the Tier 3 protected plants in Yunnan, Tibet and other places?", "cypher": "match (:ENTITY{name:'Yunnan, Tibet (Metohija) }) <-[:Relationship{name:'Distribution area'}]-(m), (m) -[:Relationship{name:'Protection level'}]->(n) where n.name='3 level' return distinct m.name"}, {"query": "I would like to know what other important information is in the 2014 Ningbo City Government Work Report besides the four reports by former Mayor Liu Zhuo?", "cypher": "match (:ENTITY{name:'Ningbo City Government Work Report 2014'}) --(m) with m order by m.name where m.name <> 'Lu Zhuyu' return distinct m.name limit 4"}, {"query": "The story of the 012 Mayan calendar.", "cypher": "match (:ENTITY{name:'012 Maya chronicle'}) --(h) with h order by h.name return h.name"}, {"query": "The 127 hours have a rubber label feature?", "cypher": "match (:ENTITY{name:'127 hours'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "What is the shortest word for the method and the rules of poetry?", "cypher": "match (:ENTITY{name:'The method and rules of composition of poetry\u3002'}) <-[:Relationship{name:'interpretation'}]-(m) return min(m.name)"}, {"query": "What chemical has a molecular mass of 140.57?", "cypher": "The name of the function is the name of the function itself."}, {"query": "The following is a list of 7 industrial products and their characteristics.", "cypher": "match (:ENTITY{name:'Industrial product'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'attribute'}]->(n) return m.name, n.name limit 7"}, {"query": "Cold-blooded President: Little wife, what is the name of the main character in the novel?", "cypher": "match ((q:ENTITY{name:'Cold-blooded President: Little Wife, back'}) - [:Relationship{name:'The main character'}]-> (x) return x.name"}, {"query": "I would like to know what works have the same price as the ones in the catalogue and what their respective labels are? Please show me in order of number of labels.", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "What happened to basketball on October 12, 2010?", "cypher": "match (:ENTITY{name:'October 12, 2010'}) <- [:Relationship{name:' time of occurrence'}]- (q) return q.name"}, {"query": "Ro lists the works of Chen Chilin, in the name of the title of the house, Five-Year-Old Four-Year-Old, can you introduce the works on the three-tier relationship?", "cypher": "match (n:ENTITY{name:'subject's name'}) - [*1..3]->(x) where x.name<>'subject' return distinct x.name"}, {"query": "Can you help me find one of the relevant labels for the London 2012 Olympic Commemorative Stamp Collection?", "cypher": "match (:ENTITY{name:'2012 London Olympics postage stamp commemorative coin collection'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 1"}, {"query": "Please help me introduce the filter server.", "cypher": "match (:ENTITY{name:'fluorescence server'}) - [:Tag{name:'tag'}]->(m) return distinct m.name"}, {"query": "Do you know how many literary genres are in the inscription genre?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Do you know of any publications that have been published on 1/6/2002 and can you tell their publishers?", "cypher": "match (:ENTITY{name:'2002/6/1'}) <- [:Relationship{name:' time of publication'}]- ((x),(x) - [:Relationship{name:' publisher'}]->(q) return distinct q.name"}, {"query": "Can you tell me five things about people who can be considered actors?", "cypher": "match (x:ENTITY{name:' actor'}) --(p) return distinct p.name limit 5"}, {"query": "I'm not sure if you can tell me the information about the statistics of the girls in the city.", "cypher": "match (:ENTITY{name:'Little girl from the slums'}) --(p) with p order by p.name return p.name"}, {"query": "What is the chemical formula for a granite?", "cypher": "match (:ENTITY{name:'Granite'}) - [:Relationship{name:'chemical formula'}]-> (m) return distinct m.name"}, {"query": "What chemical has a molecular mass of 176.26? Can you say 12?", "cypher": "The name of the function is the name of the function itself."}, {"query": "What are the names of the three levels of relationships involved in the Pingyang Province Shining Experimental School?", "cypher": "The following pages link to The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns: The Unknowns"}, {"query": "The school's current principal, who is a teacher, recommended that the school not include three departments, including the architecture department.", "cypher": "match (:ENTITY{name:''}) <- [:Relationship{name:'currently rector'}]-(x) - [:Relationship{name:'main faculty'}]->(h) where h.name <> 'architecture' return distinct h.name limit 3"}, {"query": "01:30 Riyadh earthquake, your home was okay, do you know what the magnitude of the earthquake was?", "cypher": "match ((:ENTITY{name:'01\u00b730 Rijiyum earthquake'}) - [:Relationship{name:'seismic intensity'}]-> (p) return p.name"}, {"query": "Which four major awards have been won by the school at 8 Beijing Central Road in the city of Zhejiang?", "cypher": "match (:ENTITY{name:'Beijing Central Road 8 in Sichuan City'}) <- [:Relationship{name:'School address'}]-(h),(h) - [:Relationship{name:'Main award'}]->(n) return distinct n.name limit 4"}, {"query": "Please help me identify the three types of eye diseases and what are the common symptoms?", "cypher": "match (:ENTITY{name:' disease'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' common symptoms'}]->(n) return m.name, n.name limit 3"}, {"query": "Can you recommend 10 novels that are available on the Chinese website of Filu?", "cypher": "match (:ENTITY{name:'Filu Chinese Net'}) <- [:Relationship{name:'connected platform'}]- (n) return n.name limit 10"}, {"query": "Can you tell me about this person?", "cypher": "match (:ENTITY{name:'same as s}) --(m) return distinct m.name"}, {"query": "I have been asked to give me five engineers, where are they from?", "cypher": "match (:ENTITY{name:' engineer'}) <- [*]-(m), (m) - [:Relationship{name:' ethnicity'}]->(n) return m.name, n.name limit 5"}, {"query": "Which books have the same literary genre as the novel and have different labels? Show me how many of these books are in order of number of labels.", "cypher": "match (n:ENTITY{name:'\u5eb6\u672c\u5983'}) - [:Relationship{name:'literary genre'}]->(:ENTITY) <- [:Relationship{name:'literary genre'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) BY ORDER c DESC"}, {"query": "What festivals are organized by the National Tourism Authority?", "cypher": "match (:ENTITY{name:'National Tourism Agency'}) <- [:Relationship{name:'host'}]- (x) return x.name"}, {"query": "I would like to know when Shanghai Wuling Trading Co. Ltd. was founded, what is the scope of the company and what is the nature of the company?", "cypher": "match (:ENTITY{name:'Shanghai Gao Trading Limited'}) - [:Relationship{name:'time of establishment'}]->(n) return n.name as name union all match (:ENTITY{name:'Shanghai Gao Trading Limited'}) - [:Relationship{name:'Shanghai Gao Trading Limited'}->(m) return m.name as name union all match (:ENTITY{name:'Shanghai Gao Trading Limited'}) - [:Relationship{name:'Company character'}]->(r) return r.name as name"}, {"query": "Please tell me the information about the movie Room SP with lock and key.", "cypher": "match (:ENTITY{name:' locked room SP'}) --(h) return distinct h.name"}, {"query": "Is there any information on the names of the relationships involved in the three secondary schools in Hai Men City, Jiangsu Province, in the 2nd level?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'School of three factories in Haimen City, Jiangsu Province'}) UNWIND relations(path) AS rel RETURN rel.name"}, {"query": "What does it mean to bury a broken column?", "cypher": "match (:ENTITY{name:'buried round-breaking column'}) - [:Tag{name:'tag'}]-> (m) return distinct m.name"}, {"query": "I'm wondering which train has been awarded the title of Hero Train?", "cypher": "match (x:ENTITY{name:'hero train'}) <-[:Relationship{name:'honour'}]- (q) return distinct q.name"}, {"query": "I want to repeat the work topic All the materials of the work of Yomiuri Tenjudo.", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name <>'' return distinct x.name"}, {"query": "Can you tell us about the types of relationships that Hu Liqin is involved in in the six levels?", "cypher": "The following pages link to The Unknown:"}, {"query": "How many children are currently being left behind in the country?", "cypher": "match (:ENTITY{name:'Relationship{name:'number'}]->(r) return r.name"}, {"query": "Can you tell me how long the barrel of the 81 is?", "cypher": "match ((:ENTITY{name:'81 type machine gun'}) - [:Relationship{name:'gun chief'}]-> (q) return q.name"}, {"query": "Find the first three tag features of .NET Web Services Solution application programming?", "cypher": "match (:ENTITY{name: .NET Web Services Solution Application Programming'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name return m.name limit 3"}, {"query": "What are the first two license plates in the tail section?", "cypher": "match (:ENTITY{name:'tail'}) - [:Relationship{name:'plate code'}]-> (m) return distinct m.name"}, {"query": "I'm not sure if I'm familiar with the 09 crane suit.", "cypher": "match (:ENTITY{name:'09 pendant'}) --(m) with m order by m.name return m.name"}, {"query": "Help me find two famous alumni of Guangzhou Chinese Medical University", "cypher": "match (:ENTITY{name:' Guangzhou Chinese Medical University'}) - [:Relationship{name:'known alumni'}]->(r) with r order by r.name limit 2 return r.name"}, {"query": "Help me find the five words for \"zh\u00f9\".", "cypher": "match (:ENTITY{name:'zh\u00f9'}) <- [:Relationship{name:'spelling'}]-(m) return distinct m.name limit 5"}, {"query": "What medications are used to treat RLS? What is the composition of the drug?", "cypher": "match (:ENTITY{name:' less hysterical'}) <- [:Relationship{name:' mainstream'}]- ((m), (m) - [:Relationship{name:' side-effect composition'}]->(n) return distinct m.name, n.name"}, {"query": "What is the rated frequency of the 1TL0002 variable frequency motor produced by your company?", "cypher": "match ((:ENTITY{name:'1TL0002 variable frequency gearbox'}) - [:Relationship{name:'rated frequency'}]-> (m) return m.name"}, {"query": "Tell me about the three positions of the Standing Committee of the Communist Party of China's Xi'an City Anhui District Commission.", "cypher": "match (:ENTITY{name:'Committee of the Chinese Communist Party's Chiang Kai-shek District Committee'}) --(x) return distinct x.name limit 3"}, {"query": "Can you tell me about the most vital care needed by babies aged 0-3 years old?", "cypher": "match (:ENTITY{name:'0-3 years old baby most in need of life care'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 1"}, {"query": "What is the name of a CD released on September 6, 2011?", "cypher": "match (:ENTITY{name:'CD (September 6, 2011) '}) <- [:Relationship{name:'disk'}]- (m) return m.name"}, {"query": "You want to know the route of Hangzhou Metro Line 2 and 5 relevant information about Hangzhou Metro Line 5 People's Square Station?", "cypher": "match (n:ENTITY{name:'Hangzhou Metro People's Square Station'}) - [*]->(x) where x.name <>'Hangzhou Metro Line 2 Hangzhou Metro Line 5' return distinct x.name limit 5"}, {"query": "The problem is that you are not able to explain to me the three main achievements of Aleksandr Pedrov.", "cypher": "match (:ENTITY{name:'Alexander Pedrov'}) - [:Relationship{name:'main achievements'}]-> (x) return distinct x.name limit 3"}, {"query": "Let's work out the molecular weight of Botzoomi together.", "cypher": "match ((:ENTITY{name:'Botzoomi'}) - [:Relationship{name:'molecular mass'}]-> (h) return h.name"}, {"query": "And what will make you know the location of the dwelling place of the King of the Twelve?", "cypher": "match (:ENTITY{name:'Wang Zhengming's home town'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'geographical location'}]->(n) return distinct n.name"}, {"query": "The author of the novel, who is the author of the song \"Kyu Kyung Sang-Shan\", is a Japanese writer who writes in Korean.", "cypher": "match ((n:ENTITY{name:'Good demon[hypocritical 17K novel theme song]'}) - [:Relationship{name:'fill-word'}]-> (q) return q.name"}, {"query": "The three Shandong people represented?", "cypher": "match (:ENTITY{name:'Santondo'}) <- [:Relationship{name:'place of birth'}]-(p),(p) - [:Relationship{name:'representing work'}]->(q) return distinct q.name limit 3"}, {"query": "What were the major accomplishments of Alan Macpherson Turing?", "cypher": "match (:ENTITY{name:'Alan MacPherson Turing'}) <- [:Relationship{name:'Chinese name'}]- ((q),(q) - [:Relationship{name:'main achievement'}]->(p) return distinct p.name limit 1"}, {"query": "What are the main achievements of the three Han ethnicities?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]- ((q),(q) - [:Relationship{name:'main achievements'}]->(m) return distinct m.name limit 3"}, {"query": "Find five people born in 1886 who are not collectors.", "cypher": "match (:ENTITY{name:'1886'}) <- [:Relationship{name:'date of birth'}]- ((x),(x) - [:Relationship{name:'profession'}]->(q) where q.name <> 'collector' return distinct q.name limit 5"}, {"query": "Can you tell us about the five software called Book Sea Reading?", "cypher": "match (n:ENTITY{name:'book sea reading'}) - [*]->(x) where x.name <> 'book sea reading' return distinct x.name limit 5"}, {"query": "Please help me find 10 commercial banks in the city, where are they all headquartered?", "cypher": "match (:ENTITY{name:'City Commercial Bank'}) <- [*]-(m), (m) - [:Relationship{name:'Hall of Business'}]->(n) return distinct m.name, n.name limit 10"}, {"query": "Can you name ten people who have sung this song with passion (My everything)?", "cypher": "match (:ENTITY{name:' enthusiasm ((My everything) '}) --(p) return distinct p.name limit 10"}, {"query": "Please help me find the official website of Sichuan Longyang Electric Power Co., Ltd.", "cypher": "match (:ENTITY{name:' Sichuan Longyuan Electrical Co. Ltd'}) - [:Relationship{name:'official website'}]->(n) return n.name"}, {"query": "Can you find me 10 books published in 2005?", "cypher": "match (:ENTITY{name:'2005'}) <- [:Relationship{name:'published at the time'}]-(n) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 3"}, {"query": "Can you help me find the books published by three national publishers and introduce them?", "cypher": "match (:ENTITY{name:'national publishing house'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 3"}, {"query": "I want all the information about 2-hydroxy-4-amino-6-hydroxy-4-hydroxy?", "cypher": "match (:ENTITY{name:'2-alkyl-4-amino-6-alkyl'}) --(h) with h order by h.name return h.name"}, {"query": "The film is based on the novel of the same name by the writer and director of the film, Li Taebong.", "cypher": "match (n:ENTITY{name:' reward Lee then uncle sees gift'}) - [:Relationship*1..3]->(x) where x.name <> 'King's Way' return distinct x.name"}, {"query": "Can you find me two novels that are being connected?", "cypher": "The title of the novel is \"The Story of a Girl\" by the author of the novel, which is also the title of the novel."}, {"query": "Can you find me two alumni of the Guangzhou Academy of Fine Arts and introduce them?", "cypher": "match (:ENTITY{name:'Canton School of Fine Arts'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'description'}]->(n) return m.name,n.name limit 2"}, {"query": "What are the foreign names of military science publications?", "cypher": "match (:ENTITY{name:' Military science publishing'}) <- [:Relationship{name:' publishing'}]- ((q),(q) - [:Relationship{name:' foreign language name'}]->(n) return distinct n.name limit 5"}, {"query": "The following 5 works of art on the subject of Applied Undergraduate Planning for Higher Schools and Road Engineering published by People's Transportation Press.", "cypher": "match (n:ENTITY{name:' Higher education applied undergraduate planning teaching material; road engineering'}) - [:Relationship*]->(x) where x.name <> 'People's Transportation Publishing' return distinct x.name limit 5"}, {"query": "The two-tier relationship between the two layers of the Wuhan CITY city map, which is listed in the first two pages, is available on the map.", "cypher": "match (n:ENTITY{name:'WuhanCITY city map'}) - [:Relationship*1..2]->(x) where x.name <>'2' return distinct x.name"}, {"query": "The man's occupation told me 10 things.", "cypher": "match (:ENTITY{name:'man'}) <- [:Relationship{name:'gender'}]-(p) - [:Relationship{name:'occupation'}]->(n) return n.name order by n.name limit 10"}, {"query": "Where are you planning to host the 2012 China International OLED Expo?", "cypher": "match ((:ENTITY{name:'2012 China International OLED Exhibition'}) - [:Relationship{name:' Location'}]-> (q) return q.name"}, {"query": "I'm not going to go into five things besides economics, but I'm going to go into five things besides economics.", "cypher": "match (:ENTITY{name:'Xinjiang Jinchun Electronics and Technology Co., Ltd'}) --(m) with m order by m.name where m.name <> 'economic' return distinct m.name limit 5"}, {"query": "Do you know which ones have a double label on society? Can you name three?", "cypher": "The following is a list of the most commonly used tags in the search results for the search terms \"Special:Special:Name\" and \"Special:Name\""}, {"query": "Do you know how many people live in Yunnan?", "cypher": "match (:ENTITY{name:'Yunnan'}) <- [:Relationship{name:'area'}]- ((x),(x) - [:Relationship{name:'population'}]->(q) return distinct q.name"}, {"query": "Can you list a calendar that includes badminton, football, basketball?", "cypher": "match (:ENTITY{name:'badminton, football, basketball'}) <- [:Relationship{name:'match project'}]- (n) return distinct n.name"}, {"query": "The 2011 Pingyu International Photography Exhibition is so beautiful, what is the theme this time?", "cypher": "match ((:ENTITY{name:'2011 Beijing International Photography Exhibition'}) - [:Relationship{name:'theme'}]-> (n) return n.name"}, {"query": "What is the shortest path between the two levels of relations during the French Revolutionary War and the American Revolutionary War?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'French Revolutionary War'}) - [:Relationship*..2]-(b:ENTITY{name:'Second War of Independence'})) return count ((p)"}, {"query": "Tell me how the earth was formed.", "cypher": "match (:ENTITY{name:'\u571f'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'shape'}]->(n) return distinct n.name"}, {"query": "What computer works does Chen Tianzhou have?", "cypher": "match (p:ENTITY{name:'Chen Tianzhou'}) <--(x) --> ((q:ENTITY{name:'computer'}) return x.name"}, {"query": "What is Liam Blake's profile? 10?", "cypher": "match (:ENTITY{name:' Liam Blick'}) --(q) return distinct q.name limit 10"}, {"query": "Do you know who is related to the 5th level label?", "cypher": "The following is a list of the most commonly used tags in the search results."}, {"query": "I would like to know what representatives the brokerage company has for the Daze office?", "cypher": "match (:ENTITY{name:'Dazed'}) <- [:Relationship{name:'Broker'}]- ((h) - [:Relationship{name:'Represented'}]->(m) return distinct h.name, m.name"}, {"query": "Where was Duncan born?", "cypher": "match ((:ENTITY{name:'spanish'}) - [:Relationship{name:'place of birth'}]-> (n) return n.name"}, {"query": "Can you tell me about the contemporary interpretation of a large printing press?", "cypher": "match (:ENTITY{name:'Relationship{name:'contemporary meaning'}}) -> (n) return distinct n.name limit 1"}, {"query": "Can you list all the relationships that are covered in the two layers of the intrinsic waves?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Welcome'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What about the fact that the 07 Building Materials Network matches no more than 5 label characteristics?", "cypher": "match (:ENTITY{name:'07 building material network'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 5"}, {"query": "What are the occupations of people born in Fujian's Fujian Province?", "cypher": "match (:ENTITY{name:'Foujian Wuyui Mountain'}) <- [:Relationship{name:'place of birth'}]- ((q) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 3"}, {"query": "What is the game type of the rocket launcher? when is it released? what is the size of the game?", "cypher": "match (:ENTITY{name:'Rocket Launcher'}) - [:Relationship{name:'game type'}]->(n) return n.name as name union all match (:ENTITY{name:'Rocket Launcher'}) - [:Relationship{name:'release date'}]->(m) return m.name as name union all match (:ENTITY{name:'Rocket Launcher'}) - [:Relationship{name:'game size'}]->(r) return r.name as name"}, {"query": "What is the album released on November 14, 2006?", "cypher": "match (:ENTITY{name:'November 14, 2006'}) <- [:Relationship{name:'release time'}]- (h) return distinct h.name"}, {"query": "Do you know which train is called: \"The new train is coming\"?", "cypher": "match (:ENTITY{name:' minor update column'}) <- [:Relationship{name:' train title'}]- (n) return distinct n.name"}, {"query": "Do you have any other aliases for this man, who is the father of Zen Buddhism, and can you give me two?", "cypher": "match (:ENTITY{name:'Relationship'}) <- [Relationship's name:'Major achievement'}]- ((h) - [Relationship's name:'Alternate name'}]->(m) return distinct m.name limit 2"}, {"query": "I know that the Hunan Hanshush West Dungei Lake Provincial Nature Reserve is located in Hunan Province, in the Hanshush County of Guangdong City, and is a subtropical monsoon climate.", "cypher": "match (n:ENTITY{name:'Hunan Hanshush West Dungeon Lake Provincial Nature Reserve'}) -->(h) with h order by h.name where h.name <> 'Hunan Province, Guangdong City, Hanshush County' and h.name <> 'Subtropical monsoon climate' return h.name limit 6"}, {"query": "Can you please give us the voice of Cinder Fall?", "cypher": "match (:ENTITY{name:'Cinder Fall'}) - [:Relationship{name:'sounding'}]-> (x) return x.name order by x.name"}, {"query": "Can you recommend a representative work of Yuichi, other than the one that covers Yui and Yui's clown?", "cypher": "match (n:ENTITY{name:'spoiler'}) - [:Relationship{name:'represents work'}]->(h) where h.name <> 'spoiler' and h.name <> 'spoiler' return distinct h.name limit 1"}, {"query": "Can you tell me about the five things about the politician Pan Zhu Yue?", "cypher": "match (n:ENTITY{name:'Pan Zhu's wife'}) - [:Relationship*]->(x) where x.name <> 'political figure' return distinct x.name limit 5"}, {"query": "Can you tell me what labels are on the Northeast Twin Towers?", "cypher": "match (:ENTITY{name:'Northeast Secondary'}) - [:Tag{name:'tag'}]-> (h) return h.name skip 2"}, {"query": "What is the shortest path between the two levels of the dam and the dam station?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Series of experimental guides to modern communications technology'}) - [*..2]-(b:ENTITY{name:'Pump and pump station'})) return count ((p)"}, {"query": "Please tell me what poisoning cases happened on 15.1.2018.", "cypher": "match (:ENTITY{name:'2018.1.15'}) <- [:Relationship{name:' time of occurrence'}]- (x) return distinct x.name"}, {"query": "Do you know what the major awards are for American films with a G rating?", "cypher": "match (:ENTITY{name:'G(United States) '}) <- [:Relationship{name:'rankings'}]- ((h) - [:Relationship{name:'main awards'}]->(x) return distinct x.name limit 5"}, {"query": "What is the shortest path between the two layers of the relationship between the film Tsufu Tsung and the wind and rain?", "cypher": "Match p=allshortestpaths (((a:ENTITY{name:'Changfu Chenglong[1990 film starring Zhou Zhi, Liu Jun as the lead character]'}) - [:Relationship*..2]-(b:ENTITY{name:'Wind and rain with the road [1989 film starring Zhou Zhi]'})) return count ((p)"}, {"query": "Do you know what kind of relationships are involved in the two layers that Charles Beahan is talking about?", "cypher": "The following pages link to The Unknowns:"}, {"query": "Please explain what are the main achievements of Yang Xianlong.", "cypher": "match (:ENTITY{name:'sweet'}) - [:Relationship{name:'s major achievements'}]-> (m) return m.name skip 2"}, {"query": "Can you find me 5 of the publications published by the University of Minas Gerais Press?", "cypher": "match (:ENTITY{name:'Sinohan University Press'}) <- [:Relationship{name:'Publishing House'}]-(h),(h) - [:Relationship{name:'Book name'}]->(q) return distinct h.name,q.name limit 5"}, {"query": "Can you tell me what kind of relationships are involved in the three layers of Risen 1983?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'born again in 1983) }) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "Can you ask for a specialist hospital with 100 beds?", "cypher": "The following is a list of the most commonly used names in the world of hospitals."}, {"query": "Did you know that there are over 300 people who sit in front of a trial, and it's the case of Liu?", "cypher": "match (:ENTITY{name:'300 more'}) <- [:Relationship{name:'listening in'}]- (q) return q.name"}, {"query": "What is the title of the award for Jill Kelly?", "cypher": "Match (:ENTITY{name:'Jill Kelley'}) <- [:Relationship{name:'Jill Kelley'}]- (h) return h.name"}, {"query": "Which secondary school did Li Zhengda go to?", "cypher": "match (:ENTITY{name:'Lee Chul-ta'}) <--(m), (m) --(n) where n.name='secondary school' return distinct m.name"}, {"query": "What is the name of the main award established in 1956?", "cypher": "match (:ENTITY{name:'1956'}) <- [:Relationship{name:'time of creation'}]- ((x) - [:Relationship{name:'main award'}]->(n) return distinct n.name limit 1"}, {"query": "Can you tell me about a person who is a host by profession?", "cypher": "match (:ENTITY{name:'host'}) <- [:Relationship{name:'profession'}]- (n) return distinct n.name limit 1"}, {"query": "The first national key cultural relics protection units are located in which country?", "cypher": "match (n:ENTITY{name:'First national key relics protection unit'}) --(x) return distinct x.name"}, {"query": "The main award for the school, known as the Jigoku School, is?", "cypher": "match (:ENTITY{name:'School of the Mountain'}) <- [:Relationship{name:' short form'}]-(n),(n) - [:Relationship{name:'main award'}]->(q) return distinct q.name"}, {"query": "Do you know that Hainan Pioneer Scholar Services Limited is also known as Hainan Pioneer Scholar Services Limited?", "cypher": "match (:ENTITY{name:'Hainan Pioneer Scholarship Services Limited'}) <- [:Relationship{name:' Company name'}]- (q) return q.name"}, {"query": "The yearly report on the development of Chinese undergraduate and graduate education?", "cypher": "match (:ENTITY{name:'(2009) China Degree and Graduate Education Development Annual Report'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "How many public high schools have schooling?", "cypher": "match (:ENTITY{name:'public high school'}) <--(m), (m) - [:Relationship{name:'school lesson'}]->(n) where n is not null return count ((distinct m.name)"}, {"query": "You know anything about Yu Huafin's profession? Can you tell me three?", "cypher": "match (:ENTITY{name:'Yue Huafin'}) - [:Relationship{name:'profession'}]-> (p) return distinct p.name limit 3"}, {"query": "What is the name of the system that verifies the identity of the user and the available online services?", "cypher": "match (:ENTITY{name:' the identity of the user and the network service available;'}) <- [:Relationship{name:' verify'}]- (q) return distinct q.name"}, {"query": "What competitions and events have been held in Chennai?", "cypher": "match (:ENTITY{name:'\u6210\u90fd'}) <- [:Relationship{name:' venue'}]- (n) return n.name limit 10"}, {"query": "Do you know what Tara McCann's signature works are?", "cypher": "Match (:ENTITY{name:'Tara McCann'}) - [:Relationship{name:'representing work'}]-> (h) return h.name skip 2"}, {"query": "What are the most representative works of people born in Guangzhou, Guangdong, China?", "cypher": "match (:ENTITY{name:'Guangzhou City, Guangdong Province, China'}) <- [:Relationship{name:'place of birth'}]-(h),(h) - [:Relationship{name:'representative work'}]->(x) return distinct x.name"}, {"query": "What is the name of the military unit that is organized in the army to carry out military communications missions using various means of communication?", "cypher": "match (:ENTITY{name:'professional troop type responsible for military communications missions'}) <- [:Relationship{name:'definition'}]-(m), (m) - [:Relationship{name:'main mission'}]->(n) where n.name='organization using various means of communication' return distinct m.name"}, {"query": "What are the three main awards for MacLean directors?", "cypher": "Match (:ENTITY{name:'McCallum'}) <- [:Relationship{name:'director'}]-(n),(n) - [:Relationship{name:'main award'}]->(p) return distinct p.name limit 3"}, {"query": "Can you give me an example of the 10 most important properties of real estate in the 21st century?", "cypher": "match (:ENTITY{name:'21st century real estate'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 10"}, {"query": "Can you name 9 of the towns and villages in Yangon?", "cypher": "match (:ENTITY{name:'Canton'}) <- [:Relationship{name:'area'}]- (x) return x.name limit 9"}, {"query": "What are the five key national secondary schools?", "cypher": "match (:ENTITY{name:'National Key Secondary School'}) <--(m) return distinct m.name limit 5"}, {"query": "The school that was founded in 1952 has a major department, give me three?", "cypher": "match (:ENTITY{name:'1952'}) <- [:Relationship{name:'time of founding'}]-(n),(n) - [:Relationship{name:'main faculty'}]->(q) return distinct q.name limit 3"}, {"query": "I would like to ask you who is Don Collier?", "cypher": "match (:ENTITY{name:'Don Collier'}) --(n) return n.name skip 1 The name of the game is the same as the name of the game"}, {"query": "Do you know what this sweet pumpkin soup tastes like?", "cypher": "match ((:ENTITY{name:'sweetpot pumpkin'}) - [:Relationship{name:'flavor'}]-> (n) return n.name"}, {"query": "Tell me about the snow sculpture in the boat that was recycled and the five works of Lord Shenzhen that sent the snow poet?", "cypher": "match (n:ENTITY{name:'snow made in a boat, and Shenzhen lord sent snow poetry'}) - [*]->(x) where x.name<>'' return distinct x.name limit 5"}, {"query": "Three words that tell me why I should honor a marriage certificate?", "cypher": "match (:ENTITY{name:'to the marriage certificate'}) --(q) with q order by q.name return q.name limit 3"}, {"query": "Can you tell me about the three labels of the Yellowstone Canyon besides the scenic attractions and the tourist labels?", "cypher": "match (n:ENTITY{name:'Hangzhou'}) - [:Tag{name:'tag'}]->(h) with h order by h.name where h.name <> 'landscape attractions' and h.name <> 'tourism' return h.name limit 3"}, {"query": "Can you name two of Zhou Zhiyu's major achievements?", "cypher": "match (:ENTITY{name:'Zhou Shih'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'main achievement'}]->(q) return distinct q.name limit 2"}, {"query": "Can you provide me with personal information about the three levels of relationship of Guinean Balder Tianpopo?", "cypher": "match (n:ENTITY{name:'Bald Tianpo'}) - [*1..3]->(x) where x.name <>'Guinea' return distinct x.name"}, {"query": "Can you provide me with no more than ten articles about 2010 Super Badminton?", "cypher": "match (:ENTITY{name:'2010 Super Badminton'}) - [:Tag{name:'tag'}]-> (n) with n order by n.name return n.name limit 10"}, {"query": "How much is the 18k gold Independence pendant in your store?", "cypher": "Match (s) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) (m) ("}, {"query": "What chemical is CAS number 1444-65-1?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "In the promotional video for the 2011 Honda 3.0 TDI V6 diesel luxury, how much time is it going to take to accelerate?", "cypher": "The name of the game is \"Relationship\" (Relationship: Acceleration Time)"}, {"query": "The main department of Guangdong Economic University is?", "cypher": "match (:ENTITY{name:'Canton School of Business and Management'}) - [:Relationship{name:'main faculty'}]-> (m) return distinct m.name"}, {"query": "What else do you know about the disease of localized obesity? Help me find the other 4 information in the 2nd layer.", "cypher": "match (:ENTITY{name:'local obesity'}) - [*1..3]-(p) where p.name <> 'disease' return p.name limit 4"}, {"query": "What are the types of relationships involved in the three levels of the Dongguan City Butler Movers Limited?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Dongshan City butler moving house company limited'}) UNWIND relationships(path) AS rel return distinct rel.name limit 1"}, {"query": "Can you tell me what the monkey said about the content?", "cypher": "The name of the game is \"Skype\""}, {"query": "I'm sorry, but I'm not sure what happened to the person named Wenli in the case.", "cypher": "Match (:ENTITY{name:'Wenly'}) <- [:Relationship{name:'person'}]- (p) return p.name"}, {"query": "What is the highest salary shown in the 2011 average wage ranking?", "cypher": "match ((:ENTITY{name:'2011 average salary rankings'}) - [:Relationship{name:'highest'}]-> (q) return q.name"}, {"query": "Can you tell me what kind of relationship is contained in the three-tiered luxury penthouse?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'luxury longboard'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "The 5 messages describe the 1K11 laser tank?", "cypher": "match (:ENTITY{name:'1K11 laser tank'}) --(p) with p order by p.name return p.name limit 5"}, {"query": "What is the name of the 8th brother?", "cypher": "match (:ENTITY{name:'square'}) - [:Relationship{name:'square'}]-> (m) return distinct m.name"}, {"query": "Can you tell me what a dream bear does for a living?", "cypher": "match (:ENTITY{name:'Dream Bear'}) - [:Relationship{name:'Profession'}]-> (p) return distinct p.name limit 1"}, {"query": "Can you provide the chemical formula for 1-methoxy- and 2-methylpropylene, please?", "cypher": "match ((:ENTITY{name:'1-methacrylate-based to methacrylate-based dioprene'}) - [:Relationship{name:'chemical formula'}]-> (n) return n.name"}, {"query": "Do you know of any earthquakes that have a magnitude of 5.8? Can you list 12?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "Do you know how many different kinds of animals are there that are not known to be of any age?", "cypher": "Match (:ENTITY{name:' not specified'}) <- [:Relationship{name:' age'}]- (p) return p.name limit 4"}, {"query": "The following is a list of companies that have been affiliated with Tilamisu Cultural Communication Limited, a Shenzhen-based company founded in 2011 and with no less than two levels of affiliation:", "cypher": "match (n:ENTITY{name:'Tiramissu Cultural Communication Co., Ltd. of Shenzhen City'}) - [:Relationship*1..2]->(x) where x.name <>'2011' return distinct x.name"}, {"query": "Can you give me a list of five novels that are connected?", "cypher": "match (:ENTITY{name:'connected'}) --(h) return h.name order by h.name limit 5"}, {"query": "Please help me find the three tidal power stations, where are they all located?", "cypher": "match (:ENTITY{name:'tidal power station'}) <- [:Relationship*]-(m),(m) - [:Relationship{name:'address'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "What was the name of the incident that happened on January 8, 1966?", "cypher": "match (:ENTITY{name:'8 January 1966'}) <- [:Relationship{name:'time of event'}]- (q) return distinct q.name"}, {"query": "What is the name of the movie directed by Liang Zhen and starring Zheng Liyuan?", "cypher": "match (:ENTITY{name:'Liang Dessen'}) <- [:Relationship{name:'director'}]-(m), (m) - [:Relationship{name:'lead actor'}]->(n) where n.name='Zhong Li-ying, Li-Jun-sen, Liu-Iwa, Ho Hua-over, Abu Truth, and Kim Muramura-jin' return distinct m.name"}, {"query": "See the other 6 posts on this person, Phil Brown, in Tier 2 .", "cypher": "match (:ENTITY{name:'Phil Brown'}) - [:Relationship*1..2]-(p) where p.name <> 'person' return p.name limit 6"}, {"query": "Find 32 books for children to enlighten: information about the work within the three-layer relationship of the fairy tale.", "cypher": "match (n:ENTITY{name:'Children's enlightenment books: A life of adventure'}) - [:Relationship*1..3]->(x) where x.name <>'32' return distinct x.name"}, {"query": "Find all the tags for the .NET web advanced programming?", "cypher": "match (:ENTITY{name: .NET Network Advanced Programming'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name"}, {"query": "What does Sb2O3 stand for?", "cypher": "match (:ENTITY{name:'Sb2O3'}) --(x) return distinct x.name"}, {"query": "Can you list 10 professions that Chinese people do?", "cypher": "match (:ENTITY{name:'Han'}) <- [:Relationship{name:'ethnicity'}]-(x),(x) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 10"}, {"query": "The 115th Division, which we know as the Independent Brigade, do you know what its predecessor was?", "cypher": "match ((:ENTITY{name:'115 Division Independent Group'}) - [:Relationship{name:'previously'}]-> (x) return x.name"}, {"query": "The title of this post is \"The Art of the Dead\" and the title of this post is \"The Art of the Dead\".", "cypher": "match (:ENTITY{name:' this is a blank space'}) <- [:Relationship{name:' Chinese name'}]-(h) - [:Tag{name:' tag'}]->(n) return distinct n.name limit 1"}, {"query": "What do you think of 0456?", "cypher": "match (x:ENTITY{name:'0456'}) --(p) with p order by p.name return p.name"}, {"query": "I would like to ask what is the relationship between the two levels of business subsidies?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:' business subsidy'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Can you recommend a planting machine with a seed capacity of 125-150 kg?", "cypher": "The following is a list of the most commonly used data types:"}, {"query": "The game is a game of chance, but it is also a game of chance.", "cypher": "match (:ENTITY{name:'07073 game browser'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "Tell me the name of the person who chose the name?", "cypher": "match (:ENTITY{name:'Chained'}) <- [:Relationship{name:'Chinese name'}]-(n),(n) - [:Relationship{name:'alias'}]->(q) return distinct q.name"}, {"query": "Tell me about the three other achievements of Cemetery in primary school besides being awarded the Best Schools in the City of Sichuan Award.", "cypher": "match (:ENTITY{name:'Cemetery in primary school'}) <- [:Relationship{name:'foreign language name'}]-(x) - [:Relationship{name:'main award'}]->(m) where m.name <> 'winning the best school in Sichuan' return distinct m.name limit 3"}, {"query": "Who's representative is Jackie and Peele's fourth season of the show?", "cypher": "match (:ENTITY{name:'Relationship{name:'representative work'}}) - (n) return n.name order by n.name limit 10"}, {"query": "Can you recommend 5 languages for the interface of the software that are English?", "cypher": "match (:ENTITY{name:' English'}) <- [:Relationship{name:' interface language'}]- (p) return p.name limit 5"}, {"query": "Please provide two publications priced at 70 USD", "cypher": "The following is a list of the most commonly used keywords in the search results."}, {"query": "What is the name of the wetland located at 91\u00b007\u2032N 94\u00b050\u2032N 32\u00b050\u2032W 34\u00b032\u2032E?", "cypher": "match (:ENTITY{name:'91\u00b007\u203294\u00b050\u2032'}) <- [:Relationship{name:'East'}]-(m), (m) - [:Relationship{name:'Northern Cape'}]->(n) where n.name='32\u00b050\u203234\u00b032\u2032' return distinct m.name"}, {"query": "What is the label of 102% love?", "cypher": "match (:ENTITY{name:'102% love'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name limit 3"}, {"query": "The video game 100 Rooms is a game that is based on the popular game of 100 Rooms.", "cypher": "match (:ENTITY{name:'100 Rooms'}) --(p) with p order by p.name where p.name <> 'wisdom game' return p.name"}, {"query": "The last book you read was a 2006 book on research in medicine, who wrote the book, did you see it?", "cypher": "match ((:ENTITY{name:'2006 Hole through Research Medicine'}) - [:Relationship{name:' book author'}]-> (p) return p.name"}, {"query": "Where is Kyushu Island?", "cypher": "match (:ENTITY{name:' Kyushu Island'}) - [:Relationship{name:' geographical location'}]->(n) return n.name"}, {"query": "I want to create a company that is outside of 2003, and that is the second floor of Tianjin Hideyoshi Packing Wedding Dress Company.", "cypher": "match (:ENTITY{name:' Tianjin Hatada Hideyuki Wedding Dress Company'}) - [*1..2]-(p) where p.name <> '2003' return distinct p.name limit 6"}, {"query": "Please explain if Terry Lucio has any other profession besides writing and directing?", "cypher": "match (n:ENTITY{name:'Tri Lucio'}) - [:Relationship{name:'profession'}]->(h) with h order by h.name where h.name <> 'writer' and h.name <> 'director' return h.name limit 1"}, {"query": "The article also points out that the three-tiered relationship is linked to the extreme precision munitions called EXACTO.", "cypher": "match (n:ENTITY{name:'Extremely accurate mission ammunition'}) - [:Relationship*1..3]->(x) where x.name <>'EXACTO' return distinct x.name"}, {"query": "What profession did people born in June 1962 have?", "cypher": "match (:ENTITY{name:'June 1962'}) <- [:Relationship{name:'date of birth'}]- ((h) - [:Relationship{name:'profession'}]->(m) return distinct m.name limit 10"}, {"query": "The new course in elementary school language in simple Chinese is a must read: Three-word text with no less than 3 layers of relevant introduction.", "cypher": "match (n:ENTITY{name:' New elementary language course must read a textbook: three-word text'}) - [:Relationship*1..3]->(x) where x.name<>'simplified Chinese' return distinct x.name"}, {"query": "What are the works represented by blue?", "cypher": "match (p:ENTITY{name:'in blue'}) - [:Relationship{name:'represents work'}]-> (h) return h.name order by h.name"}, {"query": "What are the famous attractions in Karachi?", "cypher": "match (:ENTITY{name:'Karabakh'}) - [:Relationship{name:'Famous attractions'}]->(m) return distinct m.name"}, {"query": "Do you know the quotation rate? What information is there besides the area ratio, find the other 5 information in the 2nd layer", "cypher": "match (:ENTITY{name:' settlement rate'}) - [*1..2]->(p) where p.name <> ' area ratio' return p.name limit 5"}, {"query": "The song is a tribute to the late Yuki, who was born in the city of Tokyo, Japan.", "cypher": "match (n:ENTITY{name:'complementary music ten songs\u00b7\u6c60'}) - [:Relationship*1..2]->(x) where x.name <>'\u5143\u7ed3' return distinct x.name"}, {"query": "The central point of which national road is in East Taipei?", "cypher": "The following is a list of the most commonly used keywords in the search engine."}, {"query": "Can you help me find the information about the 2010 BMW 5 Series 523 Li standard car?", "cypher": "match (:ENTITY{name:'2010 BMW 5 Series 523 Li standard'}) --(x) with x order by x.name where x.name <> 'car' return x.name"}, {"query": "Do you know about the island of Chiang Mai?", "cypher": "match (:ENTITY{name:'Kilometer'}) --(m) return distinct m.name"}, {"query": "Please inform all units of the time of the 2011 military spring festival to prepare for it.", "cypher": "match ((:ENTITY{name:'2011 Military People's New Spring Festival'}) - [:Relationship{name:'hold time'}]-> (q) return q.name"}, {"query": "The first is the representation of a Leo.", "cypher": "match (:ENTITY{name:'Leo'}) <- [:Relationship{name:'Star'}]-(h) - [:Relationship{name:'represents work'}]->(q) return q.name order by q.name limit 1"}, {"query": "What books are you familiar with that were published on 2001/6/1?", "cypher": "match (:ENTITY{name:'2001/6/1'}) <- [:Relationship{name:' time of publication'}]-(h),(h) - [:Relationship{name:' book name'}]->(q) return distinct h.name,q.name"}, {"query": "Do you know if lymphocytes are white blood cells and what else they have to do with information? Help me find 10 information in 3 layers.", "cypher": "match (:ENTITY{name:' lymphocytes'}) - [*1..3]->(p) where p.name <> ' a type of white blood cell ' return p.name limit 10"}, {"query": "The story is based on the story of the first seven stories in the second story of the novel.", "cypher": "match (:ENTITY{name:'Sky dream'}) -[:Relationship*1..2]-(p) where p.name <> 'novel' return p.name limit 7"}, {"query": "Do you have any information about the three levels of relationships that this person is involved in?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Rela"}, {"query": "You know Wang Zi6? I need 10 more information on the 2nd layer besides the water dragon character.", "cypher": "match (:ENTITY{name:'Wang Ti's six'}) - [*1..2]->(p) where p.name <> 'swimming pool' return p.name limit 10"}, {"query": "Tell me one profession this man has.", "cypher": "The following is a list of all the characters that are in the game:"}, {"query": "Can you tell me about the three species of tiger that you know of and where they are distributed?", "cypher": "match (:ENTITY{name:'Gekkonidae'}) <- [*]-(m), (m) - [:Relationship{name:' distribution area'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Help me find the melting point and the water solubility of the acetaminophen.", "cypher": "The name of the function is the function of the function of the function."}, {"query": "Do you know what concepts are being proposed in the Five Year Plan and what they mean?", "cypher": "match (:ENTITY{name:'five-year plan'}) <- [:Relationship*]-(m), (m) - [:Describe{name:'description'}]->(n) return m.name, n.name"}, {"query": "What are the different labels of the literary works of the same period? Please list them in order of number of labels, from small to large.", "cypher": "match (n:ENTITY{name:'wind into the spring}) - [:Relationship{name:'creation date'}]->(:ENTITY) <-[:Relationship{name:'creation date'}]-(m:ENTITY), (r:ENTITY) <-[:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) ORDER BY c"}, {"query": "Tell me, what are the two main ingredients of the porridge besides the meatball and the porridge?", "cypher": "match (n:ENTITY{name:'Bubble bean pie'}) - [:Relationship{name:'main ingredient'}]->(h) with h order by h.name where h.name <> 'bullhead' and h.name <> 'Bubble bean' return h.name limit 2"}, {"query": "Check out the 5 foreign language introductions to Alshbli Alaa in the 5 tier relationship.", "cypher": "match (n:ENTITY{name:'Alshbli Alaa'}) - [*1..5]->(x) where x.name<>'Alshbli Alaa' return distinct x.name limit 5"}, {"query": "How do you find a video made in Japan?", "cypher": "match (:ENTITY{name:'Japan'}) <- [:Relationship{name:'production area'}]-(n) return distinct n.name limit 1"}, {"query": "Tell me which Arabic numerals are the Roman numerals XXXIX?", "cypher": "match (:ENTITY{name:'XXXIX'}) <- [:Relationship{name:'Roman numerals'}]- (q) return distinct q.name"}, {"query": "Can you reveal all the labels for the 1500m race?", "cypher": "match (q:ENTITY{name:'1500 metres'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name return p.name"}, {"query": "Help me find 10 plants that are part of the seed-plant-gate-twin-leaf-plant schedule.", "cypher": "match (:ENTITY{name:'seed plant gate'}) <- [:Relationship{name:'gate'}]-(m), (m) - [:Relationship{name:'gram'}]->(n) where n.name='twin leaf plant gate' return m.name limit 10"}, {"query": "Can you name three works by Chinese artists?", "cypher": "match (:ENTITY{name:'China'}) <- [:Relationship{name:'nationality'}]-(m),(m) - [:Relationship{name:'representative work'}]->(q) return distinct q.name limit 3"}, {"query": "Do you know the first three words of the name of the production company and the full name of the production company of the TV series \"The Hunger Games\"?", "cypher": "MATCH (n:ENTITY{name:'War of the Roses [TV series broadcast on MBC in 2004]'}) - [:Relationship{name:' Publisher'}]->(m) RETURN m.name,substring ((m.name,0,3))"}, {"query": "Can you name 11 non-profit social organizations?", "cypher": "match (:ENTITY{name:' non-profit social organization'}) <- [:Relationship{name:' nature'}]- (p) return p.name limit 11"}, {"query": "The experiment requires a hydrogen, can you provide a reference point?", "cypher": "match ((:ENTITY{name:''}) - [:Relationship{name:''}]-> (p) return p.name"}, {"query": "What are the books of Deng Xiaoping and what are they classified as?", "cypher": "match (:ENTITY{name:'\u5fe0\u6587 \u7f16'}) <- [:Relationship{name:' author'}]-(h),(h) - [:Tag{name:' tag'}]->(q) return distinct h.name,q.name"}, {"query": "What is the caliber of the M57 7.62mm pistol?", "cypher": "match (:ENTITY{name:'M57 type 7.62mm pistol'}) - [:Relationship{name:'gap diameter'}]->(n) return n.name as name union all match (:ENTITY{name:'M57 type 7.62mm pistol'}) - [:Relationship{name:'Airgun quality'}]->(m) return m.name as name"}, {"query": "The following is a list of all the schools in Yunyang County.", "cypher": "match (:ENTITY{name:' Yunyang County Dayang Primary School'}) --(m) return distinct m.name"}, {"query": "Please tell me 5 details about the football player Da Yao Liang.", "cypher": "match (n:ENTITY{name:'Dawg'}) - [*]->(x) where x.name <> 'footballer' return distinct x.name limit 5"}, {"query": "Who are the people who have a relationship with university teachers that is labeled as level 3?", "cypher": "match (n) - [:Tag*3{name:'tag'}]->(p:ENTITY{name:'college teacher'}) RETURN distinct n.name limit 3"}, {"query": "Do you know what chemical has CAS number 312693-23-5?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Can you give me five of the five levels of the relationship between the two?", "cypher": "match (n:ENTITY{name:' Friday's music'}) - [*1..6]->(x) where x.name<>'South-North Korea' return distinct x.name limit 5"}, {"query": "Jason Terry is on which basketball team?", "cypher": "match (:ENTITY{name:'Jason Terry'}) - [:Relationship{name:'Relationship team'}]->(m) return distinct m.name"}, {"query": "How many schools have no schooling?", "cypher": "match (:ENTITY{name:'school'}) <--(m), (m) - [:Relationship{name:'school'}]->(n) where n is null return count ((distinct m.name)"}, {"query": "Interactive reading: the relationship between the two layers of the Venetian businessman?", "cypher": "match (n:ENTITY{name:' language new course interactive reading: Venetian merchant'}) - [:Relationship*1..2]->(x) where x.name <>'Shakespeare' return distinct x.name"}, {"query": "Find out what chemical has the CAS number 651-54-7?", "cypher": "match (p:ENTITY{name:'651-54-7'}) <- [:Relationship{name:'CAS number'}]- (m) return m.name"}, {"query": "If the main character lives with his mother, who are the other three actors besides Ji Yong-soo, Ji-hoon, and Ye-ye?", "cypher": "match (n:ENTITY{name:'if living with mother'}) - [:Relationship{name:'starring'}]->(h) where h.name <> 'Kyu Young-ho' and h.name <> 'Kyu and also' return distinct h.name limit 3"}, {"query": "The cave belongs to that city?", "cypher": "Match (:ENTITY{name:'white lotus hole'}) - [:Relationship{name:'place'}]->(n) return n.name"}, {"query": "What are the product features and main functions of the smart pure water water meter?", "cypher": "match (:ENTITY{name:'smart pure water meter'}) - [:Relationship{name:'product characteristics'}]->(n) return n.name as name union all match (:ENTITY{name:'smart pure water meter'}) - [:Relationship{name:'main function'}]->(m) return m.name as name"}, {"query": "Please tell me if you know of any high school in Deqing County, Zhejiang Province. Can you list the top 5?", "cypher": "match (:ENTITY{name:'Deqing County, Zhejiang Province, China's secondary school'}) --(m) return m.name order by m.name limit 5"}, {"query": "Do you know any professions in Shaanxi? Please tell me 5 of them.", "cypher": "match (:ENTITY{name:'\u7ecd\u6e05'}) <- [:Relationship{name:' Chinese name'}]-(p),(p) - [:Relationship{name:' profession'}]->(x) return x.name order by x.name limit 5"}, {"query": "The Chongqing chemical plant explosion on 11/21 exposed many questions: Do you know where the incident took place?", "cypher": "match ((:ENTITY{name:'11\u00b721 Chongqing chemical plant explosion'}) - [:Relationship{name:'place of occurrence'}]-> (p) return p.name"}, {"query": "What is the name of the province in which the county is located?", "cypher": "match (:ENTITY{name:'containing county'}) - [:Relationship{name:'belonging area'}]->(n) return n.name as name union all match (:ENTITY{name:'containing county'}) - [:Relationship{name:'famous attractions'}]->(m) return m.name as name"}, {"query": "What is the ingredient of growth hormone release inhibitor?", "cypher": "match (x:ENTITY{name:'growth hormone release inhibitor'}) <- [:Relationship{name:'meaning'}]- (n) return n.name"}, {"query": "Let's see which brokerage is the famous singer Alex da Kid?", "cypher": "Match ((:ENTITY{name:'Alex da Kid'}) - [:Relationship{name:'brokerage company'}]-> (p) return p.name"}, {"query": "Please give me three main departments that are interactive media schools.", "cypher": "match (:ENTITY{name:'interactive media'}) <- [:Relationship{name:'main faculty'}]- (h) return distinct h.name limit 3"}, {"query": "What is the name of the song sung by Lee Sung-seong, Chen E-jin, and Zhou Guo-yi?", "cypher": "match (:ENTITY{name:'Lee Zongsheng'}) <- [:Relationship{name:'Relationship'}]- ((m), (m) - [:Relationship{name:'Composition'}]->(n) where n.name='Chen Zhenjie, Zhou Guoqiu' return distinct m.name"}, {"query": "What is the name of the white person born in Lijiang County, Yunnan?", "cypher": "match (p:ENTITY{name:' Yunnan Lijiang County'}) <--(x) -->(q:ENTITY{name:' White people'}) return x.name"}, {"query": "Can you find out about the five provincial universities of higher education?", "cypher": "match (:ENTITY{name:'province-based higher education institution'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'known alumni'}]->(n) return distinct m.name,n.name limit 5"}, {"query": "Can you list any of the special stamps with the letter \"T\" in the title?", "cypher": "match (:ENTITY{name:' T initials of special stamps'}) <- [:Relationship{name:' belongs to category'}]- (m) return distinct m.name"}, {"query": "Can you tell me about the three professions that are available to you?", "cypher": "match (:ENTITY{name:'pay\u5e86\u660e'}) <--(q),(q) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 3"}, {"query": "Help me find a place to play in June.", "cypher": "match (:ENTITY{name:'5 October\u3002 weather suitable, cool winds\u202c'}) <- [:Relationship{name:'suitable for play season'}]-(n) with n order by n.name limit 1? return n.name"}, {"query": "What programs and institutions have been hosted by Hong Kong Television Broadcasting Limited?", "cypher": "match (:ENTITY{name:'Hong Kong Television Broadcasting Company Limited'}) <- [:Relationship{name:'host unit'}]- (h) return distinct h.name"}, {"query": "Can you tell me what kind of profession is there for a Mon artist?", "cypher": "match (:ENTITY{name:'Mon Arts'}) <--(q) - [:Relationship{name:'Profession'}]->(h) return h.name order by h.name limit 10"}, {"query": "What are the single-edition publications? Name 10?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "Can you get me three books for $200?", "cypher": "The following is a list of the most commonly used keywords in the search results."}, {"query": "Do you know what the main achievements of the writer who wrote the book for the Chinese language, Liu He, are?", "cypher": "match (:ENTITY{name:'Changming Spring'}) <- [Relationship{name:'representative work'}]- ((n) - [Relationship{name:'main achievements'}]-> ((x) return distinct x.name limit 10"}, {"query": "How many people are estimated to have died in the 2014 Norfolk helicopter crash?", "cypher": "match ((p:ENTITY{name:'2014 helicopter crash in Norfolkshire'}) - [:Relationship{name:'number of casualties'}]-> (q) return q.name"}, {"query": "What can you make with pig's back?", "cypher": "match (:ENTITY{name:' pig's back, eggs, mustard, spirit, salt, flour'}) <- [:Relationship{name:' main ingredient'}]-(m), (m) - [:Relationship{name:' classification'}]->(n) where n.name='Tianjin dish' return distinct m.name"}, {"query": "What warship is the 052C?", "cypher": "match (:ENTITY{name:'052C'}) <- [:Relationship{name:'model'}]- (p) return distinct p.name"}, {"query": "I'm going to be playing the game with my friends and I'm going to be playing with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends and I'm going to play with my friends\".", "cypher": "match (n:ENTITY{name:'color different'}) - [*1..4]->(x) where x.name <>'game' return distinct x.name"}, {"query": "Can you help me find two books by a beautiful author?", "cypher": "match (:ENTITY{name:'Chang Li'}) <- [:Relationship{name:'author'}]-(x),(x) - [:Relationship{name:'book name'}]->(q) return distinct q.name limit 2"}, {"query": "Can you tell me about one label of the village of Kochiko, apart from the archaeological and geographical ones?", "cypher": "match (n:ENTITY{name:'Kochino village'}) - [:Tag{name:'tag'}]->(h) with h order by h.name where h.name <> 'archaeological artefacts' and h.name <> 'geography' return h.name limit 1"}, {"query": "Can you recommend 13 novels that fall into the heterosexual category?", "cypher": "match (:ENTITY{name:'Relationship{name:' novel type'}) - (x) return x.name limit 13"}, {"query": "The ridiculous profession is?", "cypher": "match (:ENTITY{name:'dangerously funny'}) <--(q) - [:Relationship{name:'profession'}]->(p) return distinct p.name"}, {"query": "I want to know about the personal information of 1.79m Han Yun Yanming in the two-tier relationship?", "cypher": "match (n:ENTITY{name:'Han Hyun Yanming'}) - [*1..2]->(x) where x.name <>'1.79 m' return distinct x.name"}, {"query": "I need you to tell me about the five types of relationships involved in the second level of Nedal Lake, okay?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Dale Lake'}) UNWIND relationships(path) AS rel RETURN distinct rel.name limit 5 The name of the game is a combination of the names of the characters and the name of the game."}, {"query": "Can you recommend five novels that are available in the Cloud?", "cypher": "match (q:ENTITY{name:'cloud city'}) <- [:Relationship{name:'contact platform'}]- (n) return n.name limit 5"}, {"query": "And what will make you know what the main ingredients of the night-light stone are?", "cypher": "match (:ENTITY{name:'nightlightstone'}) <- [:Relationship{name:'Chinese name'}]- ((p) - [:Relationship{name:'main ingredient'}]->(n) return distinct n.name"}, {"query": "Do you know the name of the novel written by Liu Xiaobo?", "cypher": "match (:ENTITY{name:'\u5c0f\u4f9d'}) <- [:Relationship{name:'creator'}]- (p) return distinct p.name"}, {"query": "Can you tell us about Xu Zhizhen's ethnicity and profession?", "cypher": "match (:ENTITY{name:'\u8bb8\u5fd7\u575a'}) - [:Relationship{name:'\u6c11\u65cf'}]->(n) return n.name as name union all match (:ENTITY{name:'\u8bb8\u5fd7\u575a'}) - [:Relationship{name:'\u804c\u4e1a'}]->(m) return m.name as name"}, {"query": "What do you know about the game Supergod? I only know that it is a Tencent game, please list 10 information in 2 layers", "cypher": "match (:ENTITY{name:'All the people are supergods'}) - [*1..2]->(p) where p.name <> 'Tencent game development studio' return p.name limit 10"}, {"query": "Can you tell me the names of the four prescription drugs?", "cypher": "match (:ENTITY{name:'prescription drug'}) <- [:Relationship{name:'is the drug prescribed'}]- (m) return m.name limit 4"}, {"query": "The American director, who has filmed three films in addition to Road to Heaven, also gave a list of his films.", "cypher": "match (:ENTITY{name:'United States'}) <- [:Relationship{name:'nationality'}]-(p),(p) - [:Relationship{name:'representative work'}]->(x) where x.name <> 'way to heaven' return distinct x.name limit 3"}, {"query": "Please list 10 professions of this person born in Sichuan, China.", "cypher": "match (:ENTITY{name:' Sichuan Weiyuan'}) <- [:Relationship{name:' place of birth'}]-(x) - [:Relationship{name:' profession'}]->(n) return n.name order by n.name limit 10"}, {"query": "Tell me what are the three labels that the next four years will have to say 100 words in addition to cultural activities?", "cypher": "match (:ENTITY{name:'fourth level must back 100 sentences'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'cultural activities' return p.name limit 3"}, {"query": "What do you know about the social event 1040 Solar Engineering?", "cypher": "match (:ENTITY{name:'1040 solar engineering'}) --(h) with h order by h.name where h.name <> 'social event' return h.name"}, {"query": "Can you tell me about the three-tiered relationship that Chen Yao has with the book of life's wisdom?", "cypher": "match (n:ENTITY{name:'Enjoy the wisdom of a lifetime'}) - [*1..3]->(x) where x.name <>'Chen Rock' return distinct x.name"}, {"query": "Which three of the primary schools affiliated to the Shanghai Foreign Language Vocational College have received the most awards besides the District Civilization Unit and the Shanghai City Safe Civilization Campus?", "cypher": "match (n:ENTITY{name:'Shanghai Business School of Foreign Languages' affiliated primary school'}) - [:Relationship{name:'main award'}]->(h) where h.name <> 'district civilization unit' and h.name <> 'Shanghai City Security Civilization Campus' return distinct h.name limit 3"}, {"query": "Do you know what types of relationships are included in the 3rd level of Nedobar Middle School?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Rela"}, {"query": "What are the main achievements of people born in 1857? Can you tell me two categories?", "cypher": "match (:ENTITY{name:'1857'}) <- [:Relationship{name:'date of birth'}]- ((m) - [:Relationship{name:'main achievements'}]->(n) return distinct n.name limit 2"}, {"query": "What are the latest structural analysis and design methods?", "cypher": "match (n:ENTITY{name:' the latest structural analysis and design method'}) --(x) return distinct x.name"}, {"query": "Can you tell me the name of a novel that is still being published?", "cypher": "The name of the game is \"Relationship\" (Relationship) and the name of the game is \"Relationship\" (Relationship)."}, {"query": "The first is the story of the two hundred and forty monkeys in the relationship between the two generations of the Yerevan monkeys.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <> '' return distinct x.name"}, {"query": "Can I have a word about formaldehyde?", "cypher": "match (:ENTITY{name:'metallic toys'}) --(x) with x order by x.name return x.name limit 1"}, {"query": "The archery is divided into what categories and when did it start?", "cypher": "match (:ENTITY{name:'Arrow[ancient weapon]'}) - [:Relationship{name:'Classification'}]->(n) return n.name as name union all match (:ENTITY{name:'Arrow[ancient weapon]'}) - [:Relationship{name:'Time of beginning'}]->(m) return m.name as name"}, {"query": "The following are 10 of the achievements of the teacher who has been involved in the research and teaching of the \"Humor Serious Teacher\" in the school.", "cypher": "match (:ENTITY{name:'humor, seriousness'}) <- [:Relationship{name:'classroom style'}]-(p),(p) - [:Relationship{name:'main achievement'}]->(h) where h.name <> 'participating in the research' return distinct h.name limit 10"}, {"query": "What is the shortest path of relationship between the dry plants and the tropical plants in the two layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'dry growing plants'}) -[:Relationship*..2]-(b:ENTITY{name:'tropical plants'})) return count ((p)"}, {"query": "What about the 1325 UV flatbed printer?", "cypher": "match (:ENTITY{name:'1325uv tablet printer'}) --(x) with x order by x.name return x.name limit 1"}, {"query": "The test books published by the Mechanical Industries Publishing House helped me find the 10 most common.", "cypher": "match (:ENTITY{name:' publisher'}) <- [:Relationship{name:' publisher'}]- (mn) - [:Tag{name:' label'}]->(n:ENTITY{name:' exam book'}) return mn.name limit 10"}, {"query": "What chemical is camphor?", "cypher": "match (:ENTITY{name:'camphor'}) <- [:Relationship{name:'English name'}]- (x) return x.name"}, {"query": "I wonder what other names the Mongols have, say ten?", "cypher": "match (:ENTITY{name:'Mann'}) <- [:Relationship{name:'ethnicity'}]-(m),(m) - [:Relationship{name:'othername'}]->(h) return distinct h.name limit 10"}, {"query": "Do you know which ships were built by Shanghai Jiangnan Shipyard?", "cypher": "match (:ENTITY{name:' Shanghai Jiangnan Shipyard'}) <- [:Relationship{name:' Manufacturing Plant'}]- (q) return distinct q.name"}, {"query": "Apart from the private university, what else do you know about the modern school of economic management at Jiangxi University of Economics and Business?", "cypher": "match (:ENTITY{name:'Class of Modern Economics and Management of Jiangxi University of Finance'}) - [*1..3]->(p) where p.name <> 'Private University' return p.name limit 20"}, {"query": "Chinese male entertainers helped me find 20 of them.", "cypher": "The following is a list of all the different ways The Great Wall of China is credited in the database."}, {"query": "Tell me how many companies were founded in 1992?", "cypher": "match (p:ENTITY{time:'1992'}) return count ((p)"}, {"query": "What is Muhtar's most representative work?", "cypher": "match (:ENTITY{name:'Muhtar'}) <- [:Relationship{name:'foreign language name'}]-(h),(h) - [:Relationship{name:'representative work'}]->(q) return distinct q.name limit 1"}, {"query": "The answer is that the polycystic group has a three-layer relationship to osteochondrosis of the elderly.", "cypher": "match (n:ENTITY{name:'Relationship*1..3]->(x) where x.name <> 'old man' return distinct x.name"}, {"query": "Can you tell me about the terror incident that happened at the Golden Gate Bridge in Beijing?", "cypher": "match (:ENTITY{name:'Beijing Tiananmen Square'}) <- [:Relationship{name:'place of occurrence'}]- (x) return x.name"}, {"query": "Find the five elements in the four-layer relationship of Avicii's Divine Sorrow?", "cypher": "match (n:ENTITY{name:'Divine Sorrow'}) - [*1..4]->(x) where x.name<>'Avicii' return distinct x.name limit 5"}, {"query": "I need five messages from football player Jiang Sak-rin.", "cypher": "match (n:ENTITY{name:'\u6c5f\u5742\u4efb'}) - [*]->(x) where x.name <> 'footballer' return distinct x.name limit 5"}, {"query": "I want to meet this person, you know?", "cypher": "match (:ENTITY{name:'songsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsongsong"}, {"query": "I'm not sure if I should be the only one who gets the news about the iWALKDBL800i.", "cypher": "match (n:ENTITY{name:'iWALKDBL800i'}) --(x) return x.name The name of the match is given by the name of the match."}, {"query": "What types of relationships are involved in nurturing eighth graders in the third level?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'Pleasing the eighth grade'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "What is the name of the vice-dean, professor, and master's student supervisor at the School of Financial Management at Shanghai University of Foreign Trade and Economics?", "cypher": "match (q:ENTITY{name:'Shanghai University of Foreign Trade and Economy Vice-Dean, Professor, Master's student tutor\u3002'}) <- [:Describe{name:'description'}]-(x),(x) - [:Relationship{name:'profession'}]->(n) return distinct n.name limit 1"}, {"query": "Do you know the nationality of Jane Goodall?", "cypher": "match (:ENTITY{name:'Jen Goodall'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'nationality'}]->(q) return distinct q.name limit 3"}, {"query": "The 59 classic pieces of wisdom that have been completed are what kind of works?", "cypher": "match (:ENTITY{name:'59 classic life wisdom'}) --(n) with n order by n.name where n.name <> 'completed' return n.name"}, {"query": "The carrot green salad is being re-uploaded on which website?", "cypher": "Match (:ENTITY{name:'carrot blue'}) - [:Relationship{name:'linked site'}]->(n) return n.name"}, {"query": "Can you name 20 of them?", "cypher": "match (:ENTITY{name:'2007'}) <- [:Relationship{name:'year'}]- (n) return n.name limit 25"}, {"query": "Tell me about the publication you know called 100 Yuan Crazy for China?", "cypher": "match (:ENTITY{name:'100\u5143\u72c2\u8d70\u4e2d\u56fd'}) --(p) with p order by p.name where p.name <> 'publication' return p.name"}, {"query": "Who has the soul of jazz?", "cypher": "match (:ENTITY{name:'the soul of jazz music'}) <- [:Relationship{name:'major achievement'}]- ((m) return distinct m.name"}, {"query": "The 11/11 Urumqi Lithium Amine Bombing reported in the newspapers, do you know where it happened?", "cypher": "match ((:ENTITY{name:'11\u00b711 Urumqi ammonia explosion'}) - [:Relationship{name:'location'}]-> (q) return q.name"}, {"query": "What do you think of the evil Emperor?", "cypher": "match (n:ENTITY{name:'Unbelievable brother'}) --(x) return x.name"}, {"query": "The conference was attended by about 1,000 people from 60 countries.", "cypher": "match (:ENTITY{name:'About 1000 people from 60 countries attended the conference'}) <- [:Relationship{name:'conference size'}]- (q) return distinct q.name"}, {"query": "What are the acronyms of the universities founded in 1982? Can you tell me three?", "cypher": "match (:ENTITY{name:'1982'}) <- [:Relationship{name:'time of creation'}]- ((p),(p) - [:Relationship{name:'abbreviated'}]->(x) return distinct x.name limit 3"}, {"query": "Help me find three national level 3 protected plants.", "cypher": "match (:ENTITY{name:'plant'}) <- [:Tag{name:'tag'}]-(m), (m) - [:Relationship{name:'protection level'}]->(n) where n.name='3' return distinct m.name limit 3"}, {"query": "Is there a village committee of 20?", "cypher": "match (:ENTITY{name:'20'}) <- [:Relationship{name:'village group'}]->(n) return distinct n.name"}, {"query": "What is the shortest path between the light cheeks and the three layers of the iris?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'shortestcheek'}) - [*..3]-(b:ENTITY{name:'shortestcheek'})) return count ((p)"}, {"query": "Tell me about the relationship between the two layers of the Daisuke family.", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'\u5927\u91ce\u59d3'}) UNWIND relationships(path) AS rel return distinct rel.name"}, {"query": "I would like to ask, what is the third level of the label for the relationship with Princess Min?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'herding'}) return distinct n.name"}, {"query": "Can you tell us about the kind of relationships that are involved in the deep underground lab on the fourth floor?", "cypher": "match path=(n) <- [:Relationship*4]- ((p:ENTITY{name:'ultra deep underground lab'}) UNWIND relationships(path) AS rel RETURN rel.name"}, {"query": "List of devices with throughput of 100 Mbps excluding 100 megawatts firewall", "cypher": "match (:ENTITY{name:'100Mbps'}) <- [:Relationship{name:'network throughput'}]-(h),(h) - [:Relationship{name:'device type'}]->(m) where m.name <> '100Mbps firewall' return distinct m.name limit 5"}, {"query": "Can you help me find out where the five historical sites are?", "cypher": "match (:ENTITY{name:'landmark'}) <--(m), (m) - [:Relationship{name:'landmark'}]->(n) return m.name,n.name limit 5"}, {"query": "Can you find me two dancers born in Arlington and introduce them?", "cypher": "match (:ENTITY{name:'dancer'}) <-[:Relationship*]-(m),(m) -[:Describe{name:'description'}]->(n) return m.name,n.name limit 2"}, {"query": "Please list 14 pages in the 191-page literature guide.", "cypher": "match (h:ENTITY{name:'191 pages'}) <- [:Relationship{name:'page number'}]- (x) return x.name limit 19"}, {"query": "I'm not sure what the label says about the 10 100 round stores.", "cypher": "match (:ENTITY{name:'100 round shop'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 10"}, {"query": "The incident in which 13 people were killed and 21 injured?", "cypher": "match (:ENTITY{name:'13 killed, 21 wounded'}) <- [:Relationship{name:'wounded'}]- (m) return distinct m.name"}, {"query": "Can you list the three levels of relationships involved in the two first-time migrants?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'first time on the web'}) UNWIND relationships(path) AS rel return distinct rel.name limit 2"}, {"query": "What are the main ingredients in the list of 10 delicious dishes?", "cypher": "match (:ENTITY{name:'old and rare'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:'main raw material'}]->(n) return m.name,n.name limit 10"}, {"query": "The recipient of the Ministry of Agriculture, the Gansu Provincial Science and Technology Progress Award and the National Ministry's first and second-class award for seven consecutive years, has he achieved other achievements besides representing the cultivation of the Gansu apple tree?", "cypher": "match (:ENTITY{name:'Multiple times winner of the Ministry of Agriculture, Gansu Provincial Science and Technology Progress Award 7 times winner of the Provincial First and Second Class Award of the Ministry of State'}) <- [:Relationship{name:'main achievement'}]-(m),(m) - [:Relationship{name:'representative work'}]->(x) where x.name <> 'Relationship' return distinct x. limitname 10"}, {"query": "Where is the famous indoor gardening showcase?", "cypher": "match (:ENTITY{name:' indoor gardening exhibition area'}) <- [:Relationship{name:' famous attractions'}]- (p) return distinct p.name"}, {"query": "The Turkish journalist, who is also a member of the Turkish parliament, has been asked to give a profile of his three-tier relationship with Sharir Hamza.", "cypher": "match (n:ENTITY{name:'Shakir Hamza'}) - [*1..3]->(x) where x.name <>'Turkey' return distinct x.name"}, {"query": "Can you show me some personal information about the four-tier relationship with the attacking defender Hethuning Tony?", "cypher": "match (n:ENTITY{name:'Huthunning Tony'}) - [*1..4]->(x) where x.name <>'guard' return distinct x.name limit 5"}, {"query": "Can you recommend 10 novels that cross the space shuttle?", "cypher": "match (:ENTITY{name:'crossing space'}) <- [:Relationship{name:'novel type'}]- (h) return h.name limit 10"}, {"query": "Please tell me the name of this famous person from the late Qing Dynasty.", "cypher": "match (:ENTITY{name:' late clear'}) <- [:Relationship{name:' at the time'}]-(p),(p) - [:Relationship{name:' word number'}]->(n) return n.name order by n.name limit 1"}, {"query": "Can you introduce the Chinese Academy of Sciences' Institute of Psychology?", "cypher": "match (:ENTITY{name:'Psychological Institute of the Chinese Academy of Sciences'}) --(q) return distinct q.name"}, {"query": "The position on the pitch belongs to the defender, he has played in all the places you know?", "cypher": "match (:ENTITY{name:'back'}) <- [:Relationship{name:'on-field position'}]- ((x),(x) - [:Relationship{name:'played'}]->(h) return h.name skip 1 limit 10"}, {"query": "The article was written by a journalist from the South China Sea who was a member of the South China Sea delegation to the UN General Assembly.", "cypher": "match (n:ENTITY{name:'Relationship*]->(x) where x.name<>'Sueyang' return distinct x.name limit 5"}, {"query": "The steel plate number of the 8407 material is ASSAB 8407 2M and is the same as the 8407 steel plate number.", "cypher": "match (:ENTITY{name:'8407 material'}) - [:Relationship{name:'steel plate number'}]-> (m) with m order by m.name where m.name <> 'ASSAB 8407 2M' return m.name"}, {"query": "The unit that operates the Beijing subway system is?", "cypher": "match (:ENTITY{name:'Beijing Metro'}) <- [:Relationship{name:'system name'}]- ((x) - [:Relationship{name:'operating unit'}]->(h) return distinct h.name"}, {"query": "Can you list three relationships that win in the two layers of tensions?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'win in ten'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3"}, {"query": "The first is that the term \"metallic quadruple\" is not a scientific term, but a non-disciplinary one.", "cypher": "match (:ENTITY{name:'1-methyl tetrahedron'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'discipline' return p.name limit 1"}, {"query": "Find the company description in the 3-tier relationship related to the food additive acidic jellybean?", "cypher": "match (n:ENTITY{name:'acidic tartrate'}) - [:Relationship*1..3]->(x) where x.name <> 'food additives' return distinct x.name"}, {"query": "Apart from filming in India, what else do you know about Bollywood?", "cypher": "match (:ENTITY{name:'Bollywood love'}) - [*1..2]-(p) where p.name <> 'India' return distinct p.name limit 10"}, {"query": "I was wondering what are the famous places where tickets are free? Can you name three?", "cypher": "match (:ENTITY{name:' free'}) <- [:Relationship{name:' ticket price'}]- ((q),(q) - [:Relationship{name:' famous attraction'}]->(m) return m.name order by m.name limit 3"}, {"query": "I want all the information about the 16 books of the Neutral Glue Long Silk Sewing Machine.", "cypher": "match (n:ENTITY{name:' Neutral adhesive long thread machine'}) - [:Relationship*]->(x) where x.name <>'16' return distinct x.name"}, {"query": "Do you know what types of relationships are involved in the three layers of cabinet?", "cypher": "match path=(n) <- [:Relationship*3]- ((p:ENTITY{name:'simple'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "Find out where the two players from Utrecht FC are from.", "cypher": "match (:ENTITY{name:'Udler FC'}) <- [*]-(m), (m) - [:Relationship{name:'nationality'}]->(n) return distinct m.name,n.name limit 2"}, {"query": "What can be made with pig's belly and chicken?", "cypher": "match (:ENTITY{name:' pig's belly, chicken'}) --(x) return distinct x.name"}, {"query": "I know that Aevarsson \u00c1rmann Peter is an Icelandic footballer, can you tell me three more things about him?", "cypher": "match (n:ENTITY{name:'Aevarsson \u00c1rmann Peter'}) -->(h) with h order by h.name where h.name <> 'Iceland' and h.name <> 'football' return h.name limit 3"}, {"query": "Do you have any information on the location of the 5 second level relations with Beijing?", "cypher": "The following is a list of all the different ways The Great Wall of China is credited in the database:"}, {"query": "The article was written by a journalist from the Hong Kong-based newspaper, The Times of China.", "cypher": "match (:ENTITY{name:'1944 Mengyang Conference biography'}) --(q) with q order by q.name where q.name <> ' publication' return q.name"}, {"query": "So let me explain the pass function.", "cypher": "match (:ENTITY{name:' passing function'}) - [:Tag{name:' tag'}]-> (m) return distinct m.name"}, {"query": "Please tell me who is the founder of the website that promotes Chinese martial arts hygiene technology and inherits the classic traditional health culture?", "cypher": "match (:ENTITY{name:'Advancing Chinese martial arts hygiene technology, inheriting classic traditional hygiene culture'}) <- [:Relationship{name:'site slogan'}]-(m),(m) - [:Relationship{name:'founder'}]->(q) return q.name order by q.name limit 3"}, {"query": "Please list me a list of people who are thinkers by profession.", "cypher": "match (:ENTITY{name:'thinker'}) <- [:Relationship{name:'profession'}]- (x) return x.name order by x.name"}, {"query": "A word about the era of the 212th Ward?", "cypher": "match (:ENTITY{name:'1 area 212's fun rental era'}) --(n) with n order by n.name return n.name limit 1"}, {"query": "How long is the shortest relationship between Wang Jianhui and Sun Tzu in the two levels?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Wang Jianping'}) - [*..2]-(b:ENTITY{name:'Sung Jae-hee'})) return count ((p) The number of paths is not known."}, {"query": "Is there another label for 2-hydroxy tetrahydrocetaethane used in medicine?", "cypher": "match (:ENTITY{name:'2-methacrylate tetrahydrate'}) - [:Tag{name:'label'}]-> (p) with p order by p.name where p.name <> 'medicine' return p.name"}, {"query": "Help me find 10 dishes.", "cypher": "match (:ENTITY{name:'home common dishes'}) <- [:Relationship{name:'category'}]-(m) return distinct m.name limit 10"}, {"query": "Who is the author of Carmen?", "cypher": "Match (:ENTITY{name:'Carmen'}) - [:Relationship{name:'author'}]->(n) return n.name"}, {"query": "Do you know what accident happened on the highway near the village of Nine Ways in Jinzhou, Jining Province?", "cypher": "match (:ENTITY{name:'Highway near the village of Khang Da-dong, Yi County, Jinzhou, Liaoning Province'})"}, {"query": "2009 Literature Does China have labels other than books? Give five examples", "cypher": "match (:ENTITY{name:'2009 Literature China'}) - [:Tag{name:'tags'}]-> (h) with h order by h.name where h.name <> 'books' return h.name limit 5"}, {"query": "What is the name of the substance that makes up 3% of the entire human genome?", "cypher": "match (:ENTITY{name:' accounts for 3% of the entire human genome'}) <- [:Relationship{name:' meaning'}]- (x) return x.name"}, {"query": "What are the occupations of people born on January 30, 1845?", "cypher": "match (m:ENTITY{name:'30 January 1845'}) <- [:Relationship{name:'date of birth'}]- ((x) - [:Relationship{name:'profession'}]->(h) return distinct h.name"}, {"query": "What are the main achievements of the graduates of the Faculty of Education in Xi'an?", "cypher": "match (:ENTITY{name:'Duncy Teachers College'}) <- [:Relationship{name:'Graduate School'}]-(p) - [:Relationship{name:'Major achievement'}]->(q) return distinct q.name limit 1"}, {"query": "Tell me about the action, comedy, crime genre films that Columbia Pictures has produced.", "cypher": "match (p:ENTITY{name:'Columbia Film Corporation'}) <--(x) -->(q:ENTITY{name:'Action Comedy Crime'}) return x.name"}, {"query": "Do you remember where the Harbin flood occurred in 1932?", "cypher": "match ((:ENTITY{name:'1932 Harbin flood'}) - [:Relationship{name:'place of occurrence'}]-> (p) return p.name"}, {"query": "What are the main works of writers who have been awarded the status of Public Interest Ambassadors?", "cypher": "match (:ENTITY{name:'Public interest image ambassador'}) <- [:Relationship{name:'Major achievement'}]- ((p),(p) - [:Relationship{name:'Major work'}]->(n) return distinct n.name"}, {"query": "I'm not sure if you'd recommend 2 peach-themed situations besides the game.", "cypher": "match (:ENTITY{name:' peaches'}) --(m) with m order by m.name where m.name <> 'game' return distinct m.name limit 2"}, {"query": "What are the occupations of people born in Linhai City, Zhejiang Province?", "cypher": "match (:ENTITY{name:'Linghai City, Zhejiang Province'}) <- [:Relationship{name:'place of birth'}]- ((p),(p) - [:Relationship{name:'profession'}]->(x) return distinct x.name limit 5"}, {"query": "Help me find a hairy-eyed plant in the genus Murano.", "cypher": "match (:ENTITY{name:'spoon'}) <- [:Relationship{name:'spoon'}]-(m), (m) - [:Relationship{name:'spoon'}]->(n) where n.name='spoon' return distinct m.name"}, {"query": "When asked what is Weijiang's profession? Can you name three?", "cypher": "match (:ENTITY{name:' when waijiang'}) <- [:Relationship{name:' Chinese name'}]-(m),(m) - [:Relationship{name:' profession'}]->(n) return n.name order by n.name limit 3"}, {"query": "I wonder if it's 360 degrees?", "cypher": "match (:ENTITY{name:'360 big rotation'}) --(p) with p order by p.name return p.name"}, {"query": "What is the most famous place for subtropical monsoon climate?", "cypher": "match (:ENTITY{name:'subtropical monsoon climate'}) <- [:Relationship{name:'climate type'}]- ((x),(x) - [:Relationship{name:'famous attractions'}]->(n) return distinct n.name limit 1"}, {"query": "What labels are appropriate for Green's Fairy Tale 1?", "cypher": "match (:ENTITY{name:'(1CD) Green Fairy Tales 1}) - [:Tag{name:'tags'}]-> (p) with p order by p.name return p.name"}, {"query": "What does she do? Where did she graduate? What is her major?", "cypher": "The name of the game is the same as the name of the game itself. The name of the game is the same as the name of the game itself."}, {"query": "Can you find 100 meters of rubbish with no more than 5 labels?", "cypher": "match (x:ENTITY{name:'100 meters away'}) - [:Tag{name:'tag'}]-> (h) with h order by h.name return h.name limit 5"}, {"query": "Did you have trouble telling me about the people in the two-tiered relationship between the Polaty and the Khati?", "cypher": "match (n:ENTITY{name:'Bolati-Zhonghati'}) -[:Relationship*1..2]->(x) where x.name <>'Roller compaction quality control' return distinct x.name"}, {"query": "What are the chemical substances with a molecular weight of 199.63? Can you name four?", "cypher": "The name of the function is the name of the function itself."}, {"query": "Do you know which films were released in 2014? Can you list 16?", "cypher": "match (:ENTITY{name:'2014'}) <- [:Relationship{name:' time of delivery'}]- (m) return m.name limit 16"}, {"query": "What kind of car weighs 2,900 kg?", "cypher": "Match (:ENTITY{name:'2900 kg'}) <- [:Relationship{name:'body weight'}]- (h) return h.name"}, {"query": "What is the name of the company in Yangon?", "cypher": "match (p:ENTITY{location:' Long Spring'}) return p.name The name of the game is"}, {"query": "I'm not sure what the Muslims are doing, but I'm not sure what the Muslims are doing.", "cypher": "match (:ENTITY{name:'Islam'}) <- [:Relationship{name:'nationality'}]-(m) - [:Relationship{name:'profession'}]->(p) return p.name order by p.name limit 3"}, {"query": "The government's work department, the office of the city commissioner of Jindal, has five levels of relations.", "cypher": "match (n:ENTITY{name:'The City of Xi'an City Council'}) - [*1..5]->(x) where x.name <> 'Government work department' return distinct x.name"}, {"query": "What are the main causes of accumulation?", "cypher": "match (:ENTITY{name:'accumulation'}) - [:Relationship{name:'main cause'}]->(m) return distinct m.name"}, {"query": "How many companies were created in 2002?", "cypher": "match (p:ENTITY{time:'2002'}) return count ((p)"}, {"query": "Find out who wrote the two books published by Hunan Science and Technology Publishing.", "cypher": "match (:ENTITY{name:'Hunan Science and Technology Publishing'}) <- [:Relationship*]-(m), (m) - [:Relationship{name:' author'}]->(n) return m.name,n.name limit 2"}, {"query": "Please tell me which works are from the same period as the Su Sheng, the water-cleaners and the wooden ones, and what labels are on each of them? Find them and list them for me in order of number of labels from most to least.", "cypher": "The following is a list of the most commonly used tags for the game of basketball:"}, {"query": "The book was published on 2001/1/1 and what is the price?", "cypher": "match (:ENTITY{name:'2001/1/1'}) <- [:Relationship{name:' time of publication'}]- ((x),(x) - [:Relationship{name:' pricing'}]->(q) return distinct q.name"}, {"query": "The website is also known for its online games, which are the most popular online games in the world.", "cypher": "match (:ENTITY{name:'bringing the most satisfying online games to players'}) <- [:Relationship{name:'site password'}]- (q) return q.name"}, {"query": "Do you know which cucumber varieties are there?", "cypher": "match (:ENTITY{name:' cucumber'}) <- [:Relationship{name:' species category'}]- (x) return x.name limit 8"}, {"query": "And the 2006 report on the work of the government of the city of Triafa, in the Florado district, where I was speaking about public education?", "cypher": "match (:ENTITY{name:'2006 Flowery Township, Getafe Township Government work report'}) --(q) with q order by q.name where q.name <> 'public' return q.name"}, {"query": "What are the reported consequences of the 2004 North Korean Long River train station explosion?", "cypher": "match ((:ENTITY{name:'2004 North Korean Longchann railway station explosion'}) - [:Relationship{name:'results'}]-> (p) return p.name"}, {"query": "Please describe the characteristics of the exhaust pipe bolt.", "cypher": "match (:ENTITY{name:' exhaust pipe bolt'}) <- [:Relationship{name:' Chinese name'}]- ((m),(m) - [:Relationship{name:' characteristics'}]->(x) return distinct x.name"}, {"query": "Can you tell me what the main prizes are for the athlete who plays as a defender on the pitch? Can you tell me three?", "cypher": "match (:ENTITY{name:' defender'}) <- [:Relationship{name:' position on the field'}]-(x) - [:Relationship{name:' main award'}]->(h) return h.name order by h.name limit 3"}, {"query": "Can you name three things about the profession of this man, born in March 1980?", "cypher": "match (:ENTITY{name:'March 1980'}) <- [:Relationship{name:' date of birth'}]-(m),(m) - [:Relationship{name:' profession'}]->(n) return n.name skip 2 limit 3"}, {"query": "What is the name of the movie/city that Ming Mei-Shing, An-Yin stars in?", "cypher": "match (:ENTITY{name:'speech/city'}) <- [:Relationship{name:'type'}]-(m), (m) - [:Relationship{name:'leading role'}]->(n) where n.name='minh may, an in' return distinct m.name"}, {"query": "Can you please translate the name of 2-dihydroxybutyric acid into English?", "cypher": "match ((:ENTITY{name:'2-dihydroxybutyric acid'}) - [:Relationship{name:'English name'}]-> (m) return m.name"}, {"query": "Social events 12.11 Shenzhen Khun New Area fire disaster What is the label?", "cypher": "match (:ENTITY{name:'12.11 Shenzhen Khanyang New Area Fire Incident'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'social event' return p.name"}, {"query": "Can you list 5 plants in the hay section?", "cypher": "match (:ENTITY{name:'hey undergraduate'}) <- [:Relationship{name:'subject'}]- (h) return distinct h.name limit 5"}, {"query": "I'm going to tell you about five major achievements of people born in 1840.", "cypher": "match (:ENTITY{name:'1840'}) <- [:Relationship{name:'date of birth'}]-(h),(h) - [:Relationship{name:'main achievement'}]->(x) return x.name order by x.name limit 5"}, {"query": "The first label for the prostate G2 solution?", "cypher": "match (:ENTITY{name:' Prostate G2 solution'}) --(m) with m order by m.name return m.name limit 1"}, {"query": "What is the current installation directory for %systemdrive%?", "cypher": "match (:ENTITY{name:'%systemdrive%'}) <- [:Relationship{name:'Current system drive'}]- (n) return distinct n.name"}, {"query": "Do you know what the profession of Michael Zimbalist is?", "cypher": "Match (:ENTITY{name:'Michael Zimbalist'}) - [:Relationship{name:'profession'}]-> (n) return distinct n.name"}, {"query": "Please help me find the stock code of Sichuan National Steel Construction Group Limited", "cypher": "match (:ENTITY{name:' Sichuan Guoyuan Construction Group Limited'}) - [:Relationship{name:' stock code'}]-> (m) return distinct m.name"}, {"query": "Where is the headquarters of China One Drag Group Limited?", "cypher": "match (:ENTITY{name:'China One Drag Group Limited'}) - [:Relationship{name:'Hall of business'}]->(n) return n.name as name union all match (:ENTITY{name:'China One Drag Group Limited'}) - [:Relationship{name:'Company nature'}]->(m) return m.name as name"}, {"query": "[Kim Jong-min directed the Korean TV series]", "cypher": "match (:ENTITY{name:'sign [Kim Shin Min directed Korean television series]'}) --(m) return m.name order by m.name"}, {"query": "Can you name me a few magnitude 4.3 earthquakes?", "cypher": "The following is a list of the most common earthquakes in the world."}, {"query": "Remember the detective of the past, you know?", "cypher": "match (n:ENTITY{name:'remembering the detective from the past'}) --(x) return x.name"}, {"query": "World Asthma Day 2013: Tianjin launches first label of the charity fund", "cypher": "match (:ENTITY{name:'2013 World Asthma Day: Tianjin establishes a charity relief fund'}) - [:Tag{name:'tag'}]-> (q) with q order by q.name return q.name limit 1"}, {"query": "Can you tell me the name of the relationship between the two layers of the school?", "cypher": "The following pages link to The Earthquake and the Earthquake:"}, {"query": "Do you know what chemical is CAS number 5122-82-7?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "Help me find the synonyms and antonyms that are returned.", "cypher": "match (:ENTITY{name:'Relationship{name:'near term'}) ->(n) return n.name as name union all match (:ENTITY{name:'Relationship{name:'near term'}) ->(m) return m.name as name"}, {"query": "The designer of the plane pilot's bounce seat, who died in 2002, lists 10 other achievements.", "cypher": "match (:ENTITY{name:'2002'}) <- [:Relationship{name:'date of death'}]-(h),(h) - [:Relationship{name:'main achievement'}]->(q) where q.name <> 'Research aircraft pilot bounce seat' return distinct q.name limit 10"}, {"query": "As far as I know, the book on esophageal imaging is written by Li Wenhua and Liu Yinjie, published by People's Health Publishing, and I would like to know six more things about this book, if you can help me find out.", "cypher": "match (n:ENTITY{name:'Epiphany'}) -->(h) with h order by h.name where h.name <> 'Li Wenhua Chenrenjie' and h.name <> 'People's Health Publishing' return h.name limit 6"}, {"query": "What are the four types of relationships that are associated with the Zhejiang campus of Taiyuan University?", "cypher": "The following pages link to The University of the Pacific:"}, {"query": "What do you know about the shooter 007 Legends?", "cypher": "match (:ENTITY{name:'007 legend'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'shooting game' return p.name"}, {"query": "Do you know what game is on the list of games in SwordNet 3?", "cypher": "match (:ENTITY{name:'swordnet3'}) <- [:Relationship{name:'list'}]- (q) return distinct q.name"}, {"query": "I wonder what the big motivational reality shows are?", "cypher": "match (x:ENTITY{name:'large motivational reality show'}) <- [:Relationship{name:' type'}]- (q) return q.name"}, {"query": "Do you know anything else about the flame-inducing tides besides the arthropod door? Help me find 5 information in 2 layers.", "cypher": "match (:ENTITY{name:' flame to the tide'}) - [*1..2]-(p) where p.name <> ' limbs door' return p.name limit 5"}, {"query": "Which schools are the same type of schools as the Taij\u014d Coal School, and what are the labels of each school?", "cypher": "match (n:ENTITY{name:'Tahara Coal School'}) - [:Relationship{name:'School type'}]->(:ENTITY) <- [:Relationship{name:'School type'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count(r) as c, collect(r.name) BY ORDER c DESC "}, {"query": "I'm not sure if you can tell me if Elena Gebel is a cook by profession.", "cypher": "match (:ENTITY{name:'Ailena Gerber'}) <- [:Relationship{name:'Chinese name'}]-(h),(h) - [:Relationship{name:'profession'}]->(x) return distinct x.name"}, {"query": "What is the shortest relationship path between Jiang Yao and Zhao Qin in the two layers?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'Jiao Yao'}) - [*..2]-(b:ENTITY{name:'Jiao Yao'})) return count ((p) The number of paths is the same as the number of paths used in the previous example."}, {"query": "Do you know where the headquarters of Huang Energy Sichuan Hydroelectric Co. Ltd. is?", "cypher": "match (:ENTITY{name:'Hua Energy Sichuan Hydroelectric Co. Ltd'}) <- [:Relationship{name:'company name'}]-(n) - [:Relationship{name:'headquarters location'}]->(q) return distinct q.name"}, {"query": "I'm not sure if it's possible to say that Devon Haasson has a career, but not an actor and a voiceover?", "cypher": "match (n:ENTITY{name:'Deng Xiaosheng'}) - [:Relationship{name:'profession'}]->(h) where h.name <> 'actor' and h.name <> 'voice' return distinct h.name limit 1"}, {"query": "Which cities are included in the National Social and Economic Development Plan?", "cypher": "match (:ENTITY{name:'National social and economic development plan single city'}) - [:Relationship{name:'list'}]->(m) return distinct m.name"}, {"query": "What is the shortest path between Luca Antonielli and Brad Jones on the second floor?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "11 G101 Graph Application - Calculator of the Pi-Fat Steel Strength How well do you know this book?", "cypher": "match (:ENTITY{name:'11G101 Graphing application-Pygmalion steel braid calculator'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'books' return m.name"}, {"query": "What does tail tattoo mean? What cities are more popular?", "cypher": "match (:ENTITY{name:'Taekyu [Chinese traditional festival]'}) - [:Describe{name:'Tag'}]->(n) return n.name as name union all match (:ENTITY{name:'Taekyu [Chinese traditional festival]'}) - [:Relationship{name:'Popular area'}]->(m) return m.name as name"}, {"query": "What are the other major achievements of Randy Larson, who won the Science Research and Development Award?", "cypher": "match (:ENTITY{name:'Randy Larson'}) - [:Relationship{name:' Major achievements'}]-> (x) with x order by x.name where x.name <> 'President of the American Psychological Association of the Midwest' return x.name"}, {"query": "I wonder if the companies that operate in Nanjing are all famous?", "cypher": "match (p:ENTITY{location:' Nanjing'}) return p.name"}, {"query": "What else do you know about room air conditioners? Find out 4 things about them in the 2nd level.", "cypher": "match (:ENTITY{name:' room air regulator'}) - [*1..2]-(p) where p.name <> 'life' return distinct p.name limit 4"}, {"query": "What is the shortest relationship path between the two films?", "cypher": "Match p=allshortestpaths (((a:ENTITY{name:'Relationship*..2]-(b:ENTITY{name:'Relationship')))) return count ((p) The following is a list of all the episodes of the television series The Simpsons."}, {"query": "What clubs are in the same country as Pasqualina? What are the other clubs with different labels? Please list them in order of number of clubs, from small to large.", "cypher": "match (n:ENTITY{name:'Paskiannina Football Club'}) - [:Relationship{name:'country'}]->(:ENTITY) <- [:Relationship{name:'country'}]-(m:ENTITY), (r:ENTITY) <- [:Tag]-(m:ENTITY) return m.name, count ((r) as c, collect ((r.name) BY ORDER c)"}, {"query": "What important events happened to Deng Wei, a member of the Chinese delegation to the 2010 Asian Games for the Disabled in Guangzhou?", "cypher": "match (:ENTITY{name:'Paying away, male, member of the Hong Kong delegation to the 2010 Asian Games for Disabled People in Guangzhou\u3002'}) <- [:Describe{name:'describe'}]-(h) - [:Relationship{name:'important event'}]->(n) return distinct n.name"}, {"query": "Please introduce the five tags for the 2023 Hangzhou Asian Games.", "cypher": "match (:ENTITY{name:'2023 Hangzhou Asian Games'}) - [:Tag{name:'tag'}]-> (n) return distinct n.name limit 5"}, {"query": "What is the total length of the American M4 carbine?", "cypher": "match (:ENTITY{name:'American M4 carbine gun'}) <- [:Relationship{name:'Chinese name'}]-(p) - [:Relationship{name:'full gun length'}]->(n) return distinct n.name"}, {"query": "Search for her graduation and career paths, and what is her current job?", "cypher": "match (:ENTITY{name:'\u6625\u82d7'}) - [:Relationship{name:'Graduate School'}]->(n) return n.name as name union all match (:ENTITY{name:'\u6625\u82d7'}) - [:Relationship{name:'professional direction'}]->(m) return m.name as name union all match (:ENTITY{name:'\u6625\u82d7'}) - [:Relationship{name:'position'}]-(r>) return r.name as name"}, {"query": "Who are the military graduates of Huangpu Military Academy?", "cypher": "match (:ENTITY{name:'Hungary Military College'}) <- [:Relationship{name:'Graduate School'}]-(m) return distinct m.name"}, {"query": "I'm not sure if I can get a copy of the book, but I'm not sure if I can get a copy of the book.", "cypher": "match (:ENTITY{name:'0-2 years old baby early learning card'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "What kind of mixing effects is used in 101 Spotted Dogs?", "cypher": "match ((:ENTITY{name:'101 spotted dog'}) - [:Relationship{name:'mixed sound'}]-> (m) return m.name"}, {"query": "The Republic of Chad belongs to which continent?", "cypher": "match (:ENTITY{name:'Republic of Chad'}) - [:Relationship{name:'country'}]->(m) return distinct m.name"}, {"query": "The first thing I want to do is to get the information on the 024 full-time living facility.", "cypher": "match (:ENTITY{name:'024 full-time living organism'}) --(q) with q order by q.name where q.name <> 'real estate' return q.name"}, {"query": "What are the public secondary schools in Daqing City?", "cypher": "match (:ENTITY{name:'Khongshan City'}) <- [:Relationship{name:'the area'}]-(m), (m) - [:Relationship{name:'category'}]->(n) where n.name='public school' return distinct m.name"}, {"query": "Please tell me which of the five relationships involved in the three levels of Nero O'Donnell is good?", "cypher": "The following is a list of all the different ways The Greatest Showman is credited in the database:"}, {"query": "Shanghai Customs Inspection Technology Co., Ltd. has been established for a long time, do you know the exact timing of the issuance?", "cypher": "match ((:ENTITY{name:'Shanghai Collateral Technology Co. Ltd'}) - [:Relationship{name:'Delivery time'}]-> (x) return x.name"}, {"query": "Who has the same date of birth as Metge Nicolas, and who has a tag?", "cypher": "The following is a list of all the different ways Metge Nicolas is credited in the database:"}, {"query": "Do you know the middle school guy? Can you say the first one?", "cypher": "match (:ENTITY{name:'guy high school'}) --(p) return p.name order by p.name limit 1"}, {"query": "Do you know about Hong Valley Mountain? Find out about the other 10 information in the 2nd level, apart from the information about the location outside Linzhou.", "cypher": "match (:ENTITY{name:'\u6d2a\u8c37\u5c71'}) - [:Relationship*1..2]->(p) where p.name <> '15 km southwest of Linzhou city' return p.name limit 10"}, {"query": "What is the maximum power of the 13 wheeled assault vehicles in the army?", "cypher": "match ((:ENTITY{name:'13 wheeled assault vehicle'}) - [:Relationship{name:'maximum power'}]-> (n) return n.name"}, {"query": "What is the shortest relationship between the 50mm and MP5 rifle?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'50-style shotgun'}) - [*..2]-(b:ENTITY{name:'MP5 series shotgun'})) return count ((p)"}, {"query": "What can you say about the relationship between the long-term deal and the third tier of the national debt label?", "cypher": "match (n) <- [:Tag*3{name:'tag'}]- ((p:ENTITY{name:'long-term deal in government bonds'}) RETURN distinct n.name limit 2"}, {"query": "The information of Coldheart, can you introduce me to three other people besides the footballers?", "cypher": "match (:ENTITY{name:' coldhearted'}) --(m) with m order by m.name where m.name <> 'footballer' return distinct m.name limit 3"}, {"query": "Please tell me the representative work of Yu Yong-Wei, can I have three besides the ordinary world and a servant and two masters?", "cypher": "match (n:ENTITY{name:'Yu Yong-chi'}) - [:Relationship{name:'main works'}]->(h) with h order by h.name where h.name <> 'ordinary world' and h.name <> 'one servant second master' return h.name limit 3"}, {"query": "What else do you know about Ryderberg besides being a geneticist?", "cypher": "match (:ENTITY{name:'Leatherberg'}) - [:Relationship*1..2]-(p) where p.name <> 'geneticist' return p.name limit 10"}, {"query": "I need a simple Chinese version of the plastic composite tube with card-pressure tube. Can I have three more related content?", "cypher": "match (:ENTITY{name:'Plastic composite tubing with card-pressure tube'}) --(m) with m order by m.name where m.name <> 'simplified Chinese' return distinct m.name limit 3"}, {"query": "Do you know the name of the game with the H5 game theme?", "cypher": "match (:ENTITY{name:'H5 game fighter'}) <- [:Relationship{name:'subject'}]- (h) return distinct h.name"}, {"query": "Do you know which famous alumni of schools with the names Mind Chun-Tseol, Stop the Good, Boku-Ryu-Ryu, Self-Reliance?", "cypher": "match (:ENTITY{name:'Minded respectful, stop being so good, scholarly, smart, self-assured'}) <- [:Relationship{name:'curriculum'}]- ((h) - [:Relationship{name:'known alumni'}]->(n) return distinct n.name limit 10"}, {"query": "Besides a topographic landscape, can you tell me five things you know about the two levels of the West Hills Hole?", "cypher": "match (:ENTITY{name:'Western Hills Hole'}) - [*1..2]->(p) where p.name <> 'topographic landscape' return distinct p.name limit 5"}, {"query": "I asked if the author of the book was a cripple, what was his nickname?", "cypher": "match (:ENTITY{name:'spoonful'}) <- [:Relationship{name:'author'}]-(m),(m) - [:Relationship{name:'spoonful'}]->(x) return distinct x.name limit 1"}, {"query": "Can you recommend a few 512MB phones?", "cypher": "match (:ENTITY{name:'512MB'}) <- [:Relationship{name:'body memory'}]- (p) return distinct p.name"}, {"query": "I'm looking for information on the relationship between Yue Da and Yong Uncle Satong Yue Zhen Mountain, who gave twelve questions to his eight-day-long Minshuang 2nd level.", "cypher": "match (n:ENTITY{name:'With the eternal uncle Satoshi Yuriyama, the twelve-pointed star of his eight-days's journey'}) - [:Relationship*1..2]->(x) where x.name<>'' return distinct x.name"}, {"query": "Can you name the five Chinese words that are used in Chinese?", "cypher": "match (x:ENTITY{name:'Hank'}) <- [:Relationship{name:'ethnic group'}]- ((m) - [:Relationship{name:'word'}]->(p) return distinct p.name limit 5"}, {"query": "Do you have a description of the drug within the 2-layer relationship of the medical drug MAPPAN?", "cypher": "match (n:ENTITY{name:'Mapu'an'}) - [:Relationship*1..2]->(x) where x.name <> 'medicine' return distinct x.name"}, {"query": "Can you tell me which relationships are covered in the three layers of the Natural Disaster Knowledge Guide?", "cypher": "The following pages link to The Unknowns:"}, {"query": "I'm going to have to ask you about this Chinese man, his representative work, do you have any information?", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(n),(n) - [:Relationship{name:'representative work'}]->(x) return n.name,x.name skip 3 limit 1"}, {"query": "Can you tell me the author of this book for children who start reading in English?", "cypher": "match (:ENTITY{name:'Children's English reading for beginners'}) <- [:Relationship{name:'book name'}]- ((p) - [:Relationship{name:'author'}]->(n) return distinct n.name"}, {"query": "What is the flagship model of the best selling 09 MX 2.5 automatic?", "cypher": "match (x:ENTITY{name:'09 model of the Mazda 2.5 automatic flagship'}) --(p) with p order by p.name where p.name <> 'on sale' return p.name"}, {"query": "What labels do 10,000 scientific problems entail outside of organizational institutions? (list ten)", "cypher": "match (:ENTITY{name:'10000 scientific puzzles'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> 'organization' return m.name limit 10"}, {"query": "Help me find out the author of the book, Xu Yong, about the principles of industrial communication technology and the other 7 steps in applying them in the 3 layers of this book.", "cypher": "match (:ENTITY{name:' Industrial communication technology principles and applications'}) - [*1..3]-(p) where p.name <> '\u8bb8\u52c7' return distinct p.name limit 7"}, {"query": "What is the shortest relationship path between the two layers of chicken and the chicken of the plant?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'sweet potatoes'}) - [*..2]-(b:ENTITY{name:'sweet potatoes'})) return count ((p)"}, {"query": "I'm going to tell you about the three 09 new wedding dresses.", "cypher": "match (:ENTITY{name:'09 new wedding dress'}) - [:Tag{name:'label'}]-> (h) with h order by h.name return h.name limit 3"}, {"query": "The school has 23 PhDs and 1 professional degree, what are its characteristics?", "cypher": "match (:ENTITY{name:'23(first level subject),1 ((special degree) '}) <-[:Relationship{name:'doctorate'}]-(q) -[:Relationship{name:'attribute'}]->(m) return m.name skip 1 limit 3"}, {"query": "Help me find the five encyclopedic plants", "cypher": "The name of the genus is derived from the Latin word for \"lily\"."}, {"query": "The book is a collection of short stories, which are written by the author himself.", "cypher": "match (n:ENTITY{name:'subject'}) -[:Relationship*1..2]->(x) where x.name<>'' return distinct x.name"}, {"query": "Which of the five famous places that are open from 8:00 to 16:30 is good?", "cypher": "match (:ENTITY{name:'8:00 to 16:30'}) <- [:Relationship{name:'open hours'}]- ((q),(q) - [:Relationship{name:'famous attractions'}]->(p) return distinct p.name limit 5"}, {"query": "Do you know the name of the Chinese marshal general awarded the full record you are looking at?", "cypher": "match ((:ENTITY{name:'The full record of the award of the Chinese Marshal General's Medal'}) - [:Relationship{name:' alias'}]-> (h) return h.name"}, {"query": "Do you know the name of the band that Mark and Travis formed after LINK182 broke up?", "cypher": "match (:ENTITY{name:'LINK182 formed after Mark and Travis broke up'}) <- [:Relationship{name:'band'}]- (x) return distinct x.name"}, {"query": "I want to know more about what is the West Bank?", "cypher": "match (:ENTITY{name:'swimming'}) --(m) return m.name order by m.name"}, {"query": "Do you remember when the 2011 Chinese Football Association Amateur League was held?", "cypher": "match ((:ENTITY{name:'2011 Chinese Football Association Amateur League'}) - [:Relationship{name:'time of holding'}]-> (h) return h.name"}, {"query": "The first round of the political exam in the A-Level in the state of Hubei in the autumn of 2015 was held in the city of Hubei.", "cypher": "match (:ENTITY{name:'05\u79cb\u542f\u4e1c\u9ad8\u8003\u653f\u6cbb\u4e00\u8f6e A'}) --(m) with m order by m.name return distinct m.name skip 1 limit 5"}, {"query": "What happened on November 11, 2014?", "cypher": "match (:ENTITY{name:'November 11, 2014'}) <- [:Relationship{name:'time of event'}]- (q) return distinct q.name"}, {"query": "What is the shortest path between the two layers of the net and the net of the net?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:'financial newsnet[website]'}) - [:Relationship*..2]-(b:ENTITY{name:'he is healthy and healthy'})) return count ((p)"}, {"query": "I'm not sure what kind of Ethernet medium is fully dual-functional.", "cypher": "The following is a list of the most commonly used functions in the database:"}, {"query": "The year in which the house of the Yuletide Monk was built?", "cypher": "match (:ENTITY{name:'\u7389\u6545\u5c45'}) <- [:Relationship{name:'Chinese name'}]- ((x),(x) - [:Relationship{name:'created time'}]->(q) return distinct q.name"}, {"query": "In the words of the author, \"The most important thing is to understand the meaning of the word 'religion' and to understand the meaning of the word 'religion'.", "cypher": "match (n:ENTITY{name:'Relationship*1..2]->(x) where x.name <>'' return distinct x.name"}, {"query": "Please tell me which unit is hosting the 4th Hebei Provincial Skin Science and Exchanges?", "cypher": "match (:ENTITY{name:' the fourth Hebei Provincial Skin Science and Education Conference'}) <- [:Relationship{name:' Chinese name'}]- ((h) - [:Relationship{name:' host unit'}]->(x) return distinct x.name limit 1"}, {"query": "Help me find two chicken dishes.", "cypher": "match (:ENTITY{name:' chicken'}) <- [:Relationship{name:' main ingredient'}]-(m) return distinct m.name limit 2"}, {"query": "Is it possible that I understand ((2012) researching English reading comprehension literacy 100 [high score]?", "cypher": "match (:ENTITY{name:'(2012) researching English reading comprehension literacy 100 articles [high score]'}) --(q) with q order by q.name return q.name"}, {"query": "The story of the couple is based on the story of the famous Chinese poet, who was born in the year of the same name.", "cypher": "match (:ENTITY{name:' for wine [\u79cb\u8a69\u4f5c]'}) - [:Relationship{name:' date of creation'}]-> (m) return distinct m.name"}, {"query": "The article was written by a journalist from the South African government, who wrote a blog about the 10/15 Zambia coal mine conflict.", "cypher": "match (:ENTITY{name:'10\u00b715 Zambia coal mining conflict'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name limit 1"}, {"query": "Is there really a company called Insec Technology [Beijing] Limited?", "cypher": "match (n:ENTITY{name:'Insec Technologies [Beijing] Ltd'}) where n is not null return 1"}, {"query": "What is the meaning of the word \"guaba\"?", "cypher": "match (:ENTITY{name:'guapo'}) - [:Relationship{name:'source'}]->(n) return n.name as name union all match (:ENTITY{name:'guapo'}) - [:Relationship{name:'interpretation'}]->(m) return m.name as name"}, {"query": "Why not put a label on 3-methacrylate-5-methylmethacrylate?", "cypher": "match (:ENTITY{name:'3-methacrylate-5-methyl methacrylate'}) - [:Tag{name:'label'}]-> (m) with m order by m.name return m.name"}, {"query": "Do you know which earthquake hit Zhejiang Province in the Dehaong-guang Autonomous Region?", "cypher": "match (:ENTITY{name:'Dehong-dong people's autonomous region of Zhejiang Province'}) <- [:Relationship{name:'quake location'}]- (n) return n.name"}, {"query": "The book is published by the publisher of the magazine Electrical Principles.", "cypher": "match (:ENTITY{name:'Electrical engineering principles' (including the exam syllabus) (plain) '}) <- [:Relationship{name:' book name'}]- ((p) - [:Relationship{name:' publisher'}]->(n) return distinct n.name limit 3"}, {"query": "Can you tell me the name of the landlord?", "cypher": "match (x:ENTITY{name:' roommates'}) - [:Relationship{name:' alias'}]-> (p) return distinct p.name"}, {"query": "Can you tell me which schools have an international ministry?", "cypher": "match (:ENTITY{name:' international department'}) --(p) return p.name skip 2 This is a list of all the different ways P.N.A. is credited in the database."}, {"query": "Apart from badminton, what are the other two labels that Mr. Kawamura owns?", "cypher": "match (:ENTITY{name:'Karaoke'}) - [:Tag{name:'tag'}]-> (p) with p order by p.name where p.name <> 'featherball' return p.name limit 2"}, {"query": "Can you name three teaching and research workers and introduce them?", "cypher": "match (:ENTITY{name:'teacher and researcher'}) <- [:Relationship*]-(m),(m) - [:Describe{name:'describe'}]->(n) return distinct m.name,n.name limit 3"}, {"query": "Help me find 20 countries with AAAAA-level sites", "cypher": "match (:ENTITY{name:'AAAAA level'}) <- [:Relationship{name:'attraction level'}]-(h) with h order by h.name limit 20? return h.name"}, {"query": "Please help me find the work of director Sun Hee", "cypher": "match (:ENTITY{name:'Sun Ice, Wang Jian as '}) <- [:Relationship{name:' Director'}]-(m) return distinct m.name"}, {"query": "Do you know which tourist attractions are open all year round? Can you name five?", "cypher": "match (:ENTITY{name:'open all year round'}) <- [:Relationship{name:'open hours'}]- ((p) - [:Relationship{name:'famous attractions'}]->(n) return distinct n.name limit 5"}, {"query": "The 10th Millennium Cures are not included in the list of other achievements, including the Chinese Medical Experts Association.", "cypher": "match (:ENTITY{name:'Kiliang Qu'ish'}) <- [:Relationship{name:'also known as '}]-(h) - [:Relationship{name:'main achievements'}]->(q) where q.name <> 'Federation of Chinese and Arabic Experts' return distinct q.name limit 10"}, {"query": "Who among you is a medical graduate from Sapporo University?", "cypher": "match (:ENTITY{name:'Sappo Medical University'}) <- [:Relationship{name:' Graduate School'}]-(m), (m) - [:Relationship{name:' Profession'}]->(n) where n.name='author' return m.name"}, {"query": "I wonder what the names of all the novels featured in the Files of Myrna are?", "cypher": "match (:ENTITY{name:'Mine is hidden in the file'}) <- [:Relationship{name:'author'}]- ((m) - [:Relationship{name:'Chinese name'}]->(n) return distinct n.name"}, {"query": "The species is also known as the \"Snowbird\", which is a species of flowering plant in the family Sphingidae.", "cypher": "match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'distribution area'}]->(n) return n.name as name union all match (:ENTITY{name:'Relationship'}) - [:Relationship{name:'protection level'}]->(m) return m.name as name"}, {"query": "Can you name five magazines that have a 16th edition?", "cypher": "match (x:ENTITY{name:'big 16 open'}) <- [:Relationship{name:'open'}]- (q) return q.name limit 5"}, {"query": "Do you know how much the total prize money is in a $200,000 contest? Can you name five?", "cypher": "match (:ENTITY{name:'200,000 dollars'}) <- [:Relationship{name:'total prize'}]- (m) return m.name limit 5 The game is played with the player's name and the name of the player."}, {"query": "Please tell me what the name of the rule issued on 2014-06-04 is?", "cypher": "match (:ENTITY{name:'2014-06-04'}) <- [:Relationship{name:' time of issue'}]- (p) return distinct p.name"}, {"query": "The following is a list of the works that have been published by the following authors:", "cypher": "match (n:ENTITY{name:' to say that the semantic research literature is integrated: current and contemporary volumes'}) - [:Relationship*1..2]->(x) where x.name <> 'writer's publisher' return distinct x.name"}, {"query": "Who is the main character in Malay?", "cypher": "Match (:ENTITY{name:'Malaysian [1998 American film]'}) - [:Relationship{name:'starring'}]->(n) return n.name"}, {"query": "Can you tell us about Jamie, N.A.", "cypher": "match (:ENTITY{name:'Jamie, N\u00b7A.'}) --(h) return distinct h.name"}, {"query": "The following is a list of six information that I have found in the three layers of Mirror Dream Life.", "cypher": "match (:ENTITY{name:'Mironma Tenshi'}) - [*1..3]-(p) where p.name <> 'Kyu-nan Fine Arts Publishing' return p.name limit 6"}, {"query": "Apart from the two works of hospital jokes and the playful youth, can you tell me about three other representative works of Julin Yang?", "cypher": "match (n:ENTITY{name:'Julian'}) - [:Relationship{name:'representative work'}]->(h) with h order by h.name where h.name <> 'hospital joke' and h.name <> 'young fool' return h.name limit 3"}, {"query": "Please help me understand about the Yukon.", "cypher": "match (q:ENTITY{name:'Oakland'}) --(x) return x.name order by x.name"}, {"query": "What chemical is the EINECS number 210-921-1?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "What is the scope of foreign names with composite numbers?", "cypher": "match (h:ENTITY{name:'Composite number'}) <- [:Relationship{name:' foreign language name'}]-(m),(m) - [:Relationship{name:' scope of application'}]->(p) return distinct p.name"}, {"query": "Please tell me about the hotel in Baok Lake Landscape.", "cypher": "match (:ENTITY{name:'Pack Lake Landscape Hotel'}) --(q) return q.name order by q.name"}, {"query": "The first is that the former secretary of the Five Poetry Rites, who was later seen by Blue Creek, gave information about the three-tier relationship.", "cypher": "match (n:ENTITY{name:'payment former secretary late out blue stream see you later'}) - [:Relationship*1..3]->(x) where x.name <>'five-line' return distinct x.name"}, {"query": "I would like to know the details of the 101+1 bombing collection?", "cypher": "match (:ENTITY{name:'101+1 explosion compilation'}) --(p) with p order by p.name where p.name <> 'game work' return p.name"}, {"query": "What chemicals can dissolve in carbon dioxide, titanium dioxide and tetrahydrogen dioxide?", "cypher": "match (:ENTITY{name:'di-sulfur carbon, titanium and tetrahydrate carbon'}) <- [:Relationship{name:'solved in'}]- (h) return h.name"}, {"query": "Do you know which of the representative works of Indian Chinese artists are representative of the Chinese art?", "cypher": "match (:ENTITY{name:'swinging'}) <- [:Relationship{name:'swinging'}]- (p) return p.name order by p.name"}, {"query": "What are the main works of Wang Daqiang?", "cypher": "match (:ENTITY{name:'Chang Daqiang[Qing Dynasty scholar]'}) - [:Relationship{name:'main work'}]->(m) return distinct m.name"}, {"query": "The first book in the series, Baby Enlightenment Stories for 0-3 year olds, is a mystery?", "cypher": "match (x:ENTITY{name:'0-3 years old baby enlightenment story collection'}) --(q) with q order by q.name return distinct q.name skip 1 limit 1"}, {"query": "I'm going to ask you about a piece called CB, what is it called?", "cypher": "match (:ENTITY{name:'CB'}) <- [:Relationship{name:'work alias'}]- (p) return p.name"}, {"query": "Can you tell me what the relationship names are in the two layers involved? Can you tell me three?", "cypher": "match path=(n) <- [:Relationship*2]- ((p:ENTITY{name:'Hayanama Twin Stars'}) UNWIND relationships(path) AS rel return distinct rel.name limit 3 The name of the game is unknown"}, {"query": "Do you know what the East Jiangsu International Tourist Resort is like? Please tell me about it.", "cypher": "match (h:ENTITY{name:'Tongjiangsun International Tourist Resort'}) --(q) return distinct q.name"}, {"query": "Ask the phone booth, which area code is 0943 and which area code is 0943?", "cypher": "match ((:ENTITY{name:'0943'}) - [:Relationship{name:' belongs to '}]-> (n) return n.name"}, {"query": "The spelling of which national road is 101 guo dao?", "cypher": "The name of the game is \"Relationship\" (Relationship)"}, {"query": "In addition to the publications, 1+1 easily won the title; Optimized training: 8th grade history ranked first tag is?", "cypher": "match (:ENTITY{name:'1+1 easily crowned; optimized training: 8th grade history'}) - [:Tag{name:'tag'}]-> (m) with m order by m.name where m.name <> ' publications' return m.name limit 1"}, {"query": "Do you know the three-letter abbreviation published on 17k Novel Online?", "cypher": "match (m:ENTITY{name:'three-days'}) --(p) with p order by p.name where p.name <> '17k novel network' return p.name"}, {"query": "Please provide information on the type of business that Blue Light Technology Limited was originally registered under.", "cypher": "match ((x:ENTITY{name:'Bush\u014d City Blue Light Technology Co. Ltd'}) - [:Relationship{name:' enterprise type'}]-> (n) return n.name"}, {"query": "Do you know who the main users of the VL80 electric locomotive are?", "cypher": "match (:ENTITY{name:'VL80 electric locomotive'}) - [:Relationship{name:'main user'}]-> (x) return distinct x.name"}, {"query": "Which category of tags belong to the core number of four core threads? List five?", "cypher": "match (:ENTITY{name:'four cores four threads'}) <- [:Relationship{name:'number of cores'}]-(h) - [:Tag{name:'tag'}]->(p) return distinct p.name limit 5"}, {"query": "Do you know if the national is Han Chinese, the academic is a gentleman, or the CCP member and engineer is a nickname?", "cypher": "match (:ENTITY{name:'Han Chinese, gentleman, member of the Communist Party of China, engineer\u3002'}) <- [:Describe{name:'description'}]-(p),(p) return distinct p.name limit 3"}, {"query": "I need all the information about Malol Zulfiani, Maloluzhi in English.", "cypher": "match (n:ENTITY{name:'malluoliuzhi'}) - [:Relationship*]->(x) where x.name <>'maluoliuzhi' return distinct x.name"}, {"query": "The Chinese language name for Saviji Dimba is Saviji Dimba, and the Chinese language name for Saviji Dimba is Saviji Dimba.", "cypher": "match (n:ENTITY{name:'Saviji Dimba'}) - [*1..2]->(x) where x.name <>'s Chinese name' return distinct x.name"}, {"query": "Which organization is hosting the 2012 Industrial Design and User Experience Conference?", "cypher": "match ((:ENTITY{name:'2012 Industrial Design and User Experience Conference'}) - [:Relationship{name:' Hosted by'}]-> (p) return p.name"}, {"query": "The asteroid was discovered on November 20, 2007.", "cypher": "match (:ENTITY{name:'November 20, 2007'}) <- [:Relationship{name:' time of discovery'}]- (m) return m.name"}, {"query": "What generation of poet was Chen Han?", "cypher": "match (:ENTITY{name:'Chen Han'}) - (m) return distinct m.name"}, {"query": "If you don't know who he is, what clubs he played in? Name 10 teams?", "cypher": "match (:ENTITY{name:' not specified'}) <- [:Relationship{name:' graduate school'}]-(n),(n) - [:Relationship{name:' formerly active'}]->(m) return distinct m.name limit 10"}, {"query": "I would like to know about 100 philosophical poems selected by the relevant characteristic tags?", "cypher": "match (:ENTITY{name:'100 philosophical poems selected'}) - [:Tag{name:'tags'}]-> (h) with h order by h.name return h.name"}, {"query": "I want to see five romance novels, can I?", "cypher": "match (:ENTITY{name:'speech'}) <--(n) return n.name limit 5 is the name of the game"}, {"query": "Do you know what kind of jobs Zhou Tanhui has had? Can you name three?", "cypher": "match (m:ENTITY{name:'Zhou Danqi'}) <--(n) -[:Relationship{name:'profession'}]->(h) return distinct h.name limit 3"}, {"query": "I'm going to have to ask you to give me a copy of your farewell poem.", "cypher": "match (:ENTITY{name:'Relationship{name:'represents work'}]-> (q) return q.name limit 1"}, {"query": "I learned that the Creative Education Lab is a research institute in Beijing's beachside area, and I was told six more things about it.", "cypher": "match (n:ENTITY{name:'Creative Education Lab'}) -->(h) with h order by h.name where h.name <> 'Beach District of Beijing City' and h.name <> 'Scientific Research Institution' return h.name limit 6"}, {"query": "What is the shortest distance between the Great Wall and the Red Square?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' at Red Mei [Vice-Dean of the Central Academy of Music]'}) - [*..2]-(b:ENTITY{name:' Zhang Changming [Member of the Chinese Dramatists Association]'})) return count ((p)"}, {"query": "Check to see what is the density of 3-hydroxy-5-hydroxyethylene?", "cypher": "match ((:ENTITY{name:'3-methacrylate-5-methacrylate acetate'}) - [:Relationship{name:'density'}]-> (x) return x.name"}, {"query": "What is the shortest relationship path between the tiger-lined short-spaced alveoli and the yellowish short-spaced alveoli in the 2nd layer?", "cypher": "match p=allshortestpaths (((a:ENTITY{name:' tiger-stripe short flat-mouthed shark'}) - [*..2]-(b:ENTITY{name:' yellow-billed short-mouthed shark'})) return count ((p)"}, {"query": "What are the specific theories of knowledge that mathematics contains? Can you list 20?", "cypher": "match (:ENTITY{name:'mathematics'}) <- [:Relationship{name:'applied subject'}]- (n) return n.name limit 20"}, {"query": "Can you help me understand who wrote the music for Zhang Xiaohua's song \"Taoxian\"?", "cypher": "match ((:ENTITY{name:'Relationship's song) }) - (x) return x.name"}, {"query": "Can you tell me which brands are in a relationship with Shamoni for Tier 5 labels?", "cypher": "The name of the game is \"Shamoni\" (Shamoni)"}, {"query": "I'm wondering which book has the barcode number 9787806904213?", "cypher": "The following is a list of the most commonly used tags for the game."}, {"query": "And what do you know of the altitude of Managua?", "cypher": "Match ((:ENTITY{name:'Managua'}) - [:Relationship{name:'Altitude'}]-> (n) return n.name"}, {"query": "Do you know the name of the exhibition hall at the 2012 European International Aluminium Expo in Italy?", "cypher": "match ((:ENTITY{name:'2012 European [Italy] International Aluminum Industry Exhibition'}) - [:Relationship{name:'name of the exhibition hall'}]-> (x) return x.name"}, {"query": "A word of introduction.", "cypher": "match (:ENTITY{name: '.a file'}) --(m) with m order by m.name return m.name skip 1 limit 1"}, {"query": "Can you find two tasty sweet foods?", "cypher": "Match (n:ENTITY{name:'sweet'}) <-[:Relationship{name:'flavor'}]- (mn) return mn.name limit 2 This is a list of all the different ways Mn.name is credited in the database."}, {"query": "Help me find two four-word poems by Cao Cao.", "cypher": "match (:ENTITY{name:' Cao Cao'}) <- [:Relationship{name:' author'}]-(m), (m) - [:Relationship{name:' literary genre'}]->(n) where n.name='four-word poem' return distinct m.name limit 2"}, {"query": "And what do you know of Zul-Qayyin, the creator of what?", "cypher": "match (:ENTITY{name:'swing'}) <- [:Relationship{name:'swing'}]- (q) return q.name order by q.name"}, {"query": "Please tell me what is the Chinese translation of world in one day?", "cypher": "match (:ENTITY{name:'world in one day'}) <- [:Relationship{name:'foreign name'}]- (h) return h.name"}, {"query": "How many episodes of the TV series Pure Love?", "cypher": "match ((:ENTITY{name:' pure love'}) - [:Relationship{name:' set'}]-> (n) return n.name"}, {"query": "I'm wondering if you can name the relationship between the two layers that are covered by the three super waves.", "cypher": "The following is a list of all the different ways The Great Wave is credited in the database:"}, {"query": "Can you name five messages from Austria's Ernst?", "cypher": "match (n:ENTITY{name:'Erbster Ernst'}) - [*]->(x) where x.name<>'Austria' return distinct x.name limit 5"}, {"query": "Containerele: What is a music group?", "cypher": "match (:ENTITY{name:'Containerele\u00b7 Mordecai Choir cool'}) --(m) with m order by m.name return m.name"}, {"query": "What is the name of the Chinese western shark?", "cypher": "match (:ENTITY{name:'The Chinese Western Summer Monkey\u3002'}) --(x) return distinct x.name"}, {"query": "I want to know 10 things about the 1st Pearl Harbor.", "cypher": "match (:ENTITY{name:'1 Chicken Crossing'}) --(q) with q order by q.name return q.name limit 10"}, {"query": "The following three works from the region of Korea provide information about the embroidery that you want to be tamed.", "cypher": "match (:ENTITY{name:'the tattoo that wants to be subdued'}) --(m) with m order by m.name where m.name <> 'Japanese' return distinct m.name limit 3"}, {"query": "What are the main areas of the newly launched 0701 Group Shopping Network?", "cypher": "match ((:ENTITY{name:'0701 group shopping'}) - [:Relationship{name:'main business'}]-> (h) return h.name"}, {"query": "Do you know anything about the relationship that Grace Moore is involved in?", "cypher": "match path=(n) <- [:Relationship*5]- ((p:ENTITY{name:'Grace Moore'}) UNWIND relationships(path) AS rel RETURN distinct rel.name"}, {"query": "What is the hardness and the weight of black lead ore?", "cypher": "match (:ENTITY{name:' black lead'}) - [:Relationship{name:' hardness'}]->(n) return n.name as name union all match (:ENTITY{name:' black lead'}) - [:Relationship{name:' ratio'}]->(m) return m.name as name"}, {"query": "Do you have all the types of relationships that Jiangsu covers in the three levels?", "cypher": "The name of the game is \"Relationship\" (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relationship) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (Relations) (R"}, {"query": "Which works are published by the same publisher with blue footprint? What are the labels for each? Please list them in order of number of labels, from small to large.", "cypher": "The following is a list of the most commonly used tags for the game of basketball:"}, {"query": "Give me a list of five men who have held the world record in the 400 metres.", "cypher": "match (:ENTITY{name:' Men's 400 metres world record holder'}) --(p) return distinct p.name limit 5"}, {"query": "What is the size of the main screen of the HP iPAQ 910?", "cypher": "match (:ENTITY{name:'HP iPAQ 910, a mobile phone with an operating system for Windows Mobile 6.1)"}, {"query": "The first time I saw a website that was open in March 2010 was in the morning.", "cypher": "match (:ENTITY{name:'March 2010'}) <- [:Relationship{name:'Off time'}]- (p) return p.name"}, {"query": "List the following metropolis novels that he was adopted by OL Beauty in the 3rd tier relationship?", "cypher": "match (n:ENTITY{name:' he was adopted by OL beauty'}) - [*]->(x) where x.name <> 'metropolitan novel' return distinct x.name limit 5"}, {"query": "What does it mean to be crowned with a face like a jewel?", "cypher": "The name of the game is the name of the game. The name of the game is the name of the game."}, {"query": "Do you know what happened to the house that was sold on the street of the farmers' workers in the state of 1.13?", "cypher": "match ((:ENTITY{name:'1\u00b713 Yangon State Farmers Workers Street Standing and Selling Villa Incident'}) - [:Relationship{name:'cause of'}]-> (n) return n.name"}, {"query": "Do you know what the main works of the actors of the cinema are?", "cypher": "match (:ENTITY{name:' actor, actress'}) <- [:Relationship{name:' profession'}]-(p) - [:Relationship{name:' major works'}]->(h) return distinct h.name limit 3"}, {"query": "The hotel is located in the middle of the jungle, and what is the scope of his business?", "cypher": "match ((:ENTITY{name:'Relationship{name:'scale of operations'}}) -> (n) return n.name"}, {"query": "Can you list some of the most representative works of your generation?", "cypher": "match (:ENTITY{name:''}) - [:Relationship{name:'represents work'}]-> (x) return x.name skip 1"}, {"query": "Help me find six of them.", "cypher": "match (:ENTITY{name:'Relationship{name:'category'}]-(m) return m.name limit 6"}, {"query": "Who weighs 118 kg/260 pounds? What else does he have to say?", "cypher": "match (:ENTITY{name:'118 kg/260 pounds'}) <- [:Relationship{name:'weight'}]- ((q),(q) - [:Relationship{name:'alias'}]->(n) return distinct q.name,n.name"}, {"query": "The publication 0-1 years of nutrition recipe has a nice label attribute?", "cypher": "match (:ENTITY{name:'0-1 years old nutritional recipe'}) - [:Tag{name:'label'}]-> (n) with n order by n.name where n.name <> 'publication' return n.name"}, {"query": "Can you find the 10 tier 3 hospitals? Where are their addresses?", "cypher": "match (:ENTITY{name:'three level'}) <--(m), (m) - [:Relationship{name:'hospital address'}]->(n) return m.name,n.name limit 10"}, {"query": "Do you know the time of the 2010 China Zhejiang Food and Beverage Packaging and Processing Technology Exhibition?", "cypher": "match ((:ENTITY{name:'2010 China Shenzhen Food and Beverage Packaging and Processing Technology Exhibition'}) - [:Relationship{name:'time'}]-> (q) return q.name"}, {"query": "Can you recommend three 17k novels that are online?", "cypher": "match (:ENTITY{name:'17k novel network'}) <- [:Relationship{name:'linked website'}]-(n) - [:Relationship{name:'Chinese name'}]->(x) return distinct x.name limit 3"}, {"query": "Can you find group events in Kunshan, China?", "cypher": "match (:ENTITY{name:'China \u6606\u5c71'}) <- [:Relationship{name:'location'}]- (mn) - [:Relationship{name:'event type'}]->(n:ENTITY{name:'group race'}) return mn.name"}, {"query": "What is the name of the asteroid with a period of 1.23 years?", "cypher": "match (:ENTITY{name:'1.23 years'}) <- [:Relationship{name:'rotation cycle'}]- (h) return distinct h.name"}, {"query": "The following 120-page Disney spelling read: Does nature in Winnie-the-Pooh have more information than two layers of relationships?", "cypher": "match (n:ENTITY{name:'Disney spelling read: Winnie the Pooh'}) - [:Relationship*1..2]->(x) where x.name <>'120 pages' return distinct x.name"}, {"query": "Can you find the five organizations? Where are they all located?", "cypher": "match (:ENTITY{name:' organization'}) <- [*]-(m), (m) - [:Relationship{name:' geographical location'}]->(n) return m.name, n.name limit 5"}, {"query": "Can you say three things that are the fifth layer of the label relationship of the plant?", "cypher": "The name of the object is the name of the object."}, {"query": "What are the opening hours of the White Yucatan?", "cypher": "match ((:ENTITY{name:'\u767d\u7389\u5c71 [\u65c5\u987a\u53e3\u533a\u666f\u533a]'}) - [:Relationship{name:'open hours'}]-> (n) return n.name"}, {"query": "Do you know any Chinese people? Name one of their professions.", "cypher": "match (:ENTITY{name:'Han Chinese'}) <- [:Relationship{name:'ethnicity'}]-(m) - [:Relationship{name:'profession'}]->(n) return n.name order by n.name limit 1"}, {"query": "What else do you know about the Qing Dynasty's Ma Wenling?", "cypher": "match (:ENTITY{name:'Mawen Zhu'}) -[:Relationship*1..3]-(p) where p.name <> 'Qing Dynasty' return p.name limit 4"}, {"query": "What are the names of the companies in Shanghai?", "cypher": "match (p:ENTITY{location:' Shanghai'}) return p.name"}, {"query": "Try the big feature label line for the 12.31 Shanghai subway collapse at a parking lot?", "cypher": "match (:ENTITY{name:'12.31 Shanghai subway collapses in construction of a parking lot'}) - [:Tag{name:'tag'}]-> (x) with x order by x.name return x.name"}, {"query": "What do you think I should do except tell my daughter to cry if she can't hold her baby?", "cypher": "match (:ENTITY{name:'You can't take my name'}) - [:Relationship{name:'alias'}]-> (h) with h order by h.name where h.name <> return h.name"}, {"query": "I remember there was a chemical called helium with a molecular weight of 243.", "cypher": "The name of the function is the same as the name of the function itself."}, {"query": "I would like to know what exhibitions are being held in the New International Convention and Exhibition Center in Chengdu, Sichuan.", "cypher": "match (:ENTITY{name:' Sichuan. Chengdu Century City New International Convention and Exhibition Center'}) <- [:Relationship{name:' Held exhibition hall'}]- (q) return q.name"}, {"query": "The book published on 2/1/2002 was published by which publisher?", "cypher": "match (:ENTITY{name:'2002/2/1'}) <- [:Relationship{name:' time of publication'}]-(h),(h) - [:Relationship{name:' publisher'}]->(q) return distinct h.name,q.name"}, {"query": "I just want to know a little bit about this person.", "cypher": "match (:ENTITY{name:'swing'}) --(m) return m.name skip 3"}, {"query": "I would like to know if this is a different name for a mammal.", "cypher": "The following is a list of all the characters that are in the game:"}, {"query": "Help me find two knife fish dishes.", "cypher": "match (:ENTITY{name:' knifefish'}) <- [:Relationship{name:' main ingredient'}]-(m) return distinct m.name limit 2"}, {"query": "He is a medical doctor by training and a member of the Medical Accident Technology Identification Expert Library. He has five other professions.", "cypher": "match (:ENTITY{name:'Relationship{name:'Graduate School'}) <-[:Relationship{name:'Graduate School'}]-(h) -[:Relationship{name:'Major achievement'}]->(q) where q.name <> 'Medicine Accident Technology Identification Expert Member' return distinct q.name limit 5"}, {"query": "Can you tell me about the anatomy of the anterior superior temporal bone? Can you name three?", "cypher": "match (:ENTITY{name:' upper jawbone anterior'}) <- [:Relationship{name:' Chinese name'}]- ((p) - [:Relationship{name:' hollow'}]->(n) return n.name order by n.name limit 3"}, {"query": "The following is a list of some of the most popular works by the author of the book, \"The Little Garden of the Tang Dynasty: The Story of the Little Garden of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Tang Dynasty: The Story of the Time: The Time: The Time: The Time: The Time: The Time: The Time", "cypher": "match (n:ENTITY{name:'children's garden peaches, occasionally with addiction'}) - [:Relationship*1..2]->(x) where x.name <>'\u5510' return distinct x.name"}, {"query": "Which schools are under the jurisdiction of the Jinjiang District Education Board?", "cypher": "match (:ENTITY{name:'Jinjiang District Education Board'}) <--(m), (m) --(n) where n.name='school' return distinct m.name"}, {"query": "Do you know what Dong Xiao Shu does for a living?", "cypher": "match (:ENTITY{name:'\u8463\u65b0\u8212'}) <- [:Relationship{name:' Chinese name'}]-(m),(m) - [:Relationship{name:' profession'}]->(h) return distinct h.name limit 1"}]